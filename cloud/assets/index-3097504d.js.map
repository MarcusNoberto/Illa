{"version":3,"file":"index-3097504d.js","sources":["../../src/page/setting/account/language/hook.ts","../../src/page/setting/account/language/mobile/style.ts","../../src/page/setting/account/language/mobile/index.tsx","../../src/page/setting/style.ts","../../src/page/setting/account/language/pc/style.ts","../../src/page/setting/account/language/pc/index.tsx","../../src/page/setting/account/language/index.tsx"],"sourcesContent":["import { useTranslation } from \"react-i18next\"\nimport { languageKeys } from \"@/i18n\"\n\nexport const useLangOptions = () => {\n  const { t } = useTranslation()\n\n  return languageKeys.map((key) => ({\n    label: t(`language.${key}`),\n    value: key,\n  }))\n}\n","import { css } from \"@emotion/react\"\n\nexport const mobileSelectStyle = css`\n  & input {\n    font-size: 28rem;\n  }\n\n  & > span {\n    font-size: 28rem;\n    height: 96rem;\n    & > div {\n      padding: 0 32rem;\n    }\n    & svg {\n      font-size: 28rem;\n    }\n  }\n`\n\nexport const mobileContainerStyle = css`\n  display: grid;\n  gap: 64rem;\n  padding-bottom: 40px;\n`\n\nexport const submitButtonStyle = css`\n  height: 88rem;\n  border-radius: 16rem;\n\n  & > span {\n    font-size: 32rem;\n  }\n`\n\nexport const controllerContainerStyle = css`\n  display: flex;\n  flex-direction: column;\n  gap: 32rem;\n`\n\nexport const formContainerStyle = css`\n  display: flex;\n  flex-direction: column;\n  gap: 64rem;\n`\n","import { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { Button, Select } from \"@illa-design/react\"\nimport SettingMobileLayout from \"@/page/setting/layout/mobile\"\nimport { useLangOptions } from \"../hook\"\nimport { LanguageSettingMobileProps } from \"./interface\"\nimport {\n  controllerContainerStyle,\n  mobileContainerStyle,\n  mobileSelectStyle,\n} from \"./style\"\n\nconst MobileLanguageSetting: FC<LanguageSettingMobileProps> = (props) => {\n  const { t } = useTranslation()\n  const { onSubmit, loading, language, currentLanguage, onChangeLanguage } =\n    props\n\n  const buttonDisabled = language === currentLanguage\n  const LANG_OPTIONS = useLangOptions()\n\n  return (\n    <SettingMobileLayout>\n      <div css={mobileContainerStyle}>\n        <section css={controllerContainerStyle}>\n          <label>{t(\"profile.setting.language\")}</label>\n          <Select\n            _css={mobileSelectStyle}\n            value={currentLanguage}\n            size=\"large\"\n            colorScheme=\"techPurple\"\n            options={LANG_OPTIONS}\n            onChange={(value) => {\n              onChangeLanguage(value as string)\n            }}\n          />\n        </section>\n        <Button\n          colorScheme=\"techPurple\"\n          size=\"large\"\n          disabled={buttonDisabled}\n          loading={loading}\n          fullWidth\n          onClick={() => {\n            onSubmit()\n          }}\n        >\n          {t(\"profile.setting.save\")}\n        </Button>\n      </div>\n    </SettingMobileLayout>\n  )\n}\n\nMobileLanguageSetting.displayName = \"LanguageSettingMobile\"\n\nexport default MobileLanguageSetting\n","import { css } from \"@emotion/react\"\nimport { globalColor, illaPrefix } from \"@illa-design/react\"\n\nexport const formTitleStyle = css`\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 26px;\n  color: ${globalColor(`--${illaPrefix}-gray-02`)};\n`\n\nexport const containerStyle = css`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n","import { css } from \"@emotion/react\"\n\nexport const innerContainerStyle = css`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  justify-content: center;\n  max-width: 600px;\n  width: 100%;\n`\n\nexport const formFieldStyle = css`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  width: 100%;\n`\n","import { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { Button, Select } from \"@illa-design/react\"\nimport { Header } from \"@/page/setting/components/Header\"\nimport { containerStyle, formTitleStyle } from \"@/page/setting/style\"\nimport { useLangOptions } from \"../hook\"\nimport { LanguageSettingProps } from \"./interface\"\nimport { formFieldStyle, innerContainerStyle } from \"./style\"\n\nconst PCLanguageSetting: FC<LanguageSettingProps> = (props) => {\n  const { t } = useTranslation()\n  const { onSubmit, loading, language, currentLanguage, onChangeLanguage } =\n    props\n\n  const buttonDisabled = language === currentLanguage\n  const LANG_OPTIONS = useLangOptions()\n\n  return (\n    <>\n      <Header title={t(\"profile.setting.language\")} />\n      <div css={containerStyle}>\n        <div css={innerContainerStyle}>\n          <header css={formTitleStyle}>{t(\"profile.setting.language\")}</header>\n          <div css={formFieldStyle}>\n            <Select\n              value={currentLanguage}\n              size=\"large\"\n              colorScheme=\"techPurple\"\n              options={LANG_OPTIONS}\n              onChange={(value) => {\n                onChangeLanguage(value as string)\n              }}\n            />\n            <span>\n              <Button\n                colorScheme=\"techPurple\"\n                size=\"large\"\n                disabled={buttonDisabled}\n                loading={loading}\n                onClick={() => {\n                  onSubmit()\n                }}\n              >\n                {t(\"profile.setting.save\")}\n              </Button>\n            </span>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nPCLanguageSetting.displayName = \"LanguageSetting\"\n\nexport default PCLanguageSetting\n","import { LayoutAutoChange } from \"@illa-public/layout-auto-change\"\nimport { getCurrentTranslateLanguage } from \"@illa-public/user-data\"\nimport { FC, useEffect, useState } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { defaultLanguage } from \"@/i18n\"\nimport { fetchUpdateUserLanguage } from \"@/services/user\"\nimport MobileLanguageSetting from \"./mobile\"\nimport PCLanguageSetting from \"./pc\"\n\nconst LanguageSetting: FC = () => {\n  const language = useSelector(getCurrentTranslateLanguage) || defaultLanguage\n  const [currentLanguage, setCurrentLanguage] = useState(language)\n  const [languageLoading, setLanguageLoading] = useState(false)\n\n  useEffect(() => {\n    if (language !== currentLanguage) {\n      setCurrentLanguage(language)\n    }\n    // todo: @echoxyc\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [language])\n\n  const onSaveLanguageChange = async () => {\n    try {\n      setLanguageLoading(true)\n      await fetchUpdateUserLanguage(currentLanguage)\n      window.location.reload()\n    } catch (e) {\n    } finally {\n      setLanguageLoading(false)\n    }\n  }\n  return (\n    <LayoutAutoChange\n      desktopPage={\n        <PCLanguageSetting\n          loading={languageLoading}\n          language={language}\n          currentLanguage={currentLanguage}\n          onChangeLanguage={setCurrentLanguage}\n          onSubmit={onSaveLanguageChange}\n        />\n      }\n      mobilePage={\n        <MobileLanguageSetting\n          loading={languageLoading}\n          language={language}\n          currentLanguage={currentLanguage}\n          onChangeLanguage={setCurrentLanguage}\n          onSubmit={onSaveLanguageChange}\n        />\n      }\n    />\n  )\n}\nexport default LanguageSetting\n"],"names":["useLangOptions","t","useTranslation","languageKeys","key","mobileSelectStyle","css","mobileContainerStyle","controllerContainerStyle","MobileLanguageSetting","props","onSubmit","loading","language","currentLanguage","onChangeLanguage","buttonDisabled","LANG_OPTIONS","jsx","SettingMobileLayout","jsxs","Select","value","Button","formTitleStyle","globalColor","illaPrefix","containerStyle","innerContainerStyle","formFieldStyle","PCLanguageSetting","Fragment","Header","LanguageSetting","useSelector","getCurrentTranslateLanguage","defaultLanguage","setCurrentLanguage","useState","languageLoading","setLanguageLoading","useEffect","onSaveLanguageChange","fetchUpdateUserLanguage","LayoutAutoChange"],"mappings":"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"}