{"version":3,"file":"signup-f0430278.js","sources":["../../src/page/user/signup.tsx"],"sourcesContent":["import { FC, useState } from \"react\"\nimport { SubmitHandler, useForm } from \"react-hook-form\"\nimport { useTranslation } from \"react-i18next\"\nimport { useNavigate } from \"react-router-dom\"\nimport { Button, Input, Select, Space } from \"@illa-design/react\"\nimport \"./SignUpPage.css\"\n\ninterface SignUpFields {\n  nickname: string\n  email: string\n  password: string\n  confirmPassword: string\n  role: string\n}\n\nconst SignUpPage: FC = () => {\n  const { t } = useTranslation()\n  const navigate = useNavigate()\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm<SignUpFields>()\n  const [loading, setLoading] = useState(false)\n\n  const onSubmit: SubmitHandler<SignUpFields> = async (data) => {\n    setLoading(true)\n    try {\n      // Aqui você pode chamar a função para realizar o cadastro\n      console.log(data)\n      // Supondo que o cadastro foi bem-sucedido\n      navigate(\"/login\")\n    } catch (error) {\n      // Tratar erro\n      console.error(error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const password = watch(\"password\")\n\n  return (\n    <div className=\"signup-page-container\">\n      <h1 className=\"signup-title\">Sign Up</h1>\n      <div className=\"signup-form-container\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <Space direction=\"vertical\" size=\"large\">\n            <div>\n              <label>Nickname</label>\n              <Input\n                {...register(\"nickname\", {\n                  required: \"Nickname required\",\n                })}\n                onChange={(value) =>\n                  register(\"nickname\").onChange({ target: { value } })\n                }\n              />\n              {errors.nickname && (\n                <span style={{ color: \"red\" }}>{errors.nickname.message}</span>\n              )}\n            </div>\n\n            <div>\n              <label>e-mail</label>\n              <Input\n                type=\"email\"\n                {...register(\"email\", {\n                  required: \"e-mail required\",\n                  pattern: {\n                    value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n                    message: \"Invalid e-mail\",\n                  },\n                })}\n                onChange={(value) =>\n                  register(\"email\").onChange({ target: { value } })\n                }\n              />\n              {errors.email && (\n                <span style={{ color: \"red\" }}>{errors.email.message}</span>\n              )}\n            </div>\n\n            <div>\n              <label>Password</label>\n              <Input\n                type=\"password\"\n                {...register(\"password\", {\n                  required: \"Password required\",\n                  minLength: {\n                    value: 6,\n                    message:\n                      \"Password minimum length of six characters required\",\n                  },\n                })}\n                onChange={(value) =>\n                  register(\"password\").onChange({ target: { value } })\n                }\n              />\n              {errors.password && (\n                <span style={{ color: \"red\" }}>{errors.password.message}</span>\n              )}\n            </div>\n\n            <div>\n              <label>Password confirmation</label>\n              <Input\n                type=\"password\"\n                {...register(\"confirmPassword\", {\n                  required: \"Password confirmation required\",\n                  validate: (value) =>\n                    value === password ||\n                    \"Password and Password confirmation does not match\",\n                })}\n                onChange={(value) =>\n                  register(\"confirmPassword\").onChange({ target: { value } })\n                }\n              />\n              {errors.confirmPassword && (\n                <span style={{ color: \"red\" }}>\n                  {errors.confirmPassword.message}\n                </span>\n              )}\n            </div>\n\n            <div>\n              <label>Role</label>\n              <Select\n                options={[\n                  { label: \"OWNER\", value: \"OWNER\" },\n                  { label: \"ADMIN\", value: \"ADMIN\" },\n                  { label: \"EDITOR\", value: \"EDITOR\" },\n                  { label: \"VIEWER\", value: \"VIEWER\" },\n                  { label: \"OBSERVER\", value: \"OBSERVER\" },\n                ]}\n                {...register(\"role\", {\n                  required: \"Role required\",\n                })}\n                onChange={(value) =>\n                  register(\"role\").onChange({ target: { value } })\n                }\n              />\n              {errors.role && (\n                <span style={{ color: \"red\" }}>{errors.role.message}</span>\n              )}\n            </div>\n\n            <div className=\"button-container\">\n              <Button type=\"submit\" loading={loading}>\n                Register\n              </Button>\n            </div>\n          </Space>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignUpPage\n"],"names":["SignUpPage","useTranslation","navigate","useNavigate","register","handleSubmit","watch","errors","useForm","loading","setLoading","useState","onSubmit","data","error","password","jsxs","jsx","Space","Input","value","Select","Button"],"mappings":"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"}