{"version":3,"file":"index-a86fd18c.js","sources":["../../../../packages/illa-public-component/publicConfig/resource/initConfig/firebase.ts","../../../../packages/illa-public-component/ResourceGenerator/components/ConfigElements/FirebaseConfigElement/index.tsx"],"sourcesContent":["import { FirebaseResource } from \"@illa-public/public-types\"\n\nexport const FirebaseResourceInitial: FirebaseResource = {\n  databaseUrl: \"\",\n  projectID: \"\",\n  privateKey: \"\",\n}\n","import { FirebaseResourceInitial } from \"@illa-public/public-configs\"\nimport { FirebaseResource, Resource } from \"@illa-public/public-types\"\nimport { TextLink } from \"@illa-public/text-link\"\nimport { isCloudVersion } from \"@illa-public/utils\"\nimport { FC, useContext } from \"react\"\nimport { Controller, useFormContext } from \"react-hook-form\"\nimport { Trans, useTranslation } from \"react-i18next\"\nimport {\n  Divider,\n  Popover,\n  TextArea,\n  WarningCircleIcon,\n  getColor,\n} from \"@illa-design/react\"\nimport { ResourceGeneratorContext } from \"../../../provider\"\nimport { urlValidate, validateNotEmpty } from \"../../../utils\"\nimport { ControlledElement } from \"../../ControlledElement\"\nimport { BaseConfigElementProps } from \"../interface\"\nimport {\n  applyConfigItemLabelText,\n  configItemTip,\n  connectType,\n  connectTypeStyle,\n  container,\n  errorIconStyle,\n  errorMsgStyle,\n  labelContainer,\n  optionLabelStyle,\n  privateKeyItem,\n} from \"../style\"\n\nconst FirebaseConfigElement: FC<BaseConfigElementProps> = (props) => {\n  const { resourceID } = props\n\n  const { t } = useTranslation()\n\n  const { control, formState } = useFormContext()\n\n  const { getResourceByID } = useContext(ResourceGeneratorContext)\n  const findResource = getResourceByID(resourceID)\n\n  let content: FirebaseResource\n\n  if (findResource === undefined) {\n    content = FirebaseResourceInitial\n  } else {\n    content = (findResource as Resource<FirebaseResource>).content\n  }\n\n  return (\n    <>\n      <div css={container}>\n        <ControlledElement\n          controlledType=\"input\"\n          isRequired\n          title={t(\"editor.action.resource.db.label.name\")}\n          control={control}\n          defaultValue={findResource?.resourceName ?? \"\"}\n          rules={[\n            {\n              validate: validateNotEmpty,\n            },\n          ]}\n          placeholders={[t(\"editor.action.resource.db.placeholder.name\")]}\n          name=\"resourceName\"\n          tips={t(\"editor.action.resource.restapi.tip.name\")}\n        />\n        <Divider\n          direction=\"horizontal\"\n          ml=\"24px\"\n          mr=\"24px\"\n          mt=\"8px\"\n          mb=\"8px\"\n          w=\"unset\"\n        />\n        <div css={optionLabelStyle}>\n          {t(\"editor.action.resource.db.title.general_option\")}\n        </div>\n        <ControlledElement\n          title={t(\"editor.action.resource.db.label.firebase_database_url\")}\n          defaultValue={content.databaseUrl}\n          name=\"databaseUrl\"\n          controlledType=\"input\"\n          control={control}\n          isRequired\n          rules={[\n            {\n              required: t(\"editor.action.resource.error.invalid_url\"),\n              validate: urlValidate,\n            },\n          ]}\n          tips={\n            formState.errors.databaseUrl && (\n              <div css={errorMsgStyle}>\n                <WarningCircleIcon css={errorIconStyle} />\n                <>{formState.errors.databaseUrl.message}</>\n              </div>\n            )\n          }\n        />\n        <ControlledElement\n          title={t(\"editor.action.resource.db.label.firebase_project_id\")}\n          defaultValue={content.projectID}\n          name=\"projectID\"\n          controlledType=\"input\"\n          control={control}\n          isRequired\n          rules={[\n            {\n              validate: validateNotEmpty,\n            },\n          ]}\n        />\n        <div css={privateKeyItem}>\n          <Popover\n            content={t(\"editor.action.resource.db.label.private_key_hover\")}\n            hasCloseIcon={false}\n            trigger=\"hover\"\n            colorScheme=\"gray\"\n            showArrow={false}\n          >\n            <div css={labelContainer}>\n              <span css={applyConfigItemLabelText(getColor(\"red\", \"03\"))}>\n                *\n              </span>\n              <span css={applyConfigItemLabelText(getColor(\"grayBlue\", \"02\"))}>\n                {t(\"editor.action.resource.db.label.private_key\")}\n              </span>\n            </div>\n          </Popover>\n          <Controller\n            control={control}\n            rules={{\n              required: true,\n            }}\n            defaultValue={\n              content.privateKey && JSON.stringify(content.privateKey)\n            }\n            render={({ field: { value, onChange, onBlur } }) => (\n              <TextArea\n                style={{\n                  overflow: \"scroll\",\n                  minHeight: \"240px\",\n                }}\n                colorScheme=\"techPurple\"\n                w=\"100%\"\n                ml=\"16px\"\n                mr=\"24px\"\n                mb=\"8px\"\n                onBlur={onBlur}\n                onChange={onChange}\n                value={value}\n                autoSize\n                placeholder={t(\n                  \"editor.action.resource.db.placeholder.private_key\",\n                )}\n              />\n            )}\n            name=\"privateKey\"\n          />\n        </div>\n        <div css={configItemTip}>\n          <Trans\n            i18nKey=\"editor.action.resource.db.tip.private_key\"\n            t={t}\n            components={[\n              <TextLink\n                key=\"go-to-setup\"\n                onClick={() => {\n                  window.open(\n                    \"https://firebase.google.com/docs/admin/setup\",\n                    \"_blank\",\n                  )\n                }}\n              />,\n            ]}\n          />\n        </div>\n        {isCloudVersion && (\n          <div css={connectType}>\n            <div css={labelContainer}>\n              <span css={applyConfigItemLabelText(getColor(\"grayBlue\", \"02\"))}>\n                {t(\"editor.action.resource.db.label.connect_type\")}\n              </span>\n            </div>\n            <span css={connectTypeStyle}>\n              {t(\"editor.action.resource.db.tip.connect_type\")}\n            </span>\n          </div>\n        )}\n      </div>\n    </>\n  )\n}\n\nFirebaseConfigElement.displayName = \"FirebaseConfigElement\"\nexport default FirebaseConfigElement\n"],"names":["FirebaseResourceInitial","FirebaseConfigElement","props","resourceID","t","useTranslation","control","formState","useFormContext","getResourceByID","useContext","ResourceGeneratorContext","findResource","content","jsx","Fragment","jsxs","container","ControlledElement","validateNotEmpty","Divider","optionLabelStyle","urlValidate","errorMsgStyle","WarningCircleIcon","errorIconStyle","privateKeyItem","Popover","labelContainer","applyConfigItemLabelText","getColor","Controller","value","onChange","onBlur","TextArea","configItemTip","Trans","TextLink","isCloudVersion"],"mappings":"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"}