{"version":3,"file":"index-e880d1e2.js","sources":["../../src/components/Menu/style.ts","../../src/components/Menu/menuItem.tsx","../../src/components/Menu/index.tsx","../../src/page/setting/layout/pc/style.ts","../../src/page/setting/layout/pc/index.tsx","../../src/page/setting/index.tsx"],"sourcesContent":["import { SerializedStyles, css } from \"@emotion/react\"\nimport { applyMobileStyle } from \"@illa-public/utils\"\nimport { globalColor, illaPrefix } from \"@illa-design/react\"\nimport { columnCenter } from \"@/style\"\n\nexport const menuWrapperStyle = css`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`\n\nexport const applyLinkStyle = (selected: boolean): SerializedStyles => {\n  const selectedStyle = selected\n    ? css`\n        background: ${globalColor(`--${illaPrefix}-grayBlue-09`)};\n        font-weight: 600;\n      `\n    : null\n\n  return css`\n    display: flex;\n    align-items: center;\n    padding: 9px 24px;\n    font-weight: 500;\n    font-size: 14px;\n    line-height: 22px;\n    color: ${globalColor(`--${illaPrefix}-grayBlue-02`)};\n    cursor: pointer;\n    ${selectedStyle};\n  `\n}\n\nexport const iconStyle = css`\n  ${columnCenter};\n  width: 24px;\n  height: 24px;\n  margin-right: 12px;\n  color: inherit;\n`\n\nexport const subMenuWrapperStyle = css`\n  padding: 10px 40px;\n\n  ${applyMobileStyle(css`\n    padding: 20rem 70rem;\n  `)}\n`\n\n// Mobile\n\nexport const mobileMenuWrapperStyle = css`\n  display: flex;\n  flex-direction: column;\n  gap: 8rem;\n`\n\nexport const applyMobileLinkStyle = (selected: boolean): SerializedStyles => {\n  const selectedStyle = selected\n    ? css`\n        background: ${globalColor(`--${illaPrefix}-techPurple-08`)};\n        color: ${globalColor(`--${illaPrefix}-techPurple-03`)};\n        font-weight: 500;\n      `\n    : null\n\n  return css`\n    display: flex;\n    align-items: center;\n    padding: 20rem 32rem;\n    font-weight: 400;\n    font-size: 32rem;\n    line-height: 40rem;\n    color: ${globalColor(`--${illaPrefix}-grayBlue-02`)};\n    cursor: pointer;\n    ${selectedStyle};\n  `\n}\n\nexport const mobileIconStyle = css`\n  ${columnCenter};\n  width: 48rem;\n  height: 48rem;\n  margin-right: 12px;\n  color: inherit;\n  & > svg {\n    width: 48rem;\n    height: 48rem;\n  }\n`\n","import { FC, HTMLAttributes, ReactNode, useMemo } from \"react\"\nimport { useLocation, useNavigate } from \"react-router-dom\"\nimport {\n  applyLinkStyle,\n  applyMobileLinkStyle,\n  iconStyle,\n  mobileIconStyle,\n} from \"@/components/Menu/style\"\n\ninterface MenuItem extends HTMLAttributes<HTMLDivElement> {\n  selected: boolean\n  index: number\n  isMobile?: boolean\n  path?: string\n  hash?: string\n  label: ReactNode\n  icon?: ReactNode\n  onClickMenuItem?: (index: number) => void\n}\n\nexport const MenuItem: FC<MenuItem> = (props) => {\n  const {\n    isMobile,\n    index,\n    icon,\n    label,\n    path,\n    hash = \"\",\n    onClickMenuItem,\n    onClick,\n    ...rest\n  } = props\n  const navigate = useNavigate()\n  const location = useLocation()\n\n  const selected = location.pathname === path && location.hash === hash\n\n  const [applyCurrentLinkStyle, currentIconStyle] = useMemo(() => {\n    if (isMobile) {\n      return [applyMobileLinkStyle, mobileIconStyle]\n    }\n    return [applyLinkStyle, iconStyle]\n  }, [isMobile])\n\n  const scrollIntoView = (hash?: string) => {\n    if (!hash) return\n    const targetElement = document.querySelector(hash)\n    if (targetElement) {\n      targetElement.scrollIntoView({ behavior: \"smooth\" })\n    }\n  }\n\n  return (\n    <div\n      css={applyCurrentLinkStyle(selected)}\n      key={index}\n      {...rest}\n      onClick={(e) => {\n        onClick && onClick(e)\n        onClickMenuItem && onClickMenuItem(index)\n        if (!selected && path) {\n          navigate({\n            pathname: path,\n            hash,\n          })\n          scrollIntoView(hash)\n        }\n      }}\n    >\n      {icon ? <div css={currentIconStyle}>{icon}</div> : null}\n      {label}\n    </div>\n  )\n}\n","import { FC, useMemo } from \"react\"\nimport { useLocation } from \"react-router-dom\"\nimport { MenuProps } from \"@/components/Menu/interface\"\nimport {\n  menuWrapperStyle,\n  mobileMenuWrapperStyle,\n  subMenuWrapperStyle,\n} from \"@/components/Menu/style\"\nimport { MenuItem } from \"./menuItem\"\n\nexport const Menu: FC<MenuProps> = (props) => {\n  const {\n    containerClassName,\n    itemClassName,\n    itemList,\n    isMobile,\n    onClickMenuItem,\n  } = props\n  const location = useLocation()\n\n  const wrapperStyle = useMemo(() => {\n    if (isMobile) {\n      return mobileMenuWrapperStyle\n    }\n    return menuWrapperStyle\n  }, [isMobile])\n\n  return (\n    <div css={wrapperStyle} className={containerClassName}>\n      {itemList?.map((item, index) => {\n        const { path, hash = \"\", hidden, subMenu, ...rest } = item\n        const selected = location.pathname === path && location.hash === hash\n\n        if (hidden) {\n          return null\n        }\n\n        return (\n          <div key={path + hash}>\n            <MenuItem\n              {...rest}\n              isMobile={isMobile}\n              selected={selected}\n              index={index}\n              path={path}\n              hash={hash}\n              className={itemClassName}\n              onClickMenuItem={onClickMenuItem}\n            />\n            {subMenu?.map((item, index) => {\n              const { path, hash = \"\", hidden, ...subProps } = item\n              const selected =\n                location.pathname === path && location.hash === hash\n\n              if (hidden) {\n                return null\n              }\n              return (\n                <MenuItem\n                  css={subMenuWrapperStyle}\n                  key={path + hash}\n                  {...subProps}\n                  isMobile={isMobile}\n                  selected={selected}\n                  index={index}\n                  path={path}\n                  hash={hash}\n                  className={itemClassName}\n                  onClickMenuItem={onClickMenuItem}\n                />\n              )\n            })}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nMenu.displayName = \"Menu\"\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const rightAsideWrapperStyle = css`\n  position: relative;\n  display: flex;\n  flex-grow: 1;\n  justify-content: center;\n  background: ${getColor(\"white\", \"01\")};\n  border-radius: 16px;\n  overflow: auto;\n`\n\nexport const backIconStyle = css`\n  width: 16px;\n  height: 16px;\n  font-size: 16px;\n  margin-right: 12px;\n  cursor: pointer;\n`\n\nexport const leftAsideWrapperStyle = css`\n  padding: 24px 0;\n  width: 240px;\n  position: relative;\n  align-items: center;\n  flex: none;\n  overflow-y: auto;\n  border-right: 1px solid ${getColor(\"grayBlue\", \"09\")};\n`\n\nexport const navWrapperStyle = css`\n  padding: 16px 24px 24px;\n  display: flex;\n  align-items: center;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 32px;\n`\n\nexport const layoutWrapperStyle = css`\n  background: ${getColor(\"white\", \"01\")};\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n`\n\nexport const menuContainerStyle = css`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  margin-left: -12px;\n  .settingMenuClass {\n    gap: 0;\n  }\n  .settingMenuItemClass {\n    padding-top: 8px;\n    padding-bottom: 8px;\n  }\n`\n\nexport const menuWrapperTittleStyle = css`\n  display: flex;\n  padding: 9px 24px;\n  align-items: center;\n  gap: 8px;\n  color: ${getColor(\"grayBlue\", \"03\")};\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 22px;\n`\n\nexport const asideMenuStyle = css`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`\n\nexport const rightSectionContainerStyle = css`\n  width: 100%;\n  height: 100%;\n  padding: 0 32px;\n`\n","import { getCurrentTeamInfo } from \"@illa-public/user-data\"\nimport { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useSelector } from \"react-redux\"\nimport { useNavigate } from \"react-router-dom\"\nimport { PreviousIcon } from \"@illa-design/react\"\nimport ProfileIcon from \"@/assets/page/setting/profile.svg?react\"\nimport { Menu } from \"@/components/Menu\"\nimport { SettingLayoutProps } from \"./interface\"\nimport {\n  asideMenuStyle,\n  backIconStyle,\n  layoutWrapperStyle,\n  leftAsideWrapperStyle,\n  menuContainerStyle,\n  menuWrapperTittleStyle,\n  navWrapperStyle,\n  rightAsideWrapperStyle,\n  rightSectionContainerStyle,\n} from \"./style\"\n\nconst SettingLayout: FC<SettingLayoutProps> = (props) => {\n  const { children } = props\n  const { t } = useTranslation()\n  const navigate = useNavigate()\n  const currentTeamInfo = useSelector(getCurrentTeamInfo)!\n\n  const accountOptions = [\n    {\n      path: \"/setting/account\",\n      label: t(\"profile.setting.personal_info\"),\n      icon: <></>,\n    },\n    {\n      path: \"/setting/password\",\n      label: t(\"profile.setting.password.title\"),\n      icon: <></>,\n    },\n    {\n      path: \"/setting/language\",\n      label: t(\"profile.setting.language\"),\n      icon: <></>,\n    },\n  ]\n\n  return (\n    <div css={layoutWrapperStyle}>\n      <aside css={leftAsideWrapperStyle}>\n        <div css={navWrapperStyle}>\n          <PreviousIcon\n            css={backIconStyle}\n            onClick={() => {\n              navigate(`/workspace/${currentTeamInfo?.identifier}`)\n            }}\n          />\n          {t(\"profile.setting.title\")}\n        </div>\n        <div css={asideMenuStyle}>\n          <div>\n            <div css={menuWrapperTittleStyle}>\n              <ProfileIcon />\n              <span>{t(\"profile.setting.group.account\")}</span>\n            </div>\n            <div css={menuContainerStyle}>\n              <Menu\n                itemList={accountOptions}\n                containerClassName=\"settingMenuClass\"\n                itemClassName=\"settingMenuItemClass\"\n              />\n            </div>\n          </div>\n        </div>\n      </aside>\n      <aside css={rightAsideWrapperStyle}>\n        <section css={rightSectionContainerStyle}>{children}</section>\n      </aside>\n    </div>\n  )\n}\n\nSettingLayout.displayName = \"AccountLayout\"\n\nexport default SettingLayout\n","import { LayoutAutoChange } from \"@illa-public/layout-auto-change\"\nimport { getCurrentUserID } from \"@illa-public/user-data\"\nimport { FC } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { Navigate, Outlet } from \"react-router-dom\"\nimport SettingLayout from \"./layout/pc\"\n\nexport const Setting: FC = () => {\n  const isLogin = useSelector(getCurrentUserID)\n\n  return isLogin ? (\n    <LayoutAutoChange\n      desktopPage={\n        <SettingLayout>\n          <Outlet />\n        </SettingLayout>\n      }\n      mobilePage={<Outlet />}\n    />\n  ) : (\n    <Navigate to=\"/login\" replace={true} />\n  )\n}\n\nSetting.displayName = \"Setting\"\n\nexport default Setting\n"],"names":["menuWrapperStyle","css","applyLinkStyle","selected","selectedStyle","globalColor","illaPrefix","iconStyle","columnCenter","subMenuWrapperStyle","applyMobileStyle","mobileMenuWrapperStyle","applyMobileLinkStyle","mobileIconStyle","MenuItem","props","isMobile","index","icon","label","path","hash","onClickMenuItem","onClick","rest","navigate","useNavigate","location","useLocation","applyCurrentLinkStyle","currentIconStyle","useMemo","scrollIntoView","targetElement","jsxs","e","jsx","Menu","containerClassName","itemClassName","itemList","wrapperStyle","item","hidden","subMenu","subProps","rightAsideWrapperStyle","getColor","backIconStyle","leftAsideWrapperStyle","navWrapperStyle","layoutWrapperStyle","menuContainerStyle","menuWrapperTittleStyle","asideMenuStyle","rightSectionContainerStyle","SettingLayout","children","t","useTranslation","currentTeamInfo","useSelector","getCurrentTeamInfo","accountOptions","Fragment","PreviousIcon","ProfileIcon","Setting","getCurrentUserID","LayoutAutoChange","Outlet","Navigate"],"mappings":"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"}