{"version":3,"file":"index-5fc13390.js","sources":["../../../../packages/illa-public-component/publicConfig/resource/initConfig/oracle.ts","../../../../packages/illa-public-component/ResourceGenerator/components/ConfigElements/OracleDBConfigElement/index.tsx"],"sourcesContent":["import { OracleResource } from \"@illa-public/public-types\"\n\nexport const OracleResourceInitial: OracleResource = {\n  ssl: true,\n  host: \"\",\n  port: \"1521\",\n  connectionType: \"Service\",\n  name: \"\",\n  password: \"\",\n  username: \"\",\n}\n","import { OracleResourceInitial } from \"@illa-public/public-configs\"\nimport { OracleResource } from \"@illa-public/public-types\"\nimport { TextLink } from \"@illa-public/text-link\"\nimport { isCloudVersion } from \"@illa-public/utils\"\nimport { FC, useCallback, useContext, useState } from \"react\"\nimport { useFormContext } from \"react-hook-form\"\nimport { Trans, useTranslation } from \"react-i18next\"\nimport { Alert, Divider, WarningCircleIcon, getColor } from \"@illa-design/react\"\nimport { ResourceGeneratorContext } from \"../../../provider\"\nimport {\n  isContainLocalPath,\n  urlValidate,\n  validateNotEmpty,\n} from \"../../../utils\"\nimport { ControlledElement } from \"../../ControlledElement\"\nimport {\n  applyConfigItemLabelText,\n  configItemTip,\n  connectType,\n  connectTypeStyle,\n  container,\n  errorIconStyle,\n  errorMsgStyle,\n  labelContainer,\n  optionLabelStyle,\n} from \"../style\"\nimport { OracleDBConfigElementProps } from \"./interface\"\n\nconst OracleDBConfigElement: FC<OracleDBConfigElementProps> = (props) => {\n  const { resourceID } = props\n  const { t } = useTranslation()\n  const { control, formState } = useFormContext()\n\n  const ConnectTypeOptions = [\n    {\n      label: t(\"editor.action.form.option.oracle.sid.sid\"),\n      value: \"SID\",\n    },\n    {\n      label: t(\"editor.action.form.option.oracle.sid.service\"),\n      value: \"Service\",\n    },\n  ]\n\n  const [showAlert, setShowAlert] = useState<boolean>(false)\n\n  const { getResourceByID } = useContext(ResourceGeneratorContext)\n  const findResource = getResourceByID(resourceID)\n  const content =\n    (findResource?.content as OracleResource) ?? OracleResourceInitial\n\n  const handleDocLinkClick = () => {\n    window.open(\"https://www.illacloud.com/docs/illa-cli\", \"_blank\")\n  }\n\n  const handleHostValidate = useCallback((value: string) => {\n    setShowAlert(isContainLocalPath(value))\n    return urlValidate(value)\n  }, [])\n\n  return (\n    <>\n      <div css={container}>\n        <ControlledElement\n          controlledType=\"input\"\n          isRequired\n          title={t(\"editor.action.resource.db.label.name\")}\n          control={control}\n          defaultValue={findResource?.resourceName ?? \"\"}\n          rules={[\n            {\n              validate: validateNotEmpty,\n            },\n          ]}\n          placeholders={[t(\"editor.action.resource.db.placeholder.name\")]}\n          name=\"resourceName\"\n          tips={t(\"editor.action.resource.restapi.tip.name\")}\n        />\n        <Divider\n          direction=\"horizontal\"\n          ml=\"24px\"\n          mr=\"24px\"\n          mt=\"8px\"\n          mb=\"8px\"\n          w=\"unset\"\n        />\n        <div css={optionLabelStyle}>\n          {t(\"editor.action.resource.db.title.general_option\")}\n        </div>\n\n        <ControlledElement\n          title={t(\"editor.action.resource.db.label.hostname\")}\n          defaultValue={content.host}\n          isRequired\n          rules={[\n            {\n              required: t(\"editor.action.resource.error.invalid_url\"),\n              validate: handleHostValidate,\n            },\n          ]}\n          name=\"host\"\n          controlledType=\"input\"\n          control={control}\n          placeholders={[t(\"editor.action.resource.db.placeholder.hostname\")]}\n          tips={\n            formState.errors.host && !showAlert ? (\n              <div css={errorMsgStyle}>\n                <WarningCircleIcon css={errorIconStyle} />\n                <>{formState.errors.host.message}</>\n              </div>\n            ) : null\n          }\n        />\n\n        {showAlert && (\n          <ControlledElement\n            defaultValue=\"\"\n            name=\"\"\n            title=\"\"\n            controlledType=\"none\"\n            control={control}\n            tips={\n              <Alert\n                title={t(\"editor.action.form.tips.connect_to_local.title.tips\")}\n                closable={false}\n                content={\n                  isCloudVersion ? (\n                    <Trans\n                      i18nKey=\"editor.action.form.tips.connect_to_local.cloud\"\n                      t={t}\n                      components={[\n                        <TextLink\n                          key=\"editor.action.form.tips.connect_to_local.cloud\"\n                          onClick={handleDocLinkClick}\n                        />,\n                      ]}\n                    />\n                  ) : (\n                    t(\"editor.action.form.tips.connect_to_local.selfhost\")\n                  )\n                }\n              />\n            }\n          />\n        )}\n        <ControlledElement\n          title={t(\"editor.action.resource.db.label.port\")}\n          defaultValue={content.port}\n          isRequired\n          rules={[\n            {\n              validate: validateNotEmpty,\n            },\n          ]}\n          name=\"port\"\n          controlledType=\"input\"\n          control={control}\n          placeholders={[\"1521\"]}\n        />\n        <ControlledElement\n          title={t(\"editor.action.resource.db.label.database\")}\n          defaultValue={content.name}\n          isRequired\n          rules={[\n            {\n              validate: validateNotEmpty,\n            },\n          ]}\n          name=\"name\"\n          controlledType=\"input\"\n          control={control}\n          placeholders={[t(\"editor.action.resource.db.placeholder.default\")]}\n        />\n\n        <ControlledElement\n          title={t(\"editor.action.form.label.oracle.sid\")}\n          defaultValue={content.connectionType}\n          isRequired\n          rules={[\n            {\n              validate: validateNotEmpty,\n            },\n          ]}\n          name=\"connectionType\"\n          controlledType=\"radio-group\"\n          control={control}\n          forceEqualWidth={true}\n          options={ConnectTypeOptions}\n        />\n        <ControlledElement\n          title={t(\"editor.action.resource.db.label.username\")}\n          defaultValue={content.username}\n          name=\"username\"\n          controlledType=\"input\"\n          control={control}\n          placeholders={[t(\"editor.action.form.placeholder.oracle.username\")]}\n        />\n        <ControlledElement\n          title={t(\"editor.action.resource.db.label.password\")}\n          defaultValue={content.password}\n          name=\"password\"\n          controlledType=\"password\"\n          control={control}\n          placeholders={[t(\"editor.action.form.placeholder.oracle.password\")]}\n        />\n        {isCloudVersion && (\n          <>\n            <div css={configItemTip}>\n              {t(\"editor.action.resource.db.tip.username_password\")}\n            </div>\n            <div css={connectType}>\n              <div css={labelContainer}>\n                <span\n                  css={applyConfigItemLabelText(getColor(\"grayBlue\", \"02\"))}\n                >\n                  {t(\"editor.action.resource.db.label.connect_type\")}\n                </span>\n              </div>\n              <span css={connectTypeStyle}>\n                {t(\"editor.action.resource.db.tip.connect_type\")}\n              </span>\n            </div>\n          </>\n        )}\n        <Divider\n          direction=\"horizontal\"\n          ml=\"24px\"\n          mr=\"24px\"\n          mt=\"8px\"\n          mb=\"8px\"\n          w=\"unset\"\n        />\n        <div css={optionLabelStyle}>\n          {t(\"editor.action.resource.db.title.advanced_option\")}\n        </div>\n        <ControlledElement\n          title={t(\"editor.action.form.label.oracle.ssl\")}\n          defaultValue={content.ssl}\n          isRequired\n          name=\"ssl\"\n          controlledType=\"switch\"\n          control={control}\n          contentLabel={t(\"editor.action.form.option.oracle.ssl\")}\n        />\n      </div>\n    </>\n  )\n}\nOracleDBConfigElement.displayName = \"OracleDBConfigElement\"\nexport default OracleDBConfigElement\n"],"names":["OracleResourceInitial","OracleDBConfigElement","props","resourceID","t","useTranslation","control","formState","useFormContext","ConnectTypeOptions","showAlert","setShowAlert","useState","getResourceByID","useContext","ResourceGeneratorContext","findResource","content","handleHostValidate","useCallback","value","isContainLocalPath","urlValidate","jsx","Fragment","jsxs","container","ControlledElement","validateNotEmpty","Divider","optionLabelStyle","errorMsgStyle","WarningCircleIcon","errorIconStyle","Alert","isCloudVersion"],"mappings":"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"}