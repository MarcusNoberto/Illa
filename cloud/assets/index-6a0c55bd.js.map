{"version":3,"file":"index-6a0c55bd.js","sources":["../../../../packages/illa-public-component/publicConfig/resource/initConfig/appwrite.ts","../../../../packages/illa-public-component/ResourceGenerator/components/ConfigElements/AppwriteConfigElement/index.tsx"],"sourcesContent":["import { AppWriteResource } from \"@illa-public/public-types\"\n\nexport const AppWriteResourceInitial: AppWriteResource = {\n  host: \"\",\n  databaseID: \"\",\n  projectID: \"\",\n  apiKey: \"\",\n}\n","import { AppWriteResourceInitial } from \"@illa-public/public-configs\"\nimport { AppWriteResource } from \"@illa-public/public-types\"\nimport { isCloudVersion } from \"@illa-public/utils\"\nimport { FC, useContext } from \"react\"\nimport { useFormContext } from \"react-hook-form\"\nimport { useTranslation } from \"react-i18next\"\nimport { Divider, WarningCircleIcon, getColor } from \"@illa-design/react\"\nimport { ResourceGeneratorContext } from \"../../../provider\"\nimport { urlValidate, validateNotEmpty } from \"../../../utils\"\nimport { ControlledElement } from \"../../ControlledElement\"\nimport { BaseConfigElementProps } from \"../interface\"\nimport {\n  applyConfigItemLabelText,\n  configItemTip,\n  connectType,\n  connectTypeStyle,\n  container,\n  errorIconStyle,\n  errorMsgStyle,\n  labelContainer,\n  optionLabelStyle,\n} from \"../style\"\n\nconst AppWriteConfigElement: FC<BaseConfigElementProps> = (props) => {\n  const { resourceID } = props\n  const { t } = useTranslation()\n  const { control, formState } = useFormContext()\n  const { getResourceByID } = useContext(ResourceGeneratorContext)\n  const findResource = getResourceByID(resourceID)\n  let content: AppWriteResource\n  if (!findResource) {\n    content = AppWriteResourceInitial\n  } else {\n    content = findResource.content as AppWriteResource\n  }\n\n  const inputValueValidate = {\n    validate: validateNotEmpty,\n  }\n\n  return (\n    <>\n      <div css={container}>\n        <ControlledElement\n          controlledType=\"input\"\n          isRequired\n          title={t(\"editor.action.resource.db.label.name\")}\n          control={control}\n          defaultValue={findResource?.resourceName ?? \"\"}\n          rules={[inputValueValidate]}\n          placeholders={[t(\"editor.action.resource.db.placeholder.name\")]}\n          name=\"resourceName\"\n          tips={t(\"editor.action.resource.restapi.tip.name\")}\n        />\n        <Divider\n          direction=\"horizontal\"\n          ml=\"24px\"\n          mr=\"24px\"\n          mt=\"8px\"\n          mb=\"8px\"\n          w=\"unset\"\n        />\n        <div css={optionLabelStyle}>\n          {t(\"editor.action.resource.db.title.general_option\")}\n        </div>\n        <ControlledElement\n          controlledType=\"input\"\n          isRequired\n          title={t(\"editor.action.form.label.appwrite.host\")}\n          control={control}\n          defaultValue={content.host}\n          rules={[\n            {\n              required: t(\"editor.action.resource.error.invalid_url\"),\n              validate: urlValidate,\n            },\n          ]}\n          placeholders={[t(\"editor.action.form.placeholder.appwrite.host\")]}\n          name=\"host\"\n          tips={\n            formState.errors.host ? (\n              <div css={errorMsgStyle}>\n                <WarningCircleIcon css={errorIconStyle} />\n                <>{formState.errors.host.message}</>\n              </div>\n            ) : null\n          }\n        />\n        <ControlledElement\n          controlledType=\"input\"\n          isRequired\n          title={t(\"editor.action.form.label.appwrite.dbid\")}\n          control={control}\n          defaultValue={content.databaseID}\n          rules={[inputValueValidate]}\n          placeholders={[t(\"editor.action.form.placeholder.appwrite.dbid\")]}\n          name=\"databaseID\"\n        />\n        <ControlledElement\n          controlledType=\"input\"\n          isRequired\n          title={t(\"editor.action.form.label.appwrite.projectid\")}\n          control={control}\n          defaultValue={content.projectID}\n          rules={[inputValueValidate]}\n          placeholders={[\n            t(\"editor.action.form.placeholder.appwrite.projectid\"),\n          ]}\n          name=\"projectID\"\n        />\n        <ControlledElement\n          controlledType=\"password\"\n          isRequired\n          title={t(\"editor.action.form.label.appwrite.secret\")}\n          control={control}\n          defaultValue={content.apiKey}\n          rules={[inputValueValidate]}\n          placeholders={[t(\"editor.action.form.placeholder.appwrite.secret\")]}\n          name=\"apiKey\"\n        />\n        {isCloudVersion && (\n          <>\n            <div css={configItemTip}>\n              {t(\"editor.action.resource.db.tip.username_password\")}\n            </div>\n            <div css={connectType}>\n              <div css={labelContainer}>\n                <span\n                  css={applyConfigItemLabelText(getColor(\"grayBlue\", \"02\"))}\n                >\n                  {t(\"editor.action.resource.db.label.connect_type\")}\n                </span>\n              </div>\n              <span css={connectTypeStyle}>\n                {t(\"editor.action.resource.db.tip.connect_type\")}\n              </span>\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  )\n}\nAppWriteConfigElement.displayName = \"AppWriteConfigElement\"\nexport default AppWriteConfigElement\n"],"names":["AppWriteResourceInitial","AppWriteConfigElement","props","resourceID","t","useTranslation","control","formState","useFormContext","getResourceByID","useContext","ResourceGeneratorContext","findResource","content","inputValueValidate","validateNotEmpty","jsx","Fragment","jsxs","container","ControlledElement","Divider","optionLabelStyle","urlValidate","errorMsgStyle","WarningCircleIcon","errorIconStyle","isCloudVersion"],"mappings":"soBAEO,MAAMA,EAA4C,CACvD,KAAM,GACN,WAAY,GACZ,UAAW,GACX,OAAQ,EACV,ECgBMC,EAAqDC,GAAU,CAC7D,KAAA,CAAE,WAAAC,CAAe,EAAAD,EACjB,CAAE,EAAAE,GAAMC,IACR,CAAE,QAAAC,EAAS,UAAAC,CAAU,EAAIC,EAAe,EACxC,CAAE,gBAAAC,CAAA,EAAoBC,EAAA,WAAWC,CAAwB,EACzDC,EAAeH,EAAgBN,CAAU,EAC3C,IAAAU,EACCD,EAGHC,EAAUD,EAAa,QAFbC,EAAAb,EAKZ,MAAMc,EAAqB,CACzB,SAAUC,CAAA,EAGZ,OAEIC,EAAAC,EAAA,CAAA,SAAAC,EAAC,MAAI,CAAA,IAAKC,EACR,SAAA,CAAAH,EAACI,EAAA,CACC,eAAe,QACf,WAAU,GACV,MAAOhB,EAAE,sCAAsC,EAC/C,QAAAE,EACA,cAAcM,GAAA,YAAAA,EAAc,eAAgB,GAC5C,MAAO,CAACE,CAAkB,EAC1B,aAAc,CAACV,EAAE,4CAA4C,CAAC,EAC9D,KAAK,eACL,KAAMA,EAAE,yCAAyC,CAAA,CACnD,EACAY,EAACK,EAAA,CACC,UAAU,aACV,GAAG,OACH,GAAG,OACH,GAAG,MACH,GAAG,MACH,EAAE,OAAA,CACJ,IACC,MAAI,CAAA,IAAKC,EACP,SAAAlB,EAAE,gDAAgD,EACrD,EACAY,EAACI,EAAA,CACC,eAAe,QACf,WAAU,GACV,MAAOhB,EAAE,wCAAwC,EACjD,QAAAE,EACA,aAAcO,EAAQ,KACtB,MAAO,CACL,CACE,SAAUT,EAAE,0CAA0C,EACtD,SAAUmB,CACZ,CACF,EACA,aAAc,CAACnB,EAAE,8CAA8C,CAAC,EAChE,KAAK,OACL,KACEG,EAAU,OAAO,KACdW,EAAA,MAAA,CAAI,IAAKM,EACR,SAAA,CAACR,EAAAS,EAAA,CAAkB,IAAKC,CAAgB,CAAA,EACrCV,EAAAC,EAAA,CAAA,SAAAV,EAAU,OAAO,KAAK,QAAQ,CAAA,CAAA,CACnC,EACE,IAAA,CAER,EACAS,EAACI,EAAA,CACC,eAAe,QACf,WAAU,GACV,MAAOhB,EAAE,wCAAwC,EACjD,QAAAE,EACA,aAAcO,EAAQ,WACtB,MAAO,CAACC,CAAkB,EAC1B,aAAc,CAACV,EAAE,8CAA8C,CAAC,EAChE,KAAK,YAAA,CACP,EACAY,EAACI,EAAA,CACC,eAAe,QACf,WAAU,GACV,MAAOhB,EAAE,6CAA6C,EACtD,QAAAE,EACA,aAAcO,EAAQ,UACtB,MAAO,CAACC,CAAkB,EAC1B,aAAc,CACZV,EAAE,mDAAmD,CACvD,EACA,KAAK,WAAA,CACP,EACAY,EAACI,EAAA,CACC,eAAe,WACf,WAAU,GACV,MAAOhB,EAAE,0CAA0C,EACnD,QAAAE,EACA,aAAcO,EAAQ,OACtB,MAAO,CAACC,CAAkB,EAC1B,aAAc,CAACV,EAAE,gDAAgD,CAAC,EAClE,KAAK,QAAA,CACP,EACCuB,CAiBC,CAEJ,CAAA,CACF,CAAA,CAEJ,EACA1B,EAAsB,YAAc"}