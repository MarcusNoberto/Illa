{"version":3,"file":"signup-b8348e15.js","sources":["../../src/page/user/signup.tsx"],"sourcesContent":["import { FC, useState } from 'react'\nimport { useForm, SubmitHandler } from 'react-hook-form'\nimport { useTranslation } from 'react-i18next'\nimport { useNavigate } from 'react-router-dom'\nimport { Button, Input, Space } from '@illa-design/react'\n\ninterface SignUpFields {\n  nickname: string\n  email: string\n  password: string\n  confirmPassword: string\n}\n\nconst SignUpPage: FC = () => {\n  const { t } = useTranslation()\n  const navigate = useNavigate()\n  const { register, handleSubmit, watch, formState: { errors } } = useForm<SignUpFields>()\n  const [loading, setLoading] = useState(false)\n  \n  const onSubmit: SubmitHandler<SignUpFields> = async (data) => {\n    setLoading(true)\n    try {\n      // Aqui você pode chamar a função para realizar o cadastro\n      console.log(data)\n      // Supondo que o cadastro foi bem-sucedido\n      navigate('/login')\n    } catch (error) {\n      // Tratar erro\n      console.error(error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const password = watch(\"password\")\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Space direction=\"vertical\" size=\"large\">\n        <div>\n          <label>{t(\"page.user.sign_up.field.nickname\")}</label>\n          <Input \n            {...register(\"nickname\", { required: t(\"page.user.sign_up.error_message.nickname.required\") })}\n            onChange={(value) => register(\"nickname\").onChange({ target: { value } })}\n          />\n          {errors.nickname && <span style={{ color: 'red' }}>{errors.nickname.message}</span>}\n        </div>\n        \n        <div>\n          <label>{t(\"page.user.sign_up.field.email\")}</label>\n          <Input \n            type=\"email\" \n            {...register(\"email\", { \n              required: t(\"page.user.sign_up.error_message.email.required\"), \n              pattern: { \n                value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/, \n                message: t(\"page.user.sign_up.error_message.email.invalid\") \n              } \n            })}\n            onChange={(value) => register(\"email\").onChange({ target: { value } })}\n          />\n          {errors.email && <span style={{ color: 'red' }}>{errors.email.message}</span>}\n        </div>\n        \n        <div>\n          <label>{t(\"page.user.sign_up.field.password\")}</label>\n          <Input \n            type=\"password\" \n            {...register(\"password\", { \n              required: t(\"page.user.sign_up.error_message.password.required\"), \n              minLength: { \n                value: 6, \n                message: t(\"page.user.sign_up.error_message.password.min_length\") \n              } \n            })}\n            onChange={(value) => register(\"password\").onChange({ target: { value } })}\n          />\n          {errors.password && <span style={{ color: 'red' }}>{errors.password.message}</span>}\n        </div>\n        \n        <div>\n          <label>{t(\"page.user.sign_up.field.confirm_password\")}</label>\n          <Input \n            type=\"password\" \n            {...register(\"confirmPassword\", { \n              required: t(\"page.user.sign_up.error_message.confirm_password.required\"), \n              validate: value => value === password || t(\"page.user.sign_up.error_message.confirm_password.match\") \n            })}\n            onChange={(value) => register(\"confirmPassword\").onChange({ target: { value } })}\n          />\n          {errors.confirmPassword && <span style={{ color: 'red' }}>{errors.confirmPassword.message}</span>}\n        </div>\n        \n        <Button type=\"submit\" loading={loading}>\n          {t(\"page.user.sign_up.button\")}\n        </Button>\n      </Space>\n    </form>\n  )\n}\n\nexport default SignUpPage"],"names":["SignUpPage","t","useTranslation","navigate","useNavigate","register","handleSubmit","watch","errors","useForm","loading","setLoading","useState","onSubmit","data","error","password","jsx","jsxs","Space","Input","value","Button"],"mappings":"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"}