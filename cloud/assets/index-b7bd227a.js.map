{"version":3,"file":"index-b7bd227a.js","sources":["../../../../packages/illa-public-component/ResourceGenerator/components/ConfigElements/HuggingFaceConfigElement/index.tsx"],"sourcesContent":["import { HuggingFaceResource, Resource } from \"@illa-public/public-types\"\nimport { TextLink } from \"@illa-public/text-link\"\nimport { FC, useContext } from \"react\"\nimport { useFormContext } from \"react-hook-form\"\nimport { Trans, useTranslation } from \"react-i18next\"\nimport { FileDefaultIcon } from \"@illa-design/react\"\nimport { ResourceGeneratorContext } from \"../../../provider\"\nimport { validateNotEmpty } from \"../../../utils\"\nimport { ControlledElement } from \"../../ControlledElement\"\nimport { BaseConfigElementProps } from \"../interface\"\nimport { container, labelContainer } from \"../style\"\nimport {\n  docContainerStyle,\n  docItemStyle,\n  docsItemContainerStyle,\n  labelStyle,\n  tipsStyle,\n} from \"./style\"\n\nconst HuggingFaceConfigElement: FC<BaseConfigElementProps> = (props) => {\n  const { resourceID } = props\n  const { t } = useTranslation()\n\n  const { control } = useFormContext()\n  const { getResourceByID } = useContext(ResourceGeneratorContext)\n  const findResource = getResourceByID(\n    resourceID,\n  ) as Resource<HuggingFaceResource>\n\n  const handleURLClick = (link: string) => window.open(link, \"_blank\")\n\n  return (\n    <>\n      <div css={container}>\n        <div css={docsItemContainerStyle}>\n          <div css={labelContainer} />\n          <div css={docContainerStyle}>\n            <span css={docItemStyle}>Learn more about Hugging Face:</span>\n            <span\n              css={docItemStyle}\n              onClick={() =>\n                handleURLClick(\"https://huggingface.co/inference-api\")\n              }\n            >\n              <FileDefaultIcon />\n              <span>Inference API</span>\n            </span>\n            <span\n              css={docItemStyle}\n              onClick={() =>\n                handleURLClick(\n                  \"https://huggingface.co/docs/api-inference/quicktour\",\n                )\n              }\n            >\n              <FileDefaultIcon />\n              <span>API Doc</span>\n            </span>\n          </div>\n        </div>\n\n        <ControlledElement\n          controlledType=\"input\"\n          isRequired\n          title={t(\"editor.action.resource.db.label.name\")}\n          control={control}\n          defaultValue={findResource?.resourceName ?? \"\"}\n          rules={[\n            {\n              validate: validateNotEmpty,\n            },\n          ]}\n          placeholders={[t(\"editor.action.resource.db.placeholder.name\")]}\n          name=\"resourceName\"\n          tips={t(\"editor.action.resource.restapi.tip.name\")}\n          labelStyle={labelStyle}\n          tipsStyle={tipsStyle}\n        />\n\n        <ControlledElement\n          title={t(\"editor.action.resource.db.label.bear_token\")}\n          defaultValue={findResource?.content.token ?? \"\"}\n          name=\"token\"\n          controlledType=\"password\"\n          control={control}\n          isRequired\n          tips={\n            <Trans\n              i18nKey=\"editor.action.resource.db.tip.bear_token\"\n              t={t}\n              components={[\n                <TextLink\n                  key={\"editor.action.resource.db.tip.bear_token\"}\n                  onClick={() => {\n                    handleURLClick(\"https://huggingface.co/settings/tokens\")\n                  }}\n                />,\n              ]}\n            />\n          }\n          labelStyle={labelStyle}\n          tipsStyle={tipsStyle}\n        />\n      </div>\n    </>\n  )\n}\n\nHuggingFaceConfigElement.displayName = \"HuggingFaceConfigElement\"\nexport default HuggingFaceConfigElement\n"],"names":["HuggingFaceConfigElement","props","resourceID","t","useTranslation","control","useFormContext","getResourceByID","useContext","ResourceGeneratorContext","findResource","handleURLClick","link","jsx","Fragment","jsxs","container","docsItemContainerStyle","labelContainer","docContainerStyle","docItemStyle","FileDefaultIcon","ControlledElement","validateNotEmpty","labelStyle","tipsStyle","Trans","TextLink"],"mappings":"qtBAmBM,MAAAA,EAAwDC,GAAU,CAChE,KAAA,CAAE,WAAAC,CAAe,EAAAD,EACjB,CAAE,EAAAE,GAAMC,IAER,CAAE,QAAAC,GAAYC,IACd,CAAE,gBAAAC,CAAA,EAAoBC,EAAA,WAAWC,CAAwB,EACzDC,EAAeH,EACnBL,CAAA,EAGIS,EAAkBC,GAAiB,OAAO,KAAKA,EAAM,QAAQ,EAEnE,OAEIC,EAAAC,EAAA,CAAA,SAAAC,EAAC,MAAI,CAAA,IAAKC,EACR,SAAA,CAACD,EAAA,MAAA,CAAI,IAAKE,EACR,SAAA,CAACJ,EAAA,MAAA,CAAI,IAAKK,CAAgB,CAAA,EAC1BH,EAAC,MAAI,CAAA,IAAKI,EACR,SAAA,CAACN,EAAA,OAAA,CAAK,IAAKO,EAAc,SAA8B,iCAAA,EACvDL,EAAC,OAAA,CACC,IAAKK,EACL,QAAS,IACPT,EAAe,sCAAsC,EAGvD,SAAA,CAAAE,EAACQ,EAAgB,EAAA,EACjBR,EAAC,QAAK,SAAa,eAAA,CAAA,CAAA,CAAA,CACrB,EACAE,EAAC,OAAA,CACC,IAAKK,EACL,QAAS,IACPT,EACE,qDACF,EAGF,SAAA,CAAAE,EAACQ,EAAgB,EAAA,EACjBR,EAAC,QAAK,SAAO,SAAA,CAAA,CAAA,CAAA,CACf,CAAA,EACF,CAAA,EACF,EAEAA,EAACS,EAAA,CACC,eAAe,QACf,WAAU,GACV,MAAOnB,EAAE,sCAAsC,EAC/C,QAAAE,EACA,cAAcK,GAAA,YAAAA,EAAc,eAAgB,GAC5C,MAAO,CACL,CACE,SAAUa,CACZ,CACF,EACA,aAAc,CAACpB,EAAE,4CAA4C,CAAC,EAC9D,KAAK,eACL,KAAMA,EAAE,yCAAyC,EACjD,WAAAqB,EACA,UAAAC,CAAA,CACF,EAEAZ,EAACS,EAAA,CACC,MAAOnB,EAAE,4CAA4C,EACrD,cAAcO,GAAA,YAAAA,EAAc,QAAQ,QAAS,GAC7C,KAAK,QACL,eAAe,WACf,QAAAL,EACA,WAAU,GACV,KACEQ,EAACa,EAAA,CACC,QAAQ,2CACR,EAAAvB,EACA,WAAY,CACVU,EAACc,EAAA,CAEC,QAAS,IAAM,CACbhB,EAAe,wCAAwC,CACzD,CAAA,EAHK,0CAIP,CACF,CAAA,CACF,EAEF,WAAAa,EACA,UAAAC,CAAA,CACF,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,EAEAzB,EAAyB,YAAc"}