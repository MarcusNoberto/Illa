{"version":3,"file":"index-fd5e0d02.js","sources":["../../../../packages/illa-public-component/publicConfig/resource/initConfig/dynamo.ts","../../../../packages/illa-public-component/ResourceGenerator/components/ConfigElements/DynamoDBConfigElement/index.tsx"],"sourcesContent":["import { DynamoDBResource } from \"@illa-public/public-types\"\n\nexport const DynamoDBResourceInitial: DynamoDBResource = {\n  region: \"\",\n  accessKeyID: \"\",\n  secretAccessKey: \"\",\n}\n","import { DynamoDBResourceInitial } from \"@illa-public/public-configs\"\nimport { DynamoDBResource, Resource } from \"@illa-public/public-types\"\nimport { isCloudVersion } from \"@illa-public/utils\"\nimport { FC, useContext, useMemo } from \"react\"\nimport { useFormContext } from \"react-hook-form\"\nimport { useTranslation } from \"react-i18next\"\nimport { Divider, getColor } from \"@illa-design/react\"\nimport { ResourceGeneratorContext } from \"../../../provider\"\nimport { validateNotEmpty } from \"../../../utils\"\nimport { ControlledElement } from \"../../ControlledElement\"\nimport { BaseConfigElementProps } from \"../interface\"\nimport {\n  applyConfigItemLabelText,\n  configItemTip,\n  connectType,\n  connectTypeStyle,\n  container,\n  labelContainer,\n  optionLabelStyle,\n} from \"../style\"\n\nconst DynamoDBConfigElement: FC<BaseConfigElementProps> = (props) => {\n  const { resourceID } = props\n  const { t } = useTranslation()\n  const { control } = useFormContext()\n  const { getResourceByID } = useContext(ResourceGeneratorContext)\n  const findResource = getResourceByID(resourceID)\n\n  const content = useMemo(() => {\n    if (findResource === undefined) {\n      return DynamoDBResourceInitial\n    } else {\n      return (findResource as Resource<DynamoDBResource>).content\n    }\n  }, [findResource])\n\n  return (\n    <>\n      <div css={container}>\n        <ControlledElement\n          controlledType=\"input\"\n          isRequired\n          title={t(\"editor.action.resource.db.label.name\")}\n          control={control}\n          defaultValue={findResource?.resourceName ?? \"\"}\n          rules={[\n            {\n              validate: validateNotEmpty,\n            },\n          ]}\n          placeholders={[t(\"editor.action.resource.db.placeholder.name\")]}\n          name=\"resourceName\"\n          tips={t(\"editor.action.resource.restapi.tip.name\")}\n        />\n        <Divider\n          direction=\"horizontal\"\n          ml=\"24px\"\n          mr=\"24px\"\n          mt=\"8px\"\n          mb=\"8px\"\n          w=\"unset\"\n        />\n        <div css={optionLabelStyle}>\n          {t(\"editor.action.resource.db.title.general_option\")}\n        </div>\n\n        <ControlledElement\n          controlledType=\"input\"\n          isRequired\n          title={t(\"editor.action.resource.db.label.dynamo_region\")}\n          control={control}\n          defaultValue={content.region}\n          rules={[\n            {\n              validate: validateNotEmpty,\n            },\n          ]}\n          placeholders={[\n            t(\"editor.action.resource.db.placeholder.dynamo_region\"),\n          ]}\n          name=\"region\"\n        />\n\n        <ControlledElement\n          controlledType=\"input\"\n          isRequired\n          title={t(\"editor.action.resource.db.label.dynamo_access_key_id\")}\n          control={control}\n          defaultValue={content.accessKeyID}\n          rules={[\n            {\n              validate: validateNotEmpty,\n            },\n          ]}\n          name=\"accessKeyID\"\n        />\n\n        <ControlledElement\n          controlledType=\"password\"\n          isRequired\n          title={t(\"editor.action.resource.db.label.dynamo_secret_key\")}\n          control={control}\n          defaultValue={content.secretAccessKey}\n          rules={[\n            {\n              validate: validateNotEmpty,\n            },\n          ]}\n          name=\"secretAccessKey\"\n        />\n\n        {isCloudVersion && (\n          <>\n            <div css={configItemTip}>\n              {t(\"editor.action.resource.db.tip.username_password\")}\n            </div>\n            <div css={connectType}>\n              <div css={labelContainer}>\n                <span\n                  css={applyConfigItemLabelText(getColor(\"grayBlue\", \"02\"))}\n                >\n                  {t(\"editor.action.resource.db.label.connect_type\")}\n                </span>\n              </div>\n              <span css={connectTypeStyle}>\n                {t(\"editor.action.resource.db.tip.connect_type\")}\n              </span>\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  )\n}\nDynamoDBConfigElement.displayName = \"DynamoDBConfigElement\"\nexport default DynamoDBConfigElement\n"],"names":["DynamoDBResourceInitial","DynamoDBConfigElement","props","resourceID","t","useTranslation","control","useFormContext","getResourceByID","useContext","ResourceGeneratorContext","findResource","content","useMemo","jsx","Fragment","jsxs","container","ControlledElement","validateNotEmpty","Divider","optionLabelStyle","isCloudVersion"],"mappings":"ymBAEO,MAAMA,EAA4C,CACvD,OAAQ,GACR,YAAa,GACb,gBAAiB,EACnB,ECeMC,EAAqDC,GAAU,CAC7D,KAAA,CAAE,WAAAC,CAAe,EAAAD,EACjB,CAAE,EAAAE,GAAMC,IACR,CAAE,QAAAC,GAAYC,IACd,CAAE,gBAAAC,CAAA,EAAoBC,EAAA,WAAWC,CAAwB,EACzDC,EAAeH,EAAgBL,CAAU,EAEzCS,EAAUC,EAAAA,QAAQ,IAClBF,IAAiB,OACZX,EAECW,EAA4C,QAErD,CAACA,CAAY,CAAC,EAEjB,OAEIG,EAAAC,EAAA,CAAA,SAAAC,EAAC,MAAI,CAAA,IAAKC,EACR,SAAA,CAAAH,EAACI,EAAA,CACC,eAAe,QACf,WAAU,GACV,MAAOd,EAAE,sCAAsC,EAC/C,QAAAE,EACA,cAAcK,GAAA,YAAAA,EAAc,eAAgB,GAC5C,MAAO,CACL,CACE,SAAUQ,CACZ,CACF,EACA,aAAc,CAACf,EAAE,4CAA4C,CAAC,EAC9D,KAAK,eACL,KAAMA,EAAE,yCAAyC,CAAA,CACnD,EACAU,EAACM,EAAA,CACC,UAAU,aACV,GAAG,OACH,GAAG,OACH,GAAG,MACH,GAAG,MACH,EAAE,OAAA,CACJ,IACC,MAAI,CAAA,IAAKC,EACP,SAAAjB,EAAE,gDAAgD,EACrD,EAEAU,EAACI,EAAA,CACC,eAAe,QACf,WAAU,GACV,MAAOd,EAAE,+CAA+C,EACxD,QAAAE,EACA,aAAcM,EAAQ,OACtB,MAAO,CACL,CACE,SAAUO,CACZ,CACF,EACA,aAAc,CACZf,EAAE,qDAAqD,CACzD,EACA,KAAK,QAAA,CACP,EAEAU,EAACI,EAAA,CACC,eAAe,QACf,WAAU,GACV,MAAOd,EAAE,sDAAsD,EAC/D,QAAAE,EACA,aAAcM,EAAQ,YACtB,MAAO,CACL,CACE,SAAUO,CACZ,CACF,EACA,KAAK,aAAA,CACP,EAEAL,EAACI,EAAA,CACC,eAAe,WACf,WAAU,GACV,MAAOd,EAAE,mDAAmD,EAC5D,QAAAE,EACA,aAAcM,EAAQ,gBACtB,MAAO,CACL,CACE,SAAUO,CACZ,CACF,EACA,KAAK,iBAAA,CACP,EAECG,CAiBC,CAEJ,CAAA,CACF,CAAA,CAEJ,EACArB,EAAsB,YAAc"}