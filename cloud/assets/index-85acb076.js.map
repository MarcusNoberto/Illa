{"version":3,"file":"index-85acb076.js","sources":["../../../../packages/illa-public-component/publicConfig/resource/initConfig/restapi.ts","../../../../packages/illa-public-component/ResourceGenerator/components/ConfigElements/RestApiConfigElement/BasicAuthPanel/index.tsx","../../../../packages/illa-public-component/ResourceGenerator/components/ConfigElements/RestApiConfigElement/BearerAuthPanel/index.tsx","../../../../packages/illa-public-component/ResourceGenerator/components/ConfigElements/RestApiConfigElement/DigestAuthPanel/index.tsx","../../../../packages/illa-public-component/ResourceGenerator/components/ConfigElements/RestApiConfigElement/index.tsx"],"sourcesContent":["import { RestApiAuth, RestApiResource } from \"@illa-public/public-types\"\n\nexport const RestApiResourceInit: RestApiResource<RestApiAuth> = {\n  baseUrl: \"\",\n  urlParams: [\n    {\n      key: \"\",\n      value: \"\",\n    },\n  ],\n  headers: [\n    {\n      key: \"\",\n      value: \"\",\n    },\n  ],\n  cookies: [\n    {\n      key: \"\",\n      value: \"\",\n    },\n  ],\n  authentication: \"none\",\n  selfSignedCert: false,\n  certs: {\n    caCert: \"\",\n    clientKey: \"\",\n    clientCert: \"\",\n    mode: \"verify-full\",\n  },\n  authContent: {},\n}\n","import { RestAPIBasicAuth } from \"@illa-public/public-types\"\nimport { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { validateNotEmpty } from \"../../../../utils\"\nimport { ControlledElement } from \"../../../ControlledElement\"\nimport { RestApiAuthPanelProps } from \"../interface\"\n\nexport const BasicAuthPanel: FC<RestApiAuthPanelProps> = (props) => {\n  const { control } = props\n  const auth = props.auth as RestAPIBasicAuth\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <ControlledElement\n        title={t(\"editor.action.resource.restapi.label.basic_auth_username\")}\n        defaultValue={auth?.username ?? \"\"}\n        name=\"username\"\n        isRequired\n        controlledType=\"input\"\n        control={control}\n        rules={[\n          {\n            validate: validateNotEmpty,\n          },\n        ]}\n      />\n      <ControlledElement\n        title={t(\"editor.action.resource.restapi.label.basic_auth_password\")}\n        defaultValue={auth?.password ?? \"\"}\n        name=\"password\"\n        isRequired\n        controlledType=\"password\"\n        control={control}\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      />\n    </>\n  )\n}\n\nBasicAuthPanel.displayName = \"BasicAuthPanel\"\n","import { RestAPIBearerAuth } from \"@illa-public/public-types\"\nimport { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { validateNotEmpty } from \"../../../../utils\"\nimport { ControlledElement } from \"../../../ControlledElement\"\nimport { RestApiAuthPanelProps } from \"../interface\"\n\nexport const BearerAuthPanel: FC<RestApiAuthPanelProps> = (props) => {\n  const { control } = props\n  const auth = props.auth as RestAPIBearerAuth\n  const { t } = useTranslation()\n\n  return (\n    <ControlledElement\n      title={t(\"editor.action.resource.restapi.label.bearerToken\")}\n      defaultValue={auth?.token ?? \"\"}\n      name=\"token\"\n      controlledType=\"input\"\n      control={control}\n      isRequired\n      rules={[\n        {\n          validate: validateNotEmpty,\n        },\n      ]}\n    />\n  )\n}\n\nBearerAuthPanel.displayName = \"BearerAuthPanel\"\n","import { DigestAuth } from \"@illa-public/public-types\"\nimport { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { ControlledElement } from \"../../../ControlledElement\"\nimport { ControlledType } from \"../../../ControlledElement/interface\"\nimport { RestApiAuthPanelProps } from \"../interface\"\n\nconst options = [\n  {\n    title: \"editor.action.resource.restapi.label.digest_auth_username\",\n    name: \"username\",\n    controlledType: \"input\",\n    defaultValue: \"\",\n    required: false,\n  },\n  {\n    title: \"editor.action.resource.restapi.label.digest_auth_password\",\n    name: \"password\",\n    controlledType: \"password\",\n    defaultValue: \"\",\n    required: false,\n  },\n]\n\nexport const DigestAuthPanel: FC<RestApiAuthPanelProps> = (props) => {\n  const { control } = props\n  const auth = props.auth as DigestAuth\n\n  const { t } = useTranslation()\n  return (\n    <>\n      {options.map((item) => {\n        return (\n          <ControlledElement\n            key={item.name}\n            title={t(item.title)}\n            defaultValue={\n              auth?.[item.name as keyof DigestAuth] ?? item.defaultValue\n            }\n            name={item.name}\n            controlledType={item.controlledType as ControlledType}\n            control={control}\n            isRequired={item.required}\n          />\n        )\n      })}\n    </>\n  )\n}\n\nDigestAuthPanel.displayName = \"DigestAuthPanel\"\n","import { RestApiResourceInit } from \"@illa-public/public-configs\"\nimport {\n  Resource,\n  RestApiAuth,\n  RestApiAuthType,\n  RestApiResource,\n  VerifyMode,\n} from \"@illa-public/public-types\"\nimport { FC, useContext } from \"react\"\nimport { Controller, useFormContext } from \"react-hook-form\"\nimport { useTranslation } from \"react-i18next\"\nimport { Alert, Divider } from \"@illa-design/react\"\nimport { ResourceGeneratorContext } from \"../../../provider\"\nimport { validateNotEmpty } from \"../../../utils\"\nimport { ControlledElement } from \"../../ControlledElement\"\nimport { InputRecordEditor } from \"../../InputRecordEditor\"\nimport { BaseConfigElementProps } from \"../interface\"\nimport { container, optionLabelStyle } from \"../style\"\nimport { BasicAuthPanel } from \"./BasicAuthPanel\"\nimport { BearerAuthPanel } from \"./BearerAuthPanel\"\nimport { DigestAuthPanel } from \"./DigestAuthPanel\"\n\nconst RestApiAuthTypeComponentMap = {\n  none: null,\n  basic: BasicAuthPanel,\n  bearer: BearerAuthPanel,\n  digest: DigestAuthPanel,\n}\n\nconst RestApiConfigElement: FC<BaseConfigElementProps> = (props) => {\n  const { resourceID } = props\n\n  const { t } = useTranslation()\n  const { control, watch } = useFormContext()\n  const { getResourceByID } = useContext(ResourceGeneratorContext)\n  const findResource = getResourceByID(resourceID) as Resource<\n    RestApiResource<RestApiAuth>\n  >\n\n  const content = findResource?.content ?? RestApiResourceInit\n\n  const showCertificates = (watch(\"baseUrl\", content.baseUrl) ?? \"\").startsWith(\n    \"https://\",\n  )\n  const showCertificatesConfig = watch(\n    \"selfSignedCert\",\n    content?.selfSignedCert,\n  )\n  const showSkipVerify = watch(\"mode\", content.certs?.mode) === \"skip\"\n  const authType = watch(\"authentication\", content.authentication)\n\n  const SubPanelComponent =\n    RestApiAuthTypeComponentMap[\n      authType as keyof typeof RestApiAuthTypeComponentMap\n    ]\n\n  const AuthenticationOptions: {\n    label: string\n    value: RestApiAuthType\n  }[] = [\n    {\n      label: t(\"editor.action.resource.restapi.option.authentication.none\"),\n      value: \"none\",\n    },\n    {\n      label: t(\n        \"editor.action.resource.restapi.option.authentication.basic_auth\",\n      ),\n      value: \"basic\",\n    },\n    {\n      label: t(\"editor.action.resource.restapi.option.authentication.bearer\"),\n      value: \"bearer\",\n    },\n    {\n      label: t(\"editor.action.form.option.restapi.authentication.digest_auth\"),\n      value: \"digest\",\n    },\n  ]\n\n  const VerificationModeOptions: {\n    label: string\n    value: VerifyMode\n  }[] = [\n    {\n      label: t(\n        \"editor.action.form.option.restapi.verification_mode.full_verification\",\n      ),\n      value: \"verify-full\",\n    },\n    {\n      label: t(\n        \"editor.action.form.option.restapi.verification_mode.verify_ca_certificat\",\n      ),\n      value: \"verify-ca\",\n    },\n    {\n      label: t(\n        \"editor.action.form.option.restapi.verification_mode.skip_ca_certificate_\",\n      ),\n      value: \"skip\",\n    },\n  ]\n\n  return (\n    <>\n      <div css={container}>\n        <ControlledElement\n          controlledType=\"input\"\n          isRequired\n          title={t(\"editor.action.resource.db.label.name\")}\n          control={control}\n          defaultValue={findResource?.resourceName ?? \"\"}\n          rules={[\n            {\n              validate: validateNotEmpty,\n            },\n          ]}\n          placeholders={[t(\"editor.action.resource.db.placeholder.name\")]}\n          name=\"resourceName\"\n          tips={t(\"editor.action.resource.restapi.tip.name\")}\n        />\n        <Divider\n          direction=\"horizontal\"\n          ml=\"24px\"\n          mr=\"24px\"\n          mt=\"8px\"\n          mb=\"8px\"\n          w=\"unset\"\n        />\n        <div css={optionLabelStyle}>\n          {t(\"editor.action.resource.db.title.general_option\")}\n        </div>\n        <ControlledElement\n          title={t(\"editor.action.resource.restapi.label.base_url\")}\n          defaultValue={content.baseUrl}\n          isRequired\n          name=\"baseUrl\"\n          controlledType=\"input\"\n          control={control}\n          rules={[{ validate: validateNotEmpty }]}\n          placeholders={[\n            t(\"editor.action.resource.restapi.placeholder.base_url\"),\n          ]}\n        />\n        <Controller\n          control={control}\n          defaultValue={content.urlParams}\n          render={({ field: { value, onChange } }) => (\n            <InputRecordEditor\n              label={t(\"editor.action.resource.restapi.label.url_parameters\")}\n              records={value}\n              onAdd={() => {\n                onChange([...value, { key: \"\", value: \"\" }])\n              }}\n              onDelete={(index) => {\n                let newRecords = [...value]\n                newRecords.splice(index, 1)\n                if (newRecords.length === 0) {\n                  newRecords = [{ key: \"\", value: \"\" }]\n                }\n                onChange(newRecords)\n              }}\n              onChangeKey={(index, key, v) => {\n                let newRecords = [...value]\n                newRecords[index] = { key, value: v }\n                onChange(newRecords)\n              }}\n              onChangeValue={(index, key, v) => {\n                let newRecords = [...value]\n                newRecords[index] = { key, value: v }\n                onChange(newRecords)\n              }}\n            />\n          )}\n          name=\"urlParams\"\n        />\n        <Controller\n          control={control}\n          defaultValue={content.headers}\n          render={({ field: { value, onChange } }) => (\n            <InputRecordEditor\n              label={t(\"editor.action.resource.restapi.label.headers\")}\n              records={value}\n              onAdd={() => {\n                onChange([...value, { key: \"\", value: \"\" }])\n              }}\n              onDelete={(index) => {\n                let newRecords = [...value]\n                newRecords.splice(index, 1)\n                if (newRecords.length === 0) {\n                  newRecords = [{ key: \"\", value: \"\" }]\n                }\n                onChange(newRecords)\n              }}\n              onChangeKey={(index, key, v) => {\n                let newRecords = [...value]\n                newRecords[index] = { key, value: v }\n                onChange(newRecords)\n              }}\n              onChangeValue={(index, key, v) => {\n                let newRecords = [...value]\n                newRecords[index] = { key, value: v }\n                onChange(newRecords)\n              }}\n            />\n          )}\n          name=\"headers\"\n        />\n        <Controller\n          control={control}\n          defaultValue={content.cookies}\n          render={({ field: { value, onChange } }) => (\n            <InputRecordEditor\n              label={t(\"editor.action.resource.restapi.label.cookies\")}\n              records={value}\n              onAdd={() => {\n                onChange([...value, { key: \"\", value: \"\" }])\n              }}\n              onDelete={(index) => {\n                let newRecords = [...value]\n                newRecords.splice(index, 1)\n                if (newRecords.length === 0) {\n                  newRecords = [{ key: \"\", value: \"\" }]\n                }\n                onChange(newRecords)\n              }}\n              onChangeKey={(index, key, v) => {\n                let newRecords = [...value]\n                newRecords[index] = { key, value: v }\n                onChange(newRecords)\n              }}\n              onChangeValue={(index, key, v) => {\n                let newRecords = [...value]\n                newRecords[index] = { key, value: v }\n                onChange(newRecords)\n              }}\n            />\n          )}\n          name=\"cookies\"\n        />\n        {showCertificates && (\n          <ControlledElement\n            title={t(\"editor.action.form.label.restapi.certificates\")}\n            defaultValue={content?.selfSignedCert ?? false}\n            name=\"selfSignedCert\"\n            controlledType=\"switch\"\n            control={control}\n            contentLabel={t(\"editor.action.form.option.restapi.certificates\")}\n          />\n        )}\n        {showCertificatesConfig && (\n          <>\n            <ControlledElement\n              controlledType={[\"textarea\"]}\n              title={t(\"editor.action.form.option.restapi.ca_certificate\")}\n              control={control}\n              defaultValue={content?.certs?.caCert ?? \"\"}\n              name=\"caCert\"\n              placeholders={[\n                t(\"editor.action.resource.db.placeholder.certificate\"),\n              ]}\n            />\n            <ControlledElement\n              controlledType={[\"textarea\"]}\n              title={t(\"editor.action.form.option.restapi.client_key\")}\n              control={control}\n              defaultValue={content?.certs?.clientKey ?? \"\"}\n              name=\"clientKey\"\n              placeholders={[\n                t(\"editor.action.resource.db.placeholder.certificate\"),\n              ]}\n            />\n            <ControlledElement\n              controlledType={[\"textarea\"]}\n              title={t(\"editor.action.form.option.restapi.client_certificate\")}\n              control={control}\n              defaultValue={content?.certs?.clientCert ?? \"\"}\n              name=\"clientCert\"\n              placeholders={[\n                t(\"editor.action.resource.db.placeholder.certificate\"),\n              ]}\n            />\n            <ControlledElement\n              title={t(\"editor.action.form.label.restapi.verification_mode\")}\n              defaultValue={content?.certs?.mode ?? \"verify-full\"}\n              name=\"mode\"\n              controlledType=\"select\"\n              control={control}\n              options={VerificationModeOptions}\n            />\n            {showSkipVerify && (\n              <ControlledElement\n                title=\"\"\n                defaultValue=\"\"\n                name=\"\"\n                controlledType=\"none\"\n                control={control}\n                tips={\n                  <Alert\n                    title={t(\n                      \"editor.action.form.tips.connect_to_local.title.tips\",\n                    )}\n                    content={t(\n                      \"editor.action.form.tips.restapi.verification_mode.skip_ca_certificate\",\n                    )}\n                  />\n                }\n              />\n            )}\n          </>\n        )}\n        <ControlledElement\n          title={t(\"editor.action.resource.restapi.label.authentication\")}\n          defaultValue={content.authentication}\n          name=\"authentication\"\n          controlledType=\"select\"\n          control={control}\n          options={AuthenticationOptions}\n        />\n\n        {SubPanelComponent && (\n          <SubPanelComponent control={control} auth={content.authContent} />\n        )}\n      </div>\n    </>\n  )\n}\n\nRestApiConfigElement.displayName = \"RestApiConfigElement\"\nexport default RestApiConfigElement\n"],"names":["RestApiResourceInit","BasicAuthPanel","props","control","auth","t","useTranslation","jsxs","Fragment","jsx","ControlledElement","validateNotEmpty","BearerAuthPanel","options","DigestAuthPanel","item","RestApiAuthTypeComponentMap","RestApiConfigElement","resourceID","watch","useFormContext","getResourceByID","useContext","ResourceGeneratorContext","findResource","content","showCertificates","showCertificatesConfig","showSkipVerify","_a","authType","SubPanelComponent","AuthenticationOptions","VerificationModeOptions","container","Divider","optionLabelStyle","Controller","value","onChange","InputRecordEditor","index","newRecords","key","v","_b","_c","_d","_e","Alert"],"mappings":"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"}