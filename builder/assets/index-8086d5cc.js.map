{"version":3,"file":"index-8086d5cc.js","sources":["../../src/page/App/components/InspectPanel/PanelSetters/InputSetter/MeasureCheckInput/style.ts","../../src/page/App/components/InspectPanel/PanelSetters/InputSetter/MeasureCheckInput/index.tsx"],"sourcesContent":["import { css } from \"@emotion/react\"\n\nexport const setterContainerStyle = css`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 0;\n  width: 100%;\n`\n","import { FC, FocusEvent, useCallback } from \"react\"\nimport { Input } from \"@illa-design/react\"\nimport { PanelLabel } from \"@/page/App/components/InspectPanel/components/Label\"\nimport { MeasureCheckInputSetterProps } from \"./interface\"\nimport { setterContainerStyle } from \"./style\"\n\nconst valueWithMeasureRegex = /^\\d+(\\.\\d+)?(px|vh|vw|%|em|rem|cm|mm|in|pt|pc)$/\n\nconst MeasureCheckInput: FC<MeasureCheckInputSetterProps> = (props) => {\n  const {\n    handleUpdateMultiAttrDSL,\n    attrName,\n    value,\n    icon,\n    labelName,\n    labelSize = \"small\",\n    labelDesc,\n  } = props\n\n  const handleUpdateBorderWidth = useCallback(\n    (currentValue: string) => {\n      handleUpdateMultiAttrDSL?.({\n        [attrName]: currentValue,\n      })\n    },\n    [attrName, handleUpdateMultiAttrDSL],\n  )\n\n  const fixInputValueWhenBlur = useCallback(\n    (e: FocusEvent<HTMLInputElement>) => {\n      let currentValue = e.target.value.toLocaleLowerCase().replace(/\\s*/g, \"\")\n      if (currentValue && !valueWithMeasureRegex.test(currentValue)) {\n        const decimalArr = currentValue.match(/\\d+(\\.\\d+)?/g)\n        if (decimalArr) currentValue = decimalArr.join(\"\") + \"px\"\n      }\n      handleUpdateMultiAttrDSL?.({\n        [attrName]: currentValue,\n      })\n    },\n    [attrName, handleUpdateMultiAttrDSL],\n  )\n\n  return (\n    <div css={setterContainerStyle}>\n      <PanelLabel\n        labelName={labelName}\n        labelDesc={labelDesc}\n        labelSize={labelSize}\n      />\n      <Input\n        onChange={handleUpdateBorderWidth}\n        value={value}\n        prefix={icon}\n        w=\"170px\"\n        onBlur={fixInputValueWhenBlur}\n        colorScheme=\"techPurple\"\n      />\n    </div>\n  )\n}\n\nexport default MeasureCheckInput\n"],"names":["setterContainerStyle","css","valueWithMeasureRegex","MeasureCheckInput","props","handleUpdateMultiAttrDSL","attrName","value","icon","labelName","labelSize","labelDesc","handleUpdateBorderWidth","useCallback","currentValue","fixInputValueWhenBlur","e","decimalArr","jsxs","jsx","PanelLabel","Input"],"mappings":"uUAEO,MAAMA,EAAuBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECI9BC,EAAwB,kDAExBC,EAAuDC,GAAU,CAC/D,KAAA,CACJ,yBAAAC,EACA,SAAAC,EACA,MAAAC,EACA,KAAAC,EACA,UAAAC,EACA,UAAAC,EAAY,QACZ,UAAAC,CACE,EAAAP,EAEEQ,EAA0BC,EAAA,YAC7BC,GAAyB,CACGT,GAAA,MAAAA,EAAA,CACzB,CAACC,CAAQ,EAAGQ,CAAA,EAEhB,EACA,CAACR,EAAUD,CAAwB,CAAA,EAG/BU,EAAwBF,EAAA,YAC3BG,GAAoC,CAC/B,IAAAF,EAAeE,EAAE,OAAO,MAAM,oBAAoB,QAAQ,OAAQ,EAAE,EACxE,GAAIF,GAAgB,CAACZ,EAAsB,KAAKY,CAAY,EAAG,CACvD,MAAAG,EAAaH,EAAa,MAAM,cAAc,EAChDG,IAA2BH,EAAAG,EAAW,KAAK,EAAE,EAAI,KACvD,CAC2BZ,GAAA,MAAAA,EAAA,CACzB,CAACC,CAAQ,EAAGQ,CAAA,EAEhB,EACA,CAACR,EAAUD,CAAwB,CAAA,EAInC,OAAAa,EAAC,MAAI,CAAA,IAAKlB,EACR,SAAA,CAAAmB,EAACC,EAAA,CACC,UAAAX,EACA,UAAAE,EACA,UAAAD,CAAA,CACF,EACAS,EAACE,EAAA,CACC,SAAUT,EACV,MAAAL,EACA,OAAQC,EACR,EAAE,QACF,OAAQO,EACR,YAAY,YAAA,CACd,CACF,CAAA,CAAA,CAEJ"}