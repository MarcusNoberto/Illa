{"version":3,"file":"index-07675a36.js","sources":["../../../../packages/illa-public-component/ResourceGenerator/components/ConfigElements/GraphQLConfigElement/APIKeyAuthPanel/constants.ts","../../../../packages/illa-public-component/ResourceGenerator/components/ConfigElements/GraphQLConfigElement/APIKeyAuthPanel/index.tsx","../../../../packages/illa-public-component/ResourceGenerator/components/ConfigElements/GraphQLConfigElement/BasicAuthPanel/index.tsx","../../../../packages/illa-public-component/ResourceGenerator/components/ConfigElements/GraphQLConfigElement/BearerAuthPanel/index.tsx","../../../../packages/illa-public-component/ResourceGenerator/components/ConfigElements/GraphQLConfigElement/constants.ts","../../../../packages/illa-public-component/ResourceGenerator/components/ConfigElements/GraphQLConfigElement/index.tsx"],"sourcesContent":["import { APIKeyAddToType, APIKeyAddToValue } from \"@illa-public/public-types\"\n\nexport const APIKeyAddToSelect = [\n  {\n    label: APIKeyAddToType.HEADER,\n    value: APIKeyAddToValue.HEADER,\n  },\n  {\n    label: APIKeyAddToType.URLPARAMS,\n    value: APIKeyAddToValue.URLPARAMS,\n  },\n]\n","import { APIKeyAddToValue } from \"@illa-public/public-types\"\nimport { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { ControlledElement } from \"../../../ControlledElement\"\nimport { APIKeyAddToSelect } from \"./constants\"\nimport { APIKeyAuthPanelProps } from \"./interface\"\n\nexport const APIKeyAuthPanel: FC<APIKeyAuthPanelProps> = (props) => {\n  const { control, auth, watch } = props\n  const { t } = useTranslation()\n  const addToValue = watch(\"addTo\", APIKeyAddToValue.HEADER)\n\n  return (\n    <>\n      <ControlledElement\n        title={t(\"editor.action.resource.db.label.key\")}\n        isRequired\n        defaultValue={auth?.key ?? \"\"}\n        name=\"key\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n        controlledType={[\"input\"]}\n        control={control}\n      />\n      <ControlledElement\n        title={t(\"editor.action.resource.db.label.value\")}\n        isRequired\n        defaultValue={auth?.value ?? \"\"}\n        name=\"value\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n        controlledType={[\"password\"]}\n        control={control}\n      />\n      <ControlledElement\n        title={t(\"editor.action.resource.db.label.add_to\")}\n        isRequired\n        defaultValue={auth?.addTo ?? APIKeyAddToValue.HEADER}\n        name=\"addTo\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n        controlledType={[\"select\"]}\n        control={control}\n        options={APIKeyAddToSelect}\n      />\n      {addToValue === APIKeyAddToValue.HEADER && (\n        <ControlledElement\n          title={t(\"editor.action.resource.db.label.header_prefix\")}\n          defaultValue={auth?.headerPrefix ?? \"Bearer\"}\n          name=\"headerPrefix\"\n          controlledType={[\"input\"]}\n          control={control}\n        />\n      )}\n    </>\n  )\n}\n\nAPIKeyAuthPanel.displayName = \"APIKeyAuthPanel\"\n","import { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { validateNotEmpty } from \"../../../../utils\"\nimport { ControlledElement } from \"../../../ControlledElement\"\nimport { BasicAuthPanelProps } from \"./interface\"\n\nexport const BasicAuthPanel: FC<BasicAuthPanelProps> = (props) => {\n  const { control, auth } = props\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <ControlledElement\n        title={t(\"editor.action.resource.restapi.label.basic_auth_username\")}\n        defaultValue={auth?.username ?? \"\"}\n        name=\"username\"\n        controlledType=\"input\"\n        control={control}\n        isRequired\n        rules={[\n          {\n            validate: validateNotEmpty,\n          },\n        ]}\n      />\n      <ControlledElement\n        title={t(\"editor.action.resource.restapi.label.basic_auth_password\")}\n        defaultValue={auth?.password ?? \"\"}\n        name=\"password\"\n        controlledType=\"password\"\n        control={control}\n        isRequired\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      />\n    </>\n  )\n}\n\nBasicAuthPanel.displayName = \"BasicAuthPanel\"\n","import { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { validateNotEmpty } from \"../../../../utils\"\nimport { ControlledElement } from \"../../../ControlledElement\"\nimport { BearerAuthPanelProps } from \"./interface\"\n\nexport const BearerAuthPanel: FC<BearerAuthPanelProps> = (props) => {\n  const { control, auth } = props\n  const { t } = useTranslation()\n\n  return (\n    <ControlledElement\n      title={t(\"editor.action.resource.restapi.label.bearerToken\")}\n      defaultValue={auth?.bearerToken ?? \"\"}\n      name=\"bearerToken\"\n      controlledType=\"input\"\n      control={control}\n      isRequired\n      rules={[\n        {\n          validate: validateNotEmpty,\n        },\n      ]}\n    />\n  )\n}\n\nBearerAuthPanel.displayName = \"BearerAuthPanel\"\n","import { GraphQLAuthType, GraphQLAuthValue } from \"@illa-public/public-types\"\n\nexport const GraphQLAuthTypeSelect = [\n  {\n    label: GraphQLAuthType.NONE,\n    value: GraphQLAuthValue.NONE,\n  },\n  {\n    label: GraphQLAuthType.BASIC,\n    value: GraphQLAuthValue.BASIC,\n  },\n  {\n    label: GraphQLAuthType.BEARER,\n    value: GraphQLAuthValue.BEARER,\n  },\n  {\n    label: GraphQLAuthType.APIKEY,\n    value: GraphQLAuthValue.APIKEY,\n  },\n]\n","import {\n  ApiKeyAuth,\n  GraphQLAuthValue,\n  GraphQLBasicAuth,\n  GraphQLBearerAuth,\n  GraphQLResource,\n  Resource,\n} from \"@illa-public/public-types\"\nimport { FC, useContext } from \"react\"\nimport { Controller, useFormContext } from \"react-hook-form\"\nimport { useTranslation } from \"react-i18next\"\nimport { Divider, WarningCircleIcon } from \"@illa-design/react\"\nimport { ResourceGeneratorContext } from \"../../../provider\"\nimport { urlValidate, validateNotEmpty } from \"../../../utils\"\nimport { ControlledElement } from \"../../ControlledElement\"\nimport { InputRecordEditor } from \"../../InputRecordEditor\"\nimport { BaseConfigElementProps } from \"../interface\"\nimport {\n  container,\n  errorIconStyle,\n  errorMsgStyle,\n  optionLabelStyle,\n} from \"../style\"\nimport { APIKeyAuthPanel } from \"./APIKeyAuthPanel\"\nimport { BasicAuthPanel } from \"./BasicAuthPanel\"\nimport { BearerAuthPanel } from \"./BearerAuthPanel\"\nimport { GraphQLAuthTypeSelect } from \"./constants\"\n\nconst GraphQLConfigElement: FC<BaseConfigElementProps> = (props) => {\n  const { resourceID } = props\n\n  const { t } = useTranslation()\n  const { control, formState, watch } = useFormContext()\n  const { getResourceByID } = useContext(ResourceGeneratorContext)\n  const findResource = getResourceByID(resourceID) as Resource<GraphQLResource>\n\n  const InputRecord = [\n    {\n      name: \"urlParams\",\n      title: t(\"editor.action.resource.restapi.label.url_parameters\"),\n      defaultValue: findResource?.content.urlParams,\n    },\n    {\n      name: \"headers\",\n      defaultValue: findResource?.content.headers,\n      title: t(\"editor.action.resource.restapi.label.headers\"),\n    },\n    {\n      name: \"cookies\",\n      defaultValue: findResource?.content.cookies,\n      title: t(\"editor.action.resource.restapi.label.cookies\"),\n    },\n  ]\n\n  const authType = watch(\n    \"authentication\",\n    findResource?.content.authentication ?? GraphQLAuthValue.NONE,\n  )\n\n  return (\n    <>\n      <div css={container}>\n        <ControlledElement\n          controlledType=\"input\"\n          isRequired\n          title={t(\"editor.action.resource.db.label.name\")}\n          control={control}\n          defaultValue={findResource?.resourceName ?? \"\"}\n          rules={[\n            {\n              validate: validateNotEmpty,\n            },\n          ]}\n          placeholders={[t(\"editor.action.resource.db.placeholder.name\")]}\n          name=\"resourceName\"\n          tips={t(\"editor.action.resource.restapi.tip.name\")}\n        />\n        <Divider\n          direction=\"horizontal\"\n          ml=\"24px\"\n          mr=\"24px\"\n          mt=\"16px\"\n          mb=\"8px\"\n          w=\"unset\"\n        />\n        <div css={optionLabelStyle}>\n          {t(\"editor.action.resource.db.title.general_option\")}\n        </div>\n\n        <ControlledElement\n          title={t(\"editor.action.resource.restapi.label.base_url\")}\n          defaultValue={findResource?.content.baseUrl ?? \"\"}\n          isRequired\n          name={\"baseUrl\"}\n          controlledType={\"input\"}\n          control={control}\n          rules={[\n            {\n              required: t(\"editor.action.resource.error.invalid_url\"),\n              validate: urlValidate,\n            },\n          ]}\n          placeholders={[\n            t(\"editor.action.resource.restapi.placeholder.base_url\"),\n          ]}\n          tips={\n            formState.errors.baseUrl && (\n              <div css={errorMsgStyle}>\n                <WarningCircleIcon css={errorIconStyle} />\n                <>{formState.errors.baseUrl.message}</>\n              </div>\n            )\n          }\n        />\n        {InputRecord.map(({ name, title, defaultValue }) => (\n          <Controller\n            key={name}\n            control={control}\n            defaultValue={\n              defaultValue ?? [\n                {\n                  key: \"\",\n                  value: \"\",\n                },\n              ]\n            }\n            render={({ field: { value, onChange } }) => (\n              <InputRecordEditor\n                label={title}\n                records={value}\n                onAdd={() => {\n                  onChange([...value, { key: \"\", value: \"\" }])\n                }}\n                onDelete={(index) => {\n                  let newRecords = [...value]\n                  newRecords.splice(index, 1)\n                  if (newRecords.length === 0) {\n                    newRecords = [{ key: \"\", value: \"\" }]\n                  }\n                  onChange(newRecords)\n                }}\n                onChangeKey={(index, key, v) => {\n                  let newRecords = [...value]\n                  newRecords[index] = { key, value: v }\n                  onChange(newRecords)\n                }}\n                onChangeValue={(index, key, v) => {\n                  let newRecords = [...value]\n                  newRecords[index].value = v\n                  onChange(newRecords)\n                }}\n              />\n            )}\n            name={name}\n          />\n        ))}\n        <ControlledElement\n          title={t(\"editor.action.resource.restapi.label.authentication\")}\n          defaultValue={findResource?.content.authentication ?? \"none\"}\n          name=\"authentication\"\n          controlledType={[\"select\"]}\n          control={control}\n          options={GraphQLAuthTypeSelect}\n        />\n\n        {authType === GraphQLAuthValue.BASIC && (\n          <BasicAuthPanel\n            control={control}\n            auth={findResource?.content.authContent as GraphQLBasicAuth}\n          />\n        )}\n        {authType === GraphQLAuthValue.BEARER && (\n          <BearerAuthPanel\n            control={control}\n            auth={findResource?.content.authContent as GraphQLBearerAuth}\n          />\n        )}\n        {authType === GraphQLAuthValue.APIKEY && (\n          <APIKeyAuthPanel\n            watch={watch}\n            control={control}\n            auth={findResource?.content.authContent as ApiKeyAuth}\n          />\n        )}\n        <Divider\n          direction=\"horizontal\"\n          ml=\"24px\"\n          mr=\"24px\"\n          mt=\"16px\"\n          mb=\"8px\"\n          w=\"unset\"\n        />\n        <div css={optionLabelStyle}>\n          {t(\"editor.action.resource.db.title.graphql_introspection\")}\n        </div>\n        <ControlledElement\n          title={t(\"editor.action.resource.db.label.introspection\")}\n          contentLabel={t(\n            \"editor.action.resource.db.label.disable_introspection\",\n          )}\n          defaultValue={findResource?.content.disableIntrospection ?? false}\n          name=\"disableIntrospection\"\n          controlledType={[\"switch\"]}\n          control={control}\n          tips={t(\"editor.action.resource.db.tip.introspection\")}\n        />\n      </div>\n    </>\n  )\n}\n\nGraphQLConfigElement.displayName = \"GraphQLConfigElement\"\nexport default GraphQLConfigElement\n"],"names":["APIKeyAddToSelect","APIKeyAddToType","APIKeyAddToValue","APIKeyAuthPanel","props","control","auth","watch","t","useTranslation","addToValue","jsxs","Fragment","jsx","ControlledElement","BasicAuthPanel","validateNotEmpty","BearerAuthPanel","GraphQLAuthTypeSelect","GraphQLAuthType","GraphQLAuthValue","GraphQLConfigElement","resourceID","formState","useFormContext","getResourceByID","useContext","ResourceGeneratorContext","findResource","InputRecord","authType","container","Divider","optionLabelStyle","urlValidate","errorMsgStyle","WarningCircleIcon","errorIconStyle","name","title","defaultValue","Controller","value","onChange","InputRecordEditor","index","newRecords","key","v"],"mappings":"ieAEO,MAAMA,EAAoB,CAC/B,CACE,MAAOC,EAAgB,OACvB,MAAOC,EAAiB,MAC1B,EACA,CACE,MAAOD,EAAgB,UACvB,MAAOC,EAAiB,SAC1B,CACF,ECJaC,EAA6CC,GAAU,CAClE,KAAM,CAAE,QAAAC,EAAS,KAAAC,EAAM,MAAAC,CAAA,EAAUH,EAC3B,CAAE,EAAAI,GAAMC,IACRC,EAAaH,EAAM,QAASL,EAAiB,MAAM,EAEzD,OAEIS,EAAAC,EAAA,CAAA,SAAA,CAAAC,EAACC,EAAA,CACC,MAAON,EAAE,qCAAqC,EAC9C,WAAU,GACV,cAAcF,GAAA,YAAAA,EAAM,MAAO,GAC3B,KAAK,MACL,MAAO,CACL,CACE,SAAU,EACZ,CACF,EACA,eAAgB,CAAC,OAAO,EACxB,QAAAD,CAAA,CACF,EACAQ,EAACC,EAAA,CACC,MAAON,EAAE,uCAAuC,EAChD,WAAU,GACV,cAAcF,GAAA,YAAAA,EAAM,QAAS,GAC7B,KAAK,QACL,MAAO,CACL,CACE,SAAU,EACZ,CACF,EACA,eAAgB,CAAC,UAAU,EAC3B,QAAAD,CAAA,CACF,EACAQ,EAACC,EAAA,CACC,MAAON,EAAE,wCAAwC,EACjD,WAAU,GACV,cAAcF,GAAA,YAAAA,EAAM,QAASJ,EAAiB,OAC9C,KAAK,QACL,MAAO,CACL,CACE,SAAU,EACZ,CACF,EACA,eAAgB,CAAC,QAAQ,EACzB,QAAAG,EACA,QAASL,CAAA,CACX,EACCU,IAAeR,EAAiB,QAC/BW,EAACC,EAAA,CACC,MAAON,EAAE,+CAA+C,EACxD,cAAcF,GAAA,YAAAA,EAAM,eAAgB,SACpC,KAAK,eACL,eAAgB,CAAC,OAAO,EACxB,QAAAD,CAAA,CACF,CAEJ,CAAA,CAAA,CAEJ,EAEAF,EAAgB,YAAc,kBC7DjB,MAAAY,EAA2CX,GAAU,CAC1D,KAAA,CAAE,QAAAC,EAAS,KAAAC,CAAS,EAAAF,EACpB,CAAE,EAAAI,GAAMC,IAEd,OAEIE,EAAAC,EAAA,CAAA,SAAA,CAAAC,EAACC,EAAA,CACC,MAAON,EAAE,0DAA0D,EACnE,cAAcF,GAAA,YAAAA,EAAM,WAAY,GAChC,KAAK,WACL,eAAe,QACf,QAAAD,EACA,WAAU,GACV,MAAO,CACL,CACE,SAAUW,CACZ,CACF,CAAA,CACF,EACAH,EAACC,EAAA,CACC,MAAON,EAAE,0DAA0D,EACnE,cAAcF,GAAA,YAAAA,EAAM,WAAY,GAChC,KAAK,WACL,eAAe,WACf,QAAAD,EACA,WAAU,GACV,MAAO,CACL,CACE,SAAU,EACZ,CACF,CAAA,CACF,CACF,CAAA,CAAA,CAEJ,EAEAU,EAAe,YAAc,iBCpChB,MAAAE,EAA6Cb,GAAU,CAC5D,KAAA,CAAE,QAAAC,EAAS,KAAAC,CAAS,EAAAF,EACpB,CAAE,EAAAI,GAAMC,IAGZ,OAAAI,EAACC,EAAA,CACC,MAAON,EAAE,kDAAkD,EAC3D,cAAcF,GAAA,YAAAA,EAAM,cAAe,GACnC,KAAK,cACL,eAAe,QACf,QAAAD,EACA,WAAU,GACV,MAAO,CACL,CACE,SAAUW,CACZ,CACF,CAAA,CAAA,CAGN,EAEAC,EAAgB,YAAc,kBCzBvB,MAAMC,EAAwB,CACnC,CACE,MAAOC,EAAgB,KACvB,MAAOC,EAAiB,IAC1B,EACA,CACE,MAAOD,EAAgB,MACvB,MAAOC,EAAiB,KAC1B,EACA,CACE,MAAOD,EAAgB,OACvB,MAAOC,EAAiB,MAC1B,EACA,CACE,MAAOD,EAAgB,OACvB,MAAOC,EAAiB,MAC1B,CACF,ECSMC,EAAoDjB,GAAU,CAC5D,KAAA,CAAE,WAAAkB,CAAe,EAAAlB,EAEjB,CAAE,EAAAI,GAAMC,IACR,CAAE,QAAAJ,EAAS,UAAAkB,EAAW,MAAAhB,GAAUiB,EAAe,EAC/C,CAAE,gBAAAC,CAAA,EAAoBC,EAAA,WAAWC,CAAwB,EACzDC,EAAeH,EAAgBH,CAAU,EAEzCO,EAAc,CAClB,CACE,KAAM,YACN,MAAOrB,EAAE,qDAAqD,EAC9D,aAAcoB,GAAA,YAAAA,EAAc,QAAQ,SACtC,EACA,CACE,KAAM,UACN,aAAcA,GAAA,YAAAA,EAAc,QAAQ,QACpC,MAAOpB,EAAE,8CAA8C,CACzD,EACA,CACE,KAAM,UACN,aAAcoB,GAAA,YAAAA,EAAc,QAAQ,QACpC,MAAOpB,EAAE,8CAA8C,CACzD,CAAA,EAGIsB,EAAWvB,EACf,kBACAqB,GAAA,YAAAA,EAAc,QAAQ,iBAAkBR,EAAiB,IAAA,EAG3D,OAEIP,EAAAD,EAAA,CAAA,SAAAD,EAAC,MAAI,CAAA,IAAKoB,EACR,SAAA,CAAAlB,EAACC,EAAA,CACC,eAAe,QACf,WAAU,GACV,MAAON,EAAE,sCAAsC,EAC/C,QAAAH,EACA,cAAcuB,GAAA,YAAAA,EAAc,eAAgB,GAC5C,MAAO,CACL,CACE,SAAUZ,CACZ,CACF,EACA,aAAc,CAACR,EAAE,4CAA4C,CAAC,EAC9D,KAAK,eACL,KAAMA,EAAE,yCAAyC,CAAA,CACnD,EACAK,EAACmB,EAAA,CACC,UAAU,aACV,GAAG,OACH,GAAG,OACH,GAAG,OACH,GAAG,MACH,EAAE,OAAA,CACJ,IACC,MAAI,CAAA,IAAKC,EACP,SAAAzB,EAAE,gDAAgD,EACrD,EAEAK,EAACC,EAAA,CACC,MAAON,EAAE,+CAA+C,EACxD,cAAcoB,GAAA,YAAAA,EAAc,QAAQ,UAAW,GAC/C,WAAU,GACV,KAAM,UACN,eAAgB,QAChB,QAAAvB,EACA,MAAO,CACL,CACE,SAAUG,EAAE,0CAA0C,EACtD,SAAU0B,CACZ,CACF,EACA,aAAc,CACZ1B,EAAE,qDAAqD,CACzD,EACA,KACEe,EAAU,OAAO,SACdZ,EAAA,MAAA,CAAI,IAAKwB,EACR,SAAA,CAACtB,EAAAuB,EAAA,CAAkB,IAAKC,CAAgB,CAAA,EACrCxB,EAAAD,EAAA,CAAA,SAAAW,EAAU,OAAO,QAAQ,QAAQ,CAAA,EACtC,CAAA,CAGN,EACCM,EAAY,IAAI,CAAC,CAAE,KAAAS,EAAM,MAAAC,EAAO,aAAAC,KAC/B3B,EAAC4B,EAAA,CAEC,QAAApC,EACA,aACEmC,GAAgB,CACd,CACE,IAAK,GACL,MAAO,EACT,CACF,EAEF,OAAQ,CAAC,CAAE,MAAO,CAAE,MAAAE,EAAO,SAAAC,MACzB9B,EAAC+B,EAAA,CACC,MAAOL,EACP,QAASG,EACT,MAAO,IAAM,CACFC,EAAA,CAAC,GAAGD,EAAO,CAAE,IAAK,GAAI,MAAO,EAAI,CAAA,CAAC,CAC7C,EACA,SAAWG,GAAU,CACf,IAAAC,EAAa,CAAC,GAAGJ,CAAK,EACfI,EAAA,OAAOD,EAAO,CAAC,EACtBC,EAAW,SAAW,IACxBA,EAAa,CAAC,CAAE,IAAK,GAAI,MAAO,GAAI,GAEtCH,EAASG,CAAU,CACrB,EACA,YAAa,CAACD,EAAOE,EAAKC,IAAM,CAC1B,IAAAF,EAAa,CAAC,GAAGJ,CAAK,EAC1BI,EAAWD,CAAK,EAAI,CAAE,IAAAE,EAAK,MAAOC,CAAE,EACpCL,EAASG,CAAU,CACrB,EACA,cAAe,CAACD,EAAOE,EAAKC,IAAM,CAC5B,IAAAF,EAAa,CAAC,GAAGJ,CAAK,EACfI,EAAAD,CAAK,EAAE,MAAQG,EAC1BL,EAASG,CAAU,CACrB,CAAA,CACF,EAEF,KAAAR,CAAA,EArCKA,CAAA,CAuCR,EACDzB,EAACC,EAAA,CACC,MAAON,EAAE,qDAAqD,EAC9D,cAAcoB,GAAA,YAAAA,EAAc,QAAQ,iBAAkB,OACtD,KAAK,iBACL,eAAgB,CAAC,QAAQ,EACzB,QAAAvB,EACA,QAASa,CAAA,CACX,EAECY,IAAaV,EAAiB,OAC7BP,EAACE,EAAA,CACC,QAAAV,EACA,KAAMuB,GAAA,YAAAA,EAAc,QAAQ,WAAA,CAC9B,EAEDE,IAAaV,EAAiB,QAC7BP,EAACI,EAAA,CACC,QAAAZ,EACA,KAAMuB,GAAA,YAAAA,EAAc,QAAQ,WAAA,CAC9B,EAEDE,IAAaV,EAAiB,QAC7BP,EAACV,EAAA,CACC,MAAAI,EACA,QAAAF,EACA,KAAMuB,GAAA,YAAAA,EAAc,QAAQ,WAAA,CAC9B,EAEFf,EAACmB,EAAA,CACC,UAAU,aACV,GAAG,OACH,GAAG,OACH,GAAG,OACH,GAAG,MACH,EAAE,OAAA,CACJ,IACC,MAAI,CAAA,IAAKC,EACP,SAAAzB,EAAE,uDAAuD,EAC5D,EACAK,EAACC,EAAA,CACC,MAAON,EAAE,+CAA+C,EACxD,aAAcA,EACZ,uDACF,EACA,cAAcoB,GAAA,YAAAA,EAAc,QAAQ,uBAAwB,GAC5D,KAAK,uBACL,eAAgB,CAAC,QAAQ,EACzB,QAAAvB,EACA,KAAMG,EAAE,6CAA6C,CAAA,CACvD,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,EAEAa,EAAqB,YAAc"}