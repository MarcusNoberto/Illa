{"version":3,"file":"index-ccfa325c.js","sources":["../../src/page/App/components/Actions/ActionPanel/MicrosoftSqlPanel/MSSQLGUIMode/index.tsx","../../src/page/App/components/Actions/ActionPanel/MicrosoftSqlPanel/MSSQLSqlMode/index.tsx","../../src/page/App/components/Actions/ActionPanel/MicrosoftSqlPanel/style.ts","../../src/page/App/components/Actions/ActionPanel/MicrosoftSqlPanel/index.tsx"],"sourcesContent":["import { MicrosoftSqlActionGUIMode } from \"@illa-public/public-types\"\nimport { FC, useCallback, useEffect, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { createMessage } from \"@illa-design/react\"\nimport { MSSQLModeProps } from \"@/page/App/components/Actions/ActionPanel/MicrosoftSqlPanel/interface\"\nimport { SingleTypeComponent } from \"@/page/App/components/Actions/ActionPanel/SingleTypeComponent\"\nimport { InputEditor } from \"@/page/App/components/Actions/InputEditor\"\nimport { fetchResourceMeta } from \"@/services/resource\"\nimport { VALIDATION_TYPES } from \"@/utils/validationFactory\"\n\nexport const MSSQLGUIMode: FC<MSSQLModeProps> = (props) => {\n  const { modeContent, onChange, resourceID } = props\n  const message = createMessage()\n  const newModeContent = modeContent as MicrosoftSqlActionGUIMode\n  const { t } = useTranslation()\n  const [collectionSelect, setCollectionSelect] = useState<string[]>([])\n  const [loading, setLoading] = useState<boolean>(false)\n  const [error, setError] = useState<boolean>(false)\n\n  const handleRequestError = useCallback(() => {\n    setError(true)\n    setLoading(false)\n    message.error({\n      type: \"error\",\n      content: t(\"editor.action.message.mssql.table_error\"),\n    })\n  }, [message, t])\n\n  useEffect(() => {\n    if (!resourceID) {\n      return\n    }\n    setLoading(true)\n    fetchResourceMeta(resourceID)\n      .then(\n        ({ data }) => {\n          const tables = Object.keys(data.Schema ?? {}).map((key) => key)\n          setCollectionSelect(tables)\n          setLoading(false)\n          setError(false)\n        },\n        () => {\n          handleRequestError()\n        },\n      )\n      .finally(() => {\n        setLoading(false)\n      })\n  }, [handleRequestError, resourceID])\n\n  return (\n    <>\n      <SingleTypeComponent\n        componentType=\"select\"\n        placeholder={t(\"editor.action.panel.mssql.placeholder.table\")}\n        onSelectedValueChange={(value) =>\n          onChange((value || \"\") as string, \"table\")\n        }\n        options={collectionSelect}\n        value={newModeContent.table}\n        showSearch={true}\n        title={t(\"editor.action.panel.mssql.table\")}\n        loading={loading}\n        error={error}\n      />\n      <InputEditor\n        style={{ height: \"88px\" }}\n        title={t(\"editor.action.panel.mssql.insert_record\")}\n        placeholder={t(\"editor.action.panel.mssql.placeholder.insert_record\")}\n        lineNumbers={true}\n        expectedType={VALIDATION_TYPES.ARRAY}\n        value={newModeContent.records}\n        onChange={(value) => onChange(value, \"records\")}\n      />\n    </>\n  )\n}\nMSSQLGUIMode.displayName = \"MSSQLGUIMode\"\n","import { MicrosoftSqlActionSqlMode } from \"@illa-public/public-types\"\nimport { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { MSSQLModeProps } from \"@/page/App/components/Actions/ActionPanel/MicrosoftSqlPanel/interface\"\nimport { InputEditor } from \"@/page/App/components/Actions/InputEditor\"\n\nexport const MSSQLSqlMode: FC<MSSQLModeProps> = (props) => {\n  const { modeContent, showSafeModeTips, onChange } = props\n  const { t } = useTranslation()\n\n  return (\n    <InputEditor\n      title={t(\"editor.action.panel.mssql.query\")}\n      style={{ height: \"88px\" }}\n      placeholder={t(\"editor.action.panel.mssql.placeholder.query\")}\n      lineNumbers={true}\n      value={(modeContent as MicrosoftSqlActionSqlMode).sql}\n      onChange={(value) => onChange(value, \"sql\")}\n      showSafeModeTips={showSafeModeTips}\n    />\n  )\n}\nMSSQLSqlMode.displayName = \"MSSQLSqlMode\"\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const labelContainerStyle = css`\n  width: 160px;\n  text-align: right;\n`\n\nexport const labelStyle = css`\n  color: ${getColor(\"grayBlue\", \"02\")};\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 22px;\n\n  position: relative;\n`\n\nexport const labelTipsStyle = css`\n  position: absolute;\n  bottom: -2px;\n  left: 0;\n  width: 100%;\n  border-bottom: 1px dashed ${getColor(\"grayBlue\", \"06\")};\n`\n\nexport const modeContainerStyle = css`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px 16px;\n`\n","import {\n  MicrosoftSqlActionGUIModeInitial,\n  MicrosoftSqlActionSqlModeInitial,\n} from \"@illa-public/public-configs\"\nimport {\n  ActionItem,\n  MicrosoftSqlAction,\n  MicrosoftSqlActionType,\n} from \"@illa-public/public-types\"\nimport { FC, useCallback } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { Trigger } from \"@illa-design/react\"\nimport { ILLAMarkdown } from \"@/components/ILLAMarkdown\"\nimport { MSSQLGUIMode } from \"@/page/App/components/Actions/ActionPanel/MicrosoftSqlPanel/MSSQLGUIMode\"\nimport { MSSQLSqlMode } from \"@/page/App/components/Actions/ActionPanel/MicrosoftSqlPanel/MSSQLSqlMode\"\nimport { SingleTypeComponent } from \"@/page/App/components/Actions/ActionPanel/SingleTypeComponent\"\nimport { TransformerComponent } from \"@/page/App/components/Actions/ActionPanel/TransformerComponent\"\nimport { actionItemContainer } from \"@/page/App/components/Actions/ActionPanel/style\"\nimport {\n  getCachedAction,\n  getSelectedAction,\n} from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { SQLModeSelector } from \"../pulicComponent/SQLModeSelector\"\nimport {\n  labelContainerStyle,\n  labelStyle,\n  labelTipsStyle,\n  modeContainerStyle,\n} from \"./style\"\n\nconst ConfigTypeOptions = [\n  {\n    value: \"sql\",\n    label: \"SQL\",\n  },\n  {\n    value: \"gui\",\n    label: \"Bulk insert\",\n  },\n]\n\ntype MSSQLActionType = MicrosoftSqlAction<MicrosoftSqlActionType>\n\nconst MicrosoftSqlPanel: FC = () => {\n  const { t } = useTranslation()\n  const cachedAction = useSelector(\n    getCachedAction,\n  ) as ActionItem<MSSQLActionType>\n  const selectedAction = useSelector(\n    getSelectedAction,\n  ) as ActionItem<MSSQLActionType>\n  const content = cachedAction.content\n  const selectedContent = selectedAction.content\n  const dispatch = useDispatch()\n\n  const sqlModeInitial =\n    content.mode === \"sql\" || content.mode === \"sql-safe\"\n      ? content.query\n      : MicrosoftSqlActionSqlModeInitial\n  const guiModeInitial =\n    content.mode === \"gui\" ? content.query : MicrosoftSqlActionGUIModeInitial\n\n  const handleValueChange = useCallback(\n    (value: string) => {\n      const isSameModeWithCached = value === selectedContent.mode\n      const { query } = selectedContent\n      const initialMode =\n        value === \"sql\"\n          ? MicrosoftSqlActionSqlModeInitial\n          : MicrosoftSqlActionGUIModeInitial\n\n      dispatch(\n        configActions.updateCachedAction({\n          ...cachedAction,\n          content: {\n            mode: value,\n            query: {\n              ...(isSameModeWithCached ? query : initialMode),\n            },\n          } as MSSQLActionType,\n        }),\n      )\n    },\n    [cachedAction, selectedContent, dispatch],\n  )\n  const handleQueryChange = useCallback(\n    (value: string, name: string) => {\n      if (!value) {\n        return\n      }\n      dispatch(\n        configActions.updateCachedAction({\n          ...cachedAction,\n          content: {\n            ...content,\n            query: {\n              ...content.query,\n              [name]: value,\n            },\n          } as MSSQLActionType,\n        }),\n      )\n    },\n    [cachedAction, content, dispatch],\n  )\n\n  return (\n    <div css={actionItemContainer}>\n      <SingleTypeComponent\n        componentType=\"radio-group\"\n        type=\"button\"\n        title={t(\"editor.action.panel.mssql.config_type\")}\n        forceEqualWidth={true}\n        onChange={handleValueChange}\n        value={\n          content.mode === \"sql\" || content.mode === \"sql-safe\" ? \"sql\" : \"gui\"\n        }\n        radioOptions={ConfigTypeOptions}\n      />\n      {content.mode === \"sql\" || content.mode === \"sql-safe\" ? (\n        <MSSQLSqlMode\n          modeContent={sqlModeInitial}\n          onChange={handleQueryChange}\n          showSafeModeTips={content.mode === \"sql-safe\"}\n        />\n      ) : (\n        <MSSQLGUIMode\n          modeContent={guiModeInitial}\n          onChange={handleQueryChange}\n          resourceID={cachedAction.resourceID}\n        />\n      )}\n      {(content.mode === \"sql\" || content.mode === \"sql-safe\") && (\n        <div css={modeContainerStyle}>\n          <div css={labelContainerStyle}>\n            <Trigger\n              content={\n                <ILLAMarkdown\n                  textString={t(\n                    \"editor.action.panel.label.tips.general.safe_mode\",\n                  )}\n                />\n              }\n              trigger=\"hover\"\n              position=\"left\"\n              maxW=\"240px\"\n            >\n              <span css={labelStyle}>\n                {t(\"editor.action.panel.label.general.safe_mode\")}\n                <span css={labelTipsStyle} />\n              </span>\n            </Trigger>\n          </div>\n          <SQLModeSelector />\n        </div>\n      )}\n      <TransformerComponent />\n    </div>\n  )\n}\nMicrosoftSqlPanel.displayName = \"MicrosoftSqlPanel\"\nexport default MicrosoftSqlPanel\n"],"names":["MSSQLGUIMode","props","modeContent","onChange","resourceID","message","createMessage","newModeContent","t","useTranslation","collectionSelect","setCollectionSelect","useState","loading","setLoading","error","setError","handleRequestError","useCallback","useEffect","fetchResourceMeta","data","tables","key","jsxs","Fragment","jsx","SingleTypeComponent","value","InputEditor","VALIDATION_TYPES","MSSQLSqlMode","showSafeModeTips","labelContainerStyle","css","labelStyle","getColor","labelTipsStyle","modeContainerStyle","ConfigTypeOptions","MicrosoftSqlPanel","cachedAction","useSelector","getCachedAction","selectedAction","getSelectedAction","content","selectedContent","dispatch","useDispatch","sqlModeInitial","MicrosoftSqlActionSqlModeInitial","guiModeInitial","MicrosoftSqlActionGUIModeInitial","handleValueChange","isSameModeWithCached","query","initialMode","configActions","handleQueryChange","name","actionItemContainer","Trigger","ILLAMarkdown","SQLModeSelector","TransformerComponent"],"mappings":"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"}