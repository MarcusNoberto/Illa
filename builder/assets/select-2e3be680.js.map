{"version":3,"file":"select-2e3be680.js","sources":["../../src/widgetLibrary/SelectWidget/select.tsx"],"sourcesContent":["import { FC, useCallback, useEffect, useMemo } from \"react\"\nimport { Select } from \"@illa-design/react\"\nimport { AutoHeightContainer } from \"@/widgetLibrary/PublicSector/AutoHeightContainer\"\nimport { InvalidMessage } from \"@/widgetLibrary/PublicSector/InvalidMessage/\"\nimport { handleValidateCheck } from \"@/widgetLibrary/PublicSector/InvalidMessage/utils\"\nimport { Label } from \"@/widgetLibrary/PublicSector/Label\"\nimport { TooltipWrapper } from \"@/widgetLibrary/PublicSector/TooltipWrapper\"\nimport {\n  applyLabelAndComponentWrapperStyle,\n  applyValidateMessageWrapperStyle,\n} from \"@/widgetLibrary/PublicSector/TransformWidgetWrapper/style\"\nimport { formatSelectOptions } from \"@/widgetLibrary/PublicSector/utils/formatSelectOptions\"\nimport { SelectWidgetProps, WrappedSelectProps } from \"./interface\"\n\nexport const WrappedSelect: FC<WrappedSelectProps> = (props) => {\n  const {\n    showClear,\n    value,\n    options,\n    placeholder,\n    disabled,\n    loading,\n    readOnly,\n    colorScheme,\n    handleUpdateMultiExecutionResult,\n    handleOnChange,\n    getValidateMessage,\n    displayName,\n  } = props\n\n  const onChangeSelectValue = useCallback(\n    (value: unknown) => {\n      new Promise((resolve) => {\n        const message = getValidateMessage(value)\n        handleUpdateMultiExecutionResult([\n          {\n            displayName,\n            value: {\n              value: value || \"\",\n              validateMessage: message,\n            },\n          },\n        ])\n        resolve(true)\n      }).then(() => {\n        handleOnChange?.()\n      })\n    },\n    [\n      displayName,\n      getValidateMessage,\n      handleOnChange,\n      handleUpdateMultiExecutionResult,\n    ],\n  )\n\n  return (\n    <Select\n      allowClear={showClear}\n      options={options}\n      value={typeof value === \"object\" ? JSON.stringify(value) : value}\n      placeholder={placeholder}\n      disabled={disabled}\n      loading={loading}\n      readOnly={readOnly}\n      showSearch\n      colorScheme={colorScheme}\n      onChange={onChangeSelectValue}\n    />\n  )\n}\n\nWrappedSelect.displayName = \"WrappedSelect\"\n\nexport const SelectWidget: FC<SelectWidgetProps> = (props) => {\n  const {\n    value,\n    optionConfigureMode,\n    mappedOption,\n    manualOptions,\n    handleUpdateDsl,\n    updateComponentRuntimeProps,\n    deleteComponentRuntimeProps,\n    labelPosition,\n    labelFull,\n    label,\n    labelAlign,\n    labelWidth = 33,\n    labelCaption,\n    labelWidthUnit,\n    required,\n    labelHidden,\n    tooltipText,\n    customRule,\n    hideValidationMessage,\n    validateMessage,\n    updateComponentHeight,\n    triggerEventHandler,\n  } = props\n\n  const finalOptions = useMemo(() => {\n    return formatSelectOptions(optionConfigureMode, manualOptions, mappedOption)\n  }, [optionConfigureMode, manualOptions, mappedOption])\n\n  const getValidateMessage = useCallback(\n    (value: unknown) => {\n      if (!hideValidationMessage) {\n        const message = handleValidateCheck({\n          value,\n          required,\n          customRule,\n        })\n        const showMessage = message && message.length > 0\n        return showMessage ? message : \"\"\n      }\n      return \"\"\n    },\n    [customRule, hideValidationMessage, required],\n  )\n\n  const handleValidate = useCallback(\n    (value: unknown) => {\n      const message = getValidateMessage(value)\n      handleUpdateDsl({\n        validateMessage: message,\n      })\n      return message\n    },\n    [getValidateMessage, handleUpdateDsl],\n  )\n\n  useEffect(() => {\n    updateComponentRuntimeProps({\n      setValue: (value: any) => {\n        handleUpdateDsl({ value })\n      },\n      clearValue: () => {\n        handleUpdateDsl({ value: undefined })\n      },\n      validate: () => {\n        return handleValidate(value)\n      },\n      clearValidation: () => {},\n    })\n    return () => {\n      deleteComponentRuntimeProps()\n    }\n  }, [\n    updateComponentRuntimeProps,\n    handleUpdateDsl,\n    deleteComponentRuntimeProps,\n    handleValidate,\n    value,\n  ])\n\n  const handleOnChange = useCallback(() => {\n    triggerEventHandler(\"change\")\n  }, [triggerEventHandler])\n\n  const handleOnFocus = useCallback(() => {\n    triggerEventHandler(\"focus\")\n  }, [triggerEventHandler])\n\n  const handleOnBlur = useCallback(() => {\n    triggerEventHandler(\"blur\")\n  }, [triggerEventHandler])\n\n  return (\n    <AutoHeightContainer updateComponentHeight={updateComponentHeight}>\n      <TooltipWrapper tooltipText={tooltipText} tooltipDisabled={!tooltipText}>\n        <div css={applyLabelAndComponentWrapperStyle(labelPosition)}>\n          <Label\n            labelFull={labelFull}\n            label={label}\n            labelAlign={labelAlign}\n            labelWidth={labelWidth}\n            labelCaption={labelCaption}\n            labelWidthUnit={labelWidthUnit}\n            labelPosition={labelPosition}\n            required={required}\n            labelHidden={labelHidden}\n            hasTooltip={!!tooltipText}\n          />\n          <WrappedSelect\n            {...props}\n            options={finalOptions}\n            getValidateMessage={getValidateMessage}\n            handleOnChange={handleOnChange}\n            handleOnBlur={handleOnBlur}\n            handleOnFocus={handleOnFocus}\n          />\n        </div>\n      </TooltipWrapper>\n      {!hideValidationMessage && (\n        <div\n          css={applyValidateMessageWrapperStyle(\n            labelWidth,\n            labelPosition,\n            labelHidden || !label,\n          )}\n        >\n          <InvalidMessage validateMessage={validateMessage} />\n        </div>\n      )}\n    </AutoHeightContainer>\n  )\n}\n\nSelectWidget.displayName = \"SelectWidget\"\nexport default SelectWidget\n"],"names":["WrappedSelect","props","showClear","value","options","placeholder","disabled","loading","readOnly","colorScheme","handleUpdateMultiExecutionResult","handleOnChange","getValidateMessage","displayName","onChangeSelectValue","useCallback","resolve","message","jsx","Select","SelectWidget","optionConfigureMode","mappedOption","manualOptions","handleUpdateDsl","updateComponentRuntimeProps","deleteComponentRuntimeProps","labelPosition","labelFull","label","labelAlign","labelWidth","labelCaption","labelWidthUnit","required","labelHidden","tooltipText","customRule","hideValidationMessage","validateMessage","updateComponentHeight","triggerEventHandler","finalOptions","useMemo","formatSelectOptions","handleValidateCheck","handleValidate","useEffect","handleOnFocus","handleOnBlur","jsxs","AutoHeightContainer","TooltipWrapper","applyLabelAndComponentWrapperStyle","Label","applyValidateMessageWrapperStyle","InvalidMessage"],"mappings":"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"}