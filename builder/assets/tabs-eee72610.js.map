{"version":3,"file":"tabs-eee72610.js","sources":["../../src/widgetLibrary/TabsWidget/style.tsx","../../src/widgetLibrary/TabsWidget/tabs.tsx"],"sourcesContent":["import { SerializedStyles, css } from \"@emotion/react\"\nimport { HorizontalAlign } from \"@/widgetLibrary/TextWidget/interface\"\n\nexport function applyAlignStyle(\n  horizontalAlign?: HorizontalAlign,\n): SerializedStyles {\n  return css`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: ${horizontalAlign};\n  `\n}\n\nexport const fullWidthAndFullHeightStyle = css`\n  width: 100%;\n  height: 100%;\n`\n","import { get } from \"lodash-es\"\nimport { FC, useCallback, useEffect, useMemo } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { TabPane, Tabs } from \"@illa-design/react\"\nimport { getComponentMap } from \"@/redux/currentApp/components/componentsSelector\"\nimport { AutoHeightContainer } from \"@/widgetLibrary/PublicSector/AutoHeightContainer\"\nimport { TooltipWrapper } from \"@/widgetLibrary/PublicSector/TooltipWrapper\"\nimport { TabsWidgetProps, WrappedTabsProps } from \"./interface\"\nimport { fullWidthAndFullHeightStyle } from \"./style\"\n\nexport const WrappedTabs: FC<WrappedTabsProps> = (props) => {\n  const {\n    align,\n    activeKey,\n    disabled,\n    tabList = [],\n    colorScheme,\n    tabPosition,\n    handleOnChange,\n    handleUpdateExecution,\n  } = props\n\n  return (\n    <Tabs\n      w={\"100%\"}\n      align={align}\n      colorScheme={colorScheme}\n      tabPosition={tabPosition}\n      activeKey={activeKey}\n      onChange={(value) => {\n        new Promise((resolve) => {\n          const currentIndex = tabList?.findIndex((view) => view.key === value)\n          handleUpdateExecution?.({\n            currentKey: value,\n            currentIndex,\n          })\n          resolve(true)\n        }).then(() => {\n          handleOnChange?.()\n        })\n      }}\n    >\n      {Array.isArray(tabList) &&\n        tabList?.map((item) => {\n          if (item.hidden) return null\n          return (\n            <TabPane\n              key={item.key}\n              title={item.label}\n              disabled={disabled || item.disabled}\n            />\n          )\n        })}\n    </Tabs>\n  )\n}\n\nWrappedTabs.displayName = \"WrappedTabs\"\n\nexport const TabsWidget: FC<TabsWidgetProps> = (props) => {\n  const {\n    value,\n    align,\n    disabled,\n    navigateContainer,\n    currentKey,\n    tabList = [],\n    viewList,\n    displayName,\n    linkWidgetDisplayName,\n    handleUpdateDsl,\n    updateComponentRuntimeProps,\n    deleteComponentRuntimeProps,\n    tooltipText,\n    colorScheme,\n    tabPosition,\n    triggerEventHandler,\n    updateComponentHeight,\n    handleUpdateMultiExecutionResult,\n  } = props\n\n  const components = useSelector(getComponentMap)\n\n  useEffect(() => {\n    updateComponentRuntimeProps({\n      setValue: (value: string) => {\n        handleUpdateDsl({ value })\n      },\n      clearValue: () => {\n        handleUpdateDsl({ value: undefined })\n      },\n    })\n\n    return () => {\n      deleteComponentRuntimeProps()\n    }\n  }, [\n    displayName,\n    value,\n    updateComponentRuntimeProps,\n    handleUpdateDsl,\n    deleteComponentRuntimeProps,\n  ])\n\n  const list = useMemo(() => {\n    if (navigateContainer) return viewList\n    return tabList\n  }, [navigateContainer, tabList, viewList])\n\n  const handleUpdateExecution = useCallback(\n    (updateSliceItem: Record<string, any>) => {\n      if (navigateContainer && linkWidgetDisplayName) {\n        handleUpdateMultiExecutionResult([\n          {\n            displayName: linkWidgetDisplayName,\n            value: updateSliceItem,\n          },\n        ])\n        const targetLinkedDisplayNames = get(\n          components,\n          `${linkWidgetDisplayName}.props.linkWidgetDisplayName`,\n          [],\n        )\n        if (Array.isArray(targetLinkedDisplayNames)) {\n          const curUpdateSliceItem = targetLinkedDisplayNames\n            .filter((name) => name !== displayName)\n            .map((name) => ({\n              displayName: name,\n              value: updateSliceItem,\n            }))\n          handleUpdateMultiExecutionResult(curUpdateSliceItem)\n        }\n        targetLinkedDisplayNames &&\n          Array.isArray(targetLinkedDisplayNames) &&\n          targetLinkedDisplayNames.forEach((targetLinkedDisplayName) => {\n            targetLinkedDisplayName !== displayName &&\n              handleUpdateMultiExecutionResult([\n                {\n                  displayName: targetLinkedDisplayName,\n                  value: updateSliceItem,\n                },\n              ])\n          })\n      }\n\n      handleUpdateMultiExecutionResult([\n        {\n          displayName,\n          value: updateSliceItem,\n        },\n      ])\n    },\n    [\n      components,\n      displayName,\n      handleUpdateMultiExecutionResult,\n      linkWidgetDisplayName,\n      navigateContainer,\n    ],\n  )\n\n  const handleOnChange = useCallback(() => {\n    triggerEventHandler(\"change\")\n  }, [triggerEventHandler])\n\n  return (\n    <AutoHeightContainer updateComponentHeight={updateComponentHeight}>\n      <TooltipWrapper tooltipText={tooltipText} tooltipDisabled={!tooltipText}>\n        <div css={fullWidthAndFullHeightStyle}>\n          <WrappedTabs\n            {...props}\n            tabList={list}\n            value={value}\n            align={align}\n            activeKey={currentKey}\n            colorScheme={colorScheme}\n            tabPosition={tabPosition}\n            disabled={disabled}\n            linkWidgetDisplayName={linkWidgetDisplayName}\n            handleUpdateExecution={handleUpdateExecution}\n            handleOnChange={handleOnChange}\n          />\n        </div>\n      </TooltipWrapper>\n    </AutoHeightContainer>\n  )\n}\n\nTabsWidget.displayName = \"TabsWidget\"\nexport default TabsWidget\n"],"names":["fullWidthAndFullHeightStyle","css","WrappedTabs","props","align","activeKey","disabled","tabList","colorScheme","tabPosition","handleOnChange","handleUpdateExecution","jsx","Tabs","value","resolve","currentIndex","view","item","TabPane","TabsWidget","navigateContainer","currentKey","viewList","displayName","linkWidgetDisplayName","handleUpdateDsl","updateComponentRuntimeProps","deleteComponentRuntimeProps","tooltipText","triggerEventHandler","updateComponentHeight","handleUpdateMultiExecutionResult","components","useSelector","getComponentMap","useEffect","list","useMemo","useCallback","updateSliceItem","targetLinkedDisplayNames","get","curUpdateSliceItem","name","targetLinkedDisplayName","AutoHeightContainer","TooltipWrapper"],"mappings":"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"}