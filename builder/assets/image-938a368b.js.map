{"version":3,"file":"image-938a368b.js","sources":["../../src/widgetLibrary/ImageWidget/style.ts","../../src/widgetLibrary/ImageWidget/image.tsx"],"sourcesContent":["import { css } from \"@emotion/react\"\nimport { HorizontalAlign } from \"./interface\"\n\nexport const imageWrapperContainerStyle = (width: string, height: string) => {\n  return css`\n    height: ${height};\n    width: ${width};\n  `\n}\nexport const ImageWrapperStyle = (horizontalAlign?: HorizontalAlign) => {\n  let align = \"center\"\n  if (horizontalAlign === \"start\") {\n    align = \"flex-start\"\n  } else if (horizontalAlign === \"end\") {\n    align = \"flex-end\"\n  }\n  return css`\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    display: flex;\n    align-items: center;\n    justify-content: ${align};\n  `\n}\n","import {\n  FC,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\"\nimport useMeasure from \"react-use-measure\"\nimport { Image } from \"@illa-design/react\"\nimport { MediaSourceLoadContext } from \"@/utils/mediaSourceLoad\"\nimport { isValidUrlScheme } from \"@/utils/typeHelper\"\nimport {\n  ImageWrapperStyle,\n  imageWrapperContainerStyle,\n} from \"@/widgetLibrary/ImageWidget/style\"\nimport { AutoHeightContainer } from \"@/widgetLibrary/PublicSector/AutoHeightContainer\"\nimport { TooltipWrapper } from \"@/widgetLibrary/PublicSector/TooltipWrapper\"\nimport { DynamicHeight, ImageWidgetProps, WrappedImageProps } from \"./interface\"\n\nconst getHeight = (\n  dynamicHeight: DynamicHeight,\n  aspectRatio: number,\n  width: number,\n) => {\n  if (dynamicHeight === \"auto\") {\n    if (aspectRatio && aspectRatio > 0) {\n      return `${width * aspectRatio}px`\n    } else {\n      return `${width}px`\n    }\n  } else {\n    return dynamicHeight === \"fixed\" ? \"100%\" : \"auto\"\n  }\n}\n\nexport const WrappedImage: FC<WrappedImageProps> = (props) => {\n  const {\n    imageSrc,\n    altText,\n    imageRadius,\n    objectFit,\n    aspectRatio = 1,\n    dynamicHeight,\n    handleOnClick,\n    sourceLoadErrorHandle,\n  } = props\n\n  const [imageRef, imageBouds] = useMeasure()\n  const [error, setError] = useState(false)\n\n  const width =\n    dynamicHeight === \"auto\" || objectFit === \"cover\" || !imageSrc || error\n      ? \"100%\"\n      : \"auto\"\n\n  const height = getHeight(dynamicHeight, aspectRatio, imageBouds.width)\n\n  const finalObjectFit = dynamicHeight === \"auto\" ? \"cover\" : objectFit\n\n  return (\n    <Image\n      ref={imageRef}\n      src={imageSrc}\n      radius={imageRadius}\n      objectFit={finalObjectFit}\n      alt={altText}\n      width=\"100%\"\n      height=\"100%\"\n      css={imageWrapperContainerStyle(width, height)}\n      draggable={false}\n      onClick={handleOnClick}\n      onLoad={() => {\n        setError(false)\n      }}\n      onError={() => {\n        setError(true)\n        sourceLoadErrorHandle?.(imageSrc, \"image\")\n      }}\n    />\n  )\n}\n\nWrappedImage.displayName = \"WrappedImage\"\n\nexport const ImageWidget: FC<ImageWidgetProps> = (props) => {\n  const {\n    imageSrc,\n    imageRadius,\n    objectFit,\n    horizontalAlign,\n    dynamicHeight,\n    handleUpdateDsl,\n    updateComponentRuntimeProps,\n    deleteComponentRuntimeProps,\n    tooltipText,\n    triggerEventHandler,\n    updateComponentHeight,\n  } = props\n\n  const { sourceLoadErrorHandler } = useContext(MediaSourceLoadContext)\n\n  useEffect(() => {\n    updateComponentRuntimeProps({\n      setImageUrl: (url: string) => {\n        handleUpdateDsl({ imageSrc: url })\n      },\n    })\n    return () => {\n      deleteComponentRuntimeProps()\n    }\n  }, [\n    deleteComponentRuntimeProps,\n    handleUpdateDsl,\n    updateComponentRuntimeProps,\n  ])\n\n  const finalSrc = useMemo(() => {\n    let finalURL = imageSrc\n    if (finalURL && !isValidUrlScheme(finalURL)) {\n      if (!finalURL.startsWith(\"data:\")) {\n        finalURL = `https://${finalURL}`\n      }\n    }\n    return finalURL\n  }, [imageSrc])\n\n  const finalRadius = useMemo(() => {\n    const reg = /^\\d+$/\n    const pattern = new RegExp(reg)\n    if (imageRadius && pattern.test(imageRadius)) {\n      return imageRadius + \"px\"\n    }\n    return imageRadius\n  }, [imageRadius])\n\n  const handleOnClick = useCallback(() => {\n    triggerEventHandler(\"click\")\n  }, [triggerEventHandler])\n\n  const enableAutoHeight = useMemo(() => {\n    switch (dynamicHeight) {\n      case \"auto\":\n        return true\n      case \"fixed\":\n      default:\n        return false\n    }\n  }, [dynamicHeight])\n\n  return (\n    <AutoHeightContainer\n      updateComponentHeight={updateComponentHeight}\n      enable={enableAutoHeight}\n    >\n      <TooltipWrapper tooltipText={tooltipText} tooltipDisabled={!tooltipText}>\n        <div css={ImageWrapperStyle(horizontalAlign)}>\n          <WrappedImage\n            {...props}\n            imageSrc={finalSrc}\n            imageRadius={finalRadius}\n            objectFit={objectFit}\n            dynamicHeight={dynamicHeight}\n            handleOnClick={handleOnClick}\n            sourceLoadErrorHandle={sourceLoadErrorHandler}\n          />\n        </div>\n      </TooltipWrapper>\n    </AutoHeightContainer>\n  )\n}\nImageWidget.displayName = \"ImageWidget\"\nexport default ImageWidget\n"],"names":["imageWrapperContainerStyle","width","height","css","ImageWrapperStyle","horizontalAlign","align","getHeight","dynamicHeight","aspectRatio","WrappedImage","props","imageSrc","altText","imageRadius","objectFit","handleOnClick","sourceLoadErrorHandle","imageRef","imageBouds","useMeasure","error","setError","useState","jsx","Image","ImageWidget","handleUpdateDsl","updateComponentRuntimeProps","deleteComponentRuntimeProps","tooltipText","triggerEventHandler","updateComponentHeight","sourceLoadErrorHandler","useContext","MediaSourceLoadContext","useEffect","url","finalSrc","useMemo","finalURL","isValidUrlScheme","finalRadius","reg","pattern","useCallback","enableAutoHeight","AutoHeightContainer","TooltipWrapper"],"mappings":"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"}