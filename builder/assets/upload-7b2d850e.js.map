{"version":3,"file":"upload-7b2d850e.js","sources":["../../src/widgetLibrary/UploadWidget/style.tsx","../../src/widgetLibrary/UploadWidget/upload.tsx"],"sourcesContent":["import { css } from \"@emotion/react\"\n\nexport const uploadLayoutStyle = css`\n  display: flex;\n  flex-direction: column;\n`\n\nexport const uploadContainerStyle = css`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`\n","import { FC, useCallback, useEffect, useRef, useState } from \"react\"\nimport { RequestOptions, Upload, UploadItem } from \"@illa-design/react\"\nimport { AutoHeightContainer } from \"@/widgetLibrary/PublicSector/AutoHeightContainer\"\nimport { InvalidMessage } from \"@/widgetLibrary/PublicSector/InvalidMessage\"\nimport { handleValidateCheck } from \"@/widgetLibrary/PublicSector/InvalidMessage/utils\"\nimport { TooltipWrapper } from \"@/widgetLibrary/PublicSector/TooltipWrapper\"\nimport { applyValidateMessageWrapperStyle } from \"@/widgetLibrary/PublicSector/TransformWidgetWrapper/style\"\nimport { uploadLayoutStyle } from \"@/widgetLibrary/UploadWidget/style\"\nimport { UploadWidgetProps, WrappedUploadProps } from \"./interface\"\nimport {\n  dataURLtoFile,\n  getFileString,\n  getFilteredValue,\n  toBase64,\n} from \"./util\"\n\nconst getCurrentList = (fileList: UploadItem[]) =>\n  fileList.map((file) => {\n    if (!file) {\n      return\n    }\n    const { originFile: _originFile, ...others } = file\n    return others\n  }) || []\n\nconst getFiles = (fileList: UploadItem[], raws: string[]) =>\n  fileList.map((file, index) => ({\n    lastModified: file.originFile?.lastModified,\n    name: file.originFile?.name,\n    size: file.originFile?.size,\n    type: file.originFile?.type,\n    dataURI: `data:${file.originFile?.type ?? \"text/plain\"};base64,${\n      raws[index]\n    }`,\n    updateStatus: {\n      status: file.status,\n      percent: file.percent,\n      response: file.response,\n    },\n  })) || []\n\nexport const WrappedUpload: FC<WrappedUploadProps> = (props) => {\n  const {\n    selectionType,\n    type,\n    showFileList,\n    disabled,\n    fileType = [],\n    loading,\n    buttonText,\n    dropText,\n    colorScheme,\n    variant,\n    fileList,\n    onRemove,\n    onChange,\n    customRequest,\n  } = props\n\n  const isDrag = type === \"dropzone\"\n  const inputAcceptType = fileType.join(\",\")\n\n  return (\n    <Upload\n      customRequest={customRequest}\n      disabled={disabled}\n      text={isDrag ? dropText : buttonText}\n      colorScheme={colorScheme}\n      variant={variant}\n      loading={loading}\n      multiple={!!(selectionType === \"multiple\")}\n      directory={selectionType === \"directory\"}\n      drag={isDrag}\n      {...(!!inputAcceptType && { accept: inputAcceptType })}\n      {...(fileList && {\n        fileList,\n      })}\n      onRemove={onRemove}\n      onChange={onChange}\n      showUploadList={showFileList}\n    />\n  )\n}\nWrappedUpload.displayName = \"WrappedUpload\"\n\nexport const UploadWidget: FC<UploadWidgetProps> = (props) => {\n  const {\n    displayName,\n    appendFiles,\n    customRule,\n    tooltipText,\n    required,\n    minFiles,\n    maxFiles,\n    sizeType,\n    maxSize,\n    currentList,\n    value,\n    files,\n    parseValue,\n    minSize,\n    validateMessage,\n    triggerEventHandler,\n    hideValidationMessage,\n    updateComponentHeight,\n    handleUpdateDsl,\n    updateComponentRuntimeProps,\n    deleteComponentRuntimeProps,\n    handleUpdateMultiExecutionResult,\n  } = props\n\n  const fileListRef = useRef<UploadItem[]>([])\n  const [currentFileList, setFileList] = useState<UploadItem[]>([])\n  const fileCountRef = useRef<number>(0)\n  const previousValueRef = useRef<UploadItem[]>([])\n\n  const prevFileList = useRef<UploadItem[]>(currentFileList ?? [])\n  const prevParseValue = useRef<boolean>(parseValue ?? false)\n\n  useEffect(() => {\n    const canInitialDragValue =\n      currentList &&\n      currentList.length > 0 &&\n      value &&\n      files &&\n      fileListRef.current?.length === 0 &&\n      previousValueRef.current.length === 0\n\n    if (canInitialDragValue) {\n      const shownList = currentList.map((file, index) => {\n        const base64 = value[index]\n        const info = files[index]\n\n        return {\n          ...file,\n          originFile: !base64\n            ? new File([\"\"], info.name, info)\n            : dataURLtoFile(`data:${info.type};base64,${base64}`, info.name),\n        }\n      }) as UploadItem[]\n      setFileList(shownList)\n      fileListRef.current = shownList\n    }\n  }, [currentList, value, files])\n\n  const getFileIndex = useCallback((files: UploadItem[], file: UploadItem) => {\n    const currentFilesKeys = files.map((f) => f.uid || f.name)\n    return currentFilesKeys.indexOf(file.uid || file.name)\n  }, [])\n\n  const getValidateMessage = useCallback(\n    (value?: UploadItem[]) => {\n      if (!hideValidationMessage) {\n        const message = handleValidateCheck({\n          value,\n          minFiles,\n          maxFiles,\n          minSize,\n          maxSize,\n          sizeType,\n          required,\n          customRule,\n        })\n        const showMessage = message && message.length > 0\n        return showMessage ? message : \"\"\n      }\n      return \"\"\n    },\n    [\n      customRule,\n      hideValidationMessage,\n      minFiles,\n      maxFiles,\n      minSize,\n      sizeType,\n      maxSize,\n      required,\n    ],\n  )\n\n  const handleValidate = useCallback(\n    (value?: UploadItem[]) => {\n      const message = getValidateMessage(value)\n      handleUpdateDsl({\n        validateMessage: message,\n      })\n      return message\n    },\n    [getValidateMessage, handleUpdateDsl],\n  )\n\n  const handleFilesChange = useCallback(\n    (fileList?: UploadItem[]) => {\n      if (\n        !fileList ||\n        (prevFileList.current === fileList &&\n          prevParseValue.current === parseValue)\n      ) {\n        return\n      }\n      prevFileList.current = fileList\n      prevParseValue.current = parseValue ?? false\n      new Promise(async (resolve) => {\n        const values = await Promise.allSettled(\n          fileList.map(async (file) => await toBase64(file)),\n        )\n        let parsedValues\n        if (parseValue) {\n          parsedValues = await Promise.allSettled(\n            fileList.map(async (file) => {\n              const res = await getFileString(file)\n              return res\n            }),\n          )\n        }\n        resolve({\n          values,\n          parsedValues,\n          fileList,\n        })\n      })\n        .then((value) => {\n          const {\n            values,\n            parsedValues,\n            fileList = [],\n          } = value as {\n            values: any[]\n            parsedValues: any[]\n            fileList: UploadItem[]\n          }\n          const validateMessage = getValidateMessage(fileList)\n          const base64value = getFilteredValue(values, \"base64\")\n          const files = getFiles(fileList, base64value ?? [])\n          const parsed = getFilteredValue(parsedValues)\n          const currentList = getCurrentList(fileList)\n          handleUpdateMultiExecutionResult([\n            {\n              displayName,\n              value: {\n                files,\n                value: base64value,\n                parsedValue: parsed,\n                validateMessage,\n                currentList,\n              },\n            },\n          ])\n        })\n        .then(() => {\n          triggerEventHandler(\"change\")\n        })\n    },\n    [\n      displayName,\n      getValidateMessage,\n      handleUpdateMultiExecutionResult,\n      parseValue,\n      triggerEventHandler,\n    ],\n  )\n\n  const handleOnRemove = (file: UploadItem) => {\n    const currentFiles =\n      previousValueRef.current.length > 0\n        ? [...previousValueRef.current]\n        : [...(fileListRef.current || [])]\n    const index = getFileIndex(currentFiles, file)\n    currentFiles.splice(index, 1)\n    setFileList(currentFiles)\n    fileListRef.current = currentFiles\n    if (previousValueRef.current.length > 0) {\n      previousValueRef.current = currentFiles\n    }\n    handleFilesChange(currentFiles)\n    return true\n  }\n\n  const customRequest = (options: RequestOptions) => {\n    options.onSuccess()\n  }\n\n  const onChanges = useCallback(\n    (fileList: UploadItem[], file: UploadItem) => {\n      let files = [...previousValueRef.current]\n      if (file.status === \"init\") {\n        files.push(file)\n        previousValueRef.current = [...files]\n        setFileList(files)\n        fileCountRef.current += 1\n        return\n      }\n      const index = getFileIndex(previousValueRef.current, file)\n      if (index < 0) {\n        return\n      }\n      files.splice(index, 1, file)\n      setFileList(files)\n      previousValueRef.current = files\n      if (files.length === fileCountRef.current && !!fileCountRef.current) {\n        const allSettled = files.every(\n          (f) => f.status === \"error\" || f.status === \"done\",\n        )\n        if (allSettled) {\n          const newList = appendFiles\n            ? [...(fileListRef.current || []), ...files]\n            : files\n          setFileList(newList)\n          fileListRef.current = newList\n          previousValueRef.current = []\n          fileCountRef.current = 0\n          handleFilesChange(newList)\n        }\n      }\n      return\n    },\n    [appendFiles, getFileIndex, handleFilesChange],\n  )\n\n  useEffect(() => {\n    updateComponentRuntimeProps({\n      clearValue: () => {\n        handleUpdateDsl({ value: [] })\n        setFileList([])\n      },\n      validate: () => {\n        return handleValidate(currentFileList)\n      },\n      setDisabled: (value: boolean) => {\n        handleUpdateDsl({\n          disabled: value,\n        })\n      },\n      clearValidation: () => {\n        handleUpdateDsl({\n          validateMessage: \"\",\n        })\n      },\n    })\n    return () => {\n      deleteComponentRuntimeProps()\n    }\n  }, [\n    currentFileList,\n    deleteComponentRuntimeProps,\n    handleUpdateDsl,\n    handleValidate,\n    updateComponentRuntimeProps,\n  ])\n\n  return (\n    <AutoHeightContainer\n      updateComponentHeight={updateComponentHeight}\n      enable={true}\n    >\n      <TooltipWrapper tooltipText={tooltipText} tooltipDisabled={!tooltipText}>\n        <div css={uploadLayoutStyle}>\n          <WrappedUpload\n            {...props}\n            fileList={currentFileList}\n            onChange={onChanges}\n            onRemove={handleOnRemove}\n            getValidateMessage={getValidateMessage}\n            customRequest={customRequest}\n          />\n        </div>\n      </TooltipWrapper>\n      <div css={applyValidateMessageWrapperStyle(0, \"left\", true)}>\n        <InvalidMessage validateMessage={validateMessage} />\n      </div>\n    </AutoHeightContainer>\n  )\n}\nUploadWidget.displayName = \"UploadWidget\"\nexport default UploadWidget\n"],"names":["uploadLayoutStyle","css","getCurrentList","fileList","file","_originFile","others","getFiles","raws","index","_a","_b","_c","_d","_e","WrappedUpload","props","selectionType","type","showFileList","disabled","fileType","loading","buttonText","dropText","colorScheme","variant","onRemove","onChange","customRequest","isDrag","inputAcceptType","jsx","Upload","UploadWidget","displayName","appendFiles","customRule","tooltipText","required","minFiles","maxFiles","sizeType","maxSize","currentList","value","files","parseValue","minSize","validateMessage","triggerEventHandler","hideValidationMessage","updateComponentHeight","handleUpdateDsl","updateComponentRuntimeProps","deleteComponentRuntimeProps","handleUpdateMultiExecutionResult","fileListRef","useRef","currentFileList","setFileList","useState","fileCountRef","previousValueRef","prevFileList","prevParseValue","useEffect","shownList","base64","info","dataURLtoFile","getFileIndex","useCallback","f","getValidateMessage","message","handleValidateCheck","handleValidate","handleFilesChange","resolve","values","toBase64","parsedValues","getFileString","base64value","getFilteredValue","parsed","handleOnRemove","currentFiles","options","onChanges","newList","jsxs","AutoHeightContainer","TooltipWrapper","applyValidateMessageWrapperStyle","InvalidMessage"],"mappings":"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"}