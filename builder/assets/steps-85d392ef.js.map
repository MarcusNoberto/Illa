{"version":3,"file":"steps-85d392ef.js","sources":["../../src/widgetLibrary/StepsWidget/util.tsx","../../src/widgetLibrary/StepsWidget/steps.tsx"],"sourcesContent":["import { StepItem, Trigger, isArray, isObject } from \"@illa-design/react\"\nimport {\n  StepsMappedOptionType,\n  StepsOptionsType,\n} from \"@/widgetLibrary/StepsWidget/interface\"\n\nconst spliceArrayItem = (arr: any[], index: number) => {\n  arr.length >= index && arr.splice(index, 1)\n}\n\nexport const getFormatOptionConfigData = (\n  optionConfigureMode: \"dynamic\" | \"static\",\n  list?: StepsOptionsType[] | StepsMappedOptionType,\n) => {\n  const isMappedOption = optionConfigureMode === \"dynamic\"\n  if (!list) {\n    return isMappedOption\n      ? { labels: [], values: [], captions: [], tooltips: [], hiddens: [] }\n      : []\n  }\n  if (!isMappedOption && isArray(list)) {\n    const filteredManualOptions = list.filter((option: any) => !option?.hidden)\n    const filteredManualOptionsValueMap: StepsOptionsType[] = []\n    return filteredManualOptions.filter((option: any) => {\n      if (!filteredManualOptionsValueMap.includes(option?.value)) {\n        filteredManualOptionsValueMap.push(option?.value)\n        return true\n      }\n      return false\n    })\n  }\n  const {\n    labels = [],\n    values = [],\n    captions = [],\n    tooltips = [],\n    hiddens = [],\n  } = list as StepsMappedOptionType\n\n  let newHiddens = [...hiddens]\n  const newLabels = [...labels]\n  const newValues = [...values]\n  const newCaptions = [...captions]\n  const newTooltips = [...tooltips]\n\n  newHiddens = newHiddens.filter((item, index) => {\n    if (item) {\n      ;[newLabels, newValues, newCaptions, newTooltips].forEach((arr) =>\n        spliceArrayItem(arr, index),\n      )\n    }\n    return !item\n  })\n  const uniqueValues = newValues.filter((item, index) => {\n    const isUnique = newValues.indexOf(item) === index\n    if (!isUnique) {\n      ;[newLabels, newHiddens, newCaptions, newTooltips].forEach((arr) =>\n        spliceArrayItem(arr, index),\n      )\n    }\n    return isUnique\n  })\n  return {\n    labels: newLabels,\n    values: uniqueValues,\n    captions: newCaptions,\n    tooltips: newTooltips,\n    hiddens: newHiddens,\n  }\n}\n\nexport const getStepItemTitle = (title: any, tooltip?: any) => {\n  const titleContent = title\n  return !!tooltip ? (\n    <Trigger\n      trigger=\"hover\"\n      colorScheme=\"grayBlue\"\n      position=\"top-start\"\n      showArrow={false}\n      content={<>{tooltip}</>}\n    >\n      <div>{titleContent}</div>\n    </Trigger>\n  ) : (\n    titleContent\n  )\n}\n\nexport const formatStepsData = (\n  optionConfigureMode: \"dynamic\" | \"static\",\n  formatOptionConfigData: StepsOptionsType[] | StepsMappedOptionType,\n  disabled?: boolean,\n) => {\n  if (optionConfigureMode === \"static\") {\n    const uniqueManualOptions = formatOptionConfigData as StepsOptionsType[]\n    const results = uniqueManualOptions.map((option, index) => {\n      const { label, value, caption, tooltip = \"\" } = option\n      const titleContent = label || value || index\n      return {\n        title: getStepItemTitle(titleContent, tooltip),\n        description: caption,\n        disabled,\n      }\n    })\n    return {\n      items: results,\n      uniqueOptions: uniqueManualOptions.map((item) => item.value),\n    }\n  }\n  const mappedData = formatOptionConfigData as StepsMappedOptionType\n  const labels = mappedData?.labels || []\n  const values = mappedData?.values || []\n  const captions = mappedData?.captions || []\n  const tooltips = mappedData?.tooltips || []\n  const hiddens = mappedData?.hiddens || []\n  const maxLength = Math.max(\n    labels.length,\n    values.length,\n    captions.length,\n    tooltips.length,\n    hiddens.length,\n  )\n  const uniqueValues: any[] = []\n  const result: StepItem[] = []\n  for (let i = 0; i < maxLength; i++) {\n    let titleContent = labels[i] || values[i] || i\n    if (isObject(titleContent)) {\n      titleContent = i\n    }\n    const caption = isObject(captions[i]) ? \"\" : captions[i]\n    const tips = isObject(tooltips[i]) ? \"\" : tooltips[i]\n    result.push({\n      title: getStepItemTitle(titleContent, tips),\n      description: <>{caption}</>,\n    })\n    uniqueValues.push(values[i])\n  }\n  return { items: result, uniqueOptions: uniqueValues }\n}\n","import { get } from \"lodash-es\"\nimport { FC, useCallback, useEffect, useMemo, useRef } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { Steps } from \"@illa-design/react\"\nimport { getExecutionResult } from \"@/redux/currentApp/executionTree/executionSelector\"\nimport { AutoHeightContainer } from \"@/widgetLibrary/PublicSector/AutoHeightContainer\"\nimport {\n  StepsWidgetProps,\n  WrappedStepsProps,\n} from \"@/widgetLibrary/StepsWidget/interface\"\nimport {\n  formatStepsData,\n  getFormatOptionConfigData,\n  getStepItemTitle,\n} from \"@/widgetLibrary/StepsWidget/util\"\n\nexport const WrappedSteps: FC<WrappedStepsProps> = (props) => {\n  const { direction, items, current, handleStepsChange } = props\n\n  return (\n    <Steps\n      direction={direction}\n      items={items}\n      type=\"line\"\n      current={current}\n      onChange={handleStepsChange}\n    />\n  )\n}\n\nexport const StepsWidget: FC<StepsWidgetProps> = (props) => {\n  const {\n    manualOptions,\n    mappedOption,\n    displayName,\n    linkContainer,\n    viewList,\n    currentIndex,\n    linkWidgetDisplayName,\n    defaultStep,\n    disabled,\n    updateComponentHeight,\n    handleUpdateMultiExecutionResult,\n    handleUpdateOriginalDSLOtherMultiAttr,\n    optionConfigureMode,\n    updateComponentRuntimeProps,\n    deleteComponentRuntimeProps,\n    handleUpdateDsl,\n  } = props\n\n  const preLinkContainer = useRef<boolean>(false)\n  const executionResult = useSelector(getExecutionResult)\n\n  const isLinkedContainer = useMemo(\n    () => linkContainer && !!linkWidgetDisplayName,\n    [linkContainer, linkWidgetDisplayName],\n  )\n\n  const transformedContainerList = useMemo(() => {\n    return (viewList ?? [])\n      .map((item) => {\n        const { key: _key, ...others } = item\n        return {\n          value: item.key,\n          ...others,\n        }\n      })\n      .filter((item) => !item?.hidden)\n  }, [viewList])\n\n  const formatOptionConfigData = useMemo(() => {\n    return getFormatOptionConfigData(\n      optionConfigureMode,\n      optionConfigureMode === \"static\" ? manualOptions : mappedOption,\n    )\n  }, [manualOptions, mappedOption, optionConfigureMode])\n\n  /*\n   * items: StepItem[]\n   * uniqueOptions: array of value that with hidden option filtered\n   */\n  const { items, uniqueOptions } = useMemo(() => {\n    if (!isLinkedContainer) {\n      return formatStepsData(\n        optionConfigureMode,\n        formatOptionConfigData,\n        disabled,\n      )\n    }\n    const results = transformedContainerList.map((item, index) => {\n      const { label, value, caption, tooltip = \"\" } = item\n      const titleContent = label || value || index\n      return {\n        title: getStepItemTitle(titleContent, tooltip),\n        description: caption,\n        disabled,\n      }\n    })\n    return {\n      items: results,\n      uniqueOptions: transformedContainerList.map((item) => item.value),\n    }\n  }, [\n    isLinkedContainer,\n    transformedContainerList,\n    optionConfigureMode,\n    formatOptionConfigData,\n    disabled,\n  ])\n\n  const handleUpdateMultiExecutionResults = useCallback(\n    (updateSliceItem: Record<string, any>) => {\n      if (linkWidgetDisplayName) {\n        handleUpdateOriginalDSLOtherMultiAttr(\n          linkWidgetDisplayName,\n          updateSliceItem,\n          true,\n        )\n      }\n      handleUpdateOriginalDSLOtherMultiAttr(displayName, updateSliceItem, true)\n    },\n    [displayName, handleUpdateOriginalDSLOtherMultiAttr, linkWidgetDisplayName],\n  )\n\n  const handleStepsChange = useCallback(\n    (current: number) => {\n      const value = {\n        currentKey: uniqueOptions?.[current],\n        currentIndex: current,\n      }\n      if (isLinkedContainer) {\n        handleUpdateMultiExecutionResults(value)\n      } else {\n        handleUpdateDsl(value)\n      }\n    },\n    [\n      handleUpdateDsl,\n      handleUpdateMultiExecutionResults,\n      isLinkedContainer,\n      uniqueOptions,\n    ],\n  )\n\n  const handleSetStepsValue = useCallback(\n    (value: any) => {\n      const index = uniqueOptions?.findIndex((item) => item === value)\n      const updateValue = {\n        currentKey: uniqueOptions[index],\n        currentIndex: index,\n      }\n      if (isLinkedContainer) {\n        handleUpdateMultiExecutionResults(updateValue)\n      } else {\n        handleUpdateDsl(updateValue)\n      }\n    },\n    [\n      handleUpdateDsl,\n      handleUpdateMultiExecutionResults,\n      isLinkedContainer,\n      uniqueOptions,\n    ],\n  )\n\n  const handleResetStepsValue = useCallback(() => {\n    if (linkContainer) {\n      return\n    }\n    handleUpdateDsl({\n      currentIndex: uniqueOptions?.findIndex((item) => item === defaultStep),\n      currentKey: defaultStep,\n    })\n  }, [defaultStep, handleUpdateDsl, linkContainer, uniqueOptions])\n\n  useEffect(() => {\n    if (preLinkContainer.current !== linkContainer && linkWidgetDisplayName) {\n      preLinkContainer.current = linkContainer\n      if (linkContainer) {\n        const defaultIndex = get(\n          executionResult,\n          `${linkWidgetDisplayName}.currentIndex`,\n        )\n        const defaultKey = get(\n          executionResult,\n          `${linkWidgetDisplayName}.currentKey`,\n        )\n        handleUpdateMultiExecutionResult([\n          {\n            displayName,\n            value: {\n              currentIndex: defaultIndex,\n              currentKey: defaultKey,\n            },\n          },\n        ])\n      } else {\n        const defaultStepIndex = uniqueOptions?.findIndex(\n          (item) => item === defaultStep,\n        )\n        handleUpdateMultiExecutionResult([\n          {\n            displayName,\n            value: {\n              currentIndex: defaultStepIndex < 0 ? 0 : defaultStepIndex,\n              currentKey: defaultStep,\n            },\n          },\n        ])\n        if (linkWidgetDisplayName) {\n          handleUpdateOriginalDSLOtherMultiAttr(\n            linkWidgetDisplayName,\n            {\n              linkWidgetDisplayName: undefined,\n            },\n            true,\n          )\n        }\n        handleUpdateOriginalDSLOtherMultiAttr(\n          displayName,\n          {\n            linkWidgetDisplayName: undefined,\n          },\n          true,\n        )\n      }\n    }\n  }, [\n    defaultStep,\n    displayName,\n    executionResult,\n    handleUpdateMultiExecutionResult,\n    handleUpdateOriginalDSLOtherMultiAttr,\n    linkContainer,\n    linkWidgetDisplayName,\n    uniqueOptions,\n  ])\n\n  useEffect(() => {\n    updateComponentRuntimeProps({\n      setValue: (value: any) => {\n        handleSetStepsValue(value)\n      },\n      resetValue: () => {\n        handleResetStepsValue()\n      },\n    })\n    return () => {\n      deleteComponentRuntimeProps()\n    }\n  }, [\n    deleteComponentRuntimeProps,\n    handleResetStepsValue,\n    handleSetStepsValue,\n    updateComponentRuntimeProps,\n  ])\n\n  return (\n    <AutoHeightContainer updateComponentHeight={updateComponentHeight}>\n      <WrappedSteps\n        {...props}\n        items={items}\n        current={currentIndex}\n        handleStepsChange={handleStepsChange}\n      />\n    </AutoHeightContainer>\n  )\n}\nexport default StepsWidget\n"],"names":["spliceArrayItem","arr","index","getFormatOptionConfigData","optionConfigureMode","list","isMappedOption","isArray","filteredManualOptions","option","filteredManualOptionsValueMap","labels","values","captions","tooltips","hiddens","newHiddens","newLabels","newValues","newCaptions","newTooltips","item","uniqueValues","isUnique","getStepItemTitle","title","tooltip","titleContent","jsx","Trigger","formatStepsData","formatOptionConfigData","disabled","uniqueManualOptions","label","value","caption","mappedData","maxLength","result","i","isObject","tips","WrappedSteps","props","direction","items","current","handleStepsChange","Steps","StepsWidget","manualOptions","mappedOption","displayName","linkContainer","viewList","currentIndex","linkWidgetDisplayName","defaultStep","updateComponentHeight","handleUpdateMultiExecutionResult","handleUpdateOriginalDSLOtherMultiAttr","updateComponentRuntimeProps","deleteComponentRuntimeProps","handleUpdateDsl","preLinkContainer","useRef","executionResult","useSelector","getExecutionResult","isLinkedContainer","useMemo","transformedContainerList","_key","others","uniqueOptions","handleUpdateMultiExecutionResults","useCallback","updateSliceItem","handleSetStepsValue","updateValue","handleResetStepsValue","useEffect","defaultIndex","get","defaultKey","defaultStepIndex","AutoHeightContainer"],"mappings":"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"}