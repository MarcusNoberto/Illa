{"version":3,"file":"container-425ac0dd.js","sources":["../../src/widgetLibrary/ContainerWidget/container.tsx"],"sourcesContent":["import { FC, useCallback, useEffect, useMemo, useRef } from \"react\"\nimport { ContainerProps } from \"@/widgetLibrary/ContainerWidget/interface\"\nimport { TooltipWrapper } from \"@/widgetLibrary/PublicSector/TooltipWrapper\"\nimport RenderChildrenCanvas from \"../PublicSector/RenderChildrenCanvas\"\nimport { ContainerEmptyState } from \"./emptyState\"\nimport { applyContainerWrapperStyle } from \"./style\"\n\nexport const ContainerWidget: FC<ContainerProps> = (props) => {\n  const {\n    currentIndex,\n    updateComponentRuntimeProps,\n    deleteComponentRuntimeProps,\n    viewList,\n    tooltipText,\n    childrenNode,\n    columnNumber,\n    dynamicHeight = \"fixed\",\n    triggerEventHandler,\n    updateComponentHeight,\n    linkWidgetDisplayName,\n    padding,\n    displayName,\n    handleUpdateMultiExecutionResult,\n  } = props\n  const preCurrentViewIndex = useRef<number>(currentIndex)\n\n  useEffect(() => {\n    if (typeof preCurrentViewIndex.current !== \"number\") {\n      preCurrentViewIndex.current = currentIndex\n    }\n    if (preCurrentViewIndex.current !== currentIndex) {\n      triggerEventHandler(\"change\")\n      preCurrentViewIndex.current = currentIndex\n    }\n  }, [currentIndex, triggerEventHandler])\n\n  const handleOnClick = useCallback(() => {\n    triggerEventHandler(\"click\")\n  }, [triggerEventHandler])\n\n  const enableAutoHeight = useMemo(() => {\n    switch (dynamicHeight) {\n      case \"auto\":\n        return true\n      case \"limited\":\n        return true\n      case \"fixed\":\n      default:\n        return false\n    }\n  }, [dynamicHeight])\n\n  const handleUpdateHeight = useCallback(\n    (height: number) => {\n      if (!updateComponentHeight || !enableAutoHeight) return\n      updateComponentHeight(height + 2)\n    },\n    [enableAutoHeight, updateComponentHeight],\n  )\n\n  const handleUpdateOriginalDSLAttrs = useCallback(\n    (updateSlice: Record<string, any>) => {\n      handleUpdateMultiExecutionResult([\n        {\n          displayName,\n          value: updateSlice,\n        },\n      ])\n      if (linkWidgetDisplayName && linkWidgetDisplayName.length > 0) {\n        const curUpdateSlice = linkWidgetDisplayName.map((name) => ({\n          displayName: name,\n          value: updateSlice,\n        }))\n\n        handleUpdateMultiExecutionResult(curUpdateSlice)\n      }\n    },\n    [displayName, handleUpdateMultiExecutionResult, linkWidgetDisplayName],\n  )\n\n  useEffect(() => {\n    updateComponentRuntimeProps?.({\n      setCurrentViewKey: (key: string) => {\n        const index = viewList.findIndex((viewItem) => viewItem.key === key)\n        if (index === -1) return\n        handleUpdateOriginalDSLAttrs({\n          currentIndex: index,\n          currentKey: key,\n        })\n      },\n      setCurrentViewIndex: (index: string) => {\n        const numberIndex = parseInt(index)\n        const view = viewList[numberIndex]\n        if (!view) return\n        handleUpdateOriginalDSLAttrs({\n          currentIndex: numberIndex,\n          currentKey: view.key,\n        })\n      },\n      showNextView: (loop: boolean) => {\n        let newCurrentIndex = currentIndex + 1\n        if (newCurrentIndex >= viewList.length) {\n          if (!loop) return\n          newCurrentIndex = 0\n        }\n        const currentView = viewList[newCurrentIndex]\n        handleUpdateOriginalDSLAttrs({\n          currentIndex: newCurrentIndex,\n          currentKey: currentView.key,\n        })\n      },\n      showNextVisibleView: (loop: boolean) => {\n        let newCurrentIndex = currentIndex + 1\n        if (newCurrentIndex >= viewList.length) {\n          if (!loop) return\n          newCurrentIndex = 0\n        }\n        let currentView = viewList[newCurrentIndex]\n        while (currentView.hidden || currentView.disabled) {\n          newCurrentIndex++\n          currentView = viewList[newCurrentIndex]\n          if (newCurrentIndex >= viewList.length) {\n            if (!loop) return\n            newCurrentIndex = 0\n          }\n        }\n        handleUpdateOriginalDSLAttrs({\n          currentIndex: newCurrentIndex,\n          currentKey: currentView.key,\n        })\n      },\n      showPreviousView: (loop: boolean) => {\n        let newCurrentIndex = currentIndex - 1\n\n        if (newCurrentIndex < 0) {\n          if (!loop) return\n          newCurrentIndex = viewList.length - 1\n        }\n        const currentView = viewList[newCurrentIndex]\n        handleUpdateOriginalDSLAttrs({\n          currentIndex: newCurrentIndex,\n          currentKey: currentView.key,\n        })\n      },\n      showPreviousVisibleView: (loop: boolean) => {\n        let newCurrentIndex = currentIndex - 1\n\n        if (newCurrentIndex < 0) {\n          if (!loop) return\n          newCurrentIndex = viewList.length - 1\n        }\n        let currentView = viewList[newCurrentIndex]\n        while (currentView.hidden || currentView.disabled) {\n          newCurrentIndex--\n          currentView = viewList[newCurrentIndex]\n          if (newCurrentIndex < 0) {\n            if (!loop) return\n            newCurrentIndex = viewList.length - 1\n          }\n        }\n        handleUpdateOriginalDSLAttrs({\n          currentIndex: newCurrentIndex,\n          currentKey: currentView.key,\n        })\n      },\n    })\n    return () => {\n      deleteComponentRuntimeProps()\n    }\n  }, [\n    deleteComponentRuntimeProps,\n    updateComponentRuntimeProps,\n    handleUpdateOriginalDSLAttrs,\n    viewList,\n    currentIndex,\n  ])\n\n  return (\n    <TooltipWrapper tooltipText={tooltipText} tooltipDisabled={!tooltipText}>\n      <div css={applyContainerWrapperStyle} onClick={handleOnClick}>\n        {Array.isArray(childrenNode) && currentIndex < childrenNode.length ? (\n          <RenderChildrenCanvas\n            displayName={childrenNode[currentIndex]}\n            columnNumber={columnNumber}\n            handleUpdateHeight={handleUpdateHeight}\n            canResizeCanvas={enableAutoHeight}\n            containerPadding={padding?.size}\n          />\n        ) : (\n          <ContainerEmptyState />\n        )}\n      </div>\n    </TooltipWrapper>\n  )\n}\n\nexport default ContainerWidget\n"],"names":["ContainerWidget","props","currentIndex","updateComponentRuntimeProps","deleteComponentRuntimeProps","viewList","tooltipText","childrenNode","columnNumber","dynamicHeight","triggerEventHandler","updateComponentHeight","linkWidgetDisplayName","padding","displayName","handleUpdateMultiExecutionResult","preCurrentViewIndex","useRef","useEffect","handleOnClick","useCallback","enableAutoHeight","useMemo","handleUpdateHeight","height","handleUpdateOriginalDSLAttrs","updateSlice","curUpdateSlice","name","key","index","viewItem","numberIndex","view","loop","newCurrentIndex","currentView","TooltipWrapper","applyContainerWrapperStyle","jsx","RenderChildrenCanvas","ContainerEmptyState"],"mappings":"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"}