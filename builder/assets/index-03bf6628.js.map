{"version":3,"file":"index-03bf6628.js","sources":["../../src/page/App/components/Actions/ActionPanel/TransformerPanel/style.ts","../../src/page/App/components/Actions/ActionPanel/TransformerPanel/index.tsx"],"sourcesContent":["import { css } from \"@emotion/react\"\nimport { globalColor, illaPrefix } from \"@illa-design/react\"\n\nexport const transformerPanelContainerStyle = css`\n  display: flex;\n  flex-direction: column;\n  padding: 8px 16px;\n`\n\nexport const transformerTipStyle = css`\n  margin: 0 16px;\n  font-size: 12px;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-04`)};\n`\n","import { TransformerAction } from \"@illa-public/public-types\"\nimport { FC, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { CodeEditor } from \"@/components/CodeEditor\"\nimport {\n  CODE_LANG,\n  CODE_TYPE,\n} from \"@/components/CodeEditor/CodeMirror/extensions/interface\"\nimport { getCachedAction } from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport {\n  realInputValueWithScript,\n  wrapperScriptCode,\n} from \"@/utils/evaluateDynamicString/valueConverter\"\nimport { VALIDATION_TYPES } from \"@/utils/validationFactory\"\nimport { transformerPanelContainerStyle, transformerTipStyle } from \"./style\"\n\nconst TransformerPanel: FC = () => {\n  const { t } = useTranslation()\n\n  const action = useSelector(getCachedAction)!!\n  const content = action.content as TransformerAction\n\n  const dispatch = useDispatch()\n\n  const realInputValue = useMemo(() => {\n    return realInputValueWithScript(content.transformerString)\n  }, [content.transformerString])\n\n  return (\n    <div css={transformerPanelContainerStyle}>\n      <CodeEditor\n        value={realInputValue}\n        showLineNumbers\n        canShowCompleteInfo\n        height=\"88px\"\n        expectValueType={VALIDATION_TYPES.STRING}\n        lang={CODE_LANG.JAVASCRIPT}\n        codeType={CODE_TYPE.NO_METHOD_FUNCTION}\n        onChange={(value) => {\n          dispatch(\n            configActions.updateCachedAction({\n              ...action,\n              content: {\n                transformerString: wrapperScriptCode(value),\n              },\n            }),\n          )\n        }}\n      />\n      <div css={transformerTipStyle}>\n        {t(\"editor.action.resource.transformer.tip.external_reference\")}\n      </div>\n    </div>\n  )\n}\n\nTransformerPanel.displayName = \"TransformerPanel\"\nexport default TransformerPanel\n"],"names":["transformerPanelContainerStyle","css","transformerTipStyle","globalColor","illaPrefix","TransformerPanel","t","useTranslation","action","useSelector","getCachedAction","content","dispatch","useDispatch","realInputValue","useMemo","realInputValueWithScript","jsxs","jsx","CodeEditor","VALIDATION_TYPES","CODE_LANG","CODE_TYPE","value","configActions","wrapperScriptCode"],"mappings":"+gBAGO,MAAMA,EAAiCC;AAAA;AAAA;AAAA;AAAA,EAMjCC,EAAsBD;AAAA;AAAA;AAAA,WAGxBE,EAAY,KAAKC,CAAU,cAAc,CAAC;AAAA,ECM/CC,EAAuB,IAAM,CAC3B,KAAA,CAAE,EAAAC,GAAMC,IAERC,EAASC,EAAYC,CAAe,EACpCC,EAAUH,EAAO,QAEjBI,EAAWC,IAEXC,EAAiBC,EAAAA,QAAQ,IACtBC,EAAyBL,EAAQ,iBAAiB,EACxD,CAACA,EAAQ,iBAAiB,CAAC,EAG5B,OAAAM,EAAC,MAAI,CAAA,IAAKjB,EACR,SAAA,CAAAkB,EAACC,EAAA,CACC,MAAOL,EACP,gBAAe,GACf,oBAAmB,GACnB,OAAO,OACP,gBAAiBM,EAAiB,OAClC,KAAMC,EAAU,WAChB,SAAUC,EAAU,mBACpB,SAAWC,GAAU,CACnBX,EACEY,EAAc,mBAAmB,CAC/B,GAAGhB,EACH,QAAS,CACP,kBAAmBiB,EAAkBF,CAAK,CAC5C,CAAA,CACD,CAAA,CAEL,CAAA,CACF,IACC,MAAI,CAAA,IAAKrB,EACP,SAAAI,EAAE,2DAA2D,EAChE,CACF,CAAA,CAAA,CAEJ,EAEAD,EAAiB,YAAc"}