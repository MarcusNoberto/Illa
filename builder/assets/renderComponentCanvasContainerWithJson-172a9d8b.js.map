{"version":3,"file":"renderComponentCanvasContainerWithJson-172a9d8b.js","sources":["../../src/widgetLibrary/PublicSector/TransformWidgetWrapper/renderWithJSON.tsx","../../src/page/App/components/ScaleSquare/scaleSquareWithJSON.tsx","../../src/page/App/components/DotPanel/components/Canvas/renderComponentCanvasContainerWithJson.tsx"],"sourcesContent":["import { convertPathToString } from \"@illa-public/dynamic-string\"\nimport { klona } from \"klona\"\nimport { get, isFunction, isNumber, set, toPath } from \"lodash-es\"\nimport { FC, Suspense, memo, useCallback, useMemo } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { Skeleton } from \"@illa-design/react\"\nimport ErrorBoundary from \"@/components/ErrorBoundary\"\nimport { UNIT_HEIGHT } from \"@/page/App/components/DotPanel/constant/canvas\"\nimport { componentsActions } from \"@/redux/currentApp/components/componentsSlice\"\nimport { executionActions } from \"@/redux/currentApp/executionTree/executionSlice\"\nimport { evaluateDynamicString } from \"@/utils/evaluateDynamicString\"\nimport { runEventHandler } from \"@/utils/eventHandlerHelper\"\nimport { ILLAEditorRuntimePropsCollectorInstance } from \"@/utils/executionTreeHelper/runtimePropsCollector\"\nimport { isObject } from \"@/utils/typeHelper\"\nimport { TransformWidgetWrapperWithJsonProps } from \"@/widgetLibrary/PublicSector/TransformWidgetWrapper/interface\"\nimport { applyWrapperStylesStyle } from \"@/widgetLibrary/PublicSector/TransformWidgetWrapper/style\"\nimport { EventsInProps } from \"@/widgetLibrary/interface\"\nimport { widgetBuilder } from \"@/widgetLibrary/widgetBuilder\"\n\nexport const getEventScripts = (events: EventsInProps[], eventType: string) => {\n  return events.filter((event) => {\n    return event.eventType === eventType\n  })\n}\n\nexport const TransformWidgetWrapperWithJson: FC<TransformWidgetWrapperWithJsonProps> =\n  memo((props: TransformWidgetWrapperWithJsonProps) => {\n    const { componentNode, unitW } = props\n\n    const {\n      displayName,\n      type,\n      w,\n      h,\n      childrenNode,\n      props: nodeProps,\n    } = componentNode\n\n    const dispatch = useDispatch()\n\n    const updateComponentRuntimeProps = useCallback(\n      (runtimeProp: unknown) => {\n        ILLAEditorRuntimePropsCollectorInstance.addRuntimeProp(\n          displayName,\n          runtimeProp,\n        )\n      },\n      [displayName],\n    )\n\n    const deleteComponentRuntimeProps = useCallback(() => {\n      ILLAEditorRuntimePropsCollectorInstance.deleteRuntimeProp(displayName)\n    }, [displayName])\n\n    const realProps = useMemo(() => nodeProps ?? {}, [nodeProps])\n\n    const handleUpdateDsl = useCallback(\n      (value: Record<string, any>) => {\n        dispatch(\n          executionActions.updateExecutionByDisplayNameReducer({\n            displayName,\n            value,\n          }),\n        )\n      },\n      [dispatch, displayName],\n    )\n\n    const handleUpdateMultiExecutionResult = useCallback(\n      (allUpdate: { displayName: string; value: Record<string, any> }[]) => {\n        dispatch(\n          executionActions.updateExecutionByMultiDisplayNameReducer(allUpdate),\n        )\n      },\n      [dispatch],\n    )\n\n    const handleUpdateOriginalDSLMultiAttr = useCallback(\n      (updateSlice: Record<string, any>, notUseUndoRedo?: boolean) => {\n        if (!isObject(updateSlice)) return\n        dispatch(\n          componentsActions.updateComponentPropsReducer({\n            displayName: displayName,\n            updateSlice,\n            notUseUndoRedo,\n          }),\n        )\n      },\n      [dispatch, displayName],\n    )\n\n    const handleUpdateOriginalDSLOtherMultiAttr = useCallback(\n      (\n        displayName: string,\n        updateSlice: Record<string, any>,\n        notUseUndoRedo?: boolean,\n      ) => {\n        if (!displayName || !isObject(updateSlice)) return\n        dispatch(\n          componentsActions.updateComponentPropsReducer({\n            displayName,\n            updateSlice,\n            notUseUndoRedo,\n          }),\n        )\n      },\n      [dispatch],\n    )\n\n    const getRunEvents = useCallback(\n      (\n        eventType: string,\n        path: string,\n        otherCalcContext?: Record<string, any>,\n      ) => {\n        const originEvents = get(componentNode.props, path, []) as any[]\n        const dynamicPaths = get(componentNode.props, \"$dynamicAttrPaths\", [])\n        const needRunEvents = klona(originEvents)\n          .filter((originEvent) => {\n            return originEvent.eventType === eventType\n          })\n          .map((originEvent) => {\n            return {\n              ...originEvent,\n              originEnable: originEvent.enabled,\n            }\n          })\n        const finalContext =\n          ILLAEditorRuntimePropsCollectorInstance.getCurrentPageCalcContext(\n            otherCalcContext,\n          )\n        return {\n          dynamicPaths,\n          needRunEvents,\n          finalContext,\n        }\n      },\n      [componentNode.props],\n    )\n\n    const triggerEventHandler = useCallback(\n      (\n        eventType: string,\n        path: string = \"events\",\n        otherCalcContext?: Record<string, any>,\n        formatPath?: (path: string) => string,\n      ) => {\n        const { dynamicPaths, needRunEvents, finalContext } = getRunEvents(\n          eventType,\n          path,\n          otherCalcContext,\n        )\n        dynamicPaths?.forEach((path: string) => {\n          const realPath = isFunction(formatPath)\n            ? formatPath(path)\n            : convertPathToString(toPath(path).slice(1))\n\n          const dynamicString = get(needRunEvents, realPath, \"\")\n          if (dynamicString) {\n            try {\n              const calcValue = evaluateDynamicString(\n                \"\",\n                dynamicString,\n                finalContext,\n              )\n              set(needRunEvents, realPath, calcValue)\n            } catch {\n              set(needRunEvents, realPath, undefined)\n            }\n          }\n        })\n        needRunEvents.forEach((scriptObj: any) => {\n          runEventHandler(scriptObj, finalContext)\n        })\n      },\n      [getRunEvents],\n    )\n\n    const triggerMappedEventHandler = useCallback(\n      (eventType: string, path: string = \"events\", index?: number) => {\n        const { dynamicPaths, needRunEvents, finalContext } = getRunEvents(\n          eventType,\n          path,\n        )\n        dynamicPaths?.forEach((path: string) => {\n          const realPath = convertPathToString(toPath(path).slice(2))\n          const dynamicString = get(needRunEvents, realPath, \"\")\n          if (dynamicString) {\n            try {\n              const calcValue = evaluateDynamicString(\n                \"\",\n                dynamicString,\n                finalContext,\n              )\n              if (Array.isArray(calcValue) && isNumber(index)) {\n                set(needRunEvents, realPath, calcValue[index])\n              } else {\n                set(needRunEvents, realPath, calcValue)\n              }\n            } catch {\n              set(needRunEvents, realPath, undefined)\n            }\n          }\n        })\n        needRunEvents.forEach((scriptObj: any) => {\n          runEventHandler(scriptObj, finalContext)\n        })\n      },\n      [getRunEvents],\n    )\n\n    if (!type) return null\n    const widgetConfig = widgetBuilder(type)\n    if (!widgetConfig) return null\n    const Component = widgetConfig.widget\n\n    const {\n      hidden,\n      borderColor,\n      backgroundColor,\n      radius,\n      borderWidth,\n      shadow,\n    } = realProps\n\n    const _radius = !isNaN(Number(radius)) ? radius + \"px\" : radius?.toString()\n    const _borderWidth = !isNaN(Number(borderWidth))\n      ? borderWidth + \"px\"\n      : borderWidth?.toString()\n\n    return (\n      <ErrorBoundary>\n        {hidden ? null : (\n          <div\n            css={applyWrapperStylesStyle(\n              borderColor,\n              _borderWidth,\n              _radius,\n              backgroundColor,\n              shadow,\n              type,\n            )}\n          >\n            <Suspense\n              fallback={\n                <Skeleton\n                  animation\n                  text={false}\n                  image={{\n                    shape: \"square\",\n                    w: \"100%\",\n                    h: \"100%\",\n                    mr: \"0 !important\",\n                  }}\n                  h=\"100%\"\n                  w=\"100%\"\n                />\n              }\n            >\n              <Component\n                {...realProps}\n                w={w}\n                h={h}\n                unitW={unitW}\n                unitH={UNIT_HEIGHT}\n                updateComponentRuntimeProps={updateComponentRuntimeProps}\n                deleteComponentRuntimeProps={deleteComponentRuntimeProps}\n                handleUpdateOriginalDSLMultiAttr={\n                  handleUpdateOriginalDSLMultiAttr\n                }\n                handleUpdateOriginalDSLOtherMultiAttr={\n                  handleUpdateOriginalDSLOtherMultiAttr\n                }\n                handleUpdateDsl={handleUpdateDsl}\n                handleUpdateMultiExecutionResult={\n                  handleUpdateMultiExecutionResult\n                }\n                displayName={displayName}\n                childrenNode={childrenNode}\n                componentNode={componentNode}\n                triggerEventHandler={triggerEventHandler}\n                triggerMappedEventHandler={triggerMappedEventHandler}\n              />\n            </Suspense>\n          </div>\n        )}\n      </ErrorBoundary>\n    )\n  })\n\nTransformWidgetWrapperWithJson.displayName = \"TransformWidgetWrapper\"\n","import { memo } from \"react\"\nimport { Rnd } from \"react-rnd\"\nimport { TransformWidgetWrapperWithJson } from \"@/widgetLibrary/PublicSector/TransformWidgetWrapper/renderWithJSON\"\nimport { UNIT_HEIGHT } from \"../DotPanel/constant/canvas\"\nimport { DEFAULT_MIN_COLUMN } from \"./constant/widget\"\nimport { ScaleSquarePropsWithJSON } from \"./interface\"\nimport { jsonWrapperPendingStyle } from \"./style\"\nimport { getRealShapeAndPosition } from \"./utils/getRealShapeAndPosition\"\n\nconst ScaleSquareWithJSON = (props: ScaleSquarePropsWithJSON) => {\n  const { componentNode, unitW, displayNamePrefix } = props\n  const { x, y, w, h } = getRealShapeAndPosition(\n    componentNode,\n    unitW,\n    displayNamePrefix,\n  )\n\n  return (\n    <Rnd\n      bounds=\"parent\"\n      size={{\n        width: w,\n        height: h,\n      }}\n      position={{\n        x: x,\n        y: y,\n      }}\n      enableResizing={false}\n      disableDragging\n      minWidth={DEFAULT_MIN_COLUMN * unitW}\n      minHeight={componentNode.minH * UNIT_HEIGHT}\n    >\n      <div className=\"wrapperPending\" css={jsonWrapperPendingStyle}>\n        <TransformWidgetWrapperWithJson\n          componentNode={componentNode}\n          unitW={unitW}\n        />\n      </div>\n    </Rnd>\n  )\n}\n\nScaleSquareWithJSON.displayName = \"ScaleSquareWithJSON\"\nexport default memo(ScaleSquareWithJSON)\n","import { ComponentTreeNode } from \"@illa-public/public-types\"\nimport { FC, ReactNode, useMemo } from \"react\"\nimport useMeasure from \"react-use-measure\"\nimport { DEFAULT_BODY_COLUMNS_NUMBER } from \"@/page/App/components/DotPanel/constant/canvas\"\nimport ScaleSquareWithJSON from \"@/page/App/components/ScaleSquare/scaleSquareWithJSON\"\nimport { outerComponentCanvasContainerWithJsonStyle } from \"./style\"\n\nexport const RenderComponentCanvasWithJson: FC<{\n  componentNode: ComponentTreeNode\n  containerPadding: number\n  columnNumber?: number\n  canAutoScroll?: boolean\n  displayNamePrefix?: string\n}> = (props) => {\n  const {\n    componentNode,\n    columnNumber = DEFAULT_BODY_COLUMNS_NUMBER,\n    displayNamePrefix,\n    containerPadding,\n  } = props\n\n  const [canvasRef, bounds] = useMeasure()\n\n  const unitWidth = useMemo(() => {\n    return bounds.width / columnNumber\n  }, [columnNumber, bounds.width])\n\n  const componentTree = useMemo<ReactNode>(() => {\n    const childrenNode = componentNode.childrenNode\n    return childrenNode?.map<ReactNode>((item) => {\n      switch (item.containerType) {\n        case \"EDITOR_SCALE_SQUARE\":\n          return (\n            <ScaleSquareWithJSON\n              key={item.displayName}\n              componentNode={item}\n              unitW={unitWidth}\n              columnNumber={columnNumber}\n              displayNamePrefix={displayNamePrefix}\n            />\n          )\n        default:\n          return null\n      }\n    })\n  }, [columnNumber, componentNode.childrenNode, displayNamePrefix, unitWidth])\n\n  return (\n    <div\n      css={outerComponentCanvasContainerWithJsonStyle(containerPadding)}\n      ref={canvasRef}\n      data-list-widget-container\n    >\n      {componentTree}\n    </div>\n  )\n}\n"],"names":["TransformWidgetWrapperWithJson","memo","props","componentNode","unitW","displayName","type","w","h","childrenNode","nodeProps","dispatch","useDispatch","updateComponentRuntimeProps","useCallback","runtimeProp","ILLAEditorRuntimePropsCollectorInstance","deleteComponentRuntimeProps","realProps","useMemo","handleUpdateDsl","value","executionActions","handleUpdateMultiExecutionResult","allUpdate","handleUpdateOriginalDSLMultiAttr","updateSlice","notUseUndoRedo","isObject","componentsActions","handleUpdateOriginalDSLOtherMultiAttr","getRunEvents","eventType","path","otherCalcContext","originEvents","get","dynamicPaths","needRunEvents","klona","originEvent","finalContext","triggerEventHandler","formatPath","realPath","isFunction","convertPathToString","toPath","dynamicString","calcValue","evaluateDynamicString","set","scriptObj","runEventHandler","triggerMappedEventHandler","index","isNumber","widgetConfig","widgetBuilder","Component","hidden","borderColor","backgroundColor","radius","borderWidth","shadow","_radius","_borderWidth","jsx","ErrorBoundary","applyWrapperStylesStyle","Suspense","Skeleton","UNIT_HEIGHT","ScaleSquareWithJSON","displayNamePrefix","x","getRealShapeAndPosition","Rnd","DEFAULT_MIN_COLUMN","jsonWrapperPendingStyle","RenderComponentCanvasWithJson","columnNumber","DEFAULT_BODY_COLUMNS_NUMBER","containerPadding","canvasRef","bounds","useMeasure","unitWidth","componentTree","item","outerComponentCanvasContainerWithJsonStyle"],"mappings":"8eAyBa,MAAAA,EACXC,EAAAA,KAAMC,GAA+C,CAC7C,KAAA,CAAE,cAAAC,EAAe,MAAAC,CAAU,EAAAF,EAE3B,CACJ,YAAAG,EACA,KAAAC,EACA,EAAAC,EACA,EAAAC,EACA,aAAAC,EACA,MAAOC,CACL,EAAAP,EAEEQ,EAAWC,KAEXC,EAA8BC,EAAA,YACjCC,GAAyB,CACgBC,EAAA,eACtCX,EACAU,CAAA,CAEJ,EACA,CAACV,CAAW,CAAA,EAGRY,EAA8BH,EAAAA,YAAY,IAAM,CACpDE,EAAwC,kBAAkBX,CAAW,CAAA,EACpE,CAACA,CAAW,CAAC,EAEVa,EAAYC,EAAAA,QAAQ,IAAMT,GAAa,CAAA,EAAI,CAACA,CAAS,CAAC,EAEtDU,EAAkBN,EAAA,YACrBO,GAA+B,CAC9BV,EACEW,EAAiB,oCAAoC,CACnD,YAAAjB,EACA,MAAAgB,CAAA,CACD,CAAA,CAEL,EACA,CAACV,EAAUN,CAAW,CAAA,EAGlBkB,EAAmCT,EAAA,YACtCU,GAAqE,CACpEb,EACEW,EAAiB,yCAAyCE,CAAS,CAAA,CAEvE,EACA,CAACb,CAAQ,CAAA,EAGLc,EAAmCX,EAAA,YACvC,CAACY,EAAkCC,IAA6B,CACzDC,EAASF,CAAW,GACzBf,EACEkB,EAAkB,4BAA4B,CAC5C,YAAAxB,EACA,YAAAqB,EACA,eAAAC,CAAA,CACD,CAAA,CAEL,EACA,CAAChB,EAAUN,CAAW,CAAA,EAGlByB,EAAwChB,EAAA,YAC5C,CACET,EACAqB,EACAC,IACG,CACC,CAACtB,GAAe,CAACuB,EAASF,CAAW,GACzCf,EACEkB,EAAkB,4BAA4B,CAC5C,YAAAxB,EACA,YAAAqB,EACA,eAAAC,CAAA,CACD,CAAA,CAEL,EACA,CAAChB,CAAQ,CAAA,EAGLoB,EAAejB,EAAA,YACnB,CACEkB,EACAC,EACAC,IACG,CACH,MAAMC,EAAeC,EAAIjC,EAAc,MAAO8B,EAAM,CAAA,CAAE,EAChDI,EAAeD,EAAIjC,EAAc,MAAO,oBAAqB,CAAA,CAAE,EAC/DmC,EAAgBC,GAAMJ,CAAY,EACrC,OAAQK,GACAA,EAAY,YAAcR,CAClC,EACA,IAAKQ,IACG,CACL,GAAGA,EACH,aAAcA,EAAY,OAAA,EAE7B,EACGC,EACJzB,EAAwC,0BACtCkB,CAAA,EAEG,MAAA,CACL,aAAAG,EACA,cAAAC,EACA,aAAAG,CAAA,CAEJ,EACA,CAACtC,EAAc,KAAK,CAAA,EAGhBuC,EAAsB5B,EAAA,YAC1B,CACEkB,EACAC,EAAe,SACfC,EACAS,IACG,CACH,KAAM,CAAE,aAAAN,EAAc,cAAAC,EAAe,aAAAG,CAAiB,EAAAV,EACpDC,EACAC,EACAC,CAAA,EAEYG,GAAA,MAAAA,EAAA,QAASJ,GAAiB,CACtC,MAAMW,EAAWC,GAAWF,CAAU,EAClCA,EAAWV,CAAI,EACfa,EAAoBC,EAAOd,CAAI,EAAE,MAAM,CAAC,CAAC,EAEvCe,EAAgBZ,EAAIE,EAAeM,EAAU,EAAE,EACrD,GAAII,EACE,GAAA,CACF,MAAMC,GAAYC,EAChB,GACAF,EACAP,CAAA,EAEEU,EAAAb,EAAeM,EAAUK,EAAS,CAAA,MAChC,CACFE,EAAAb,EAAeM,EAAU,MAAS,CACxC,CACF,GAEYN,EAAA,QAASc,GAAmB,CACxCC,EAAgBD,EAAWX,CAAY,CAAA,CACxC,CACH,EACA,CAACV,CAAY,CAAA,EAGTuB,EAA4BxC,EAAA,YAChC,CAACkB,EAAmBC,EAAe,SAAUsB,IAAmB,CAC9D,KAAM,CAAE,aAAAlB,EAAc,cAAAC,EAAe,aAAAG,CAAiB,EAAAV,EACpDC,EACAC,CAAA,EAEYI,GAAA,MAAAA,EAAA,QAASJ,GAAiB,CACtC,MAAMW,EAAWE,EAAoBC,EAAOd,CAAI,EAAE,MAAM,CAAC,CAAC,EACpDe,EAAgBZ,EAAIE,EAAeM,EAAU,EAAE,EACrD,GAAII,EACE,GAAA,CACF,MAAMC,EAAYC,EAChB,GACAF,EACAP,CAAA,EAEE,MAAM,QAAQQ,CAAS,GAAKO,GAASD,CAAK,EAC5CJ,EAAIb,EAAeM,EAAUK,EAAUM,CAAK,CAAC,EAEzCJ,EAAAb,EAAeM,EAAUK,CAAS,CACxC,MACM,CACFE,EAAAb,EAAeM,EAAU,MAAS,CACxC,CACF,GAEYN,EAAA,QAASc,GAAmB,CACxCC,EAAgBD,EAAWX,CAAY,CAAA,CACxC,CACH,EACA,CAACV,CAAY,CAAA,EAGf,GAAI,CAACzB,EAAa,OAAA,KACZ,MAAAmD,EAAeC,GAAcpD,CAAI,EACvC,GAAI,CAACmD,EAAqB,OAAA,KAC1B,MAAME,EAAYF,EAAa,OAEzB,CACJ,OAAAG,EACA,YAAAC,EACA,gBAAAC,EACA,OAAAC,EACA,YAAAC,EACA,OAAAC,CACE,EAAA/C,EAEEgD,EAAW,MAAM,OAAOH,CAAM,CAAC,EAAoBA,GAAA,YAAAA,EAAQ,WAAxBA,EAAS,KAC5CI,GAAgB,MAAM,OAAOH,CAAW,CAAC,EAE3CA,GAAA,YAAAA,EAAa,WADbA,EAAc,KAIhB,OAAAI,EAACC,GACE,CAAA,SAAAT,EAAS,KACRQ,EAAC,MAAA,CACC,IAAKE,GACHT,EACAM,GACAD,EACAJ,EACAG,EACA3D,CACF,EAEA,SAAA8D,EAACG,EAAA,SAAA,CACC,SACEH,EAACI,GAAA,CACC,UAAS,GACT,KAAM,GACN,MAAO,CACL,MAAO,SACP,EAAG,OACH,EAAG,OACH,GAAI,cACN,EACA,EAAE,OACF,EAAE,MAAA,CACJ,EAGF,SAAAJ,EAACT,EAAA,CACE,GAAGzC,EACJ,EAAAX,EACA,EAAAC,EACA,MAAAJ,EACA,MAAOqE,EACP,4BAAA5D,EACA,4BAAAI,EACA,iCAAAQ,EAGA,sCAAAK,EAGA,gBAAAV,EACA,iCAAAG,EAGA,YAAAlB,EACA,aAAAI,EACA,cAAAN,EACA,oBAAAuC,EACA,0BAAAY,CAAA,CACF,CAAA,CACF,CAAA,CAGN,CAAA,CAAA,CAEJ,CAAC,EAEHtD,EAA+B,YAAc,yBCzR7C,MAAM0E,EAAuBxE,GAAoC,CAC/D,KAAM,CAAE,cAAAC,EAAe,MAAAC,EAAO,kBAAAuE,CAAA,EAAsBzE,EAC9C,CAAE,EAAA0E,EAAG,EAAG,EAAArE,EAAG,EAAAC,CAAM,EAAAqE,GACrB1E,EACAC,EACAuE,CAAA,EAIA,OAAAP,EAACU,GAAA,CACC,OAAO,SACP,KAAM,CACJ,MAAOvE,EACP,OAAQC,CACV,EACA,SAAU,CACR,EAAAoE,EACA,CACF,EACA,eAAgB,GAChB,gBAAe,GACf,SAAUG,GAAqB3E,EAC/B,UAAWD,EAAc,KAAOsE,EAEhC,SAACL,EAAA,MAAA,CAAI,UAAU,iBAAiB,IAAKY,GACnC,SAAAZ,EAACpE,EAAA,CACC,cAAAG,EACA,MAAAC,CAAA,CAAA,EAEJ,CAAA,CAAA,CAGN,EAEAsE,EAAoB,YAAc,sBAClC,MAAezE,GAAAA,EAAAA,KAAKyE,CAAmB,ECrC1BO,GAMP/E,GAAU,CACR,KAAA,CACJ,cAAAC,EACA,aAAA+E,EAAeC,GACf,kBAAAR,EACA,iBAAAS,CACE,EAAAlF,EAEE,CAACmF,EAAWC,CAAM,EAAIC,GAAW,EAEjCC,EAAYrE,EAAAA,QAAQ,IACjBmE,EAAO,MAAQJ,EACrB,CAACA,EAAcI,EAAO,KAAK,CAAC,EAEzBG,EAAgBtE,EAAAA,QAAmB,IAAM,CAC7C,MAAMV,EAAeN,EAAc,aAC5B,OAAAM,GAAA,YAAAA,EAAc,IAAgBiF,GAAS,CAC5C,OAAQA,EAAK,cAAe,CAC1B,IAAK,sBAED,OAAAtB,EAACM,GAAA,CAEC,cAAegB,EACf,MAAOF,EACP,aAAAN,EACA,kBAAAP,CAAA,EAJKe,EAAK,WAAA,EAOhB,QACS,OAAA,IACX,CAAA,EACD,EACA,CAACR,EAAc/E,EAAc,aAAcwE,EAAmBa,CAAS,CAAC,EAGzE,OAAApB,EAAC,MAAA,CACC,IAAKuB,GAA2CP,CAAgB,EAChE,IAAKC,EACL,6BAA0B,GAEzB,SAAAI,CAAA,CAAA,CAGP"}