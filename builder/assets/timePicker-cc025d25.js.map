{"version":3,"file":"timePicker-cc025d25.js","sources":["../../src/widgetLibrary/TimePickerWidget/timePicker.tsx"],"sourcesContent":["import { FC, useCallback, useEffect } from \"react\"\nimport { TimePicker } from \"@illa-design/react\"\nimport { AutoHeightContainer } from \"@/widgetLibrary/PublicSector/AutoHeightContainer\"\nimport { InvalidMessage } from \"@/widgetLibrary/PublicSector/InvalidMessage\"\nimport { handleValidateCheck } from \"@/widgetLibrary/PublicSector/InvalidMessage/utils\"\nimport { Label } from \"@/widgetLibrary/PublicSector/Label\"\nimport { TooltipWrapper } from \"@/widgetLibrary/PublicSector/TooltipWrapper\"\nimport {\n  applyLabelAndComponentWrapperStyle,\n  applyValidateMessageWrapperStyle,\n} from \"@/widgetLibrary/PublicSector/TransformWidgetWrapper/style\"\nimport { TimePickerWidgetProps, WrappedTimePickerProps } from \"./interface\"\n\nexport const WrappedTimePicker: FC<WrappedTimePickerProps> = (props) => {\n  const {\n    value,\n    format,\n    placeholder,\n    showClear,\n    disabled,\n    minuteStep,\n    colorScheme,\n    handleOnChange,\n    getValidateMessage,\n    handleUpdateMultiExecutionResult,\n    displayName,\n  } = props\n\n  const changeValue = (value?: string) => {\n    new Promise((resolve) => {\n      const message = getValidateMessage(value)\n      handleUpdateMultiExecutionResult([\n        {\n          displayName,\n          value: {\n            value: value || \"\",\n            validateMessage: message,\n          },\n        },\n      ])\n      resolve(true)\n    }).then(() => {\n      handleOnChange?.()\n    })\n  }\n\n  const clearValue = () => {\n    const message = getValidateMessage(undefined)\n    handleUpdateMultiExecutionResult([\n      {\n        displayName,\n        value: {\n          value: undefined,\n          validateMessage: message,\n        },\n      },\n    ])\n  }\n\n  return (\n    <TimePicker\n      w=\"100%\"\n      step={{ minute: minuteStep }}\n      colorScheme={colorScheme}\n      format={format}\n      value={value}\n      disabled={disabled}\n      placeholder={placeholder}\n      allowClear={showClear}\n      onClear={clearValue}\n      onChange={changeValue}\n    />\n  )\n}\n\nWrappedTimePicker.displayName = \"WrappedTimePicker\"\n\nexport const TimePickerWidget: FC<TimePickerWidgetProps> = (props) => {\n  const {\n    value,\n    displayName,\n    labelPosition,\n    labelFull,\n    label,\n    labelAlign,\n    labelWidth = 33,\n    labelCaption,\n    labelWidthUnit,\n    required,\n    labelHidden,\n    tooltipText,\n    customRule,\n    hideValidationMessage,\n    validateMessage,\n    triggerEventHandler,\n    updateComponentHeight,\n    updateComponentRuntimeProps,\n    deleteComponentRuntimeProps,\n    handleUpdateMultiExecutionResult,\n  } = props\n\n  const getValidateMessage = useCallback(\n    (value?: unknown) => {\n      if (!hideValidationMessage) {\n        const message = handleValidateCheck({\n          value: value ? value : undefined,\n          required,\n          customRule,\n        })\n        const showMessage = message && message.length > 0\n        return showMessage ? message : \"\"\n      }\n      return \"\"\n    },\n    [customRule, hideValidationMessage, required],\n  )\n\n  const handleValidate = useCallback(\n    (value?: unknown) => {\n      const message = getValidateMessage(value)\n      handleUpdateMultiExecutionResult([\n        {\n          displayName,\n          value: {\n            validateMessage: message,\n          },\n        },\n      ])\n      return message\n    },\n    [displayName, getValidateMessage, handleUpdateMultiExecutionResult],\n  )\n\n  useEffect(() => {\n    updateComponentRuntimeProps({\n      setValue: (value: string) => {\n        handleUpdateMultiExecutionResult([\n          {\n            displayName,\n            value: {\n              value,\n            },\n          },\n        ])\n      },\n      clearValue: () => {\n        handleUpdateMultiExecutionResult([\n          {\n            displayName,\n            value: {\n              value: undefined,\n            },\n          },\n        ])\n      },\n      validate: () => {\n        return handleValidate(value)\n      },\n      clearValidation: () => {\n        handleUpdateMultiExecutionResult([\n          {\n            displayName,\n            value: {\n              validateMessage: \"\",\n            },\n          },\n        ])\n      },\n    })\n    return () => {\n      deleteComponentRuntimeProps()\n    }\n  }, [\n    displayName,\n    handleUpdateMultiExecutionResult,\n    updateComponentRuntimeProps,\n    deleteComponentRuntimeProps,\n    handleValidate,\n    value,\n  ])\n\n  const handleOnChange = useCallback(() => {\n    triggerEventHandler(\"change\")\n  }, [triggerEventHandler])\n\n  return (\n    <AutoHeightContainer updateComponentHeight={updateComponentHeight}>\n      <TooltipWrapper tooltipText={tooltipText} tooltipDisabled={!tooltipText}>\n        <div css={applyLabelAndComponentWrapperStyle(labelPosition)}>\n          <Label\n            labelFull={labelFull}\n            label={label}\n            labelAlign={labelAlign}\n            labelWidth={labelWidth}\n            labelCaption={labelCaption}\n            labelWidthUnit={labelWidthUnit}\n            labelPosition={labelPosition}\n            required={required}\n            labelHidden={labelHidden}\n            hasTooltip={!!tooltipText}\n          />\n          <WrappedTimePicker\n            {...props}\n            getValidateMessage={getValidateMessage}\n            handleOnChange={handleOnChange}\n          />\n        </div>\n      </TooltipWrapper>\n      {!hideValidationMessage && (\n        <div\n          css={applyValidateMessageWrapperStyle(\n            labelWidth,\n            labelPosition,\n            labelHidden || !label,\n          )}\n        >\n          <InvalidMessage validateMessage={validateMessage} />\n        </div>\n      )}\n    </AutoHeightContainer>\n  )\n}\n\nTimePickerWidget.displayName = \"TimePickerWidget\"\nexport default TimePickerWidget\n"],"names":["WrappedTimePicker","props","value","format","placeholder","showClear","disabled","minuteStep","colorScheme","handleOnChange","getValidateMessage","handleUpdateMultiExecutionResult","displayName","jsx","TimePicker","message","resolve","TimePickerWidget","labelPosition","labelFull","label","labelAlign","labelWidth","labelCaption","labelWidthUnit","required","labelHidden","tooltipText","customRule","hideValidationMessage","validateMessage","triggerEventHandler","updateComponentHeight","updateComponentRuntimeProps","deleteComponentRuntimeProps","useCallback","handleValidateCheck","handleValidate","useEffect","jsxs","AutoHeightContainer","TooltipWrapper","applyLabelAndComponentWrapperStyle","Label","applyValidateMessageWrapperStyle","InvalidMessage"],"mappings":"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"}