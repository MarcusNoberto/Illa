{"version":3,"file":"index-461ab516.js","sources":["../../src/utils/mediaSourceLoad/utils.ts","../../src/utils/mediaSourceLoad/index.tsx"],"sourcesContent":["export const getReportElementByWidget = (\n  widgetType: string,\n  isProductionMode?: boolean,\n) => {\n  let prefix = isProductionMode ? \"deploy_\" : \"builder_editor_\"\n  switch (widgetType) {\n    case \"IMAGE_WIDGET\":\n      return `${prefix}traffic_not_enough_image`\n    case \"CAROUSEL_WIDGET\":\n      return `${prefix}traffic_not_enough_carousel`\n    case \"VIDEO_WIDGET\":\n      return `${prefix}traffic_not_enough_video`\n    case \"AUDIO_WIDGET\":\n      return `${prefix}traffic_not_enough_audio`\n  }\n}\n","import {\n  HTTP_REQUEST_PUBLIC_BASE_URL,\n  PUBLIC_DRIVE_REQUEST_PREFIX,\n  publicDriveRequest,\n} from \"@illa-public/illa-net\"\nimport {\n  CollarModalType,\n  handleCollaPurchaseError,\n} from \"@illa-public/upgrade-modal\"\nimport { FC, createContext, useCallback, useRef } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { getIsILLAProductMode } from \"@/redux/config/configSelector\"\nimport { Inject, MediaSourceLoadProviderProps } from \"./interface\"\nimport { getReportElementByWidget } from \"./utils\"\n\nexport const MediaSourceLoadContext = createContext<Inject>({} as Inject)\n\nexport const MediaSourceLoadProvider: FC<MediaSourceLoadProviderProps> = ({\n  children,\n}) => {\n  const isShowedCollaError = useRef<boolean>(false)\n  const isProductionMode = useSelector(getIsILLAProductMode)\n\n  const sourceLoadErrorHandler = useCallback(\n    async (sourceURL: string | undefined, widgetType: string) => {\n      if (isShowedCollaError.current || !sourceURL) return\n      let prefix = HTTP_REQUEST_PUBLIC_BASE_URL + PUBLIC_DRIVE_REQUEST_PREFIX\n      if (!sourceURL.includes(prefix)) return\n      try {\n        await publicDriveRequest({\n          url: sourceURL.replace(prefix, \"\"),\n          method: \"GET\",\n        })\n      } catch (e) {\n        let res: boolean = false\n        if (!isShowedCollaError.current) {\n          res = handleCollaPurchaseError(\n            e,\n            CollarModalType.TRAFFIC,\n            getReportElementByWidget(widgetType, isProductionMode)!,\n          )\n        }\n        if (res) {\n          isShowedCollaError.current = true\n        }\n      }\n    },\n    [isProductionMode],\n  )\n  return (\n    <MediaSourceLoadContext.Provider value={{ sourceLoadErrorHandler }}>\n      {children}\n    </MediaSourceLoadContext.Provider>\n  )\n}\n\nMediaSourceLoadContext.displayName = \"MediaSourceLoadContext\"\n"],"names":["getReportElementByWidget","widgetType","isProductionMode","prefix","MediaSourceLoadContext","createContext","MediaSourceLoadProvider","children","isShowedCollaError","useRef","useSelector","getIsILLAProductMode","sourceLoadErrorHandler","useCallback","sourceURL","HTTP_REQUEST_PUBLIC_BASE_URL","PUBLIC_DRIVE_REQUEST_PREFIX","publicDriveRequest","e","res","handleCollaPurchaseError","CollarModalType","jsx"],"mappings":"+KAAa,MAAAA,EAA2B,CACtCC,EACAC,IACG,CACC,IAAAC,EAASD,EAAmB,UAAY,kBAC5C,OAAQD,EAAY,CAClB,IAAK,eACH,MAAO,GAAGE,CAAM,2BAClB,IAAK,kBACH,MAAO,GAAGA,CAAM,8BAClB,IAAK,eACH,MAAO,GAAGA,CAAM,2BAClB,IAAK,eACH,MAAO,GAAGA,CAAM,0BACpB,CACF,ECAaC,EAAyBC,EAAsB,cAAA,EAAY,EAE3DC,EAA4D,CAAC,CACxE,SAAAC,CACF,IAAM,CACE,MAAAC,EAAqBC,SAAgB,EAAK,EAC1CP,EAAmBQ,EAAYC,CAAoB,EAEnDC,EAAyBC,EAAA,YAC7B,MAAOC,EAA+Bb,IAAuB,CACvD,GAAAO,EAAmB,SAAW,CAACM,EAAW,OAC9C,IAAIX,EAASY,EAA+BC,EACxC,GAACF,EAAU,SAASX,CAAM,EAC1B,GAAA,CACF,MAAMc,EAAmB,CACvB,IAAKH,EAAU,QAAQX,EAAQ,EAAE,EACjC,OAAQ,KAAA,CACT,QACMe,EAAG,CACV,IAAIC,EAAe,GACdX,EAAmB,UAChBW,EAAAC,EACJF,EACAG,EAAgB,QAChBrB,EAAyBC,EAAYC,CAAgB,CAAA,GAGrDiB,IACFX,EAAmB,QAAU,GAEjC,CACF,EACA,CAACN,CAAgB,CAAA,EAGjB,OAAAoB,EAAClB,EAAuB,SAAvB,CAAgC,MAAO,CAAE,uBAAAQ,CAAA,EACvC,SAAAL,CACH,CAAA,CAEJ,EAEAH,EAAuB,YAAc"}