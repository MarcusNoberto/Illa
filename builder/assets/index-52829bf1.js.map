{"version":3,"file":"index-52829bf1.js","sources":["../../src/page/App/components/InspectPanel/PanelSetters/DataGridSetter/ColumnButtonGroupSetter/index.tsx"],"sourcesContent":["import { get, isString } from \"lodash-es\"\nimport { FC } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { v4 } from \"uuid\"\nimport { Column } from \"@/page/App/components/InspectPanel/PanelSetters/DragMoveComponent/Column\"\nimport { ColumnContainer } from \"@/page/App/components/InspectPanel/PanelSetters/DragMoveComponent/ColumnContainer\"\nimport { ColumnEmpty } from \"@/page/App/components/InspectPanel/PanelSetters/DragMoveComponent/Empty\"\nimport { getExecutionResult } from \"@/redux/currentApp/executionTree/executionSelector\"\nimport { RootState } from \"@/store\"\nimport { ColumnButtonGroupSetterProps, GroupButton } from \"./interface\"\n\nconst ColumnButtonGroupSetter: FC<ColumnButtonGroupSetterProps> = (props) => {\n  const {\n    attrName,\n    handleUpdateMultiAttrDSL,\n    childrenSetter,\n    value,\n    widgetDisplayName,\n  } = props\n\n  const targetComponentProps = useSelector<RootState, Record<string, any>>(\n    (rootState) => {\n      const executionTree = getExecutionResult(rootState)\n      return get(executionTree, widgetDisplayName, {})\n    },\n  )\n\n  const executeValue: GroupButton[] =\n    get(targetComponentProps, attrName, undefined) ?? []\n\n  return (\n    <ColumnContainer\n      hideTitle\n      columnNum={value?.length ?? 0}\n      onClickNew={() => {\n        handleUpdateMultiAttrDSL?.({\n          [attrName]: [\n            ...(value ?? []),\n            {\n              id: v4(),\n              mappedValue: \"Button\",\n              colorScheme: \"blue\",\n            } as GroupButton,\n          ],\n        })\n      }}\n      attrName={attrName}\n      value={value}\n      handleUpdateMultiAttrDSL={handleUpdateMultiAttrDSL}\n      items={value?.map((v) => v.id) ?? []}\n    >\n      {value && value.length > 0 ? (\n        value.map((v, index) => {\n          return (\n            <Column\n              key={v.id}\n              label={\n                isString(executeValue[index].mappedValue)\n                  ? executeValue[index].mappedValue\n                  : JSON.stringify(executeValue[index].mappedValue)\n              }\n              showDelete={true}\n              showVisible={false}\n              attrPath={`${attrName}.${index}`}\n              childrenSetter={childrenSetter}\n              onDelete={(id) => {\n                const finalColumns = value.filter((item) => item.id !== id)\n                handleUpdateMultiAttrDSL?.({\n                  [attrName]: finalColumns,\n                })\n              }}\n              id={v.id}\n              widgetDisplayName={widgetDisplayName}\n            />\n          )\n        })\n      ) : (\n        <ColumnEmpty />\n      )}\n    </ColumnContainer>\n  )\n}\n\nColumnButtonGroupSetter.displayName = \"ColumnButtonGroupSetter\"\n\nexport default ColumnButtonGroupSetter\n"],"names":["ColumnButtonGroupSetter","props","attrName","handleUpdateMultiAttrDSL","childrenSetter","value","widgetDisplayName","targetComponentProps","useSelector","rootState","executionTree","getExecutionResult","get","executeValue","jsx","ColumnContainer","v4","v","index","Column","isString","id","finalColumns","item","ColumnEmpty"],"mappings":"8TAWM,MAAAA,EAA6DC,GAAU,CACrE,KAAA,CACJ,SAAAC,EACA,yBAAAC,EACA,eAAAC,EACA,MAAAC,EACA,kBAAAC,CACE,EAAAL,EAEEM,EAAuBC,EAC1BC,GAAc,CACP,MAAAC,EAAgBC,EAAmBF,CAAS,EAClD,OAAOG,EAAIF,EAAeJ,EAAmB,CAAE,CAAA,CACjD,CAAA,EAGIO,EACJD,EAAIL,EAAsBL,EAAU,MAAS,GAAK,GAGlD,OAAAY,EAACC,EAAA,CACC,UAAS,GACT,WAAWV,GAAA,YAAAA,EAAO,SAAU,EAC5B,WAAY,IAAM,CACWF,GAAA,MAAAA,EAAA,CACzB,CAACD,CAAQ,EAAG,CACV,GAAIG,GAAS,CAAC,EACd,CACE,GAAIW,EAAG,EACP,YAAa,SACb,YAAa,MACf,CACF,CAAA,EAEJ,EACA,SAAAd,EACA,MAAAG,EACA,yBAAAF,EACA,OAAOE,GAAA,YAAAA,EAAO,IAAKY,GAAMA,EAAE,MAAO,CAAC,EAElC,SAAAZ,GAASA,EAAM,OAAS,EACvBA,EAAM,IAAI,CAACY,EAAGC,IAEVJ,EAACK,EAAA,CAEC,MACEC,EAASP,EAAaK,CAAK,EAAE,WAAW,EACpCL,EAAaK,CAAK,EAAE,YACpB,KAAK,UAAUL,EAAaK,CAAK,EAAE,WAAW,EAEpD,WAAY,GACZ,YAAa,GACb,SAAU,GAAGhB,CAAQ,IAAIgB,CAAK,GAC9B,eAAAd,EACA,SAAWiB,GAAO,CAChB,MAAMC,EAAejB,EAAM,OAAQkB,GAASA,EAAK,KAAOF,CAAE,EAC/BlB,GAAA,MAAAA,EAAA,CACzB,CAACD,CAAQ,EAAGoB,CAAA,EAEhB,EACA,GAAIL,EAAE,GACN,kBAAAX,CAAA,EAjBKW,EAAE,EAAA,CAoBZ,EAEDH,EAACU,EAAY,EAAA,CAAA,CAAA,CAIrB,EAEAxB,EAAwB,YAAc"}