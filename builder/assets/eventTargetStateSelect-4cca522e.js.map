{"version":3,"file":"eventTargetStateSelect-4cca522e.js","sources":["../../src/page/App/components/InspectPanel/PanelSetters/SelectSetter/eventTargetStateSelect.tsx"],"sourcesContent":["import { FC, useMemo } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { getGlobalDataExecutionResult } from \"@/redux/currentApp/executionTree/executionSelector\"\nimport { BaseSelectSetterProps } from \"./interface\"\nimport SearchSelectSetter from \"./searchSelect\"\n\nconst EventtargetStateSelect: FC<BaseSelectSetterProps> = (props) => {\n  const { value } = props\n\n  const globalDataResult = useSelector(getGlobalDataExecutionResult)\n\n  const finalOptions = useMemo(() => {\n    return Object.keys(globalDataResult)\n      .filter((key) => !key.startsWith(\"$\"))\n      .map((key) => ({\n        label: key,\n        value: key,\n      }))\n  }, [globalDataResult])\n\n  const finalValue = useMemo(() => {\n    const index = finalOptions.findIndex((option) => {\n      return option.value === value\n    })\n    if (index !== -1) return value\n    return undefined\n  }, [finalOptions, value])\n\n  return (\n    <SearchSelectSetter\n      {...props}\n      value={finalValue as string}\n      options={finalOptions}\n    />\n  )\n}\n\nEventtargetStateSelect.displayName = \"EventtargetStateSelect\"\n\nexport default EventtargetStateSelect\n"],"names":["EventtargetStateSelect","props","value","globalDataResult","useSelector","getGlobalDataExecutionResult","finalOptions","useMemo","key","finalValue","option","jsx","SearchSelectSetter"],"mappings":"ubAMM,MAAAA,EAAqDC,GAAU,CAC7D,KAAA,CAAE,MAAAC,CAAU,EAAAD,EAEZE,EAAmBC,EAAYC,CAA4B,EAE3DC,EAAeC,EAAAA,QAAQ,IACpB,OAAO,KAAKJ,CAAgB,EAChC,OAAQK,GAAQ,CAACA,EAAI,WAAW,GAAG,CAAC,EACpC,IAAKA,IAAS,CACb,MAAOA,EACP,MAAOA,CACP,EAAA,EACH,CAACL,CAAgB,CAAC,EAEfM,EAAaF,EAAAA,QAAQ,IAAM,CAI/B,GAHcD,EAAa,UAAWI,GAC7BA,EAAO,QAAUR,CACzB,IACa,GAAW,OAAAA,CAClB,EACN,CAACI,EAAcJ,CAAK,CAAC,EAGtB,OAAAS,EAACC,EAAA,CACE,GAAGX,EACJ,MAAOQ,EACP,QAASH,CAAA,CAAA,CAGf,EAEAN,EAAuB,YAAc"}