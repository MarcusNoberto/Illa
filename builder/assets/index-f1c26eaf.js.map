{"version":3,"file":"index-f1c26eaf.js","sources":["../../src/page/App/components/Actions/ActionPanel/ElasticSearchPanel/style.ts","../../src/page/App/components/Actions/ActionPanel/ElasticSearchPanel/index.tsx"],"sourcesContent":["import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const esItemStyle = css`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  min-height: 48px;\n  padding: 0 16px;\n`\n\nexport const actionItemContainer = css`\n  padding: 8px 0;\n`\n\nexport const esItemLabelStyle = css`\n  min-width: 160px;\n  font-size: 14px;\n  font-weight: 500;\n  text-align: right;\n  color: ${getColor(\"grayBlue\", \"02\")};\n`\n","import {\n  ElasticSearchBodyContentType,\n  ElasticSearchIDEditorType,\n  ElasticSearchQueryContentType,\n} from \"@illa-public/public-configs\"\nimport {\n  ActionItem,\n  ElasticSearchAction,\n  ElasticSearchActionRequestType,\n  ElasticSearchActionType,\n} from \"@illa-public/public-types\"\nimport { FC, useCallback, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { SelectValue } from \"@illa-design/react\"\nimport {\n  CODE_LANG,\n  CODE_TYPE,\n} from \"@/components/CodeEditor/CodeMirror/extensions/interface\"\nimport { SingleTypeComponent } from \"@/page/App/components/Actions/ActionPanel/SingleTypeComponent\"\nimport { TransformerComponent } from \"@/page/App/components/Actions/ActionPanel/TransformerComponent\"\nimport { InputEditor } from \"@/page/App/components/Actions/InputEditor\"\nimport {\n  getCachedAction,\n  getSelectedAction,\n} from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { VALIDATION_TYPES } from \"@/utils/validationFactory\"\nimport { actionItemContainer } from \"./style\"\n\nconst esActionOptions = [\n  {\n    label: ElasticSearchActionType.SEARCH,\n    value: ElasticSearchActionRequestType.SEARCH,\n  },\n  {\n    label: ElasticSearchActionType.GET_ONE,\n    value: ElasticSearchActionRequestType.GET_ONE,\n  },\n  {\n    label: ElasticSearchActionType.INSERT_ONE,\n    value: ElasticSearchActionRequestType.INSERT_ONE,\n  },\n  {\n    label: ElasticSearchActionType.UPDATE_ONE,\n    value: ElasticSearchActionRequestType.UPDATE_ONE,\n  },\n  {\n    label: ElasticSearchActionType.DELETE_ONE,\n    value: ElasticSearchActionRequestType.DELETE_ONE,\n  },\n]\n\nconst ElasticSearchPanel: FC = () => {\n  const { t } = useTranslation()\n  const dispatch = useDispatch()\n  const cachedAction = useSelector(\n    getCachedAction,\n  ) as ActionItem<ElasticSearchAction>\n\n  const selectedAction = useSelector(getSelectedAction)!!\n  let content = cachedAction.content as ElasticSearchAction\n\n  const isShowID = useMemo(\n    () => ElasticSearchIDEditorType.includes(cachedAction.content.operation),\n    [cachedAction.content],\n  )\n  const isBodyContent = useMemo(\n    () => ElasticSearchBodyContentType.includes(cachedAction.content.operation),\n    [cachedAction.content],\n  )\n  const isQueryContent = useMemo(\n    () =>\n      ElasticSearchQueryContentType.includes(cachedAction.content.operation),\n    [cachedAction.content],\n  )\n\n  const handleValueChange = useCallback(\n    (key: string) => (value: string) => {\n      dispatch(\n        configActions.updateCachedAction({\n          ...cachedAction,\n          content: {\n            ...cachedAction.content,\n            [key]: value,\n          },\n        }),\n      )\n    },\n    [cachedAction, dispatch],\n  )\n\n  const handleSelectedValueChange = useCallback(\n    (value: SelectValue) => {\n      const content = {\n        operation: value,\n        index: cachedAction.content.index,\n      } as ElasticSearchAction\n      if (\n        cachedAction.resourceID === selectedAction.resourceID &&\n        (selectedAction.content as ElasticSearchAction).operation === value\n      ) {\n        if (isShowID) {\n          content[\"id\"] =\n            (selectedAction.content as ElasticSearchAction)?.id || \"\"\n        }\n        if (isBodyContent) {\n          content[\"body\"] =\n            (selectedAction.content as ElasticSearchAction)?.body || \"\"\n        }\n        if (isQueryContent) {\n          content[\"query\"] =\n            (selectedAction.content as ElasticSearchAction)?.query || \"\"\n        }\n      }\n      dispatch(\n        configActions.updateCachedAction({\n          ...cachedAction,\n          content,\n        }),\n      )\n    },\n    [\n      cachedAction,\n      dispatch,\n      isBodyContent,\n      isQueryContent,\n      isShowID,\n      selectedAction.content,\n      selectedAction.resourceID,\n    ],\n  )\n\n  return (\n    <div css={actionItemContainer}>\n      <SingleTypeComponent\n        componentType=\"select\"\n        value={content.operation}\n        title={t(\"editor.action.panel.elastic.action_type\")}\n        options={esActionOptions}\n        onSelectedValueChange={handleSelectedValueChange}\n      />\n      {isBodyContent && (\n        <InputEditor\n          value={content.body ?? \"\"}\n          onChange={handleValueChange(\"body\")}\n          title={t(\"editor.action.panel.elastic.body\")}\n          lineNumbers\n          style={{ height: \"88px\" }}\n          expectedType={VALIDATION_TYPES.STRING}\n          mode={CODE_LANG.JAVASCRIPT}\n          codeType={CODE_TYPE.EXPRESSION}\n          canShowCompleteInfo\n        />\n      )}\n      {isQueryContent && (\n        <InputEditor\n          value={content.query ?? \"\"}\n          onChange={handleValueChange(\"query\")}\n          title={t(\"editor.action.panel.elastic.query\")}\n          lineNumbers\n          expectedType={VALIDATION_TYPES.STRING}\n          mode={CODE_LANG.JAVASCRIPT}\n          style={{ height: \"88px\" }}\n          codeType={CODE_TYPE.EXPRESSION}\n          canShowCompleteInfo\n        />\n      )}\n      <InputEditor\n        value={content.index}\n        onChange={handleValueChange(\"index\")}\n        title={t(\"editor.action.panel.elastic.index\")}\n        expectedType={VALIDATION_TYPES.STRING}\n        mode={CODE_LANG.JAVASCRIPT}\n        codeType={CODE_TYPE.EXPRESSION}\n      />\n      {isShowID && (\n        <InputEditor\n          value={content.id ?? \"\"}\n          onChange={handleValueChange(\"id\")}\n          title={t(\"editor.action.panel.elastic.id\")}\n          expectedType={VALIDATION_TYPES.STRING}\n          mode={CODE_LANG.JAVASCRIPT}\n          codeType={CODE_TYPE.EXPRESSION}\n          canShowCompleteInfo\n        />\n      )}\n      <TransformerComponent />\n    </div>\n  )\n}\n\nElasticSearchPanel.displayName = \"ElasticSearchPanel\"\nexport default ElasticSearchPanel\n"],"names":["css","actionItemContainer","getColor","esActionOptions","ElasticSearchActionType","ElasticSearchActionRequestType","ElasticSearchPanel","t","useTranslation","dispatch","useDispatch","cachedAction","useSelector","getCachedAction","selectedAction","getSelectedAction","content","isShowID","useMemo","ElasticSearchIDEditorType","isBodyContent","ElasticSearchBodyContentType","isQueryContent","ElasticSearchQueryContentType","handleValueChange","useCallback","key","value","configActions","handleSelectedValueChange","_a","_b","_c","jsxs","jsx","SingleTypeComponent","InputEditor","VALIDATION_TYPES","CODE_LANG","CODE_TYPE","TransformerComponent"],"mappings":"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"}