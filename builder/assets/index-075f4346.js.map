{"version":3,"file":"index-075f4346.js","sources":["../../src/page/App/components/Actions/ActionPanel/SMTPPanel/style.ts","../../src/page/App/components/Actions/ActionPanel/SMTPPanel/index.tsx"],"sourcesContent":["import { css } from \"@emotion/react\"\n\nexport const actionItemContainer = css`\n  padding: 8px 0;\n`\n","import {\n  ActionItem,\n  SMPTAction,\n  SMTPActionContenType,\n} from \"@illa-public/public-types\"\nimport { FC, useCallback } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { CODE_LANG } from \"@/components/CodeEditor/CodeMirror/extensions/interface\"\nimport { SingleTypeComponent } from \"@/page/App/components/Actions/ActionPanel/SingleTypeComponent\"\nimport { TransformerComponent } from \"@/page/App/components/Actions/ActionPanel/TransformerComponent\"\nimport { InputEditor } from \"@/page/App/components/Actions/InputEditor\"\nimport { getCachedAction } from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { VALIDATION_TYPES } from \"@/utils/validationFactory\"\nimport { actionItemContainer } from \"./style\"\n\nconst SMTPPanel: FC = () => {\n  const { t } = useTranslation()\n  const cachedAction = useSelector(getCachedAction) as ActionItem<SMPTAction>\n  const content = cachedAction.content as SMPTAction\n  const isHTML = content.contentType === SMTPActionContenType.HTML\n  const dispatch = useDispatch()\n\n  const handleValueChange = useCallback(\n    (name: string) => (value: string | boolean) => {\n      dispatch(\n        configActions.updateCachedAction({\n          ...cachedAction,\n          content: {\n            ...cachedAction.content,\n            [name]: value,\n          },\n        }),\n      )\n    },\n    [dispatch, cachedAction],\n  )\n\n  const handleShowReplyToEmail = useCallback(\n    (show: boolean) => {\n      handleValueChange(\"setReplyTo\")(show)\n    },\n    [handleValueChange],\n  )\n\n  const handleBodyTypeChange = useCallback(() => {\n    const contentType = isHTML\n      ? SMTPActionContenType.PLAIN\n      : SMTPActionContenType.HTML\n    handleValueChange(\"contentType\")(contentType)\n  }, [handleValueChange, isHTML])\n\n  return (\n    <div css={actionItemContainer}>\n      <InputEditor\n        title={t(\"editor.action.panel.smtp.from_email\")}\n        mode={CODE_LANG.JAVASCRIPT}\n        value={content.from}\n        onChange={handleValueChange(\"from\")}\n        expectedType={VALIDATION_TYPES.STRING}\n      />\n      <SingleTypeComponent\n        componentType=\"checkbox\"\n        value={content.setReplyTo}\n        onChange={handleShowReplyToEmail}\n        checkoutTitle={t(\"editor.action.panel.smtp.set_replay_email\")}\n      />\n      {content.setReplyTo && (\n        <InputEditor\n          title={t(\"editor.action.panel.smtp.replay_email\")}\n          mode={CODE_LANG.JAVASCRIPT}\n          value={content.replyTo}\n          onChange={handleValueChange(\"replyTo\")}\n          expectedType={VALIDATION_TYPES.STRING}\n        />\n      )}\n      <InputEditor\n        title={t(\"editor.action.panel.smtp.to_email\")}\n        mode={CODE_LANG.JAVASCRIPT}\n        value={content.to ?? \"\"}\n        placeholder={t(\"editor.action.panel.smtp.placeholder.emails\")}\n        onChange={handleValueChange(\"to\")}\n        expectedType={VALIDATION_TYPES.ARRAY}\n      />\n      <InputEditor\n        title={t(\"editor.action.panel.smtp.bcc_email\")}\n        mode={CODE_LANG.JAVASCRIPT}\n        placeholder={t(\"editor.action.panel.smtp.placeholder.emails\")}\n        value={content.bcc ?? \"\"}\n        onChange={handleValueChange(\"bcc\")}\n        expectedType={VALIDATION_TYPES.ARRAY}\n      />\n      <InputEditor\n        title={t(\"editor.action.panel.smtp.cc_email\")}\n        mode={CODE_LANG.JAVASCRIPT}\n        value={content.cc ?? \"\"}\n        placeholder={t(\"editor.action.panel.smtp.placeholder.emails\")}\n        onChange={handleValueChange(\"cc\")}\n        expectedType={VALIDATION_TYPES.ARRAY}\n      />\n      <InputEditor\n        title={t(\"editor.action.panel.smtp.subject\")}\n        mode={CODE_LANG.JAVASCRIPT}\n        value={content.subject}\n        onChange={handleValueChange(\"subject\")}\n        expectedType={VALIDATION_TYPES.STRING}\n      />\n      <InputEditor\n        title={t(\"editor.action.panel.smtp.body\")}\n        subtitle={\n          isHTML\n            ? t(\"editor.action.panel.smtp.use_raw\")\n            : t(\"editor.action.panel.smtp.use_html\")\n        }\n        handleSubtitleClick={handleBodyTypeChange}\n        lineNumbers\n        style={{ height: \"88px\" }}\n        mode={isHTML ? CODE_LANG.HTML : CODE_LANG.JAVASCRIPT}\n        value={content.body}\n        onChange={handleValueChange(\"body\")}\n        expectedType={VALIDATION_TYPES.STRING}\n      />\n      <InputEditor\n        title={t(\"editor.action.panel.smtp.attachment\")}\n        mode={CODE_LANG.JAVASCRIPT}\n        value={content.attachment ?? \"\"}\n        placeholder={t(\"editor.action.panel.smtp.placeholder.attachment\")}\n        onChange={handleValueChange(\"attachment\")}\n        expectedType={VALIDATION_TYPES.ARRAY}\n      />\n      <TransformerComponent />\n    </div>\n  )\n}\n\nSMTPPanel.displayName = \"SMTPPanel\"\nexport default SMTPPanel\n"],"names":["actionItemContainer","css","SMTPPanel","t","useTranslation","cachedAction","useSelector","getCachedAction","content","isHTML","SMTPActionContenType","dispatch","useDispatch","handleValueChange","useCallback","name","value","configActions","handleShowReplyToEmail","show","handleBodyTypeChange","contentType","jsxs","jsx","InputEditor","CODE_LANG","VALIDATION_TYPES","SingleTypeComponent","TransformerComponent"],"mappings":"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"}