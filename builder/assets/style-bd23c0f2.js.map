{"version":3,"file":"style-bd23c0f2.js","sources":["../../src/hooks/useInitApp.tsx","../../src/page/App/style.tsx","../../src/redux/config/configListener.ts","../../src/redux/currentApp/action/actionListener.ts","../../src/page/App/Module/PageNavBar/style.tsx"],"sourcesContent":["import { getCurrentTeamInfo } from \"@illa-public/user-data\"\nimport { isCloudVersion } from \"@illa-public/utils\"\nimport { useCallback, useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useParams } from \"react-router-dom\"\nimport { useDestroyApp } from \"@/hooks/useDestoryExecutionTree\"\nimport { CurrentAppResp } from \"@/page/App/resp/currentAppResp\"\nimport { getIsOnline } from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { IllaMode } from \"@/redux/config/configState\"\nimport { actionActions } from \"@/redux/currentApp/action/actionSlice\"\nimport { appInfoActions } from \"@/redux/currentApp/appInfo/appInfoSlice\"\nimport { DashboardAppInitialState } from \"@/redux/currentApp/appInfo/appInfoState\"\nimport { componentsActions } from \"@/redux/currentApp/components/componentsSlice\"\nimport { executionActions } from \"@/redux/currentApp/executionTree/executionSlice\"\n// import { dashboardTeamAIAgentActions } from \"@/redux/dashboard/teamAIAgents/dashboardTeamAIAgentSlice\"\nimport { resourceActions } from \"@/redux/resource/resourceSlice\"\nimport { fetchTeamAgent } from \"@/services/agent\"\nimport { fetchPrivateAppInitData } from \"@/services/apps\"\nimport { fetchResources } from \"@/services/resource\"\nimport store from \"@/store\"\nimport { DisplayNameGenerator } from \"@/utils/generators/generateDisplayName\"\nimport { aiAgentActions } from \"../redux/aiAgent/dashboardTeamAIAgentSlice\"\nimport { flatTreeToMap } from \"../utils/componentNode/flatTree\"\nimport { fixedActionToNewAction } from \"./utils/fixedAction\"\nimport { fixedComponentsToNewComponents } from \"./utils/fixedComponents\"\n\nexport const updateCurrentAppInfo = (\n  data: CurrentAppResp,\n  mode: IllaMode,\n  appId: string,\n  teamID: string,\n  uid: string,\n) => {\n  store.dispatch(configActions.updateIllaMode(mode))\n  store.dispatch(appInfoActions.updateAppInfoReducer(data.appInfo))\n  const fixedComponents = fixedComponentsToNewComponents(data.components)\n  store.dispatch(\n    componentsActions.initComponentReducer(flatTreeToMap(fixedComponents)),\n  )\n  const fixedActions = fixedActionToNewAction(data.actions)\n  store.dispatch(actionActions.initActionListReducer(fixedActions))\n\n  DisplayNameGenerator.initApp(appId, teamID, uid)\n  DisplayNameGenerator.updateDisplayNameList(data.components, fixedActions)\n  store.dispatch(executionActions.startExecutionReducer())\n  if (mode === \"edit\" && fixedActions.length > 0) {\n    store.dispatch(configActions.changeSelectedAction(fixedActions[0]))\n  }\n}\n\nexport const useInitBuilderApp = (mode: IllaMode) => {\n  const { appId = \"\" } = useParams()\n  const dispatch = useDispatch()\n  const isOnline = useSelector(getIsOnline)\n  const teamInfo = useSelector(getCurrentTeamInfo)\n\n  const [loadingState, setLoadingState] = useState(true)\n  const [errorState, setErrorState] = useState(false)\n\n  // version = -1 represents the latest edited version of the app.\n  // version = -2 represents the latest released version of the user.\n  const version = mode === \"production\" ? \"-2\" : \"0\"\n\n  const { uid, teamID } = {\n    uid: teamInfo?.uid ?? \"\",\n    teamID: teamInfo?.id ?? \"\",\n  }\n\n  useDestroyApp()\n\n  const handleCurrentApp = useCallback(\n    (data: CurrentAppResp) => {\n      updateCurrentAppInfo(data, mode, appId, teamID, uid)\n    },\n    [mode, appId, teamID, uid],\n  )\n\n  useEffect(() => {\n    const controller = new AbortController()\n    if (isOnline) {\n      setErrorState(false)\n      setLoadingState(true)\n      if (isCloudVersion) {\n        Promise.all([\n          fetchPrivateAppInitData(appId, version, controller.signal),\n          fetchResources(controller.signal),\n          fetchTeamAgent(controller.signal),\n        ])\n          .then((res) => {\n            dispatch(resourceActions.updateResourceListReducer(res[1].data))\n            handleCurrentApp(res[0].data)\n            dispatch(\n              aiAgentActions.updateTeamAIAgentListReducer(\n                res[2].data.aiAgentList,\n              ),\n            )\n          })\n          .catch(() => {\n            setErrorState(true)\n          })\n          .finally(() => {\n            setLoadingState(false)\n          })\n      } else {\n        Promise.all([\n          fetchPrivateAppInitData(appId, version, controller.signal),\n          fetchResources(controller.signal),\n        ])\n          .then((res) => {\n            dispatch(resourceActions.updateResourceListReducer(res[1].data))\n            handleCurrentApp(res[0].data)\n          })\n          .catch(() => {\n            setErrorState(true)\n          })\n          .finally(() => {\n            setLoadingState(false)\n          })\n      }\n    }\n\n    return () => {\n      controller.abort()\n      dispatch(appInfoActions.updateAppInfoReducer(DashboardAppInitialState))\n    }\n  }, [appId, dispatch, handleCurrentApp, isOnline, teamID, version])\n\n  return { loadingState, errorState }\n}\n","import { css } from \"@emotion/react\"\nimport { getColor, globalColor, illaPrefix } from \"@illa-design/react\"\nimport { LEFT_PANEL_WIDTH, NAVBAR_HEIGHT, RIGHT_PANEL_WIDTH } from \"@/style\"\n\nexport const editorContainerStyle = css`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  width: 100vw;\n  position: relative;\n`\n\nexport const contentStyle = css`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  background: #fafafb;\n  flex-grow: 1;\n  width: 100%;\n  overflow: auto;\n`\n\nexport const loadingStyle = css`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nexport const navbarStyle = css`\n  box-sizing: border-box;\n  width: 100%;\n  height: ${NAVBAR_HEIGHT}px;\n  flex: none;\n`\n\nexport const leftPanelStyle = css`\n  width: ${LEFT_PANEL_WIDTH}px;\n  height: 100%;\n  min-width: ${LEFT_PANEL_WIDTH}px;\n  overflow: hidden;\n  box-sizing: border-box;\n  border-right: 1px solid ${globalColor(`--${illaPrefix}-grayBlue-08`)};\n  background: ${globalColor(`--${illaPrefix}-white-01`)};\n  padding-bottom: 48px;\n`\n\nexport const centerPanelStyle = css`\n  height: 100%;\n  width: 100%;\n`\n\nexport const bottomPanelStyle = css`\n  box-sizing: border-box;\n  width: 100%;\n`\n\nexport const rightPanelStyle = css`\n  box-sizing: border-box;\n  width: ${RIGHT_PANEL_WIDTH}px;\n  min-width: ${RIGHT_PANEL_WIDTH}px;\n  height: 100%;\n  border-left: 1px solid ${globalColor(`--${illaPrefix}-grayBlue-08`)};\n  background: ${globalColor(`--${illaPrefix}-white-01`)};\n`\n\nexport const middlePanelStyle = css`\n  flex-grow: 1;\n  min-width: ${RIGHT_PANEL_WIDTH}px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  background: ${globalColor(`--${illaPrefix}-white-01`)};\n`\n\nexport const modalStyle = css`\n  position: absolute;\n  top: 47px;\n  width: 100vw;\n  height: calc(100vh - 47px);\n  z-index: 100;\n  display: flex;\n  justify-content: center;\n  user-select: none;\n`\n\nexport const messageWrapperStyle = css`\n  position: absolute;\n  top: 17px;\n  height: 40px;\n  background-color: ${getColor(\"white\", \"01\")};\n  padding: 9px 16px;\n  border: 1px solid ${getColor(\"grayBlue\", \"08\")};\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);\n  border-radius: 2px;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`\n\nexport const waringIconStyle = css`\n  color: ${getColor(\"orange\", \"03\")};\n  font-size: 16px;\n`\n","import { UnknownAction, Unsubscribe, isAnyOf } from \"@reduxjs/toolkit\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { AppListenerEffectAPI, AppStartListening } from \"@/store\"\nimport { searchParent } from \"@/utils/componentNode/search\"\nimport { updateCurrentAllComponentsAttachedUsers } from \"../currentApp/collaborators/collaboratorsHandlers\"\nimport { cursorActions } from \"../currentApp/cursor/cursorSlice\"\nimport { getWidgetExecutionResult } from \"../currentApp/executionTree/executionSelector\"\nimport { getClientWidgetLayoutInfo } from \"../currentApp/layoutInfo/layoutInfoSelector\"\n\nexport const handleUpdateSelectedComponentExecution = (\n  action: ReturnType<typeof configActions.updateSelectedComponent>,\n  listenerApi: AppListenerEffectAPI,\n) => {\n  const currentComponentsAttachedUsers =\n    listenerApi.getState().currentApp.collaborators.components\n  const widgetLayoutInfo = getClientWidgetLayoutInfo(listenerApi.getState())\n\n  const needExpandDisplayName = action.payload\n    .map((displayName) => {\n      return searchParent(displayName, widgetLayoutInfo)\n    })\n    .flat()\n  listenerApi.dispatch(\n    configActions.addExpandedWidgetReducer(needExpandDisplayName),\n  )\n  updateCurrentAllComponentsAttachedUsers(\n    action.payload,\n    currentComponentsAttachedUsers,\n  )\n}\n\nasync function handleChangeSelectedActionExecution(\n  action: ReturnType<typeof configActions.changeSelectedAction>,\n  listenerApi: AppListenerEffectAPI,\n) {\n  listenerApi.dispatch(configActions.updateCachedAction(action.payload))\n}\n\nconst getAllChildrenDisplayName = (\n  nodeDisplayName: string,\n  displayNameMapProps: Record<string, any>,\n): string[] => {\n  let result = [nodeDisplayName]\n  const node = displayNameMapProps[nodeDisplayName]\n  const children: string[] = node?.$childrenNode || []\n  if (children.length > 0) {\n    children.forEach((child) => {\n      result = [\n        ...result,\n        ...getAllChildrenDisplayName(child, displayNameMapProps),\n      ]\n    })\n  }\n  return result\n}\n\nconst batchUpdateComponentStatusInfoEffect = (\n  action: UnknownAction,\n  listenApi: AppListenerEffectAPI,\n) => {\n  if (\n    configActions.setDraggingNodeIDsReducer.match(action) ||\n    configActions.setResizingNodeIDsReducer.match(action)\n  ) {\n    const { payload } = action\n    let allChildrenDisplayName: string[] = []\n    const displayNameMapProps = getWidgetExecutionResult(listenApi.getState())\n    payload.forEach((displayName) => {\n      allChildrenDisplayName = [\n        ...allChildrenDisplayName,\n        ...getAllChildrenDisplayName(displayName, displayNameMapProps),\n      ]\n    })\n    listenApi.dispatch(\n      cursorActions.filterCursorReducer(allChildrenDisplayName),\n    )\n  }\n}\n\nexport function setupConfigListeners(\n  startListening: AppStartListening,\n): Unsubscribe {\n  const subscriptions = [\n    startListening({\n      actionCreator: configActions.changeSelectedAction,\n      effect: handleChangeSelectedActionExecution,\n    }),\n    startListening({\n      actionCreator: configActions.updateSelectedComponent,\n      effect: handleUpdateSelectedComponentExecution,\n    }),\n    startListening({\n      matcher: isAnyOf(\n        configActions.setDraggingNodeIDsReducer,\n        configActions.setResizingNodeIDsReducer,\n      ),\n      effect: batchUpdateComponentStatusInfoEffect,\n    }),\n  ]\n\n  return () => {\n    subscriptions.forEach((unsubscribe) => unsubscribe())\n  }\n}\n","import { ActionContent, ActionItem } from \"@illa-public/public-types\"\nimport { UnknownAction, Unsubscribe, isAnyOf } from \"@reduxjs/toolkit\"\nimport {\n  getCachedAction,\n  getIsILLAGuideMode,\n} from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { actionActions } from \"@/redux/currentApp/action/actionSlice\"\nimport { getActionExecutionResult } from \"@/redux/currentApp/executionTree/executionSelector\"\nimport { fetchBatchUpdateAction } from \"@/services/action\"\nimport { AppListenerEffectAPI, AppStartListening } from \"@/store\"\nimport { registerActionPeriod } from \"@/utils/action/runAction\"\nimport { mixedChangeDisplayNameHelper } from \"@/utils/changeDisplayNameHelper\"\nimport { UpdateActionSlicePropsPayload } from \"./actionState\"\n\nasync function handleAddActionItemEffect(\n  action: ReturnType<typeof actionActions.addActionItemReducer>,\n  listenerApi: AppListenerEffectAPI,\n) {\n  listenerApi.dispatch(configActions.changeSelectedAction(action.payload))\n}\n\nasync function handleUpdateActionItem(\n  action: ReturnType<typeof actionActions.updateActionItemReducer>,\n  listenerApi: AppListenerEffectAPI,\n) {\n  if (\n    action.payload.displayName ===\n    listenerApi.getState().config.selectedAction?.displayName\n  ) {\n    listenerApi.dispatch(configActions.changeSelectedAction(action.payload))\n  }\n\n  const displayName = action.payload.displayName\n\n  const actionExecutionResult = getActionExecutionResult(listenerApi.getState())\n  const currentAction = actionExecutionResult[displayName]\n  if (\n    currentAction &&\n    currentAction?.config?.advancedConfig.isPeriodically &&\n    currentAction?.config?.advancedConfig.periodInterval\n  ) {\n    registerActionPeriod(currentAction)\n  }\n}\n\nasync function handleBatchUpdateActionItem(\n  action: ReturnType<typeof actionActions.batchUpdateActionItemReducer>,\n  listenerApi: AppListenerEffectAPI,\n) {\n  const selectedAction = listenerApi.getState().config.selectedAction\n  const targetSelectedAction = action.payload.find(\n    (action) => action.actionID === selectedAction?.actionID,\n  )\n  if (targetSelectedAction) {\n    listenerApi.dispatch(\n      configActions.changeSelectedAction(targetSelectedAction),\n    )\n  }\n}\n\nconst handleUpdateDisplayNameEffect = (\n  action: ReturnType<typeof actionActions.updateActionDisplayNameReducer>,\n  listenerApi: AppListenerEffectAPI,\n) => {\n  const { oldDisplayName, newDisplayName } = action.payload\n  mixedChangeDisplayNameHelper(listenerApi, oldDisplayName, newDisplayName)\n}\n\nconst handleUpdateAsyncEffect = (\n  action: UnknownAction,\n  listenerApi: AppListenerEffectAPI,\n) => {\n  const rootState = listenerApi.getState()\n  const currentSelectedID = rootState.config.selectedAction?.actionID\n  const allChangedActions: ActionItem<ActionContent>[] = []\n  if (actionActions.updateActionDisplayNameReducer.match(action)) {\n    const { actionID } = action.payload\n    if (actionID === rootState.config.selectedAction?.actionID) {\n      const currentAction = rootState.currentApp.action.find(\n        (item) => item.actionID === actionID,\n      )\n      if (!currentAction) return\n      const cachedAction = getCachedAction(listenerApi.getState())\n      listenerApi.dispatch(configActions.changeSelectedAction(currentAction))\n      if (!cachedAction) return\n      listenerApi.dispatch(\n        configActions.updateCachedAction({\n          ...cachedAction,\n          displayName: action.payload.newDisplayName,\n        }),\n      )\n      allChangedActions.push(currentAction)\n    }\n  } else if (\n    actionActions.batchUpdateMultiActionSlicePropsReducer.match(action)\n  ) {\n    const currentActionUpdateSlice = action.payload.find(\n      (item: UpdateActionSlicePropsPayload) =>\n        item.actionID === currentSelectedID,\n    )\n    if (!currentActionUpdateSlice) return\n    const currentActionID = currentActionUpdateSlice.actionID\n    const currentAction = rootState.currentApp.action.find(\n      (item) => item.actionID === currentActionID,\n    )\n    if (!currentAction) return\n    listenerApi.dispatch(configActions.changeSelectedAction(currentAction))\n    action.payload.forEach((payloadAction) => {\n      const cAction = rootState.currentApp.action.find(\n        (item) => item.actionID === payloadAction.actionID,\n      )\n      if (cAction) {\n        allChangedActions.push(cAction)\n      }\n    })\n  }\n\n  const isGuideMode = getIsILLAGuideMode(rootState)\n  if (allChangedActions.length && !isGuideMode) {\n    fetchBatchUpdateAction(allChangedActions)\n  }\n}\n\nexport function setupActionListeners(\n  startListening: AppStartListening,\n): Unsubscribe {\n  const subscriptions = [\n    startListening({\n      actionCreator: actionActions.updateActionItemReducer,\n      effect: handleUpdateActionItem,\n    }),\n    startListening({\n      actionCreator: actionActions.batchUpdateActionItemReducer,\n      effect: handleBatchUpdateActionItem,\n    }),\n    startListening({\n      actionCreator: actionActions.addActionItemReducer,\n      effect: handleAddActionItemEffect,\n    }),\n    startListening({\n      actionCreator: actionActions.updateActionDisplayNameReducer,\n      effect: handleUpdateDisplayNameEffect,\n    }),\n    startListening({\n      matcher: isAnyOf(\n        actionActions.updateActionDisplayNameReducer,\n        actionActions.batchUpdateMultiActionSlicePropsReducer,\n      ),\n      effect: handleUpdateAsyncEffect,\n    }),\n  ]\n\n  return () => {\n    subscriptions.forEach((unsubscribe) => unsubscribe())\n  }\n}\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const navBarStyle = css`\n  display: flex;\n  box-sizing: border-box;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid ${getColor(\"grayBlue\", \"08\")};\n  padding: 6px 16px;\n  overflow-x: auto;\n  overflow-y: hidden;\n  gap: 16px;\n`\n\nexport const rowCenter = css`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nexport const viewControlStyle = () => css`\n  pointer-events: none;\n  color: ${getColor(\"grayBlue\", \"04\")};\n  position: absolute;\n  left: 0;\n  right: 0;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  ${rowCenter};\n\n  & > svg {\n    &:hover {\n      color: ${getColor(\"grayBlue\", \"02\")};\n      cursor: pointer;\n    }\n  }\n`\n\nexport const rightContentStyle = css`\n  display: flex;\n  align-self: flex-end;\n  justify-content: space-between;\n  align-items: center;\n  gap: 29px;\n`\n\nexport const buttonGroupStyle = css`\n  display: inline-flex;\n  gap: 8px;\n`\n\nexport const badgeStyle = css`\n  z-index: 3;\n`\n\nexport const informationStyle = css`\n  margin-left: 24px;\n  display: flex;\n  flex-direction: column;\n  font-size: 12px;\n  flex-shrink: 1;\n`\n\nexport const descriptionStyle = css`\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  height: 18px;\n  color: ${getColor(\"grayBlue\", \"04\")};\n`\n\nexport const saveFailedTipStyle = css`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 18px;\n  color: ${getColor(\"grayBlue\", \"03\")};\n  gap: 4px;\n`\n\nexport const logoCursorStyle = css`\n  cursor: pointer;\n`\n\nexport const closeIconStyle = css`\n  width: 8px;\n  height: 8px;\n  color: ${getColor(\"grayBlue\", \"04\")};\n`\n\nexport const inputAreaWrapperStyle = css`\n  width: 100%;\n  gap: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  position: absolute;\n  left: calc(100% + 16px);\n  top: 0;\n`\n\nexport const inputAreaLabelWrapperStyle = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 12px;\n  gap: 8px;\n  color: ${getColor(\"grayBlue\", \"02\")};\n`\n\nexport const nameStyle = css`\n  font-weight: 500;\n  cursor: pointer;\n  color: ${getColor(\"grayBlue\", \"02\")};\n`\n\nexport const missingResourceModalContainerStyle = css`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const missingHeaderContainerStyle = css`\n  display: flex;\n  gap: 8px;\n`\n\nexport const missingResourceHeaderStyle = css`\n  margin: 0;\n  padding: 0;\n  color: ${getColor(\"grayBlue\", \"02\")};\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 24px;\n`\n\nexport const missingContentStyle = css`\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 18px;\n  color: ${getColor(\"grayBlue\", \"02\")};\n  margin: 0;\n`\n"],"names":["updateCurrentAppInfo","data","mode","appId","teamID","uid","store","configActions","appInfoActions","fixedComponents","fixedComponentsToNewComponents","componentsActions","flatTreeToMap","fixedActions","fixedActionToNewAction","actionActions","DisplayNameGenerator","executionActions","useInitBuilderApp","useParams","dispatch","useDispatch","isOnline","useSelector","getIsOnline","teamInfo","getCurrentTeamInfo","loadingState","setLoadingState","useState","errorState","setErrorState","version","useDestroyApp","handleCurrentApp","useCallback","useEffect","controller","fetchPrivateAppInitData","fetchResources","res","resourceActions","DashboardAppInitialState","editorContainerStyle","css","contentStyle","loadingStyle","navbarStyle","NAVBAR_HEIGHT","leftPanelStyle","LEFT_PANEL_WIDTH","globalColor","illaPrefix","centerPanelStyle","bottomPanelStyle","rightPanelStyle","RIGHT_PANEL_WIDTH","middlePanelStyle","modalStyle","messageWrapperStyle","getColor","waringIconStyle","handleUpdateSelectedComponentExecution","action","listenerApi","currentComponentsAttachedUsers","widgetLayoutInfo","getClientWidgetLayoutInfo","needExpandDisplayName","displayName","searchParent","updateCurrentAllComponentsAttachedUsers","handleChangeSelectedActionExecution","getAllChildrenDisplayName","nodeDisplayName","displayNameMapProps","result","node","children","child","batchUpdateComponentStatusInfoEffect","listenApi","payload","allChildrenDisplayName","getWidgetExecutionResult","cursorActions","setupConfigListeners","startListening","subscriptions","isAnyOf","unsubscribe","handleAddActionItemEffect","handleUpdateActionItem","_a","currentAction","getActionExecutionResult","_b","_c","registerActionPeriod","handleBatchUpdateActionItem","selectedAction","targetSelectedAction","handleUpdateDisplayNameEffect","oldDisplayName","newDisplayName","mixedChangeDisplayNameHelper","handleUpdateAsyncEffect","rootState","currentSelectedID","allChangedActions","actionID","item","cachedAction","getCachedAction","currentActionUpdateSlice","currentActionID","payloadAction","cAction","isGuideMode","getIsILLAGuideMode","fetchBatchUpdateAction","setupActionListeners","navBarStyle","rowCenter","viewControlStyle","rightContentStyle","buttonGroupStyle","informationStyle","descriptionStyle","saveFailedTipStyle","logoCursorStyle","closeIconStyle","inputAreaWrapperStyle","inputAreaLabelWrapperStyle","nameStyle","missingResourceModalContainerStyle","missingHeaderContainerStyle","missingResourceHeaderStyle","missingContentStyle"],"mappings":"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"}