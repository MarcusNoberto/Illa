{"version":3,"file":"index-90e00e55.js","sources":["../../src/components/DriveFileSelect/components/Breadcrumb/index.tsx","../../src/components/DriveFileSelect/components/EmptyState/style.ts","../../src/components/DriveFileSelect/components/EmptyState/index.tsx","../../src/components/DriveFileSelect/constants.ts","../../src/components/DriveFileSelect/components/FileList/style.ts","../../src/components/DriveFileSelect/components/FileList/index.tsx","../../src/components/DriveFileSelect/components/LoadingState/style.ts","../../src/components/DriveFileSelect/components/LoadingState/index.tsx","../../src/components/DriveFileSelect/components/FileListContent/style.ts","../../src/components/DriveFileSelect/components/FileListContent/index.tsx","../../src/components/DriveFileSelect/context/index.tsx","../../src/components/DriveFileSelect/utils.tsx","../../src/components/DriveFileSelect/hooks/usePath.tsx","../../src/components/DriveFileSelect/index.tsx","../../src/page/App/components/InspectPanel/PanelSetters/DriveSourceGroupSetter/style.ts","../../src/page/App/components/InspectPanel/PanelSetters/DriveSourceGroupSetter/components/SourceHeader/style.ts","../../src/page/App/components/InspectPanel/PanelSetters/DriveSourceGroupSetter/components/SourceHeader/index.tsx","../../src/page/App/components/InspectPanel/PanelSetters/DriveSourceGroupSetter/components/URLModeInput/index.tsx","../../src/assets/drive/audio.svg?react","../../src/assets/drive/image.svg?react","../../src/assets/drive/pdf.svg?react","../../src/assets/drive/video.svg?react","../../src/page/App/components/InspectPanel/PanelSetters/DriveSourceGroupSetter/utils.tsx","../../src/page/App/components/InspectPanel/PanelSetters/DriveSourceGroupSetter/components/UploadOperate/index.tsx","../../src/page/App/components/InspectPanel/PanelSetters/DriveSourceGroupSetter/provider/FileUploadProvider/index.tsx","../../src/page/App/components/InspectPanel/PanelSetters/DriveSourceGroupSetter/components/UploadInput/style.ts","../../src/page/App/components/InspectPanel/PanelSetters/DriveSourceGroupSetter/components/UploadInput/index.tsx","../../src/page/App/components/InspectPanel/PanelSetters/DriveSourceGroupSetter/constants.ts","../../src/page/App/components/InspectPanel/PanelSetters/DriveSourceGroupSetter/provider/SourceSelectProvider/index.tsx","../../src/page/App/components/InspectPanel/PanelSetters/DriveSourceGroupSetter/index.tsx"],"sourcesContent":["import { FC, useCallback, useContext, useMemo } from \"react\"\nimport { Breadcrumb, BreadcrumbItem } from \"@illa-design/react\"\nimport { DriveFileSelectContext, ROOT_PATH } from \"@/components/DriveFileSelect\"\n\nconst FileBreadCrumb: FC = () => {\n  const { currentPath, totalPath, updatePath } = useContext(\n    DriveFileSelectContext,\n  )\n\n  const handleClickBreadcrumb = useCallback(\n    (path: string, last: boolean) => {\n      if (last) {\n        return\n      }\n      updatePath(path)\n    },\n    [updatePath],\n  )\n\n  const breadList = useMemo(() => {\n    if (!currentPath) {\n      return [\n        {\n          path: ROOT_PATH,\n          title: ROOT_PATH,\n          last: true,\n        },\n      ]\n    }\n\n    return currentPath?.split(\"/\").map((item, index, array) => {\n      const breadcrumbPath = array.slice(0, index + 1).join(\"/\")\n      const limitPath = totalPath.split(breadcrumbPath)[0]\n      const path = `${limitPath}${breadcrumbPath}`\n      const isLast = index === array.length - 1\n      return {\n        path,\n        title: item,\n        last: isLast,\n      }\n    })\n  }, [currentPath, totalPath])\n\n  return (\n    <Breadcrumb\n      flexWrap=\"wrap\"\n      onClickPath={handleClickBreadcrumb}\n      blockRouterChange\n    >\n      {breadList.map((item, index) => (\n        <BreadcrumbItem last={item.last ?? false} key={index} href={item.path}>\n          {item.title}\n        </BreadcrumbItem>\n      ))}\n    </Breadcrumb>\n  )\n}\n\nexport default FileBreadCrumb\n","import { css } from \"@emotion/react\"\n\nexport const emptyContainerStyle = css`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n","import { FolderIcon } from \"@illa-public/icon\"\nimport { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { emptyContainerStyle } from \"./style\"\n\nconst EmptyState: FC = () => {\n  const { t } = useTranslation()\n  return (\n    <div css={emptyContainerStyle}>\n      <FolderIcon />\n      <span>{t(\"widget.drive_picker.modal.no_file\")}</span>\n    </div>\n  )\n}\n\nexport default EmptyState\n","export const FOLDER_LIST_CONTAINER_HEIGHT = 276\nexport const FOLDER_LIST_ITEM_HEIGHT = 46\nexport const MAX_SIZE_MESSAGE =\n  \"editor.inspect.setter_message.drive_builder.max_size\"\nexport const MIN_SIZE_MESSAGE =\n  \"editor.inspect.setter_message.drive_builder.min_size\"\nexport const MAX_FILE_NUM =\n  \"editor.inspect.setter_message.drive_builder.max_files\"\nexport const MIN_FILE_NUM =\n  \"editor.inspect.setter_message.drive_builder.min_files\"\n\nexport const ROOT_PATH = \"root\"\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\nimport { FOLDER_LIST_ITEM_HEIGHT } from \"../../constants\"\n\nexport const fileNameStyle = css`\n  font-size: 14px;\n  color: ${getColor(\"grayBlue\", \"02\")};\n  font-weight: 500;\n`\nexport const iconPublicStyle = css`\n  display: inline-block;\n  width: 24px;\n  height: 30px;\n  flex: none;\n`\n\nexport const listItemContainerStyle = css`\n  display: flex;\n  align-items: center;\n  padding: 0 24px;\n  height: ${FOLDER_LIST_ITEM_HEIGHT}px;\n  gap: 8px;\n  cursor: pointer;\n  & > input {\n    margin: 3px 4px;\n  }\n`\n\nexport const singleListItemContainerStyle = (isSelected: boolean) => css`\n  ${listItemContainerStyle};\n  background-color: ${isSelected\n    ? getColor(\"techPurple\", \"08\")\n    : \"transparent\"};\n`\n\nexport const doubtStyle = css`\n  display: flex;\n  width: 16px;\n  height: 16px;\n`\n","import { getFileIconByContentType } from \"@illa-public/icon\"\nimport { GCS_OBJECT_TYPE, IILLAFileInfo } from \"@illa-public/public-types\"\nimport VirtualList from \"rc-virtual-list\"\nimport { FC, MouseEvent, useCallback, useRef } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { Checkbox, DoubtIcon, Trigger } from \"@illa-design/react\"\nimport {\n  FOLDER_LIST_CONTAINER_HEIGHT,\n  FOLDER_LIST_ITEM_HEIGHT,\n} from \"@/components/DriveFileSelect/constants\"\nimport { FileListProps } from \"./interface\"\nimport {\n  doubtStyle,\n  fileNameStyle,\n  iconPublicStyle,\n  listItemContainerStyle,\n  singleListItemContainerStyle,\n} from \"./style\"\n\nconst FileList: FC<FileListProps> = (props) => {\n  const {\n    listData,\n    totalPath,\n    search,\n    selectItems,\n    colorScheme,\n    singleSelect,\n    onChange,\n    getFileList,\n    updatePath,\n    handleSingleChange,\n  } = props\n\n  const { t } = useTranslation()\n\n  const handleClickItem = useCallback(\n    (e: MouseEvent<HTMLLabelElement>, item: IILLAFileInfo) => {\n      e.stopPropagation()\n      if (\n        item.type === GCS_OBJECT_TYPE.FOLDER ||\n        item.type === GCS_OBJECT_TYPE.ANONYMOUS_FOLDER\n      ) {\n        updatePath(`${totalPath}/${item.name}`)\n        return\n      } else if (singleSelect) {\n        handleSingleChange(item)\n      }\n    },\n    [singleSelect, totalPath, updatePath, handleSingleChange],\n  )\n\n  const currentPageIndexRef = useRef(1)\n\n  const onScroll = (e: React.UIEvent<HTMLElement, UIEvent>) => {\n    if (\n      e.currentTarget.scrollHeight - e.currentTarget.scrollTop ===\n      FOLDER_LIST_CONTAINER_HEIGHT\n    ) {\n      getFileList(++currentPageIndexRef.current, totalPath, search?.current)\n    }\n  }\n\n  return (\n    <VirtualList\n      height={FOLDER_LIST_CONTAINER_HEIGHT}\n      itemHeight={FOLDER_LIST_ITEM_HEIGHT}\n      itemKey=\"id\"\n      data={listData}\n      onScroll={onScroll}\n    >\n      {(item: IILLAFileInfo) => {\n        return (\n          <label\n            css={\n              singleSelect\n                ? singleListItemContainerStyle(selectItems[0]?.id === item.id)\n                : listItemContainerStyle\n            }\n            onClick={(e) => handleClickItem(e, item)}\n          >\n            {!singleSelect && (\n              <Checkbox\n                colorScheme={colorScheme}\n                disabled={\n                  item.type === GCS_OBJECT_TYPE.FOLDER ||\n                  item.type === GCS_OBJECT_TYPE.ANONYMOUS_FOLDER\n                }\n                key={item.id}\n                onChange={(v) => onChange(v, item)}\n                defaultChecked={\n                  selectItems.findIndex((file) => file.id === item.id) !== -1\n                }\n              />\n            )}\n            {getFileIconByContentType(\n              item.type,\n              item.contentType,\n              iconPublicStyle,\n            )}\n            <span css={fileNameStyle}>{item.name}</span>\n            {item.type === GCS_OBJECT_TYPE.ANONYMOUS_FOLDER && (\n              <Trigger\n                position=\"top\"\n                content={t(\"drive.drive_builder.public_folder.tips\")}\n              >\n                <span css={doubtStyle}>\n                  <DoubtIcon size=\"16px\" />\n                </span>\n              </Trigger>\n            )}\n          </label>\n        )\n      }}\n    </VirtualList>\n  )\n}\n\nexport default FileList\n","import { css } from \"@emotion/react\"\nimport { FOLDER_LIST_CONTAINER_HEIGHT } from \"../../constants\"\n\nexport const loadingContainerStyle = css`\n  height: ${FOLDER_LIST_CONTAINER_HEIGHT}px;\n  width: 100%;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: 0;\n  z-index: 4;\n`\n","import { FC } from \"react\"\nimport { Spin } from \"@illa-design/react\"\nimport { loadingContainerStyle } from \"./style\"\n\nexport const LoadingState: FC<{ colorScheme: string }> = ({ colorScheme }) => {\n  return (\n    <div css={loadingContainerStyle}>\n      <Spin colorScheme={colorScheme} />\n    </div>\n  )\n}\n","import { css } from \"@emotion/react\"\nimport { FOLDER_LIST_CONTAINER_HEIGHT } from \"../../constants\"\n\nexport const ModalTitleStyle = css`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 32px 32px 8px;\n  & > span:first-of-type {\n    font-weight: 600;\n    font-size: 24px;\n  }\n`\n\nexport const applyInnerFileListContainerStyle = (isLoading: boolean) => {\n  const loadingStyle = css`\n    opacity: 0.5;\n    transition: opacity 0.3s;\n    user-select: none;\n    pointer-events: none;\n  `\n  return css`\n    height: 100%;\n    width: 100%;\n    ${isLoading && loadingStyle};\n  `\n}\n\nexport const fileListContainerStyle = css`\n  height: ${FOLDER_LIST_CONTAINER_HEIGHT}px;\n  width: 100%;\n  position: relative;\n`\n\nexport const footerContainerStyle = css`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  padding: 24px 24px 16px 24px;\n  gap: 8px;\n`\n\nexport const headerContainerStyle = css`\n  display: flex;\n  gap: 16px;\n  padding: 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`\n","import { debounce } from \"lodash-es\"\nimport {\n  FC,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { Button, CloseIcon, Search, useMessage } from \"@illa-design/react\"\nimport { DriveFileSelectContext } from \"@/components/DriveFileSelect\"\nimport FileBreadCrumb from \"@/components/DriveFileSelect/components/Breadcrumb\"\nimport EmptyState from \"@/components/DriveFileSelect/components/EmptyState\"\nimport FileList from \"@/components/DriveFileSelect/components/FileList\"\nimport { LoadingState } from \"@/components/DriveFileSelect/components/LoadingState\"\nimport {\n  MAX_FILE_NUM,\n  MAX_SIZE_MESSAGE,\n  MIN_FILE_NUM,\n  MIN_SIZE_MESSAGE,\n} from \"@/components/DriveFileSelect/constants\"\nimport { FileToPanel } from \"@/components/DriveFileSelect/interface\"\nimport i18n from \"@/i18n/config\"\nimport {\n  ModalTitleStyle,\n  applyInnerFileListContainerStyle,\n  fileListContainerStyle,\n  footerContainerStyle,\n  headerContainerStyle,\n} from \"./style\"\n\nconst FilesModalContent: FC = () => {\n  const {\n    modalVisible,\n    fileList,\n    totalPath,\n    minSize,\n    maxSize,\n    minFileNum,\n    maxFileNum,\n    sizeType = \"mb\",\n    colorScheme,\n    singleSelect = false,\n    getFileList,\n    updatePath,\n    submitSelect,\n    handleCloseModal,\n  } = useContext(DriveFileSelectContext)\n  const { t } = useTranslation()\n\n  const [isConfirmLoading, setConfirmLoading] = useState(false)\n  const searchRef = useRef(\"\")\n  const [selectItems, setSelectItems] = useState<FileToPanel[]>([])\n  const [disabled, setDisabled] = useState(true)\n  const [loading, setLoading] = useState(true)\n  const message = useMessage()\n\n  const handleBtnDisabled = useCallback(\n    (list: FileToPanel[]) => {\n      if (disabled && list.length > 0) {\n        setDisabled(false)\n      } else if (!disabled && list.length === 0) {\n        setDisabled(true)\n      }\n    },\n    [disabled],\n  )\n\n  const validateFileNum = useCallback(() => {\n    if (maxFileNum && selectItems.length > maxFileNum) {\n      message.info({\n        content: i18n.t(MAX_FILE_NUM, {\n          max: maxFileNum,\n        }),\n      })\n      return false\n    }\n    if (minFileNum && selectItems.length < minFileNum) {\n      message.info({\n        content: i18n.t(MIN_FILE_NUM, {\n          min: minFileNum,\n        }),\n      })\n      return false\n    }\n    if (maxSize) {\n      const equalMaxSize =\n        sizeType === \"mb\" ? maxSize * 1024 * 1024 : maxSize * 1024\n      if (selectItems.some((item) => item.size > equalMaxSize)) {\n        message.info({\n          content: i18n.t(MAX_SIZE_MESSAGE, {\n            max: maxSize + sizeType,\n          }),\n        })\n        return false\n      }\n    }\n    if (minSize) {\n      const equalMinSize =\n        sizeType === \"mb\" ? minSize * 1024 * 1024 : minSize * 1024\n      if (selectItems.some((item) => item.size < equalMinSize)) {\n        message.info({\n          content: i18n.t(MIN_SIZE_MESSAGE, {\n            min: minSize + sizeType,\n          }),\n        })\n        return false\n      }\n    }\n    return true\n  }, [maxFileNum, maxSize, message, minFileNum, minSize, selectItems, sizeType])\n\n  const handleChange = useCallback(\n    (flag: boolean, item: FileToPanel) => {\n      const index = selectItems.findIndex((file) => file.id === item.id)\n      if (!flag && index !== -1) {\n        const newSelectItems = selectItems.concat()\n        newSelectItems.splice(index, 1)\n        setSelectItems(newSelectItems)\n        handleBtnDisabled(newSelectItems)\n      } else if (flag && index === -1) {\n        const newSelectItems = selectItems.concat(item)\n        setSelectItems(newSelectItems)\n        handleBtnDisabled(newSelectItems)\n      }\n    },\n    [handleBtnDisabled, selectItems],\n  )\n\n  const handleSingleChange = useCallback(\n    (item: FileToPanel) => {\n      if (selectItems[0]?.id !== item.id) {\n        setSelectItems([item])\n        setDisabled(false)\n      }\n    },\n    [selectItems],\n  )\n\n  const handleClickClose = useCallback(() => {\n    handleCloseModal()\n    setSelectItems([])\n  }, [handleCloseModal])\n\n  const handleClickOk = useCallback(async () => {\n    if (!validateFileNum()) {\n      return\n    }\n    setConfirmLoading(true)\n    submitSelect(selectItems)\n      .then(() => {\n        setSelectItems([])\n      })\n      .finally(() => {\n        setConfirmLoading(false)\n      })\n  }, [selectItems, submitSelect, validateFileNum])\n\n  const getListDate = useCallback(\n    async (currentPage: number, totalPath: string, search?: string) => {\n      setLoading(true)\n      try {\n        await getFileList(currentPage, totalPath, search)\n      } catch (e) {\n      } finally {\n        setLoading(false)\n      }\n    },\n    [getFileList],\n  )\n\n  const debounceHandleOnSearch = useMemo(() => {\n    return debounce((value: string) => {\n      getListDate(1, totalPath, value)\n    }, 500)\n  }, [getListDate, totalPath])\n\n  useEffect(() => {\n    modalVisible && getListDate(1, totalPath)\n  }, [getListDate, modalVisible, totalPath])\n\n  return (\n    <>\n      <div css={ModalTitleStyle}>\n        <span>{t(\"widget.drive_picker.modal.files\")}</span>\n        <span onClick={handleClickClose} style={{ cursor: \"pointer\" }}>\n          <CloseIcon />\n        </span>\n      </div>\n      <div css={headerContainerStyle}>\n        <FileBreadCrumb />\n        <Search\n          colorScheme={colorScheme}\n          placeholder=\"search\"\n          onChange={debounceHandleOnSearch}\n        />\n      </div>\n      <div css={fileListContainerStyle}>\n        <div css={applyInnerFileListContainerStyle(loading)}>\n          {fileList.length > 0 ? (\n            <FileList\n              onChange={handleChange}\n              listData={fileList}\n              key={totalPath}\n              totalPath={totalPath}\n              getFileList={getListDate}\n              search={searchRef}\n              updatePath={updatePath}\n              selectItems={selectItems}\n              colorScheme={colorScheme}\n              singleSelect={singleSelect}\n              handleSingleChange={handleSingleChange}\n            />\n          ) : (\n            !loading && <EmptyState />\n          )}\n        </div>\n        {loading && <LoadingState colorScheme={colorScheme} />}\n      </div>\n      <div css={footerContainerStyle}>\n        <Button minW=\"78px\" onClick={handleClickClose} colorScheme=\"grayBlue\">\n          {t(\"widget.drive_picker.modal.cancel\")}\n        </Button>\n        <Button\n          minW=\"200px\"\n          disabled={disabled}\n          colorScheme={colorScheme}\n          onClick={handleClickOk}\n          loading={isConfirmLoading}\n        >\n          {singleSelect\n            ? t(\"drive.upload.select.confirm_button\")\n            : t(\"widget.drive_picker.modal.confirm\", {\n                fileNum: selectItems.length,\n              })}\n        </Button>\n      </div>\n    </>\n  )\n}\n\nexport default FilesModalContent\n","import { createContext } from \"react\"\nimport { IILLAFileInfo } from \"@/services/drive\"\nimport { FileToPanel } from \"../interface\"\n\ninterface Injected {\n  modalVisible: boolean\n  fileList: IILLAFileInfo[]\n  currentPath: string\n  totalPath: string\n  sizeType?: \"kb\" | \"mb\"\n  minSize?: number\n  maxSize?: number\n  minFileNum?: number\n  maxFileNum?: number\n  colorScheme: string\n  singleSelect?: boolean\n  updatePath: (changedPath: string) => void\n  submitSelect: (selectIds: FileToPanel[]) => Promise<unknown>\n  setModalVisible: (visible: boolean) => void\n  getFileList: (\n    currentPage: number,\n    totalPath: string,\n    search?: string,\n  ) => Promise<unknown>\n  handleCloseModal: () => void\n}\n\nexport const DriveFileSelectContext = createContext<Injected>({} as Injected)\n","export const getCurrentPath = (limitPath: string, totalPath?: string) => {\n  const curTotalPath = totalPath ?? limitPath\n  const limitPathArr = limitPath.split(\"/\")\n  const limitRoot = limitPathArr[limitPathArr.length - 1]\n  return removeSuffixPath(`${limitRoot}${curTotalPath.replace(limitPath, \"\")}`)\n}\n\nexport const removeSuffixPath = (path: string): string => {\n  const regex = /^\\/?(.*?)\\/?$/\n  return path?.match(regex)?.[1] || path\n}\n","import { useCallback, useEffect, useState } from \"react\"\nimport {\n  getCurrentPath,\n  removeSuffixPath,\n} from \"@/components/DriveFileSelect/utils\"\nimport { ROOT_PATH } from \"../constants\"\n\nexport const usePath = (\n  path: string,\n  allowAnonymousUse?: boolean | undefined,\n) => {\n  const [totalPath, setTotalPath] = useState<string>(path || ROOT_PATH)\n  const [currentPath, setCurrentPath] = useState<string>(\n    getCurrentPath(totalPath ?? \"root\"),\n  )\n\n  const updatePath = useCallback(\n    (changedPath: string) => {\n      const curChangePath = removeSuffixPath(changedPath)\n      setTotalPath(curChangePath)\n      setCurrentPath(getCurrentPath(path, curChangePath))\n    },\n    [path],\n  )\n\n  useEffect(() => {\n    if (allowAnonymousUse) {\n      setTotalPath(ROOT_PATH)\n      setCurrentPath(ROOT_PATH)\n    } else {\n      setTotalPath(path || ROOT_PATH)\n      setCurrentPath(getCurrentPath(path || ROOT_PATH))\n    }\n  }, [allowAnonymousUse, path])\n\n  return {\n    currentPath,\n    updatePath,\n    totalPath,\n  }\n}\n","import { FC, useContext } from \"react\"\nimport { createPortal } from \"react-dom\"\nimport { Modal } from \"@illa-design/react\"\nimport FilesModalContent from \"./components/FileListContent\"\nimport { DriveFileSelectContext } from \"./context\"\n\nconst FilesModal: FC = () => {\n  const { modalVisible, handleCloseModal } = useContext(DriveFileSelectContext)\n\n  return createPortal(\n    <>\n      {modalVisible && (\n        <Modal\n          closable\n          maskClosable\n          withoutPadding\n          visible\n          onCancel={handleCloseModal}\n          footer={false}\n        >\n          <FilesModalContent />\n        </Modal>\n      )}\n    </>,\n    document.body,\n  )\n}\n\nexport default FilesModal\nexport { usePath } from \"./hooks/usePath\"\nexport * from \"./utils\"\nexport * from \"./interface\"\nexport * from \"./context\"\nexport * from \"./constants\"\n","import { SerializedStyles, css } from \"@emotion/react\"\nimport { fixedWidthStyle } from \"@/page/App/components/InspectPanel/PanelSetters/style\"\n\nexport const applyRadioGroupWrapperStyle = (\n  isSetterSingleRow: boolean = false,\n): SerializedStyles => {\n  let width = isSetterSingleRow\n    ? css`\n        width: 100%;\n      `\n    : fixedWidthStyle\n  return css`\n    display: flex;\n    flex: none;\n    flex-direction: column;\n    gap: 8px;\n    ${width};\n  `\n}\n\nexport const radioGroupStyle = css`\n  width: 100%;\n`\n\nexport const baseRadioGroupContainerStyle = (\n  isSetterSingleRow: boolean = false,\n) => {\n  const basicStyle = css`\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n  `\n  const singleRowStyle = css`\n    flex-direction: column;\n    gap: 8px;\n  `\n  return css`\n    display: flex;\n    padding: 8px 0;\n    ${isSetterSingleRow ? singleRowStyle : basicStyle};\n    width: 100%;\n  `\n}\n\nexport const uploadButtonStyle = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  gap: 4px;\n`\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const sourceHeaderContainerStyle = css`\n  width: 100%;\n  height: 24px;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n`\n\nexport const fileSelectContainerStyle = css`\n  display: flex;\n  padding: 1px 8px;\n  justify-content: center;\n  align-items: center;\n  gap: 4px;\n  cursor: pointer;\n  & > span {\n    color: ${getColor(\"grayBlue\", \"02\")};\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 22px;\n    text-transform: capitalize;\n  }\n`\n\nexport const folderIconStyle = css`\n  width: 16px;\n  height: 16px;\n`\n","import { useUpgradeModal } from \"@illa-public/upgrade-modal\"\nimport { FC, useContext } from \"react\"\nimport Folder from \"@/assets/drive/panelFolder.svg?react\"\nimport { DriveFileSelectContext } from \"@/components/DriveFileSelect\"\nimport { PanelLabel } from \"@/page/App/components/InspectPanel/components/Label\"\nimport {\n  fileSelectContainerStyle,\n  folderIconStyle,\n  sourceHeaderContainerStyle,\n} from \"./style\"\n\ninterface SourceHeaderProps {\n  labelName?: string\n  labelDesc?: string\n  showSelect: boolean\n  canUseDrive: boolean\n}\nconst SourceHeader: FC<SourceHeaderProps> = ({\n  labelName,\n  labelDesc,\n  showSelect,\n  canUseDrive,\n}) => {\n  const upgradeModal = useUpgradeModal()\n  const { setModalVisible } = useContext(DriveFileSelectContext)\n  const handleClickSelect = () => {\n    if (canUseDrive) {\n      setModalVisible(true)\n    } else {\n      upgradeModal({\n        modalType: \"upgrade\",\n        from: \"panel_setter_select\",\n      })\n    }\n  }\n  return (\n    <div css={sourceHeaderContainerStyle}>\n      <PanelLabel\n        labelName={labelName}\n        labelDesc={labelDesc}\n        labelSize=\"medium\"\n      />\n      {showSelect && (\n        <div css={fileSelectContainerStyle} onClick={handleClickSelect}>\n          <span css={folderIconStyle}>\n            <Folder />\n          </span>\n          <span>ILLA Drive</span>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default SourceHeader\n","import { FC } from \"react\"\nimport BaseInput from \"@/page/App/components/InspectPanel/PanelSetters/InputSetter/BaseInput\"\nimport { VALIDATION_TYPES } from \"@/utils/validationFactory\"\nimport { URLModeInputProps } from \"./interface\"\n\nconst URLModeInput: FC<URLModeInputProps> = (props) => {\n  return (\n    <BaseInput\n      {...props}\n      isSetterSingleRow\n      expectedType={VALIDATION_TYPES.STRING}\n    />\n  )\n}\n\nexport default URLModeInput\n","import * as React from \"react\";\nconst SvgAudio = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 16, height: 16, viewBox: \"0 0 16 16\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M8.14493 3.16661C8.0073 3.33437 7.93201 3.54463 7.93188 3.76163V5.3392V5.80869V10.3169C7.51745 10.1371 7.03635 10.0342 6.52336 10.0342C4.96834 10.0342 3.7063 10.9797 3.7063 12.147C3.7063 13.3143 4.96834 14.2598 6.52336 14.2598C7.97261 14.2598 9.16739 13.4385 9.3232 12.3818H9.34041V12.147V5.52698L12.627 4.86967V3.19822C12.6269 3.05934 12.596 2.92222 12.5365 2.79672C12.4771 2.67122 12.3905 2.56047 12.2831 2.47246C12.1757 2.38444 12.0501 2.32134 11.9154 2.28771C11.7806 2.25408 11.6401 2.25076 11.5039 2.27798L8.68685 2.84139C8.47406 2.88392 8.28257 2.99884 8.14493 3.16661Z\", fill: \"black\" }));\nexport default SvgAudio;\n","import * as React from \"react\";\nconst SvgImage = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 16, height: 16, viewBox: \"0 0 16 16\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M12.6667 2H3.33333C2.598 2 2 2.598 2 3.33333V12.6667C2 13.402 2.598 14 3.33333 14H12.6667C13.402 14 14 13.402 14 12.6667V3.33333C14 2.598 13.402 2 12.6667 2ZM3.33333 12.6667V3.33333H12.6667L12.668 12.6667H3.33333ZM6 8.66667L6.66667 9.33333L8.66667 6.66667L12 11.3333H4L6 8.66667Z\", fill: \"black\" }));\nexport default SvgImage;\n","import * as React from \"react\";\nconst SvgPdf = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 16, height: 16, viewBox: \"0 0 16 16\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M12.2492 8.96591C11.5477 8.97869 10.8494 9.0649 10.1659 9.22313C9.32349 8.38387 8.62476 7.41187 8.09764 6.34598C8.67027 4.34525 8.69588 2.98117 8.26873 2.33521C8.17343 2.19536 8.04653 2.07991 7.89832 1.99822C7.7501 1.91653 7.58473 1.87089 7.41559 1.865C7.2047 1.84739 6.99338 1.89343 6.80893 1.99717C6.62448 2.10091 6.47538 2.25758 6.38089 2.44694C5.78382 3.5154 6.64626 5.63601 7.0478 6.4938C6.59582 8.02563 6.00684 9.51366 5.288 10.9399C2.09428 12.4134 2 13.3084 2 13.6308C2.01164 14.0288 2.22929 14.385 2.56332 14.5526C2.70889 14.6521 2.88305 14.7012 3.05914 14.6923C3.91228 14.6923 4.85154 13.6867 5.88624 11.722C7.15488 11.1424 8.4759 10.6861 9.83184 10.3579C10.5069 10.9829 11.374 11.3624 12.2923 11.4357C12.8556 11.4357 13.9997 11.4357 13.9997 10.2101C14.009 9.7946 13.7786 9.00199 12.2492 8.96474V8.96591ZM3.1185 13.668H3.01608C3.29658 13.2048 3.71442 12.8417 4.2114 12.6252C3.97763 13.088 3.59173 13.4562 3.1185 13.668ZM7.20144 2.98001C7.24529 2.96326 7.29377 2.96326 7.33761 2.98001H7.44004C7.61608 3.58233 7.61608 4.22245 7.44004 4.82478C7.1743 4.24856 7.09105 3.60487 7.20144 2.98001ZM8.91003 9.93194C8.14186 10.1263 7.38533 10.3661 6.64626 10.6524V10.5779H6.57759C6.94655 9.7818 7.28058 8.9694 7.57854 8.1442V8.06971C7.96262 8.7017 8.4049 9.28831 8.90072 9.82137H8.80761L8.91003 9.9331V9.93194ZM12.3261 10.4033C11.9778 10.3888 11.6356 10.3074 11.3181 10.1636C11.5986 10.1042 11.8861 10.0786 12.1724 10.0902C12.83 10.0902 12.9674 10.2648 12.9674 10.3754C12.7564 10.4377 12.5334 10.4473 12.3179 10.4033H12.3261Z\", fill: \"black\" }));\nexport default SvgPdf;\n","import * as React from \"react\";\nconst SvgVideo = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 16, height: 16, viewBox: \"0 0 16 16\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"circle\", { cx: 8, cy: 8, r: 6.5, stroke: \"black\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M6.75725 10.5457C6.42399 10.7456 6 10.5056 6 10.1169L6 5.8831C6 5.49445 6.42399 5.25439 6.75725 5.45435L10.2854 7.57125C10.6091 7.76545 10.6091 8.23454 10.2854 8.42875L6.75725 10.5457Z\", fill: \"black\" }));\nexport default SvgVideo;\n","import AudioIcon from \"@/assets/drive/audio.svg?react\"\nimport ImageIcon from \"@/assets/drive/image.svg?react\"\nimport PdfIcon from \"@/assets/drive/pdf.svg?react\"\nimport VideoIcon from \"@/assets/drive/video.svg?react\"\nimport i18n from \"@/i18n/config\"\n\nexport const getUploadModeInfo = (widgetType: string) => {\n  switch (widgetType) {\n    case \"IMAGE_WIDGET\":\n    case \"CAROUSEL_WIDGET\":\n      return {\n        name: i18n.t(\"editor.inspect.setter_placeholder.choose_image\"),\n        icon: <ImageIcon />,\n      }\n    case \"PDF_WIDGET\":\n      return {\n        name: i18n.t(\"editor.inspect.setter_placeholder.choose_pdf\"),\n        icon: <PdfIcon />,\n      }\n    case \"VIDEO_WIDGET\":\n      return {\n        name: i18n.t(\"editor.inspect.setter_placeholder.choose_video\"),\n        icon: <VideoIcon />,\n      }\n    case \"AUDIO_WIDGET\":\n      return {\n        name: i18n.t(\"editor.inspect.setter_placeholder.choose_audio\"),\n        icon: <AudioIcon />,\n      }\n  }\n}\n\nexport const getUploadAccept = (widgetType: string) => {\n  switch (widgetType) {\n    case \"IMAGE_WIDGET\":\n    case \"CAROUSEL_WIDGET\":\n      return \"image/*\"\n    case \"PDF_WIDGET\":\n      return \".pdf\"\n    case \"VIDEO_WIDGET\":\n      return \"video/*\"\n    case \"AUDIO_WIDGET\":\n      return \"audio/*\"\n  }\n}\n\nexport const getPathForSignedUrl = (path: string) => {\n  if (path === \"root\") {\n    return \"\"\n  } else {\n    return path.replace(\"root/\", \"\")\n  }\n}\n\nexport const getReportElementForUpload = (widgetType: string) => {\n  switch (widgetType) {\n    case \"IMAGE_WIDGET\":\n      return \"builder_editor_storage_not_enough_image\"\n    case \"CAROUSEL_WIDGET\":\n      return \"builder_editor_storage_not_enough_carousel\"\n    case \"VIDEO_WIDGET\":\n      return \"builder_editor_storage_not_enough_video\"\n    case \"AUDIO_WIDGET\":\n      return \"builder_editor_storage_not_enough_audio\"\n  }\n}\n\nexport const getReportElementForSelect = (widgetType: string) => {\n  switch (widgetType) {\n    case \"IMAGE_WIDGET\":\n      return \"builder_editor_traffic_not_enough_image\"\n    case \"CAROUSEL_WIDGET\":\n      return \"builder_editor_traffic_not_enough_carousel\"\n    case \"VIDEO_WIDGET\":\n      return \"builder_editor_traffic_not_enough_video\"\n    case \"AUDIO_WIDGET\":\n      return \"builder_editor_traffic_not_enough_audio\"\n  }\n}\n","import {\n  HTTP_REQUEST_PUBLIC_BASE_URL,\n  PUBLIC_DRIVE_REQUEST_PREFIX,\n} from \"@illa-public/illa-net\"\nimport { EXPIRATION_TYPE } from \"@illa-public/public-types\"\nimport {\n  CollarModalType,\n  handleCollaPurchaseError,\n} from \"@illa-public/upgrade-modal\"\nimport { useContext, useRef } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { Button, useMessage } from \"@illa-design/react\"\nimport { FolderOperateModalContext } from \"@/components/FolderOperateModal/context\"\nimport { FILE_ITEM_DETAIL_STATUS_IN_UI } from \"@/page/App/Module/UploadDetail/components/DetailList/interface\"\nimport { updateFileDetailStore } from \"@/page/App/Module/UploadDetail/store\"\nimport { fetchGenerateTinyUrl } from \"@/services/drive\"\nimport { uploadFileToDrive } from \"@/utils/drive/upload/getSingedURL\"\nimport { FileUploadContext } from \"../../provider/FileUploadProvider\"\nimport {\n  getPathForSignedUrl,\n  getReportElementForUpload,\n  getUploadAccept,\n} from \"../../utils\"\n\nconst UploadOperate = () => {\n  const uploadFileRef = useRef<HTMLInputElement | null>(null)\n  const message = useMessage()\n  const { t } = useTranslation()\n  const { currentFolderPath, setFolderOperateVisible } = useContext(\n    FolderOperateModalContext,\n  )\n\n  const { widgetType, setIsUpLoading, setUploadName, handleUpdateResult } =\n    useContext(FileUploadContext)\n\n  const onChangeFiles = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files\n    if (!files) return\n    setIsUpLoading(true)\n    message.info({\n      content: t(\"drive.message.start_upload\"),\n    })\n    const file = files[0]\n    if (!file) return\n    setFolderOperateVisible(false)\n    const queryID = `${file.name}_${new Date().getTime()}`\n\n    const abortController = new AbortController()\n\n    const uploadParams = {\n      folder: getPathForSignedUrl(currentFolderPath),\n      allowAnonymous: false,\n      replace: false,\n    }\n\n    updateFileDetailStore.addFileDetailInfo({\n      loaded: 0,\n      total: 0,\n      status: FILE_ITEM_DETAIL_STATUS_IN_UI.WAITING,\n      fileName: file.name,\n      contentType: file.type,\n      queryID: queryID,\n      abortController,\n      saveToILLADriveParams: {\n        fileData: file,\n        ...uploadParams,\n      },\n    })\n    let uploadRes\n    try {\n      uploadRes = await uploadFileToDrive(\n        queryID,\n        file,\n        uploadParams,\n        abortController.signal,\n      )\n    } catch (e) {\n      handleCollaPurchaseError(\n        e,\n        CollarModalType.TRAFFIC,\n        getReportElementForUpload(widgetType)!,\n      )\n    }\n    if (!!uploadRes) {\n      try {\n        const selectIds = [uploadRes.id]\n        const requestParams = {\n          ids: selectIds,\n          expirationType: EXPIRATION_TYPE.PERSISTENT,\n          hotlinkProtection: false,\n        }\n        const res = await fetchGenerateTinyUrl(requestParams)\n        let value = `${HTTP_REQUEST_PUBLIC_BASE_URL}${PUBLIC_DRIVE_REQUEST_PREFIX}/${res.data.tinyURL}`\n        setUploadName(uploadRes.name)\n        handleUpdateResult(value)\n      } catch (e) {\n        message.error({\n          content: t(\"drive.message.generate_url_fail\"),\n        })\n      } finally {\n        setIsUpLoading(false)\n      }\n    } else {\n      setIsUpLoading(false)\n    }\n    e.target.value = \"\"\n  }\n  return (\n    <Button\n      colorScheme=\"techPurple\"\n      onClick={() => {\n        uploadFileRef.current?.click()\n      }}\n    >\n      <span>\n        <input\n          style={{ display: \"none\" }}\n          type=\"file\"\n          accept={getUploadAccept(widgetType)}\n          ref={uploadFileRef}\n          onChange={onChangeFiles}\n        />\n        {t(\"drive.upload.modal.file_upload\")}\n      </span>\n    </Button>\n  )\n}\nexport default UploadOperate\n","import { FC, ReactNode, createContext, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport {\n  FolderOperateModalContext,\n  ROOT_PATH,\n} from \"@/components/FolderOperateModal\"\nimport UploadOperate from \"../../components/UploadOperate\"\n\ninterface Injected {\n  uploadName: string\n  widgetType: string\n  isUpLoading: boolean\n  setIsUpLoading: (v: boolean) => void\n  setUploadName: (name: string) => void\n  handleUpdateResult: (value: string) => void\n}\n\ninterface FileUploadProviderProps {\n  widgetType: string\n  handleUpdateResult: (value: string) => void\n  children: ReactNode\n}\n\nexport const FileUploadContext = createContext<Injected>({} as Injected)\n\nexport const FileUploadProvider: FC<FileUploadProviderProps> = ({\n  children,\n  widgetType,\n  handleUpdateResult,\n}) => {\n  const [currentFolderPath, setCurrentFolderPath] = useState(ROOT_PATH)\n  const [folderOperateVisible, setFolderOperateVisible] = useState(false)\n  const [createFolderVisible, setCreateFolderVisible] = useState(false)\n  const [isUpLoading, setIsUpLoading] = useState(false)\n  const [uploadName, setUploadName] = useState(\"\")\n  const { t } = useTranslation()\n\n  return (\n    <FileUploadContext.Provider\n      value={{\n        widgetType,\n        handleUpdateResult,\n        isUpLoading,\n        uploadName,\n        setIsUpLoading,\n        setUploadName,\n      }}\n    >\n      <FolderOperateModalContext.Provider\n        value={{\n          subTitle: t(\"drive.upload.modal.upload_to\"),\n          currentFolderPath,\n          folderOperateVisible,\n          createFolderVisible,\n          setCreateFolderVisible,\n          setCurrentFolderPath,\n          setFolderOperateVisible,\n          operateChildren: <UploadOperate />,\n        }}\n      >\n        {children}\n      </FolderOperateModalContext.Provider>\n    </FileUploadContext.Provider>\n  )\n}\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const uploadContainerStyle = (isUpLoading: boolean) => css`\n  pointer-events: ${isUpLoading ? \"none\" : \"auto\"};\n  width: 100%;\n  cursor: ${isUpLoading ? \"not-allowed\" : \"pointer\"};\n  display: flex;\n  padding: 3px 12px 3px 8px;\n  align-items: center;\n  gap: 8px;\n  margin-top: 8px;\n  border-radius: 8px;\n  border: 1px solid ${getColor(\"grayBlue\", \"08\")};\n  opacity: ${isUpLoading ? 0.5 : 1};\n`\n\nexport const uploadIconStyle = css`\n  padding: 4px;\n  display: inline-flex;\n  flex: none;\n`\n\nexport const uploadNameStyle = css`\n  overflow: hidden;\n  color: ${getColor(\"grayBlue\", \"02\")};\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 24px;\n`\n","import { useUpgradeModal } from \"@illa-public/upgrade-modal\"\nimport { FC, useContext } from \"react\"\nimport { FolderOperateModalContext } from \"@/components/FolderOperateModal/context\"\nimport { FileUploadContext } from \"@/page/App/components/InspectPanel/PanelSetters/DriveSourceGroupSetter/provider/FileUploadProvider\"\nimport { getUploadModeInfo } from \"@/page/App/components/InspectPanel/PanelSetters/DriveSourceGroupSetter/utils\"\nimport { uploadContainerStyle, uploadIconStyle, uploadNameStyle } from \"./style\"\n\ninterface UploadModeProps {\n  widgetType: string\n  canUseDrive: boolean\n}\nconst UploadMode: FC<UploadModeProps> = ({ widgetType, canUseDrive }) => {\n  const placeholderInfo = getUploadModeInfo(widgetType)\n  const upgradeModal = useUpgradeModal()\n  const { uploadName, isUpLoading } = useContext(FileUploadContext)\n  const { setFolderOperateVisible } = useContext(FolderOperateModalContext)\n  const handleClickUpload = () => {\n    if (canUseDrive) {\n      setFolderOperateVisible(true)\n    } else {\n      upgradeModal({\n        modalType: \"upgrade\",\n        from: \"panel_setter_upload\",\n      })\n    }\n  }\n\n  return (\n    <div css={uploadContainerStyle(isUpLoading)} onClick={handleClickUpload}>\n      <span css={uploadIconStyle}>{placeholderInfo?.icon}</span>\n      <span css={uploadNameStyle}>{uploadName || placeholderInfo?.name}</span>\n    </div>\n  )\n}\n\nexport default UploadMode\n","export const PAGESIZE = 10\nexport const COLOR_SCHEME = \"techPurple\"\nexport enum DRIVE_SOURCE_MODE {\n  URL = \"url\",\n  UPLOAD = \"upload\",\n}\n","import {\n  HTTP_REQUEST_PUBLIC_BASE_URL,\n  PUBLIC_DRIVE_REQUEST_PREFIX,\n} from \"@illa-public/illa-net/constant\"\nimport {\n  DRIVE_FILE_TYPE,\n  EXPIRATION_TYPE,\n  FILE_CATEGORY,\n  IILLAFileInfo,\n} from \"@illa-public/public-types\"\nimport {\n  CollarModalType,\n  handleCollaPurchaseError,\n} from \"@illa-public/upgrade-modal\"\nimport { FC, ReactNode, useCallback, useMemo, useState } from \"react\"\nimport { ROOT_PATH, usePath } from \"@/components/DriveFileSelect\"\nimport { DriveFileSelectContext } from \"@/components/DriveFileSelect/context\"\nimport { FileToPanel } from \"@/components/DriveFileSelect/interface\"\nimport {\n  COLOR_SCHEME,\n  PAGESIZE,\n} from \"@/page/App/components/InspectPanel/PanelSetters/DriveSourceGroupSetter/constants\"\nimport { fetchFileList, fetchGenerateTinyUrl } from \"@/services/drive\"\nimport { getReportElementForSelect } from \"../../utils\"\n\ninterface Props {\n  widgetType: string\n  path: string\n  children?: ReactNode\n  handleUpdateResult: (value: string) => void\n}\n\nexport const SourceSelectProvider: FC<Props> = (props) => {\n  const { path = ROOT_PATH, children, widgetType, handleUpdateResult } = props\n  const { currentPath, updatePath, totalPath } = usePath(path)\n  const [fileList, setFileList] = useState<IILLAFileInfo[]>([])\n  const [modalVisible, setModalVisible] = useState(false)\n\n  const fileCategory = useMemo(() => {\n    switch (widgetType) {\n      case \"IMAGE_WIDGET\":\n      case \"CAROUSEL_WIDGET\":\n        return FILE_CATEGORY.IMAGE\n      case \"PDF_WIDGET\":\n        return FILE_CATEGORY.PDF\n      case \"VIDEO_WIDGET\":\n        return FILE_CATEGORY.VIDEO\n      case \"AUDIO_WIDGET\":\n        return FILE_CATEGORY.AUDIO\n    }\n  }, [widgetType])\n  const handleCloseModal = useCallback(() => {\n    setModalVisible(false)\n    updatePath(path || ROOT_PATH)\n    setFileList([])\n  }, [path, updatePath])\n\n  const submitSelect = useCallback(\n    (items: FileToPanel[]) => {\n      return new Promise(async (resolve, reject) => {\n        const selectIds = [items[0].id]\n        const requestParams = {\n          ids: selectIds,\n          expirationType: EXPIRATION_TYPE.PERSISTENT,\n          hotlinkProtection: false,\n        }\n        try {\n          const res = await fetchGenerateTinyUrl(requestParams)\n          let value = `${HTTP_REQUEST_PUBLIC_BASE_URL}${PUBLIC_DRIVE_REQUEST_PREFIX}/${res.data.tinyURL}`\n          await handleUpdateResult(value)\n          handleCloseModal()\n          resolve(true)\n        } catch (e) {\n          handleCollaPurchaseError(\n            e,\n            CollarModalType.TRAFFIC,\n            getReportElementForSelect(widgetType)!,\n          )\n          reject(e)\n        }\n      })\n    },\n    [handleCloseModal, handleUpdateResult, widgetType],\n  )\n\n  const getFileList = useCallback(\n    async (currentPage: number, totalPath: string, search?: string) => {\n      try {\n        const requestParams = {\n          path: `/${totalPath || ROOT_PATH}`,\n          page: currentPage,\n          limit: PAGESIZE,\n          type: DRIVE_FILE_TYPE.MIX,\n          search,\n          fileCategory,\n        }\n        const res = await fetchFileList(requestParams)\n        if (currentPage === 1) {\n          setFileList(res.data?.files || [])\n        } else {\n          setFileList((prev) => [...prev, ...(res.data?.files || [])])\n        }\n      } catch (e) {}\n    },\n    [fileCategory],\n  )\n\n  const value = {\n    rootPath: ROOT_PATH,\n    modalVisible,\n    fileList,\n    currentPath,\n    totalPath,\n    colorScheme: COLOR_SCHEME,\n    singleSelect: true,\n    updatePath,\n    submitSelect,\n    setModalVisible,\n    getFileList,\n    handleCloseModal,\n  }\n\n  return (\n    <DriveFileSelectContext.Provider value={value}>\n      {children}\n    </DriveFileSelectContext.Provider>\n  )\n}\n\nSourceSelectProvider.displayName = \"SourceSelectProvider\"\n","import { UpgradeIcon } from \"@illa-public/icon\"\nimport { isSubscribeForUseDrive } from \"@illa-public/upgrade-modal/utils\"\nimport { getCurrentTeamInfo } from \"@illa-public/user-data\"\nimport { get } from \"lodash-es\"\nimport { FC, useMemo, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useSelector } from \"react-redux\"\nimport { RadioGroup, getColor } from \"@illa-design/react\"\nimport FilesModal, { ROOT_PATH } from \"@/components/DriveFileSelect\"\nimport FolderOperateModal from \"@/components/FolderOperateModal\"\nimport {\n  applyRadioGroupWrapperStyle,\n  baseRadioGroupContainerStyle,\n  radioGroupStyle,\n  uploadButtonStyle,\n} from \"@/page/App/components/InspectPanel/PanelSetters/DriveSourceGroupSetter/style\"\nimport SourceHeader from \"./components/SourceHeader\"\nimport URLModeInput from \"./components/URLModeInput\"\nimport UploadMode from \"./components/UploadInput\"\nimport { DRIVE_SOURCE_MODE } from \"./constants\"\nimport { DriveSourceGroupSetterProps } from \"./interface\"\nimport { FileUploadProvider } from \"./provider/FileUploadProvider\"\nimport { SourceSelectProvider } from \"./provider/SourceSelectProvider\"\n\nconst DriveSourceGroupSetter: FC<DriveSourceGroupSetterProps> = (props) => {\n  const {\n    value = \"\",\n    isSetterSingleRow = false,\n    attrName,\n    widgetType,\n    labelName,\n    labelDesc,\n    widgetDisplayName,\n    componentNode,\n    handleUpdateDsl,\n  } = props\n\n  const { t } = useTranslation()\n  const teamInfo = useSelector(getCurrentTeamInfo)!\n  const canUseDrive = isSubscribeForUseDrive(teamInfo)\n\n  const options = [\n    {\n      label: t(\"widget.public.select_options.url\"),\n      value: DRIVE_SOURCE_MODE.URL,\n    },\n    {\n      label: (\n        <span css={uploadButtonStyle}>\n          {!canUseDrive && <UpgradeIcon color={getColor(\"techPurple\", \"03\")} />}\n          <span>{t(\"widget.public.select_options.upload\")}</span>\n        </span>\n      ),\n      value: DRIVE_SOURCE_MODE.UPLOAD,\n    },\n  ]\n\n  const [selectMode, setSelectMode] = useState(DRIVE_SOURCE_MODE.URL)\n  const { srcByURL, srcByUpload } = useMemo(() => {\n    const srcByURL = get(componentNode, `props.${attrName}ByURL`, value)\n    const srcByUpload = get(componentNode, `props.${attrName}ByUpload`, value)\n    return {\n      srcByURL,\n      srcByUpload,\n    }\n  }, [attrName, componentNode, value])\n\n  const handleSelectModeChange = (mode: DRIVE_SOURCE_MODE) => {\n    setSelectMode(mode)\n    if (mode === DRIVE_SOURCE_MODE.URL) {\n      handleUpdateDsl(attrName, srcByURL)\n    } else {\n      handleUpdateDsl(attrName, srcByUpload)\n    }\n  }\n\n  const handleUpdateResultByURL = (attrNameByUrl: string, value: string) => {\n    if (selectMode === DRIVE_SOURCE_MODE.URL) {\n      handleUpdateDsl(attrName, value)\n    }\n    handleUpdateDsl(attrNameByUrl, value)\n  }\n\n  const handleUpdateResultByUpload = (value: string) => {\n    if (selectMode === DRIVE_SOURCE_MODE.UPLOAD) {\n      handleUpdateDsl(attrName, value)\n    }\n    handleUpdateDsl(`${attrName}ByUpload`, value)\n  }\n\n  return (\n    <SourceSelectProvider\n      widgetType={widgetType}\n      path={ROOT_PATH}\n      handleUpdateResult={(value) => {\n        handleUpdateResultByURL(`${attrName}ByURL`, value)\n      }}\n    >\n      <FileUploadProvider\n        widgetType={widgetType}\n        handleUpdateResult={handleUpdateResultByUpload}\n      >\n        <div css={baseRadioGroupContainerStyle(isSetterSingleRow)}>\n          <SourceHeader\n            labelDesc={labelDesc}\n            labelName={labelName}\n            showSelect={selectMode === DRIVE_SOURCE_MODE.URL}\n            canUseDrive={canUseDrive}\n          />\n          <div css={applyRadioGroupWrapperStyle(isSetterSingleRow)}>\n            <RadioGroup\n              onChange={handleSelectModeChange}\n              value={selectMode}\n              forceEqualWidth={true}\n              options={options}\n              type=\"button\"\n              size=\"medium\"\n              colorScheme=\"grayBlue\"\n              css={radioGroupStyle}\n            />\n            {selectMode === DRIVE_SOURCE_MODE.URL && (\n              <URLModeInput\n                value={srcByURL}\n                attrName={`${attrName}ByURL`}\n                widgetType={widgetType}\n                handleUpdateDsl={handleUpdateResultByURL}\n                widgetDisplayName={widgetDisplayName}\n              />\n            )}\n            {selectMode === DRIVE_SOURCE_MODE.UPLOAD && (\n              <UploadMode widgetType={widgetType} canUseDrive={canUseDrive} />\n            )}\n          </div>\n        </div>\n        <FolderOperateModal />\n        <FilesModal />\n      </FileUploadProvider>\n    </SourceSelectProvider>\n  )\n}\n\nDriveSourceGroupSetter.displayName = \"DriveSourceGroupSetter\"\n\nexport default DriveSourceGroupSetter\n"],"names":["FileBreadCrumb","currentPath","totalPath","updatePath","useContext","DriveFileSelectContext","handleClickBreadcrumb","useCallback","path","last","breadList","useMemo","item","index","array","breadcrumbPath","isLast","ROOT_PATH","jsx","Breadcrumb","BreadcrumbItem","emptyContainerStyle","css","EmptyState","t","useTranslation","jsxs","FolderIcon","FOLDER_LIST_CONTAINER_HEIGHT","FOLDER_LIST_ITEM_HEIGHT","MAX_SIZE_MESSAGE","MIN_SIZE_MESSAGE","MAX_FILE_NUM","MIN_FILE_NUM","fileNameStyle","getColor","iconPublicStyle","listItemContainerStyle","singleListItemContainerStyle","isSelected","doubtStyle","FileList","props","listData","search","selectItems","colorScheme","singleSelect","onChange","getFileList","handleSingleChange","handleClickItem","e","GCS_OBJECT_TYPE","currentPageIndexRef","useRef","VirtualList","_a","Checkbox","v","file","getFileIconByContentType","Trigger","DoubtIcon","loadingContainerStyle","LoadingState","Spin","ModalTitleStyle","applyInnerFileListContainerStyle","isLoading","loadingStyle","fileListContainerStyle","footerContainerStyle","headerContainerStyle","FilesModalContent","modalVisible","fileList","minSize","maxSize","minFileNum","maxFileNum","sizeType","submitSelect","handleCloseModal","isConfirmLoading","setConfirmLoading","useState","searchRef","setSelectItems","disabled","setDisabled","loading","setLoading","message","useMessage","handleBtnDisabled","list","validateFileNum","i18n","equalMaxSize","equalMinSize","handleChange","flag","newSelectItems","handleClickClose","handleClickOk","getListDate","currentPage","debounceHandleOnSearch","debounce","value","useEffect","Fragment","CloseIcon","Search","Button","createContext","getCurrentPath","limitPath","curTotalPath","limitPathArr","limitRoot","removeSuffixPath","regex","usePath","allowAnonymousUse","setTotalPath","setCurrentPath","changedPath","curChangePath","FilesModal","createPortal","Modal","applyRadioGroupWrapperStyle","isSetterSingleRow","width","fixedWidthStyle","radioGroupStyle","baseRadioGroupContainerStyle","basicStyle","singleRowStyle","uploadButtonStyle","sourceHeaderContainerStyle","fileSelectContainerStyle","folderIconStyle","SourceHeader","labelName","labelDesc","showSelect","canUseDrive","upgradeModal","useUpgradeModal","setModalVisible","PanelLabel","Folder","URLModeInput","BaseInput","VALIDATION_TYPES","SvgAudio","React.createElement","SvgImage","SvgPdf","SvgVideo","getUploadModeInfo","widgetType","ImageIcon","PdfIcon","VideoIcon","AudioIcon","getUploadAccept","getPathForSignedUrl","getReportElementForUpload","getReportElementForSelect","UploadOperate","uploadFileRef","currentFolderPath","setFolderOperateVisible","FolderOperateModalContext","setIsUpLoading","setUploadName","handleUpdateResult","FileUploadContext","onChangeFiles","files","queryID","abortController","uploadParams","updateFileDetailStore","FILE_ITEM_DETAIL_STATUS_IN_UI","uploadRes","uploadFileToDrive","handleCollaPurchaseError","CollarModalType","requestParams","EXPIRATION_TYPE","res","fetchGenerateTinyUrl","HTTP_REQUEST_PUBLIC_BASE_URL","PUBLIC_DRIVE_REQUEST_PREFIX","FileUploadProvider","children","setCurrentFolderPath","folderOperateVisible","createFolderVisible","setCreateFolderVisible","isUpLoading","uploadName","uploadContainerStyle","uploadIconStyle","uploadNameStyle","UploadMode","placeholderInfo","handleClickUpload","PAGESIZE","COLOR_SCHEME","DRIVE_SOURCE_MODE","SourceSelectProvider","setFileList","fileCategory","FILE_CATEGORY","items","resolve","reject","DRIVE_FILE_TYPE","fetchFileList","prev","DriveSourceGroupSetter","attrName","widgetDisplayName","componentNode","handleUpdateDsl","teamInfo","useSelector","getCurrentTeamInfo","isSubscribeForUseDrive","options","UpgradeIcon","selectMode","setSelectMode","srcByURL","srcByUpload","get","handleSelectModeChange","mode","handleUpdateResultByURL","attrNameByUrl","RadioGroup","FolderOperateModal"],"mappings":"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"}