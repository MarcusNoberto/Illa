{"version":3,"file":"index-83df9746.js","sources":["../../../../packages/illa-public-component/ResourceGenerator/components/ConfigElements/MicrosoftSqlConfigElement/index.tsx"],"sourcesContent":["import { MicrosoftSqlResourceInitial } from \"@illa-public/public-configs\"\nimport { MicrosoftSqlResource, Resource } from \"@illa-public/public-types\"\nimport { TextLink } from \"@illa-public/text-link\"\nimport { isCloudVersion } from \"@illa-public/utils\"\nimport { FC, useCallback, useContext, useState } from \"react\"\nimport { Controller, useFormContext } from \"react-hook-form\"\nimport { Trans, useTranslation } from \"react-i18next\"\nimport { Alert, Divider, WarningCircleIcon, getColor } from \"@illa-design/react\"\nimport { ResourceGeneratorContext } from \"../../../provider\"\nimport {\n  isContainLocalPath,\n  urlValidate,\n  validateNotEmpty,\n} from \"../../../utils\"\nimport { ControlledElement } from \"../../ControlledElement\"\nimport { InputRecordEditor } from \"../../InputRecordEditor\"\nimport { BaseConfigElementProps } from \"../interface\"\nimport {\n  applyConfigItemLabelText,\n  configItemTip,\n  connectType,\n  connectTypeStyle,\n  container,\n  errorIconStyle,\n  errorMsgStyle,\n  labelContainer,\n  optionLabelStyle,\n} from \"../style\"\n\nconst MicrosoftSqlConfigElement: FC<BaseConfigElementProps> = (props) => {\n  const { resourceID } = props\n  const { t } = useTranslation()\n\n  const { control, formState, watch } = useFormContext()\n\n  const { getResourceByID } = useContext(ResourceGeneratorContext)\n  const findResource = getResourceByID(\n    resourceID,\n  ) as Resource<MicrosoftSqlResource>\n\n  const [showAlert, setShowAlert] = useState<boolean>(false)\n\n  const content = findResource?.content ?? MicrosoftSqlResourceInitial\n\n  const sslOpen = watch(\"ssl\", content.ssl.ssl)\n\n  const handleHostValidate = useCallback(\n    (value: string) => {\n      const isShowAlert = isContainLocalPath(value ?? \"\")\n      if (isShowAlert !== showAlert) {\n        setShowAlert(isShowAlert)\n      }\n      return urlValidate(value)\n    },\n    [showAlert],\n  )\n\n  const handleDocLinkClick = () => {\n    window.open(\"https://www.illacloud.com/docs/illa-cli\", \"_blank\")\n  }\n\n  return (\n    <>\n      <div css={container}>\n        <ControlledElement\n          controlledType=\"input\"\n          isRequired\n          title={t(\"editor.action.resource.db.label.name\")}\n          control={control}\n          defaultValue={findResource?.resourceName ?? \"\"}\n          rules={[\n            {\n              validate: validateNotEmpty,\n            },\n          ]}\n          placeholders={[t(\"editor.action.resource.db.placeholder.name\")]}\n          name=\"resourceName\"\n          tips={t(\"editor.action.resource.restapi.tip.name\")}\n        />\n        <Divider\n          direction=\"horizontal\"\n          ml=\"24px\"\n          mr=\"24px\"\n          mt=\"8px\"\n          mb=\"8px\"\n          w=\"unset\"\n        />\n        <div css={optionLabelStyle}>\n          {t(\"editor.action.resource.db.title.general_option\")}\n        </div>\n        <ControlledElement\n          controlledType={[\"input\", \"number\"]}\n          isRequired\n          title={t(\"editor.action.resource.db.label.hostname_port\")}\n          control={control}\n          defaultValue={[content.host, content.port ?? 1433]}\n          rules={[\n            {\n              required: t(\"editor.action.resource.error.invalid_url\"),\n              validate: handleHostValidate,\n            },\n            {\n              required: true,\n            },\n          ]}\n          placeholders={[\n            t(\"editor.action.resource.db.placeholder.hostname\"),\n            \"1433\",\n          ]}\n          name={[\"host\", \"port\"]}\n          styles={[\n            {},\n            {\n              w: \"142px\",\n              ml: \"8px\",\n            },\n          ]}\n          tips={\n            formState.errors.host && !showAlert ? (\n              <div css={errorMsgStyle}>\n                <WarningCircleIcon css={errorIconStyle} />\n                <>{formState.errors.host.message}</>\n              </div>\n            ) : null\n          }\n        />\n\n        {showAlert && (\n          <ControlledElement\n            defaultValue=\"\"\n            name=\"\"\n            title=\"\"\n            controlledType=\"none\"\n            control={control}\n            tips={\n              <Alert\n                title={t(\"editor.action.form.tips.connect_to_local.title.tips\")}\n                closable={false}\n                content={\n                  isCloudVersion ? (\n                    <Trans\n                      i18nKey=\"editor.action.form.tips.connect_to_local.cloud\"\n                      t={t}\n                      components={[\n                        <TextLink\n                          key=\"editor.action.form.tips.connect_to_local.cloud\"\n                          onClick={handleDocLinkClick}\n                        />,\n                      ]}\n                    />\n                  ) : (\n                    t(\"editor.action.form.tips.connect_to_local.selfhost\")\n                  )\n                }\n              />\n            }\n          />\n        )}\n        <ControlledElement\n          controlledType={[\"input\"]}\n          isRequired\n          title={t(\"editor.action.resource.db.label.database\")}\n          control={control}\n          defaultValue={content.databaseName}\n          rules={[\n            {\n              validate: validateNotEmpty,\n            },\n          ]}\n          placeholders={[\n            t(\"editor.action.resource.db.placeholder.database_name\"),\n          ]}\n          name=\"databaseName\"\n        />\n\n        <ControlledElement\n          controlledType={[\"input\", \"password\"]}\n          title={t(\"editor.action.resource.db.label.username_password\")}\n          control={control}\n          defaultValue={[content.username, content.password]}\n          placeholders={[\n            t(\"editor.action.resource.db.placeholder.username\"),\n            t(\"editor.action.resource.db.placeholder.password\"),\n          ]}\n          name={[\"username\", \"password\"]}\n          styles={[\n            {},\n            {\n              ml: \"8px\",\n            },\n          ]}\n        />\n\n        {isCloudVersion && (\n          <>\n            <div css={configItemTip}>\n              {t(\"editor.action.resource.db.tip.username_password\")}\n            </div>\n            <div css={connectType}>\n              <div css={labelContainer}>\n                <span\n                  css={applyConfigItemLabelText(getColor(\"grayBlue\", \"02\"))}\n                >\n                  {t(\"editor.action.resource.db.label.connect_type\")}\n                </span>\n              </div>\n              <span css={connectTypeStyle}>\n                {t(\"editor.action.resource.db.tip.connect_type\")}\n              </span>\n            </div>\n          </>\n        )}\n        <Divider\n          direction=\"horizontal\"\n          ml=\"24px\"\n          mr=\"24px\"\n          mt=\"8px\"\n          mb=\"8px\"\n          w=\"unset\"\n        />\n        <div css={optionLabelStyle}>\n          {t(\"editor.action.resource.db.title.advanced_option\")}\n        </div>\n\n        <Controller\n          key=\"connectionOpts\"\n          control={control}\n          defaultValue={content.connectionOpts}\n          render={({ field: { value, onChange } }) => (\n            <InputRecordEditor\n              label={t(\"editor.action.resource.db.label.connection_options\")}\n              records={value}\n              onAdd={() => {\n                onChange([...value, { key: \"\", value: \"\" }])\n              }}\n              onDelete={(index) => {\n                let newRecords = [...value]\n                newRecords.splice(index, 1)\n                if (newRecords.length === 0) {\n                  newRecords = [{ key: \"\", value: \"\" }]\n                }\n                onChange(newRecords)\n              }}\n              onChangeKey={(index, key, v) => {\n                let newRecords = [...value]\n                newRecords[index] = { key, value: v }\n                onChange(newRecords)\n              }}\n              onChangeValue={(index, key, v) => {\n                let newRecords = [...value]\n                newRecords[index].value = v\n                onChange(newRecords)\n              }}\n            />\n          )}\n          name=\"connectionOpts\"\n        />\n        <div css={configItemTip}>\n          {t(\"editor.action.resource.db.tip.connection_options\")}\n        </div>\n\n        <ControlledElement\n          controlledType={[\"switch\"]}\n          title={t(\"editor.action.resource.db.label.ssl_options\")}\n          control={control}\n          defaultValue={content.ssl.ssl}\n          name=\"ssl\"\n          contentLabel={t(\"editor.action.resource.db.tip.ssl_options\")}\n        />\n\n        {sslOpen && (\n          <>\n            <ControlledElement\n              controlledType={[\"textarea\"]}\n              title={t(\"editor.action.resource.db.label.ca_certificate\")}\n              control={control}\n              defaultValue={content.ssl.caCert}\n              name=\"caCert\"\n              placeholders={[\n                t(\"editor.action.resource.db.placeholder.certificate\"),\n              ]}\n            />\n            <ControlledElement\n              controlledType={[\"textarea\"]}\n              title={t(\"editor.action.resource.db.label.client_key\")}\n              control={control}\n              defaultValue={content.ssl.privateKey}\n              name=\"privateKey\"\n              placeholders={[\n                t(\"editor.action.resource.db.placeholder.certificate\"),\n              ]}\n            />\n            <ControlledElement\n              controlledType={[\"textarea\"]}\n              title={t(\"editor.action.resource.db.label.client_certificate\")}\n              control={control}\n              defaultValue={content.ssl.clientCert}\n              name=\"clientCert\"\n              placeholders={[\n                t(\"editor.action.resource.db.placeholder.certificate\"),\n              ]}\n            />\n          </>\n        )}\n      </div>\n    </>\n  )\n}\n\nMicrosoftSqlConfigElement.displayName = \"MicrosoftSqlConfigElement\"\nexport default MicrosoftSqlConfigElement\n"],"names":["MicrosoftSqlConfigElement","props","resourceID","t","useTranslation","control","formState","watch","useFormContext","getResourceByID","useContext","ResourceGeneratorContext","findResource","showAlert","setShowAlert","useState","content","MicrosoftSqlResourceInitial","sslOpen","handleHostValidate","useCallback","value","isShowAlert","isContainLocalPath","urlValidate","jsx","Fragment","jsxs","container","ControlledElement","validateNotEmpty","Divider","optionLabelStyle","errorMsgStyle","WarningCircleIcon","errorIconStyle","Alert","isCloudVersion","Controller","onChange","InputRecordEditor","index","newRecords","key","v","configItemTip"],"mappings":"weA6BM,MAAAA,EAAyDC,GAAU,CACjE,KAAA,CAAE,WAAAC,CAAe,EAAAD,EACjB,CAAE,EAAAE,GAAMC,IAER,CAAE,QAAAC,EAAS,UAAAC,EAAW,MAAAC,GAAUC,EAAe,EAE/C,CAAE,gBAAAC,CAAA,EAAoBC,EAAA,WAAWC,CAAwB,EACzDC,EAAeH,EACnBP,CAAA,EAGI,CAACW,EAAWC,CAAY,EAAIC,WAAkB,EAAK,EAEnDC,GAAUJ,GAAA,YAAAA,EAAc,UAAWK,EAEnCC,EAAUX,EAAM,MAAOS,EAAQ,IAAI,GAAG,EAEtCG,EAAqBC,EAAA,YACxBC,GAAkB,CACX,MAAAC,EAAcC,EAAmBF,GAAS,EAAE,EAClD,OAAIC,IAAgBT,GAClBC,EAAaQ,CAAW,EAEnBE,EAAYH,CAAK,CAC1B,EACA,CAACR,CAAS,CAAA,EAOZ,OAEIY,EAAAC,EAAA,CAAA,SAAAC,EAAC,MAAI,CAAA,IAAKC,EACR,SAAA,CAAAH,EAACI,EAAA,CACC,eAAe,QACf,WAAU,GACV,MAAO1B,EAAE,sCAAsC,EAC/C,QAAAE,EACA,cAAcO,GAAA,YAAAA,EAAc,eAAgB,GAC5C,MAAO,CACL,CACE,SAAUkB,CACZ,CACF,EACA,aAAc,CAAC3B,EAAE,4CAA4C,CAAC,EAC9D,KAAK,eACL,KAAMA,EAAE,yCAAyC,CAAA,CACnD,EACAsB,EAACM,EAAA,CACC,UAAU,aACV,GAAG,OACH,GAAG,OACH,GAAG,MACH,GAAG,MACH,EAAE,OAAA,CACJ,IACC,MAAI,CAAA,IAAKC,EACP,SAAA7B,EAAE,gDAAgD,EACrD,EACAsB,EAACI,EAAA,CACC,eAAgB,CAAC,QAAS,QAAQ,EAClC,WAAU,GACV,MAAO1B,EAAE,+CAA+C,EACxD,QAAAE,EACA,aAAc,CAACW,EAAQ,KAAMA,EAAQ,MAAQ,IAAI,EACjD,MAAO,CACL,CACE,SAAUb,EAAE,0CAA0C,EACtD,SAAUgB,CACZ,EACA,CACE,SAAU,EACZ,CACF,EACA,aAAc,CACZhB,EAAE,gDAAgD,EAClD,MACF,EACA,KAAM,CAAC,OAAQ,MAAM,EACrB,OAAQ,CACN,CAAC,EACD,CACE,EAAG,QACH,GAAI,KACN,CACF,EACA,KACEG,EAAU,OAAO,MAAQ,CAACO,EACxBc,EAAC,MAAI,CAAA,IAAKM,EACR,SAAA,CAACR,EAAAS,EAAA,CAAkB,IAAKC,CAAgB,CAAA,EACrCV,EAAAC,EAAA,CAAA,SAAApB,EAAU,OAAO,KAAK,QAAQ,CAAA,CAAA,CACnC,EACE,IAAA,CAER,EAECO,GACCY,EAACI,EAAA,CACC,aAAa,GACb,KAAK,GACL,MAAM,GACN,eAAe,OACf,QAAAxB,EACA,KACEoB,EAACW,EAAA,CACC,MAAOjC,EAAE,qDAAqD,EAC9D,SAAU,GACV,QAaIA,EAAE,mDAAmD,CAAA,CAG3D,CAAA,CAEJ,EAEFsB,EAACI,EAAA,CACC,eAAgB,CAAC,OAAO,EACxB,WAAU,GACV,MAAO1B,EAAE,0CAA0C,EACnD,QAAAE,EACA,aAAcW,EAAQ,aACtB,MAAO,CACL,CACE,SAAUc,CACZ,CACF,EACA,aAAc,CACZ3B,EAAE,qDAAqD,CACzD,EACA,KAAK,cAAA,CACP,EAEAsB,EAACI,EAAA,CACC,eAAgB,CAAC,QAAS,UAAU,EACpC,MAAO1B,EAAE,mDAAmD,EAC5D,QAAAE,EACA,aAAc,CAACW,EAAQ,SAAUA,EAAQ,QAAQ,EACjD,aAAc,CACZb,EAAE,gDAAgD,EAClDA,EAAE,gDAAgD,CACpD,EACA,KAAM,CAAC,WAAY,UAAU,EAC7B,OAAQ,CACN,CAAC,EACD,CACE,GAAI,KACN,CACF,CAAA,CACF,EAECkC,EAmBDZ,EAACM,EAAA,CACC,UAAU,aACV,GAAG,OACH,GAAG,OACH,GAAG,MACH,GAAG,MACH,EAAE,OAAA,CACJ,IACC,MAAI,CAAA,IAAKC,EACP,SAAA7B,EAAE,iDAAiD,EACtD,EAEAsB,EAACa,EAAA,CAEC,QAAAjC,EACA,aAAcW,EAAQ,eACtB,OAAQ,CAAC,CAAE,MAAO,CAAE,MAAAK,EAAO,SAAAkB,MACzBd,EAACe,EAAA,CACC,MAAOrC,EAAE,oDAAoD,EAC7D,QAASkB,EACT,MAAO,IAAM,CACFkB,EAAA,CAAC,GAAGlB,EAAO,CAAE,IAAK,GAAI,MAAO,EAAI,CAAA,CAAC,CAC7C,EACA,SAAWoB,GAAU,CACf,IAAAC,EAAa,CAAC,GAAGrB,CAAK,EACfqB,EAAA,OAAOD,EAAO,CAAC,EACtBC,EAAW,SAAW,IACxBA,EAAa,CAAC,CAAE,IAAK,GAAI,MAAO,GAAI,GAEtCH,EAASG,CAAU,CACrB,EACA,YAAa,CAACD,EAAOE,EAAKC,IAAM,CAC1B,IAAAF,EAAa,CAAC,GAAGrB,CAAK,EAC1BqB,EAAWD,CAAK,EAAI,CAAE,IAAAE,EAAK,MAAOC,CAAE,EACpCL,EAASG,CAAU,CACrB,EACA,cAAe,CAACD,EAAOE,EAAKC,IAAM,CAC5B,IAAAF,EAAa,CAAC,GAAGrB,CAAK,EACfqB,EAAAD,CAAK,EAAE,MAAQG,EAC1BL,EAASG,CAAU,CACrB,CAAA,CACF,EAEF,KAAK,gBAAA,EA9BD,gBA+BN,IACC,MAAI,CAAA,IAAKG,EACP,SAAA1C,EAAE,kDAAkD,EACvD,EAEAsB,EAACI,EAAA,CACC,eAAgB,CAAC,QAAQ,EACzB,MAAO1B,EAAE,6CAA6C,EACtD,QAAAE,EACA,aAAcW,EAAQ,IAAI,IAC1B,KAAK,MACL,aAAcb,EAAE,2CAA2C,CAAA,CAC7D,EAECe,GAEGS,EAAAD,EAAA,CAAA,SAAA,CAAAD,EAACI,EAAA,CACC,eAAgB,CAAC,UAAU,EAC3B,MAAO1B,EAAE,gDAAgD,EACzD,QAAAE,EACA,aAAcW,EAAQ,IAAI,OAC1B,KAAK,SACL,aAAc,CACZb,EAAE,mDAAmD,CACvD,CAAA,CACF,EACAsB,EAACI,EAAA,CACC,eAAgB,CAAC,UAAU,EAC3B,MAAO1B,EAAE,4CAA4C,EACrD,QAAAE,EACA,aAAcW,EAAQ,IAAI,WAC1B,KAAK,aACL,aAAc,CACZb,EAAE,mDAAmD,CACvD,CAAA,CACF,EACAsB,EAACI,EAAA,CACC,eAAgB,CAAC,UAAU,EAC3B,MAAO1B,EAAE,oDAAoD,EAC7D,QAAAE,EACA,aAAcW,EAAQ,IAAI,WAC1B,KAAK,aACL,aAAc,CACZb,EAAE,mDAAmD,CACvD,CAAA,CACF,CAAA,EACF,CAAA,CAEJ,CAAA,CACF,CAAA,CAEJ,EAEAH,EAA0B,YAAc"}