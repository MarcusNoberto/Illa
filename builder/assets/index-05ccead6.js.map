{"version":3,"file":"index-05ccead6.js","sources":["../../src/page/App/components/InspectPanel/PanelSetters/DataGridSetter/ColumnSwitchSetter/style.ts","../../src/page/App/components/InspectPanel/PanelSetters/DataGridSetter/ColumnSwitchSetter/index.tsx"],"sourcesContent":["import { SerializedStyles, css } from \"@emotion/react\"\nimport { globalColor, illaPrefix } from \"@illa-design/react\"\n\nexport const dynamicSwitchWrapperStyle = css`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n`\n\nexport const customAndSwitchWrapperStyle = css`\n  display: flex;\n  align-items: center;\n  min-height: 28px;\n`\n\nexport const applyCustomIconStyle = (\n  isSelected: boolean = false,\n): SerializedStyles => {\n  const selectedStyle = isSelected\n    ? css`\n        color: ${globalColor(`--${illaPrefix}-purple-03`)};\n      `\n    : css`\n        color: ${globalColor(`--${illaPrefix}-grayBlue-06`)};\n        margin-right: 10px;\n      `\n  return css`\n    ${selectedStyle};\n    width: 16px;\n    height: 16px;\n    font-size: 16px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    :hover {\n      cursor: pointer;\n      color: ${globalColor(`--${illaPrefix}-purple-03`)};\n    }\n  `\n}\n\nconst singleRowStyle = css`\n  width: 100%;\n  padding: 8px 16px;\n`\n\nconst doubleRowStyle = css`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 8px 16px;\n  gap: 8px;\n`\n\nexport const applyLabelWrapperStyle = (\n  isCustom: boolean = false,\n): SerializedStyles => {\n  return isCustom ? doubleRowStyle : singleRowStyle\n}\n\nexport const setterContainerStyle = (isSetterSingleRow: boolean = false) => {\n  const basicStyle = css`\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n  `\n  const singleRowStyle = css`\n    flex-direction: column;\n    gap: 8px;\n  `\n  return css`\n    display: flex;\n    padding: 8px 0;\n    ${isSetterSingleRow ? singleRowStyle : basicStyle};\n    width: 100%;\n  `\n}\n","import { ILLA_MIXPANEL_EVENT_TYPE } from \"@illa-public/mixpanel-utils\"\nimport { get } from \"lodash-es\"\nimport { FC, useCallback } from \"react\"\nimport { Switch } from \"@illa-design/react\"\nimport ColumnMappedInput from \"@/page/App/components/InspectPanel/PanelSetters/DataGridSetter/ColumnMappedInput\"\nimport { DynamicIcon } from \"@/page/App/components/InspectPanel/PanelSetters/PublicComponent/DynamicIcon\"\nimport { PanelLabel } from \"@/page/App/components/InspectPanel/components/Label\"\nimport { trackInEditor } from \"@/utils/mixpanelHelper\"\nimport { ColumnSwitchSetterProps } from \"./interface\"\nimport {\n  applyLabelWrapperStyle,\n  customAndSwitchWrapperStyle,\n  dynamicSwitchWrapperStyle,\n} from \"./style\"\n\nconst ColumnSwitchSetter: FC<ColumnSwitchSetterProps> = (props) => {\n  const {\n    attrName,\n    labelName,\n    labelDesc,\n    panelConfig,\n    handleUpdateDsl,\n    defaultValue,\n    handleUpdateMultiAttrDSL,\n    value,\n    openDynamic,\n    detailedDescription,\n    widgetType,\n  } = props\n\n  const customSelected = get(panelConfig, `${attrName}Dynamic`, false)\n\n  const handleClickDynamicIcon = useCallback(() => {\n    if (customSelected) {\n      handleUpdateMultiAttrDSL?.({\n        [attrName]: undefined,\n        [`${attrName}Dynamic`]: false,\n      })\n      trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n        element: \"fx\",\n        parameter1: widgetType,\n        parameter2: attrName,\n        parameter3: \"off\",\n      })\n    } else {\n      handleUpdateMultiAttrDSL?.({\n        [attrName]: undefined,\n        [`${attrName}Dynamic`]: true,\n      })\n      trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n        element: \"fx\",\n        parameter1: widgetType,\n        parameter2: attrName,\n        parameter3: \"on\",\n      })\n    }\n  }, [attrName, customSelected, handleUpdateMultiAttrDSL, widgetType])\n\n  return (\n    <div css={applyLabelWrapperStyle(customSelected)}>\n      <div css={dynamicSwitchWrapperStyle}>\n        {labelName && (\n          <PanelLabel labelName={labelName} labelDesc={labelDesc} />\n        )}\n        <div css={customAndSwitchWrapperStyle}>\n          {openDynamic && (\n            <DynamicIcon\n              isDynamic={customSelected}\n              hasRightContent\n              onClick={handleClickDynamicIcon}\n            />\n          )}\n          {!customSelected && (\n            <Switch\n              defaultValue={defaultValue}\n              onChange={(value) => {\n                handleUpdateDsl(attrName, value)\n                trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n                  element: \"component_inspect_radio\",\n                  parameter1: widgetType,\n                  parameter2: attrName,\n                })\n              }}\n              checked={Boolean(value)}\n              colorScheme=\"techPurple\"\n            />\n          )}\n        </div>\n      </div>\n      {customSelected && (\n        <ColumnMappedInput\n          {...props}\n          value={value}\n          isSetterSingleRow\n          detailedDescription={detailedDescription ?? labelDesc}\n          onlyHasSetter={true}\n        />\n      )}\n    </div>\n  )\n}\n\nColumnSwitchSetter.displayName = \"ColumnSwitchSetter\"\n\nexport default ColumnSwitchSetter\n"],"names":["dynamicSwitchWrapperStyle","css","customAndSwitchWrapperStyle","singleRowStyle","doubleRowStyle","applyLabelWrapperStyle","isCustom","ColumnSwitchSetter","props","attrName","labelName","labelDesc","panelConfig","handleUpdateDsl","defaultValue","handleUpdateMultiAttrDSL","value","openDynamic","detailedDescription","widgetType","customSelected","get","handleClickDynamicIcon","useCallback","trackInEditor","ILLA_MIXPANEL_EVENT_TYPE","jsxs","jsx","PanelLabel","DynamicIcon","Switch","ColumnMappedInput"],"mappings":"wnBAGO,MAAMA,EAA4BC;AAAA;AAAA;AAAA;AAAA;AAAA,EAO5BC,EAA8BD;AAAA;AAAA;AAAA;AAAA,EAiCrCE,EAAiBF;AAAA;AAAA;AAAA,EAKjBG,EAAiBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQVI,EAAyB,CACpCC,EAAoB,KAEbA,EAAWF,EAAiBD,EC5C/BI,EAAmDC,GAAU,CAC3D,KAAA,CACJ,SAAAC,EACA,UAAAC,EACA,UAAAC,EACA,YAAAC,EACA,gBAAAC,EACA,aAAAC,EACA,yBAAAC,EACA,MAAAC,EACA,YAAAC,EACA,oBAAAC,EACA,WAAAC,CACE,EAAAX,EAEEY,EAAiBC,EAAIT,EAAa,GAAGH,CAAQ,UAAW,EAAK,EAE7Da,EAAyBC,EAAAA,YAAY,IAAM,CAC3CH,GACyBL,GAAA,MAAAA,EAAA,CACzB,CAACN,CAAQ,EAAG,OACZ,CAAC,GAAGA,CAAQ,SAAS,EAAG,EAAA,GAE1Be,EAAcC,EAAyB,MAAO,CAC5C,QAAS,KACT,WAAYN,EACZ,WAAYV,EACZ,WAAY,KAAA,CACb,IAE0BM,GAAA,MAAAA,EAAA,CACzB,CAACN,CAAQ,EAAG,OACZ,CAAC,GAAGA,CAAQ,SAAS,EAAG,EAAA,GAE1Be,EAAcC,EAAyB,MAAO,CAC5C,QAAS,KACT,WAAYN,EACZ,WAAYV,EACZ,WAAY,IAAA,CACb,IAEF,CAACA,EAAUW,EAAgBL,EAA0BI,CAAU,CAAC,EAEnE,OACGO,EAAA,MAAA,CAAI,IAAKrB,EAAuBe,CAAc,EAC7C,SAAA,CAACM,EAAA,MAAA,CAAI,IAAK1B,EACP,SAAA,CACCU,GAAAiB,EAACC,EAAW,CAAA,UAAAlB,EAAsB,UAAAC,CAAsB,CAAA,EAE1De,EAAC,MAAI,CAAA,IAAKxB,EACP,SAAA,CACCe,GAAAU,EAACE,EAAA,CACC,UAAWT,EACX,gBAAe,GACf,QAASE,CAAA,CACX,EAED,CAACF,GACAO,EAACG,EAAA,CACC,aAAAhB,EACA,SAAWE,GAAU,CACnBH,EAAgBJ,EAAUO,CAAK,EAC/BQ,EAAcC,EAAyB,MAAO,CAC5C,QAAS,0BACT,WAAYN,EACZ,WAAYV,CAAA,CACb,CACH,EACA,QAAS,EAAQO,EACjB,YAAY,YAAA,CACd,CAAA,EAEJ,CAAA,EACF,EACCI,GACCO,EAACI,EAAA,CACE,GAAGvB,EACJ,MAAAQ,EACA,kBAAiB,GACjB,oBAAqBE,GAAuBP,EAC5C,cAAe,EAAA,CACjB,CAEJ,CAAA,CAAA,CAEJ,EAEAJ,EAAmB,YAAc"}