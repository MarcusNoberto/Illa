{"version":3,"file":"chartKeysSelectSetter-ce46a556.js","sources":["../../src/page/App/components/InspectPanel/PanelSetters/ChartSetter/chartKeysSelectSetter.tsx"],"sourcesContent":["import { get } from \"lodash-es\"\nimport { FC, useCallback, useMemo } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { ChartDatasetShape } from \"@/page/App/components/InspectPanel/PanelSetters/ChartSetter/chartDatasetsSetter/interface\"\nimport { CHART_PRESET_COLOR } from \"@/page/App/components/InspectPanel/PanelSetters/ChartSetter/chartDatasetsSetter/listItem\"\nimport { ChartDataSourceSetterProps } from \"@/page/App/components/InspectPanel/PanelSetters/ChartSetter/interface\"\nimport {\n  getComponentMap,\n  searchComponentFromMap,\n} from \"@/redux/currentApp/components/componentsSelector\"\nimport { getExecutionResult } from \"@/redux/currentApp/executionTree/executionSelector\"\nimport { RootState } from \"@/store\"\nimport { formatDataAsObject } from \"@/utils/formatData\"\nimport { isObject } from \"@/utils/typeHelper\"\nimport SearchSelectSetter from \"../SelectSetter/searchSelect\"\n\nconst ChartKeysSelectSetter: FC<ChartDataSourceSetterProps> = (props) => {\n  const { widgetDisplayName, attrName, value, handleUpdateMultiAttrDSL } = props\n\n  const targetComponentProps = useSelector<RootState, Record<string, any>>(\n    (rootState) => {\n      const executionTree = getExecutionResult(rootState)\n      return get(executionTree, widgetDisplayName, {})\n    },\n  )\n\n  const insertValues = useSelector<RootState, Record<string, any>>(\n    (rootState) => {\n      const targetComponentNode = searchComponentFromMap(\n        getComponentMap(rootState),\n        widgetDisplayName,\n      )\n      if (!targetComponentNode) return {}\n      return targetComponentNode.props || {}\n    },\n  )\n\n  const isDataSourceDynamic = useMemo(() => {\n    const dataSourceMode = get(targetComponentProps, \"dataSourceMode\", \"select\")\n    return dataSourceMode === \"dynamic\"\n  }, [targetComponentProps])\n\n  const dataSources = useMemo(() => {\n    let originDataSources = get(targetComponentProps, \"dataSource\", [])\n    if (isDataSourceDynamic) {\n      originDataSources = get(targetComponentProps, \"dataSourceJS\", [])\n    }\n\n    return formatDataAsObject(originDataSources)\n  }, [isDataSourceDynamic, targetComponentProps])\n\n  const selectedOptions = useMemo(() => {\n    if (!isObject(dataSources)) return []\n    let options = Object.keys(dataSources).map((key) => key)\n    if (attrName === \"groupBy\" && value) {\n      options.unshift(\"—\")\n    }\n    return options\n  }, [attrName, dataSources, value])\n\n  const datasets: ChartDatasetShape[] = useMemo(() => {\n    return get(insertValues, \"datasets\", [])\n  }, [insertValues])\n\n  const generateNewDatasets = useCallback(\n    (isGroupBy: boolean) => {\n      if (!datasets.length) return []\n      if (isGroupBy) {\n        return datasets.map((dataset) => {\n          return {\n            ...dataset,\n            color: \"illa-preset\",\n          }\n        })\n      }\n      return datasets.map((dataset, index) => {\n        return {\n          ...dataset,\n          color: CHART_PRESET_COLOR[index % CHART_PRESET_COLOR.length],\n        }\n      })\n    },\n    [datasets],\n  )\n\n  const handleUpdateDsl = useCallback(\n    (attrName: string, newValue: any) => {\n      if (attrName === \"groupBy\") {\n        if ((!!value && !newValue) || (!value && !!newValue)) {\n          const newDatasets = generateNewDatasets(!!newValue)\n          handleUpdateMultiAttrDSL?.({\n            datasets: newDatasets,\n            [attrName]: newValue === \"—\" ? undefined : newValue,\n          })\n        } else {\n          handleUpdateMultiAttrDSL?.({\n            [attrName]: newValue === \"—\" ? undefined : newValue,\n          })\n        }\n      } else {\n        handleUpdateMultiAttrDSL?.({\n          [attrName]: newValue,\n        })\n      }\n    },\n    [generateNewDatasets, handleUpdateMultiAttrDSL, value],\n  )\n\n  return (\n    <SearchSelectSetter\n      {...props}\n      options={selectedOptions}\n      handleUpdateDsl={handleUpdateDsl}\n    />\n  )\n}\n\nChartKeysSelectSetter.displayName = \"ChartXAxisSetter\"\n\nexport default ChartKeysSelectSetter\n"],"names":["ChartKeysSelectSetter","props","widgetDisplayName","attrName","value","handleUpdateMultiAttrDSL","targetComponentProps","useSelector","rootState","executionTree","getExecutionResult","get","insertValues","targetComponentNode","searchComponentFromMap","getComponentMap","isDataSourceDynamic","useMemo","dataSources","originDataSources","formatDataAsObject","selectedOptions","isObject","options","key","datasets","generateNewDatasets","useCallback","isGroupBy","dataset","index","CHART_PRESET_COLOR","handleUpdateDsl","newValue","newDatasets","jsx","SearchSelectSetter"],"mappings":"8iBAgBM,MAAAA,EAAyDC,GAAU,CACvE,KAAM,CAAE,kBAAAC,EAAmB,SAAAC,EAAU,MAAAC,EAAO,yBAAAC,GAA6BJ,EAEnEK,EAAuBC,EAC1BC,GAAc,CACP,MAAAC,EAAgBC,EAAmBF,CAAS,EAClD,OAAOG,EAAIF,EAAeP,EAAmB,CAAE,CAAA,CACjD,CAAA,EAGIU,EAAeL,EAClBC,GAAc,CACb,MAAMK,EAAsBC,EAC1BC,EAAgBP,CAAS,EACzBN,CAAA,EAEF,OAAKW,EACEA,EAAoB,OAAS,GADH,EAEnC,CAAA,EAGIG,EAAsBC,EAAAA,QAAQ,IACXN,EAAIL,EAAsB,iBAAkB,QAAQ,IACjD,UACzB,CAACA,CAAoB,CAAC,EAEnBY,EAAcD,EAAAA,QAAQ,IAAM,CAChC,IAAIE,EAAoBR,EAAIL,EAAsB,aAAc,CAAE,CAAA,EAClE,OAAIU,IACFG,EAAoBR,EAAIL,EAAsB,eAAgB,CAAE,CAAA,GAG3Dc,EAAmBD,CAAiB,CAAA,EAC1C,CAACH,EAAqBV,CAAoB,CAAC,EAExCe,EAAkBJ,EAAAA,QAAQ,IAAM,CAChC,GAAA,CAACK,EAASJ,CAAW,EAAG,MAAO,GAC/B,IAAAK,EAAU,OAAO,KAAKL,CAAW,EAAE,IAAKM,GAAQA,CAAG,EACnD,OAAArB,IAAa,WAAaC,GAC5BmB,EAAQ,QAAQ,GAAG,EAEdA,CACN,EAAA,CAACpB,EAAUe,EAAad,CAAK,CAAC,EAE3BqB,EAAgCR,EAAAA,QAAQ,IACrCN,EAAIC,EAAc,WAAY,CAAE,CAAA,EACtC,CAACA,CAAY,CAAC,EAEXc,EAAsBC,EAAA,YACzBC,GACMH,EAAS,OACVG,EACKH,EAAS,IAAKI,IACZ,CACL,GAAGA,EACH,MAAO,aAAA,EAEV,EAEIJ,EAAS,IAAI,CAACI,EAASC,KACrB,CACL,GAAGD,EACH,MAAOE,EAAmBD,EAAQC,EAAmB,MAAM,CAAA,EAE9D,EAd4B,GAgB/B,CAACN,CAAQ,CAAA,EAGLO,EAAkBL,EAAA,YACtB,CAACxB,EAAkB8B,IAAkB,CACnC,GAAI9B,IAAa,UACV,GAAEC,GAAS,CAAC6B,GAAc,CAAC7B,GAAW6B,EAAW,CACpD,MAAMC,EAAcR,EAAoB,CAAC,CAACO,CAAQ,EACvB5B,GAAA,MAAAA,EAAA,CACzB,SAAU6B,EACV,CAAC/B,CAAQ,EAAG8B,IAAa,IAAM,OAAYA,CAAA,EAC5C,MAE0B5B,GAAA,MAAAA,EAAA,CACzB,CAACF,CAAQ,EAAG8B,IAAa,IAAM,OAAYA,CAAA,QAIpB5B,GAAA,MAAAA,EAAA,CACzB,CAACF,CAAQ,EAAG8B,CAAA,EAGlB,EACA,CAACP,EAAqBrB,EAA0BD,CAAK,CAAA,EAIrD,OAAA+B,EAACC,EAAA,CACE,GAAGnC,EACJ,QAASoB,EACT,gBAAAW,CAAA,CAAA,CAGN,EAEAhC,EAAsB,YAAc"}