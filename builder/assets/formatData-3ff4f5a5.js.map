{"version":3,"file":"formatData-3ff4f5a5.js","sources":["../../src/utils/formatData.ts"],"sourcesContent":["import { isObject } from \"./typeHelper\"\n\nexport const formatDataAsObject = (data: Record<string, any>[]) => {\n  if (!Array.isArray(data) || !data.length) return {}\n  const result: Record<string, unknown[]> = {}\n  data.forEach((d) => {\n    if (!isObject(d)) return\n    if (!Array.isArray(Object.keys(d))) return\n    Object.keys(d).forEach((key) => {\n      const value = d[key]\n      if (!result.hasOwnProperty(key)) {\n        result[key] = []\n      }\n      result[key].push(value)\n    })\n  })\n  return result\n}\n\nexport const formatDataAsArray = (data: Record<string, unknown[]>) => {\n  const keys = Object.keys(data || {})\n  if (!keys.length) return []\n  const result = []\n  const firstKey = keys[0]\n\n  for (let i = 0; i < data[firstKey].length; i++) {\n    const currentObj = keys.reduce((pre, cur) => {\n      if (data[cur][i] != undefined) {\n        pre[cur] = data[cur][i]\n      }\n      return pre\n    }, {} as Record<string, any>)\n    result.push(currentObj)\n  }\n  return result\n}\n"],"names":["formatDataAsObject","data","result","d","isObject","key","value"],"mappings":"yCAEa,MAAAA,EAAsBC,GAAgC,CACjE,GAAI,CAAC,MAAM,QAAQA,CAAI,GAAK,CAACA,EAAK,OAAQ,MAAO,GACjD,MAAMC,EAAoC,CAAA,EACrC,OAAAD,EAAA,QAASE,GAAM,CACbC,EAASD,CAAC,GACV,MAAM,QAAQ,OAAO,KAAKA,CAAC,CAAC,GACjC,OAAO,KAAKA,CAAC,EAAE,QAASE,GAAQ,CACxB,MAAAC,EAAQH,EAAEE,CAAG,EACdH,EAAO,eAAeG,CAAG,IACrBH,EAAAG,CAAG,EAAI,IAETH,EAAAG,CAAG,EAAE,KAAKC,CAAK,CAAA,CACvB,CAAA,CACF,EACMJ,CACT"}