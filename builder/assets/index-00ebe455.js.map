{"version":3,"file":"index-00ebe455.js","sources":["../../src/page/App/components/Actions/ActionPanel/FirebasePanel/AppendDataToList/index.tsx","../../src/page/App/components/Actions/ActionPanel/FirebasePanel/CreateOneUser/index.tsx","../../src/page/App/components/Actions/ActionPanel/FirebasePanel/components/CollectionInput/index.tsx","../../src/page/App/components/Actions/ActionPanel/FirebasePanel/DeleteOneDocument/index.tsx","../../src/page/App/components/Actions/ActionPanel/FirebasePanel/DeleteOneUser/index.tsx","../../src/page/App/components/Actions/ActionPanel/FirebasePanel/GetCollections/index.tsx","../../src/page/App/components/Actions/ActionPanel/FirebasePanel/GetDocumentByID/index.tsx","../../src/page/App/components/Actions/ActionPanel/FirebasePanel/GetUserByEmail/index.tsx","../../src/page/App/components/Actions/ActionPanel/FirebasePanel/GetUserByID/index.tsx","../../src/page/App/components/Actions/ActionPanel/FirebasePanel/GetUserByPhone/index.tsx","../../src/page/App/components/Actions/ActionPanel/FirebasePanel/InsertDocument/index.tsx","../../src/page/App/components/Actions/ActionPanel/FirebasePanel/ListUsers/index.tsx","../../src/page/App/components/Actions/ActionPanel/FirebasePanel/components/CollectionRecordEditor/constants.ts","../../src/page/App/components/Actions/ActionPanel/FirebasePanel/components/CollectionRecordEditor/index.tsx","../../src/page/App/components/Actions/CheckboxInput/style.ts","../../src/page/App/components/Actions/CheckboxInput/index.tsx","../../src/page/App/components/Actions/ActionPanel/FirebasePanel/QueryCollectionGroup/index.tsx","../../src/page/App/components/Actions/ActionPanel/FirebasePanel/QueryDatabase/index.tsx","../../src/page/App/components/Actions/ActionPanel/FirebasePanel/QueryFirebase/index.tsx","../../src/page/App/components/Actions/ActionPanel/FirebasePanel/SetData/index.tsx","../../src/page/App/components/Actions/ActionPanel/FirebasePanel/UpdateData/index.tsx","../../src/page/App/components/Actions/ActionPanel/FirebasePanel/UpdateDocument/index.tsx","../../src/page/App/components/Actions/ActionPanel/FirebasePanel/UpdateOneUser/index.tsx","../../src/page/App/components/Actions/ActionPanel/FirebasePanel/constants.ts","../../src/page/App/components/Actions/ActionPanel/FirebasePanel/FirebasePanel.tsx","../../src/page/App/components/Actions/ActionPanel/FirebasePanel/index.tsx"],"sourcesContent":["import { FirebaseSetData } from \"@illa-public/public-types\"\nimport { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { FirebaseActionPartProps } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/intreface\"\nimport { InputEditor } from \"@/page/App/components/Actions/InputEditor\"\nimport { VALIDATION_TYPES } from \"@/utils/validationFactory\"\n\nexport const AppendDataToListPart: FC<FirebaseActionPartProps> = (props) => {\n  const { t } = useTranslation()\n  const { handleValueChange } = props\n  const options = props.options as FirebaseSetData\n  return (\n    <>\n      <InputEditor\n        title={t(\"editor.action.panel.firebase.database_ref\")}\n        value={options.ref}\n        onChange={(value) => handleValueChange(value, \"ref\")}\n        expectedType={VALIDATION_TYPES.STRING}\n      />\n      <InputEditor\n        title={t(\"editor.action.panel.firebase.object_to_set\")}\n        value={options.object}\n        onChange={(value) => handleValueChange(value, \"object\")}\n        expectedType={VALIDATION_TYPES.OBJECT}\n      />\n    </>\n  )\n}\n\nAppendDataToListPart.displayName = \"AppendDataToListPart\"\n","import { FirebaseCreateUser } from \"@illa-public/public-types\"\nimport { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { FirebaseActionPartProps } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/intreface\"\nimport { InputEditor } from \"@/page/App/components/Actions/InputEditor\"\nimport { VALIDATION_TYPES } from \"@/utils/validationFactory\"\n\nexport const CreateOneUserPart: FC<FirebaseActionPartProps> = (props) => {\n  const { t } = useTranslation()\n  const options = props.options as FirebaseCreateUser\n  const { handleValueChange } = props\n\n  return (\n    <InputEditor\n      lineNumbers\n      style={{ height: \"88px\" }}\n      title={t(\"editor.action.panel.firebase.user_object\")}\n      value={options.object}\n      onChange={(value) => handleValueChange(value, \"object\")}\n      expectedType={VALIDATION_TYPES.OBJECT}\n    />\n  )\n}\n\nCreateOneUserPart.displayName = \"CreateOneUserPart\"\n","import { FirebaseCollectionType } from \"@illa-public/public-types\"\nimport { FC, useCallback, useEffect, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useSelector } from \"react-redux\"\nimport { Select } from \"@illa-design/react\"\nimport { CodeEditor } from \"@/components/CodeEditor\"\nimport {\n  CODE_LANG,\n  CODE_TYPE,\n} from \"@/components/CodeEditor/CodeMirror/extensions/interface\"\nimport { CollectionInputProps } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/components/CollectionInput/interface\"\nimport {\n  actionBodyTypeStyle,\n  actionItemCodeEditorStyle,\n  actionItemLabelStyle,\n  actionItemStyle,\n} from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/style\"\nimport { getCachedAction } from \"@/redux/config/configSelector\"\nimport { fetchResourceMeta } from \"@/services/resource\"\nimport { VALIDATION_TYPES } from \"@/utils/validationFactory\"\n\nexport const CollectionInput: FC<CollectionInputProps> = (props) => {\n  const { t } = useTranslation()\n  const { handleValueChange, collectionType, value } = props\n  const isDropdown = collectionType === FirebaseCollectionType.DROPDOWN\n  const action = useSelector(getCachedAction)!\n\n  const [collectionSelect, setCollectionSelect] = useState<string[]>([])\n\n  const handleCollectionTypeChange = useCallback(() => {\n    const contentType = isDropdown\n      ? FirebaseCollectionType.RAW\n      : FirebaseCollectionType.DROPDOWN\n    handleValueChange(contentType, \"collectionType\")\n  }, [handleValueChange, isDropdown])\n\n  const handleChange = (value: string) => handleValueChange(value, \"collection\")\n\n  useEffect(() => {\n    if (action.resourceID == undefined) return\n    fetchResourceMeta(action.resourceID).then(({ data }) => {\n      let tables: string[] = []\n      if (data.Schema) {\n        tables = (data.Schema.collections || []) as string[]\n      }\n      setCollectionSelect(tables)\n    })\n  }, [action.resourceID])\n\n  return (\n    <div css={actionItemStyle}>\n      <span css={actionItemLabelStyle}>\n        {t(\"editor.action.panel.firebase.collection\")}\n        <span css={actionBodyTypeStyle} onClick={handleCollectionTypeChange}>\n          {isDropdown\n            ? t(\"editor.action.panel.firebase.use_raw_id\")\n            : t(\"editor.action.panel.firebase.use_a_dropdown\")}\n        </span>\n      </span>\n      {isDropdown ? (\n        <Select\n          colorScheme=\"techPurple\"\n          showSearch={true}\n          defaultValue={value}\n          value={value}\n          ml=\"16px\"\n          w=\"100%\"\n          placeholder={t(\n            \"editor.action.panel.firebase.placeholder.select_collection\",\n          )}\n          onChange={(v) => {\n            handleChange(v as string)\n          }}\n          options={collectionSelect}\n        />\n      ) : (\n        <div css={actionItemCodeEditorStyle}>\n          <CodeEditor\n            value={value}\n            singleLine\n            onChange={handleChange}\n            expectValueType={VALIDATION_TYPES.STRING}\n            lang={CODE_LANG.JAVASCRIPT}\n            codeType={CODE_TYPE.EXPRESSION}\n            canShowCompleteInfo\n            placeholder={t(\n              \"editor.action.panel.firebase.placeholder.input_collection\",\n            )}\n          />\n        </div>\n      )}\n    </div>\n  )\n}\n\nCollectionInput.displayName = \"CollectionInput\"\n","import {\n  FirebaseCollectionType,\n  FirebaseDeleteDocument,\n} from \"@illa-public/public-types\"\nimport { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { CollectionInput } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/components/CollectionInput\"\nimport { FirebaseActionPartProps } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/intreface\"\nimport { InputEditor } from \"@/page/App/components/Actions/InputEditor\"\nimport { VALIDATION_TYPES } from \"@/utils/validationFactory\"\n\nexport const DeleteOneDocumentPart: FC<FirebaseActionPartProps> = (props) => {\n  const { t } = useTranslation()\n  const options = props.options as FirebaseDeleteDocument\n  const { handleValueChange } = props\n\n  return (\n    <>\n      <CollectionInput\n        handleValueChange={handleValueChange}\n        value={options.collection}\n        collectionType={options.collectionType as FirebaseCollectionType}\n      />\n      <InputEditor\n        title={t(\"editor.action.panel.firebase.document_id\")}\n        value={options.id}\n        onChange={(value) => handleValueChange(value, \"id\")}\n        expectedType={VALIDATION_TYPES.STRING}\n      />\n    </>\n  )\n}\n\nDeleteOneDocumentPart.displayName = \"DeleteOneDocumentPart\"\n","import { FirebaseDeleteOneUser } from \"@illa-public/public-types\"\nimport { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { FirebaseActionPartProps } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/intreface\"\nimport { InputEditor } from \"@/page/App/components/Actions/InputEditor\"\nimport { VALIDATION_TYPES } from \"@/utils/validationFactory\"\n\nexport const DeleteOneUserPart: FC<FirebaseActionPartProps> = (props) => {\n  const { t } = useTranslation()\n  const options = props.options as FirebaseDeleteOneUser\n  const { handleValueChange } = props\n\n  return (\n    <InputEditor\n      title={t(\"editor.action.panel.firebase.uid\")}\n      value={options.filter}\n      onChange={(value) => handleValueChange(value, \"filter\")}\n      expectedType={VALIDATION_TYPES.STRING}\n    />\n  )\n}\n\nDeleteOneUserPart.displayName = \"DeleteOneUserPart\"\n","import { FirebaseGetCollections } from \"@illa-public/public-types\"\nimport { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { FirebaseActionPartProps } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/intreface\"\nimport { InputEditor } from \"@/page/App/components/Actions/InputEditor\"\nimport { VALIDATION_TYPES } from \"@/utils/validationFactory\"\n\nexport const GetCollectionsPart: FC<FirebaseActionPartProps> = (props) => {\n  const { t } = useTranslation()\n  const options = props.options as FirebaseGetCollections\n  const { handleValueChange } = props\n\n  return (\n    <InputEditor\n      title={t(\"editor.action.panel.firebase.parent_document_id\")}\n      value={options.parent}\n      onChange={(value) => handleValueChange(value, \"parent\")}\n      expectedType={VALIDATION_TYPES.STRING}\n      tips={t(\"editor.action.panel.firebase.tips.parent_document_id_tips\")}\n    />\n  )\n}\n\nGetCollectionsPart.displayName = \"GetCollectionsPart\"\n","import {\n  FirebaseCollectionType,\n  FirebaseGetDocumentByID,\n} from \"@illa-public/public-types\"\nimport { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { CollectionInput } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/components/CollectionInput\"\nimport { FirebaseActionPartProps } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/intreface\"\nimport { InputEditor } from \"@/page/App/components/Actions/InputEditor\"\nimport { VALIDATION_TYPES } from \"@/utils/validationFactory\"\n\nexport const GetDocumentByIDPart: FC<FirebaseActionPartProps> = (props) => {\n  const { t } = useTranslation()\n  const options = props.options as FirebaseGetDocumentByID\n  const { handleValueChange } = props\n\n  return (\n    <>\n      <CollectionInput\n        handleValueChange={handleValueChange}\n        value={options.collection}\n        collectionType={options.collectionType as FirebaseCollectionType}\n      />\n      <InputEditor\n        title={t(\"editor.action.panel.firebase.document_id\")}\n        value={options.id}\n        onChange={(value) => handleValueChange(value, \"id\")}\n        expectedType={VALIDATION_TYPES.STRING}\n      />\n    </>\n  )\n}\n\nGetDocumentByIDPart.displayName = \"GetDocumentByIDPart\"\n","import { FirebaseGetUserByEmail } from \"@illa-public/public-types\"\nimport { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { FirebaseActionPartProps } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/intreface\"\nimport { InputEditor } from \"@/page/App/components/Actions/InputEditor\"\nimport { VALIDATION_TYPES } from \"@/utils/validationFactory\"\n\nexport const GetUserByEmailPart: FC<FirebaseActionPartProps> = (props) => {\n  const { t } = useTranslation()\n  const options = props.options as FirebaseGetUserByEmail\n  const { handleValueChange } = props\n\n  return (\n    <InputEditor\n      title={t(\"editor.action.panel.firebase.email\")}\n      value={options.filter}\n      onChange={(value) => handleValueChange(value, \"filter\")}\n      expectedType={VALIDATION_TYPES.STRING}\n    />\n  )\n}\n\nGetUserByEmailPart.displayName = \"GetUserByEmailPart\"\n","import {\n  FirebaseDeleteOneUser,\n  FirebaseGetUserByID,\n} from \"@illa-public/public-types\"\nimport { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { FirebaseActionPartProps } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/intreface\"\nimport { InputEditor } from \"@/page/App/components/Actions/InputEditor\"\nimport { VALIDATION_TYPES } from \"@/utils/validationFactory\"\n\nexport const GetUserByIDPart: FC<FirebaseActionPartProps> = (props) => {\n  const { t } = useTranslation()\n  const options = props.options as FirebaseGetUserByID | FirebaseDeleteOneUser\n  const { handleValueChange } = props\n\n  return (\n    <InputEditor\n      title={t(\"editor.action.panel.firebase.uid\")}\n      value={options.filter}\n      onChange={(value) => handleValueChange(value, \"filter\")}\n      expectedType={VALIDATION_TYPES.STRING}\n    />\n  )\n}\n\nGetUserByIDPart.displayName = \"GetUserByIDPart\"\n","import { FirebaseGetUserByPhone } from \"@illa-public/public-types\"\nimport { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { FirebaseActionPartProps } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/intreface\"\nimport { InputEditor } from \"@/page/App/components/Actions/InputEditor\"\nimport { VALIDATION_TYPES } from \"@/utils/validationFactory\"\n\nexport const GetUserByPhonePart: FC<FirebaseActionPartProps> = (props) => {\n  const { t } = useTranslation()\n  const options = props.options as FirebaseGetUserByPhone\n  const { handleValueChange } = props\n\n  return (\n    <InputEditor\n      title={t(\"editor.action.panel.firebase.phone_number\")}\n      value={options.filter}\n      onChange={(value) => handleValueChange(value, \"filter\")}\n      expectedType={VALIDATION_TYPES.STRING}\n    />\n  )\n}\n\nGetUserByPhonePart.displayName = \"GetUserByPhonePart\"\n","import {\n  FirebaseCollectionType,\n  FirebaseInsertDocument,\n} from \"@illa-public/public-types\"\nimport { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { CollectionInput } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/components/CollectionInput\"\nimport { FirebaseActionPartProps } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/intreface\"\nimport { InputEditor } from \"@/page/App/components/Actions/InputEditor\"\nimport { VALIDATION_TYPES } from \"@/utils/validationFactory\"\n\nexport const InsertDocumentPart: FC<FirebaseActionPartProps> = (props) => {\n  const { t } = useTranslation()\n  const options = props.options as FirebaseInsertDocument\n  const { handleValueChange } = props\n\n  return (\n    <>\n      <CollectionInput\n        handleValueChange={handleValueChange}\n        value={options.collection}\n        collectionType={options.collectionType as FirebaseCollectionType}\n      />\n      <InputEditor\n        title={t(\"editor.action.panel.firebase.document_id\")}\n        value={options.id}\n        onChange={(value) => handleValueChange(value, \"id\")}\n        expectedType={VALIDATION_TYPES.STRING}\n        tips={t(\"editor.action.panel.firebase.tips.document_id\")}\n      />\n      <InputEditor\n        title={t(\"editor.action.panel.firebase.value\")}\n        value={options.value}\n        onChange={(value) => handleValueChange(value, \"value\")}\n        expectedType={VALIDATION_TYPES.OBJECT}\n        placeholder={t(\n          \"editor.action.panel.firebase.placeholder.document_value\",\n        )}\n      />\n    </>\n  )\n}\n\nInsertDocumentPart.displayName = \"InsertDocumentPart\"\n","import { FirebaseListUsers } from \"@illa-public/public-types\"\nimport { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { FirebaseActionPartProps } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/intreface\"\nimport { InputEditor } from \"@/page/App/components/Actions/InputEditor\"\nimport { VALIDATION_TYPES } from \"@/utils/validationFactory\"\n\nexport const ListUsersPart: FC<FirebaseActionPartProps> = (props) => {\n  const { t } = useTranslation()\n  const options = props.options as FirebaseListUsers\n  const { handleValueChange } = props\n\n  return (\n    <>\n      <InputEditor\n        title={t(\"editor.action.panel.firebase.len_of_list\")}\n        value={options.number}\n        onChange={(value) => handleValueChange(value, \"number\")}\n        expectedType={VALIDATION_TYPES.NUMBER}\n        placeholder={\"{{1000}}\"}\n      />\n      <InputEditor\n        title={t(\"editor.action.panel.firebase.next_page_token\")}\n        value={options.token}\n        onChange={(value) => handleValueChange(value, \"token\")}\n        expectedType={VALIDATION_TYPES.STRING}\n      />\n    </>\n  )\n}\n\nListUsersPart.displayName = \"ListUsersPart\"\n","enum OperationType {\n  EQUAL = \"==\",\n  GREATER = \">\",\n  LESS = \"<\",\n  LESS_EQUAL = \"<=\",\n  GREATER_EQUAL = \">=\",\n  CONTAINS = \"contains\",\n  IN = \"in\",\n  CONTAINS_ANY = \"array contains any\",\n}\n\nenum OperationTypeValue {\n  EQUAL = \"==\",\n  GREATER = \">\",\n  LESS = \"<\",\n  LESS_EQUAL = \"<=\",\n  GREATER_EQUAL = \">=\",\n  CONTAINS = \"array-contains\",\n  IN = \"in\",\n  CONTAINS_ANY = \"array-contains-any\",\n}\n\nexport const OperationSelectList = [\n  {\n    label: OperationType.EQUAL,\n    value: OperationTypeValue.EQUAL,\n  },\n  {\n    label: OperationType.GREATER,\n    value: OperationTypeValue.GREATER,\n  },\n  {\n    label: OperationType.LESS,\n    value: OperationTypeValue.LESS,\n  },\n  {\n    label: OperationType.LESS_EQUAL,\n    value: OperationTypeValue.LESS_EQUAL,\n  },\n  {\n    label: OperationType.GREATER_EQUAL,\n    value: OperationTypeValue.GREATER_EQUAL,\n  },\n  {\n    label: OperationType.CONTAINS,\n    value: OperationTypeValue.CONTAINS,\n  },\n  {\n    label: OperationType.IN,\n    value: OperationTypeValue.IN,\n  },\n  {\n    label: OperationType.CONTAINS_ANY,\n    value: OperationTypeValue.CONTAINS_ANY,\n  },\n]\n","import { FirebaseWhere } from \"@illa-public/public-types\"\nimport { FC, useCallback } from \"react\"\nimport { Controller, useForm } from \"react-hook-form\"\nimport { useTranslation } from \"react-i18next\"\nimport { Select } from \"@illa-design/react\"\nimport { CodeEditor } from \"@/components/CodeEditor\"\nimport {\n  CODE_LANG,\n  CODE_TYPE,\n} from \"@/components/CodeEditor/CodeMirror/extensions/interface\"\nimport { RecordEditor } from \"@/components/RecordEditor\"\nimport {\n  codeMirrorWrapperLabelStyle,\n  codeMirrorWrapperValueStyle,\n} from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/components/CollectionRecordEditor/style\"\nimport { actionItemRecordEditorStyle } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/style\"\nimport { VALIDATION_TYPES } from \"@/utils/validationFactory\"\nimport { OperationSelectList } from \"./constants\"\nimport { CollectionRecordEditorProps } from \"./interface\"\n\nexport const CollectionRecordEditor: FC<CollectionRecordEditorProps> = (\n  props,\n) => {\n  const { t } = useTranslation()\n\n  const { defaultValue, handleValueChange, name } = props\n  const { control, getValues } = useForm({\n    mode: \"onChange\",\n    shouldUnregister: true,\n  })\n\n  const handleChange = useCallback(\n    (\n      index: number,\n      key: string,\n      v: string,\n      operation: string,\n      onChange: (...event: any[]) => void,\n    ) => {\n      const value = getValues()[name]\n      let newRecords: FirebaseWhere[] = [...value]\n      const curOperation = operation || newRecords[index].condition || \"\"\n      newRecords[index] = {\n        field: key,\n        value: v,\n        condition: curOperation,\n      }\n      onChange(newRecords)\n      handleValueChange(newRecords, \"where\")\n    },\n    [handleValueChange, getValues, name],\n  )\n\n  return (\n    <Controller\n      control={control}\n      defaultValue={defaultValue}\n      render={({ field: { value, onChange } }) => {\n        return (\n          <RecordEditor\n            label={t(\"editor.action.panel.firebase.where\")}\n            records={value}\n            customRender={(record, index) => (\n              <>\n                <div css={actionItemRecordEditorStyle}>\n                  <CodeEditor\n                    value={record.field}\n                    singleLine\n                    onChange={(val) => {\n                      handleChange(\n                        index,\n                        val,\n                        record.value,\n                        record.operation,\n                        onChange,\n                      )\n                    }}\n                    wrapperCss={codeMirrorWrapperLabelStyle}\n                    expectValueType={VALIDATION_TYPES.STRING}\n                    lang={CODE_LANG.JAVASCRIPT}\n                    codeType={CODE_TYPE.EXPRESSION}\n                    canShowCompleteInfo\n                    placeholder=\"field\"\n                  />\n                </div>\n                <Select\n                  colorScheme=\"techPurple\"\n                  showSearch={true}\n                  defaultValue={record.condition}\n                  value={record.condition}\n                  w=\"0\"\n                  ml=\"-1px\"\n                  mr=\"-1px\"\n                  bdRadius=\"0\"\n                  flexGrow=\"1\"\n                  onChange={(val) =>\n                    handleChange(\n                      index,\n                      record.field,\n                      record.value,\n                      val as string,\n                      onChange,\n                    )\n                  }\n                  options={OperationSelectList}\n                />\n                <div css={actionItemRecordEditorStyle}>\n                  <CodeEditor\n                    singleLine\n                    value={record.value}\n                    onChange={(val) => {\n                      handleChange(\n                        index,\n                        record.field,\n                        val,\n                        record.condition,\n                        onChange,\n                      )\n                    }}\n                    wrapperCss={codeMirrorWrapperValueStyle}\n                    lang={CODE_LANG.JAVASCRIPT}\n                    codeType={CODE_TYPE.EXPRESSION}\n                    canShowCompleteInfo\n                    placeholder=\"value\"\n                  />\n                </div>\n              </>\n            )}\n            onAdd={() => {\n              onChange([...value, { field: \"\", value: \"\", condition: \"\" }])\n            }}\n            onDelete={(index, _record) => {\n              let newRecords = [...value]\n              newRecords.splice(index, 1)\n              if (newRecords.length === 0) {\n                newRecords = [{ field: \"\", value: \"\", condition: \"\" }]\n              }\n              onChange(newRecords)\n            }}\n            onChangeKey={(index, key, v) =>\n              handleChange(index, key, v, \"\", onChange)\n            }\n            onChangeValue={(index, key, v) =>\n              handleChange(index, key, v, \"\", onChange)\n            }\n          />\n        )\n      }}\n      name={name}\n    />\n  )\n}\n\nCollectionRecordEditor.displayName = \"CollectionRecordEditor\"\n","import { css } from \"@emotion/react\"\nimport { globalColor, illaPrefix } from \"@illa-design/react\"\n\nexport const codeEditorLabelStyle = css`\n  min-width: 160px;\n  font-size: 14px;\n  font-weight: 500;\n  text-align: right;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-02`)};\n  height: 30px;\n  display: flex;\n  flex-direction: row;\n  justify-content: end;\n  align-items: center;\n  align-self: start;\n`\n\nexport const checkboxItemStyle = css`\n  min-width: 160px;\n  font-size: 14px;\n  line-height: 22px;\n  font-weight: 500;\n  margin-left: 10px;\n  text-align: left;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-02`)};\n`\n\nexport const checkoutItemStyle = css`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  min-height: 30px;\n  padding: 0 16px;\n`\n\nexport const checkoutContentStyle = css`\n  min-height: 22px;\n  align-self: flex-start;\n  display: flex;\n  align-items: center;\n`\n","import { FC } from \"react\"\nimport { Checkbox } from \"@illa-design/react\"\nimport { CheckboxInputProps } from \"@/page/App/components/Actions/CheckboxInput/interface\"\nimport { InputEditor } from \"@/page/App/components/Actions/InputEditor\"\nimport { VALIDATION_TYPES } from \"@/utils/validationFactory\"\nimport {\n  checkboxItemStyle,\n  checkoutContentStyle,\n  checkoutItemStyle,\n  codeEditorLabelStyle,\n} from \"./style\"\n\nexport const CheckboxInput: FC<CheckboxInputProps> = (props) => {\n  const {\n    onCheckboxChange,\n    onValueChange,\n    checkboxTitle,\n    checkboxValue,\n    inputTitle,\n    inputValue,\n    inputPlaceholder,\n    inputTips,\n    showInputEditor = true,\n    hasExpectedType = true,\n    expectedType = VALIDATION_TYPES.STRING,\n  } = props\n  return (\n    <>\n      <div css={checkoutItemStyle}>\n        <span css={codeEditorLabelStyle}></span>\n        <div css={checkoutContentStyle}>\n          <Checkbox\n            colorScheme=\"techPurple\"\n            checked={checkboxValue}\n            ml=\"16px\"\n            onChange={onCheckboxChange}\n          />\n          <span css={checkboxItemStyle}>{checkboxTitle}</span>\n        </div>\n      </div>\n      {checkboxValue && showInputEditor && (\n        <InputEditor\n          title={inputTitle}\n          value={inputValue}\n          onChange={onValueChange}\n          hasExpectedType={hasExpectedType}\n          expectedType={expectedType}\n          tips={inputTips}\n          placeholder={inputPlaceholder}\n        />\n      )}\n    </>\n  )\n}\n\nCheckboxInput.displayName = \"CheckboxInput\"\n","import {\n  FirebaseCollectionType,\n  FirebaseQueryCollectionGroup,\n} from \"@illa-public/public-types\"\nimport { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { CollectionInput } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/components/CollectionInput\"\nimport { CollectionRecordEditor } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/components/CollectionRecordEditor\"\nimport { FirebaseActionPartProps } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/intreface\"\nimport { CheckboxInput } from \"@/page/App/components/Actions/CheckboxInput\"\nimport { InputEditor } from \"@/page/App/components/Actions/InputEditor\"\nimport { VALIDATION_TYPES } from \"@/utils/validationFactory\"\n\nexport const QueryCollectionGroupPart: FC<FirebaseActionPartProps> = (\n  props,\n) => {\n  const { t } = useTranslation()\n  const options = props.options as FirebaseQueryCollectionGroup\n  const { handleValueChange } = props\n\n  return (\n    <>\n      <CollectionInput\n        handleValueChange={handleValueChange}\n        value={options.collection}\n        collectionType={options.collectionType as FirebaseCollectionType}\n      />\n      <CollectionRecordEditor\n        name={\"where\"}\n        handleValueChange={handleValueChange}\n        defaultValue={options.where}\n      />\n      <InputEditor\n        title={t(\"editor.action.panel.firebase.limit\")}\n        value={options.limit}\n        onChange={(value) => handleValueChange(value, \"limit\")}\n        expectedType={VALIDATION_TYPES.NUMBER}\n      />\n      <InputEditor\n        title={t(\"editor.action.panel.firebase.order_by\")}\n        value={options.orderBy}\n        onChange={(value) => handleValueChange(value, \"orderBy\")}\n        expectedType={VALIDATION_TYPES.STRING}\n      />\n      <InputEditor\n        title={t(\"editor.action.panel.firebase.ordering_direction\")}\n        value={options.orderDirection}\n        onChange={(value) => handleValueChange(value, \"orderDirection\")}\n        expectedType={VALIDATION_TYPES.STRING}\n        placeholder={t(\"editor.action.panel.firebase.placeholder.asc\")}\n      />\n      <CheckboxInput\n        checkboxTitle={t(\"editor.action.panel.firebase.use_start_at\")}\n        checkboxValue={options.startAt.trigger}\n        onCheckboxChange={(value) =>\n          handleValueChange(\n            {\n              value: options.startAt.value,\n              trigger: value,\n            },\n            \"startAt\",\n          )\n        }\n        inputTitle={t(\"editor.action.panel.firebase.start_at\")}\n        inputValue={options.startAt.value}\n        onValueChange={(value) =>\n          handleValueChange(\n            {\n              trigger: options.startAt.trigger,\n              value,\n            },\n            \"startAt\",\n          )\n        }\n        hasExpectedType={false}\n      />\n      <CheckboxInput\n        checkboxTitle={t(\"editor.action.panel.firebase.use_end_at\")}\n        checkboxValue={options.endAt.trigger}\n        onCheckboxChange={(value) =>\n          handleValueChange(\n            {\n              value: options.endAt.value,\n              trigger: value,\n            },\n            \"endAt\",\n          )\n        }\n        inputTitle={t(\"editor.action.panel.firebase.end_at\")}\n        inputValue={options.endAt.value}\n        onValueChange={(value) =>\n          handleValueChange(\n            {\n              trigger: options.endAt.trigger,\n              value,\n            },\n            \"endAt\",\n          )\n        }\n        hasExpectedType={false}\n      />\n    </>\n  )\n}\n\nQueryCollectionGroupPart.displayName = \"QueryCollectionGroupPart\"\n","import { FirebaseQueryDatabase } from \"@illa-public/public-types\"\nimport { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { FirebaseActionPartProps } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/intreface\"\nimport { InputEditor } from \"@/page/App/components/Actions/InputEditor\"\nimport { VALIDATION_TYPES } from \"@/utils/validationFactory\"\n\nexport const QueryDatabasePart: FC<FirebaseActionPartProps> = (props) => {\n  const { t } = useTranslation()\n  const options = props.options as FirebaseQueryDatabase\n  const { handleValueChange } = props\n\n  return (\n    <InputEditor\n      title={t(\"editor.action.panel.firebase.database_ref\")}\n      value={options.ref}\n      onChange={(value) => handleValueChange(value, \"ref\")}\n      expectedType={VALIDATION_TYPES.STRING}\n    />\n  )\n}\n\nQueryDatabasePart.displayName = \"QueryDatabasePart\"\n","import {\n  FirebaseCollectionType,\n  QueryFirebase,\n} from \"@illa-public/public-types\"\nimport { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { CollectionInput } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/components/CollectionInput\"\nimport { CollectionRecordEditor } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/components/CollectionRecordEditor\"\nimport { FirebaseActionPartProps } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/intreface\"\nimport { checkboxContainer } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/style\"\nimport { CheckboxInput } from \"@/page/App/components/Actions/CheckboxInput\"\nimport { InputEditor } from \"@/page/App/components/Actions/InputEditor\"\nimport { VALIDATION_TYPES } from \"@/utils/validationFactory\"\n\nexport const QueryFirebasePart: FC<FirebaseActionPartProps> = (props) => {\n  const { t } = useTranslation()\n  const options = props.options as QueryFirebase\n  const { handleValueChange } = props\n\n  return (\n    <>\n      <CollectionInput\n        handleValueChange={handleValueChange}\n        value={options.collection}\n        collectionType={options.collectionType as FirebaseCollectionType}\n      />\n      <CollectionRecordEditor\n        name=\"where\"\n        handleValueChange={handleValueChange}\n        defaultValue={options.where}\n      />\n      <InputEditor\n        title={t(\"editor.action.panel.firebase.limit\")}\n        value={options.limit}\n        onChange={(value) => handleValueChange(value, \"limit\")}\n        expectedType={VALIDATION_TYPES.NUMBER}\n      />\n      <InputEditor\n        title={t(\"editor.action.panel.firebase.order_by\")}\n        value={options.orderBy}\n        onChange={(value) => handleValueChange(value, \"orderBy\")}\n        expectedType={VALIDATION_TYPES.STRING}\n      />\n\n      <InputEditor\n        title={t(\"editor.action.panel.firebase.ordering_direction\")}\n        value={options.orderDirection}\n        onChange={(value) => handleValueChange(value, \"orderDirection\")}\n        expectedType={VALIDATION_TYPES.STRING}\n        placeholder={t(\"editor.action.panel.firebase.placeholder.asc\")}\n      />\n      <div css={checkboxContainer}>\n        <CheckboxInput\n          checkboxTitle={t(\"editor.action.panel.firebase.use_start_at\")}\n          checkboxValue={options.startAt.trigger}\n          onCheckboxChange={(value) =>\n            handleValueChange(\n              {\n                value: options.startAt.value,\n                trigger: value,\n              },\n              \"startAt\",\n            )\n          }\n          inputTitle={t(\"editor.action.panel.firebase.start_at\")}\n          inputValue={options.startAt.value}\n          onValueChange={(value) =>\n            handleValueChange(\n              {\n                trigger: options.startAt.trigger,\n                value,\n              },\n              \"startAt\",\n            )\n          }\n          hasExpectedType={false}\n        />\n        <CheckboxInput\n          checkboxTitle={t(\"editor.action.panel.firebase.use_end_at\")}\n          checkboxValue={options.endAt.trigger}\n          onCheckboxChange={(value) =>\n            handleValueChange(\n              {\n                value: options.endAt.value,\n                trigger: value,\n              },\n              \"endAt\",\n            )\n          }\n          inputTitle={t(\"editor.action.panel.firebase.end_at\")}\n          inputValue={options.endAt.value}\n          onValueChange={(value) =>\n            handleValueChange(\n              {\n                trigger: options.endAt.trigger,\n                value,\n              },\n              \"endAt\",\n            )\n          }\n          hasExpectedType={false}\n        />\n      </div>\n    </>\n  )\n}\n\nQueryFirebasePart.displayName = \"QueryFirebasePart\"\n","import { FirebaseSetData } from \"@illa-public/public-types\"\nimport { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { FirebaseActionPartProps } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/intreface\"\nimport { InputEditor } from \"@/page/App/components/Actions/InputEditor\"\nimport { VALIDATION_TYPES } from \"@/utils/validationFactory\"\n\nexport const SetDataPart: FC<FirebaseActionPartProps> = (props) => {\n  const { t } = useTranslation()\n  const options = props.options as FirebaseSetData\n  const { handleValueChange } = props\n\n  return (\n    <>\n      <InputEditor\n        title={t(\"editor.action.panel.firebase.database_ref\")}\n        value={options.ref}\n        onChange={(value) => handleValueChange(value, \"ref\")}\n        expectedType={VALIDATION_TYPES.STRING}\n      />\n      <InputEditor\n        title={t(\"editor.action.panel.firebase.object_to_set\")}\n        value={options.object}\n        onChange={(value) => handleValueChange(value, \"object\")}\n        expectedType={VALIDATION_TYPES.OBJECT}\n      />\n    </>\n  )\n}\n\nSetDataPart.displayName = \"SetDataPart\"\n","import { FirebaseUpdateData } from \"@illa-public/public-types\"\nimport { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { FirebaseActionPartProps } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/intreface\"\nimport { InputEditor } from \"@/page/App/components/Actions/InputEditor\"\nimport { VALIDATION_TYPES } from \"@/utils/validationFactory\"\n\nexport const UpdateDataPart: FC<FirebaseActionPartProps> = (props) => {\n  const { t } = useTranslation()\n  const options = props.options as FirebaseUpdateData\n  const { handleValueChange } = props\n\n  return (\n    <>\n      <InputEditor\n        title={t(\"editor.action.panel.firebase.database_ref\")}\n        value={options.ref}\n        onChange={(value) => handleValueChange(value, \"ref\")}\n        expectedType={VALIDATION_TYPES.STRING}\n      />\n      <InputEditor\n        title={t(\"editor.action.panel.firebase.object_to_set\")}\n        value={options.object}\n        onChange={(value) => handleValueChange(value, \"object\")}\n        expectedType={VALIDATION_TYPES.OBJECT}\n      />\n    </>\n  )\n}\n\nUpdateDataPart.displayName = \"UpdateDataPart\"\n","import {\n  FirebaseCollectionType,\n  FirebaseUpdateDocument,\n} from \"@illa-public/public-types\"\nimport { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { CollectionInput } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/components/CollectionInput\"\nimport { FirebaseActionPartProps } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/intreface\"\nimport { InputEditor } from \"@/page/App/components/Actions/InputEditor\"\nimport { VALIDATION_TYPES } from \"@/utils/validationFactory\"\n\nexport const UpdateDocumentPart: FC<FirebaseActionPartProps> = (props) => {\n  const { t } = useTranslation()\n  const options = props.options as FirebaseUpdateDocument\n  const { handleValueChange } = props\n\n  return (\n    <>\n      <CollectionInput\n        handleValueChange={handleValueChange}\n        value={options.collection}\n        collectionType={options.collectionType as FirebaseCollectionType}\n      />\n      <InputEditor\n        title={t(\"editor.action.panel.firebase.document_id\")}\n        value={options.id}\n        onChange={(value) => handleValueChange(value, \"id\")}\n        expectedType={VALIDATION_TYPES.STRING}\n      />\n      <InputEditor\n        title={t(\"editor.action.panel.firebase.value\")}\n        value={options.value}\n        onChange={(value) => handleValueChange(value, \"value\")}\n        expectedType={VALIDATION_TYPES.OBJECT}\n      />\n    </>\n  )\n}\n\nUpdateDocumentPart.displayName = \"UpdateDocumentPart\"\n","import { FirebaseUpdateOneUser } from \"@illa-public/public-types\"\nimport { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { FirebaseActionPartProps } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/intreface\"\nimport { InputEditor } from \"@/page/App/components/Actions/InputEditor\"\nimport { VALIDATION_TYPES } from \"@/utils/validationFactory\"\n\nexport const UpdateOneUserPart: FC<FirebaseActionPartProps> = (props) => {\n  const { t } = useTranslation()\n  const options = props.options as FirebaseUpdateOneUser\n  const { handleValueChange } = props\n\n  return (\n    <>\n      <InputEditor\n        title={t(\"editor.action.panel.firebase.uid\")}\n        value={options.uid}\n        onChange={(value) => handleValueChange(value, \"uid\")}\n        expectedType={VALIDATION_TYPES.STRING}\n      />\n      <InputEditor\n        lineNumbers\n        style={{ height: \"88px\" }}\n        title={t(\"editor.action.panel.firebase.user_object\")}\n        value={options.object}\n        onChange={(value) => handleValueChange(value, \"object\")}\n        expectedType={VALIDATION_TYPES.OBJECT}\n      />\n    </>\n  )\n}\n\nUpdateOneUserPart.displayName = \"UpdateOneUserPart\"\n","import {\n  FirebaseAuthActionTypeValue,\n  FirebaseRealtimeActionTypeValue,\n  FirebaseServiceTypeValue,\n  FirebaseStoreActionTypeValue,\n} from \"@illa-public/public-types\"\n\nenum ServiceTypeLabel {\n  AUTH = \"Firebase Auth\",\n  FIRESTORE = \"Firestore\",\n  REALTIME = \"Realtime Database\",\n}\n\nexport const firebaseServiceTypeOptions = [\n  {\n    label: ServiceTypeLabel.AUTH,\n    value: FirebaseServiceTypeValue.AUTH,\n  },\n  {\n    label: ServiceTypeLabel.FIRESTORE,\n    value: FirebaseServiceTypeValue.FIRESTORE,\n  },\n  {\n    label: ServiceTypeLabel.REALTIME,\n    value: FirebaseServiceTypeValue.REALTIME,\n  },\n]\n\nenum FirestoreActionTypeLabel {\n  QUERY_FIREBASE = \"Query Firebase\",\n  INSERT_DOCUMENT = \"Insert Document\",\n  UPDATE_DOCUMENT = \"Update Document\",\n  GET_DOCUMENT_BY_ID = \"Get Document by ID\",\n  DELETE_ONE_DOCUMENT = \"Delete a Document\",\n  GET_COLLECTIONS = \"Get Collections\",\n  QUERY_COLLECTION_GROUP = \"Query Collection Group\",\n}\n\nconst FirestoreActionType = [\n  {\n    label: FirestoreActionTypeLabel.QUERY_FIREBASE,\n    value: FirebaseStoreActionTypeValue.QUERY_FIREBASE,\n  },\n  {\n    label: FirestoreActionTypeLabel.INSERT_DOCUMENT,\n    value: FirebaseStoreActionTypeValue.INSERT_DOCUMENT,\n  },\n  {\n    label: FirestoreActionTypeLabel.UPDATE_DOCUMENT,\n    value: FirebaseStoreActionTypeValue.UPDATE_DOCUMENT,\n  },\n  {\n    label: FirestoreActionTypeLabel.GET_DOCUMENT_BY_ID,\n    value: FirebaseStoreActionTypeValue.GET_DOCUMENT_BY_ID,\n  },\n  {\n    label: FirestoreActionTypeLabel.DELETE_ONE_DOCUMENT,\n    value: FirebaseStoreActionTypeValue.DELETE_ONE_DOCUMENT,\n  },\n  {\n    label: FirestoreActionTypeLabel.GET_COLLECTIONS,\n    value: FirebaseStoreActionTypeValue.GET_COLLECTIONS,\n  },\n  {\n    label: FirestoreActionTypeLabel.QUERY_COLLECTION_GROUP,\n    value: FirebaseStoreActionTypeValue.QUERY_COLLECTION_GROUP,\n  },\n]\n\nenum AuthActionTypeLabel {\n  GET_USER_BY_UID = \"Get user by UID\",\n  GET_USER_BY_EMAIL = \"Get user by email\",\n  GET_USER_BY_PHONE = \"Get user by phone number\",\n  CREATE_ONE_USER = \"Create a user\",\n  UPDATE_ONE_USER = \"Update a user\",\n  DELETE_ONE_USER = \"Delete a user\",\n  LIST_USERS = \"List users\",\n}\n\nconst AuthActionType = [\n  {\n    label: AuthActionTypeLabel.GET_USER_BY_UID,\n    value: FirebaseAuthActionTypeValue.GET_USER_BY_UID,\n  },\n  {\n    label: AuthActionTypeLabel.GET_USER_BY_EMAIL,\n    value: FirebaseAuthActionTypeValue.GET_USER_BY_EMAIL,\n  },\n  {\n    label: AuthActionTypeLabel.GET_USER_BY_PHONE,\n    value: FirebaseAuthActionTypeValue.GET_USER_BY_PHONE,\n  },\n  {\n    label: AuthActionTypeLabel.CREATE_ONE_USER,\n    value: FirebaseAuthActionTypeValue.CREATE_ONE_USER,\n  },\n  {\n    label: AuthActionTypeLabel.UPDATE_ONE_USER,\n    value: FirebaseAuthActionTypeValue.UPDATE_ONE_USER,\n  },\n  {\n    label: AuthActionTypeLabel.DELETE_ONE_USER,\n    value: FirebaseAuthActionTypeValue.DELETE_ONE_USER,\n  },\n  {\n    label: AuthActionTypeLabel.LIST_USERS,\n    value: FirebaseAuthActionTypeValue.LIST_USERS,\n  },\n]\n\nenum RealtimeActionTypeLabel {\n  QUERY_DATABASE = \"Query database\",\n  SET_DATA = \"Set data\",\n  UPDATE_DATA = \"Update data\",\n  APPEND_DATA_TO_LIST = \"Append data to a list\",\n}\n\nconst RealtimeActionType = [\n  {\n    label: RealtimeActionTypeLabel.QUERY_DATABASE,\n    value: FirebaseRealtimeActionTypeValue.QUERY_DATABASE,\n  },\n  {\n    label: RealtimeActionTypeLabel.SET_DATA,\n    value: FirebaseRealtimeActionTypeValue.SET_DATA,\n  },\n  {\n    label: RealtimeActionTypeLabel.UPDATE_DATA,\n    value: FirebaseRealtimeActionTypeValue.UPDATE_DATA,\n  },\n  {\n    label: RealtimeActionTypeLabel.APPEND_DATA_TO_LIST,\n    value: FirebaseRealtimeActionTypeValue.APPEND_DATA_TO_LIST,\n  },\n]\n\nexport const ActionTypeList = {\n  [FirebaseServiceTypeValue.AUTH]: AuthActionType,\n  [FirebaseServiceTypeValue.FIRESTORE]: FirestoreActionType,\n  [FirebaseServiceTypeValue.REALTIME]: RealtimeActionType,\n}\n","import {\n  FirebaseInitialValue,\n  FirebaseServiceTypeInitialValue,\n} from \"@illa-public/public-configs\"\nimport {\n  ActionItem,\n  FirebaseAction,\n  FirebaseActionTypeValue,\n  FirebaseAuthActionTypeValue,\n  FirebaseCheckboxParams,\n  FirebaseContentType,\n  FirebaseRealtimeActionTypeValue,\n  FirebaseServiceTypeValue,\n  FirebaseStoreActionTypeValue,\n  FirebaseWhere,\n} from \"@illa-public/public-types\"\nimport { FC, useCallback, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { SelectValue } from \"@illa-design/react\"\nimport { AppendDataToListPart } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/AppendDataToList\"\nimport { CreateOneUserPart } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/CreateOneUser\"\nimport { DeleteOneDocumentPart } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/DeleteOneDocument\"\nimport { DeleteOneUserPart } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/DeleteOneUser\"\nimport { GetCollectionsPart } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/GetCollections\"\nimport { GetDocumentByIDPart } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/GetDocumentByID\"\nimport { GetUserByEmailPart } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/GetUserByEmail\"\nimport { GetUserByIDPart } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/GetUserByID\"\nimport { GetUserByPhonePart } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/GetUserByPhone\"\nimport { InsertDocumentPart } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/InsertDocument\"\nimport { ListUsersPart } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/ListUsers\"\nimport { QueryCollectionGroupPart } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/QueryCollectionGroup\"\nimport { QueryDatabasePart } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/QueryDatabase\"\nimport { QueryFirebasePart } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/QueryFirebase\"\nimport { SetDataPart } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/SetData\"\nimport { UpdateDataPart } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/UpdateData\"\nimport { UpdateDocumentPart } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/UpdateDocument\"\nimport { UpdateOneUserPart } from \"@/page/App/components/Actions/ActionPanel/FirebasePanel/UpdateOneUser\"\nimport { SingleTypeComponent } from \"@/page/App/components/Actions/ActionPanel/SingleTypeComponent\"\nimport { TransformerComponent } from \"@/page/App/components/Actions/ActionPanel/TransformerComponent\"\nimport {\n  getCachedAction,\n  getSelectedAction,\n} from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { ActionTypeList, firebaseServiceTypeOptions } from \"./constants\"\nimport { actionItemContainer } from \"./style\"\n\nexport const FirebasePanel: FC = () => {\n  const { t } = useTranslation()\n  const cachedAction = useSelector(getCachedAction) as ActionItem<\n    FirebaseAction<FirebaseContentType>\n  >\n  const selectedAction = useSelector(getSelectedAction)!\n  const selectedContent =\n    selectedAction.content as FirebaseAction<FirebaseContentType>\n  const content = cachedAction.content as FirebaseAction<FirebaseContentType>\n  const options = content.options as FirebaseContentType\n  const dispatch = useDispatch()\n\n  const handleValueChange = useCallback(\n    (name: string) => (value: SelectValue) => {\n      const valueString = value as string\n      switch (name) {\n        case \"operation\":\n          let options =\n            FirebaseInitialValue[valueString as FirebaseActionTypeValue]\n          if (\n            content.service === selectedContent.service &&\n            selectedContent.operation === valueString\n          ) {\n            options = selectedContent.options\n          }\n          dispatch(\n            configActions.updateCachedAction({\n              ...cachedAction,\n              content: {\n                ...cachedAction.content,\n                operation: valueString,\n                options,\n              },\n            }),\n          )\n          break\n        case \"service\":\n          const initialOptions =\n            FirebaseServiceTypeInitialValue[\n              valueString as FirebaseServiceTypeValue\n            ]\n          dispatch(\n            configActions.updateCachedAction({\n              ...cachedAction,\n              content: {\n                operation: \"\",\n                service: valueString as FirebaseServiceTypeValue,\n                options: initialOptions,\n              },\n            }),\n          )\n      }\n    },\n    [dispatch, cachedAction, content, selectedContent],\n  )\n\n  const handleOptionsValueChange = useCallback(\n    (\n      value: string | boolean | FirebaseWhere[] | FirebaseCheckboxParams,\n      name: string,\n    ) => {\n      dispatch(\n        configActions.updateCachedAction({\n          ...cachedAction,\n          content: {\n            ...cachedAction.content,\n            options: {\n              ...options,\n              [name]: value,\n            },\n          },\n        }),\n      )\n    },\n    [dispatch, cachedAction, options],\n  )\n\n  const renderInputBody = useMemo(() => {\n    const props = {\n      options: content.options,\n      handleValueChange: handleOptionsValueChange,\n    }\n    switch (content.operation) {\n      case FirebaseAuthActionTypeValue.GET_USER_BY_UID:\n        return <GetUserByIDPart {...props} />\n      case FirebaseAuthActionTypeValue.DELETE_ONE_USER:\n        return <DeleteOneUserPart {...props} />\n      case FirebaseAuthActionTypeValue.GET_USER_BY_EMAIL:\n        return <GetUserByEmailPart {...props} />\n      case FirebaseAuthActionTypeValue.GET_USER_BY_PHONE:\n        return <GetUserByPhonePart {...props} />\n      case FirebaseAuthActionTypeValue.CREATE_ONE_USER:\n        return <CreateOneUserPart {...props} />\n      case FirebaseAuthActionTypeValue.UPDATE_ONE_USER:\n        return <UpdateOneUserPart {...props} />\n      case FirebaseAuthActionTypeValue.LIST_USERS:\n        return <ListUsersPart {...props} />\n      case FirebaseStoreActionTypeValue.QUERY_FIREBASE:\n        return <QueryFirebasePart {...props} />\n      case FirebaseStoreActionTypeValue.INSERT_DOCUMENT:\n        return <InsertDocumentPart {...props} />\n      case FirebaseStoreActionTypeValue.UPDATE_DOCUMENT:\n        return <UpdateDocumentPart {...props} />\n      case FirebaseStoreActionTypeValue.GET_DOCUMENT_BY_ID:\n        return <GetDocumentByIDPart {...props} />\n      case FirebaseStoreActionTypeValue.DELETE_ONE_DOCUMENT:\n        return <DeleteOneDocumentPart {...props} />\n      case FirebaseStoreActionTypeValue.GET_COLLECTIONS:\n        return <GetCollectionsPart {...props} />\n      case FirebaseStoreActionTypeValue.QUERY_COLLECTION_GROUP:\n        return <QueryCollectionGroupPart {...props} />\n      case FirebaseRealtimeActionTypeValue.QUERY_DATABASE:\n        return <QueryDatabasePart {...props} />\n      case FirebaseRealtimeActionTypeValue.SET_DATA:\n        return <SetDataPart {...props} />\n      case FirebaseRealtimeActionTypeValue.UPDATE_DATA:\n        return <UpdateDataPart {...props} />\n      case FirebaseRealtimeActionTypeValue.APPEND_DATA_TO_LIST:\n        return <AppendDataToListPart {...props} />\n    }\n  }, [content.operation, content.options, handleOptionsValueChange])\n\n  return (\n    <div css={actionItemContainer}>\n      <SingleTypeComponent\n        title={t(\"editor.action.panel.firebase.service_type\")}\n        componentType=\"select\"\n        value={content.service}\n        showSearch\n        options={firebaseServiceTypeOptions}\n        onSelectedValueChange={handleValueChange(\"service\")}\n      />\n      <SingleTypeComponent\n        title={t(\"editor.action.panel.firebase.action_type\")}\n        componentType=\"select\"\n        showSearch={true}\n        value={content.operation}\n        placeholder={t(\n          \"editor.action.panel.firebase.placeholder.select_an_action\",\n        )}\n        options={ActionTypeList[content.service]}\n        onSelectedValueChange={handleValueChange(\"operation\")}\n      />\n      {renderInputBody}\n      <TransformerComponent />\n    </div>\n  )\n}\n","import { FirebasePanel } from \"./FirebasePanel\"\n\nFirebasePanel.displayName = \"FirebasePanel\"\nexport default FirebasePanel\n"],"names":["AppendDataToListPart","props","t","useTranslation","handleValueChange","options","jsxs","Fragment","jsx","InputEditor","value","VALIDATION_TYPES","CreateOneUserPart","CollectionInput","collectionType","isDropdown","FirebaseCollectionType","action","useSelector","getCachedAction","collectionSelect","setCollectionSelect","useState","handleCollectionTypeChange","useCallback","contentType","handleChange","useEffect","fetchResourceMeta","data","tables","actionItemStyle","actionItemLabelStyle","actionBodyTypeStyle","Select","v","actionItemCodeEditorStyle","CodeEditor","CODE_LANG","CODE_TYPE","DeleteOneDocumentPart","DeleteOneUserPart","GetCollectionsPart","GetDocumentByIDPart","GetUserByEmailPart","GetUserByIDPart","GetUserByPhonePart","InsertDocumentPart","ListUsersPart","OperationSelectList","CollectionRecordEditor","defaultValue","name","control","getValues","useForm","index","key","operation","onChange","newRecords","curOperation","Controller","RecordEditor","record","actionItemRecordEditorStyle","val","codeMirrorWrapperLabelStyle","codeMirrorWrapperValueStyle","_record","codeEditorLabelStyle","css","globalColor","illaPrefix","checkboxItemStyle","checkoutItemStyle","checkoutContentStyle","CheckboxInput","onCheckboxChange","onValueChange","checkboxTitle","checkboxValue","inputTitle","inputValue","inputPlaceholder","inputTips","showInputEditor","hasExpectedType","expectedType","Checkbox","QueryCollectionGroupPart","QueryDatabasePart","QueryFirebasePart","checkboxContainer","SetDataPart","UpdateDataPart","UpdateDocumentPart","UpdateOneUserPart","firebaseServiceTypeOptions","FirebaseServiceTypeValue","FirestoreActionType","FirebaseStoreActionTypeValue","AuthActionType","FirebaseAuthActionTypeValue","RealtimeActionType","FirebaseRealtimeActionTypeValue","ActionTypeList","FirebasePanel","cachedAction","selectedContent","getSelectedAction","content","dispatch","useDispatch","valueString","FirebaseInitialValue","configActions","initialOptions","FirebaseServiceTypeInitialValue","handleOptionsValueChange","renderInputBody","useMemo","actionItemContainer","SingleTypeComponent","TransformerComponent"],"mappings":"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"}