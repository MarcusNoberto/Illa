{"version":3,"file":"gridList-e3bffc89.js","sources":["../../src/widgetLibrary/GridListWidget/components/RenderCopyContainer/index.tsx","../../src/widgetLibrary/GridListWidget/components/RenderTemplateContainer/index.tsx","../../src/widgetLibrary/GridListWidget/components/ListWidgetWithAutoPagination/index.tsx","../../src/widgetLibrary/GridListWidget/components/CursorBasedSelector/style.ts","../../src/widgetLibrary/GridListWidget/components/CursorBasedSelector/index.tsx","../../src/widgetLibrary/GridListWidget/components/ListWidgetWithServerPagination/index.tsx","../../src/widgetLibrary/GridListWidget/components/Loading/style.ts","../../src/widgetLibrary/GridListWidget/components/Loading/index.tsx","../../src/widgetLibrary/GridListWidget/gridList.tsx"],"sourcesContent":["import { FC } from \"react\"\nimport { RenderComponentCanvasWithJson } from \"@/page/App/components/DotPanel/components/Canvas/renderComponentCanvasContainerWithJson\"\nimport { RenderCopyContainerProps } from \"@/widgetLibrary/GridListWidget/interface\"\n\nconst RenderCopyContainer: FC<RenderCopyContainerProps> = (props) => {\n  const {\n    templateComponentNodes,\n    templateContainerHeight: _templateContainerHeight,\n    columnNumber,\n    displayNamePrefix,\n  } = props\n  return templateComponentNodes ? (\n    <RenderComponentCanvasWithJson\n      componentNode={templateComponentNodes}\n      containerPadding={0}\n      columnNumber={columnNumber}\n      displayNamePrefix={displayNamePrefix}\n    />\n  ) : null\n}\n\nexport default RenderCopyContainer\n","import { FC, useCallback } from \"react\"\nimport {\n  LIST_ITEM_MARGIN_TOP,\n  WIDGET_SCALE_SQUARE_BORDER_WIDTH,\n} from \"@/page/App/components/ScaleSquare/constant/widget\"\nimport { RenderTemplateContainerProps } from \"@/widgetLibrary/GridListWidget/interface\"\nimport RenderChildrenCanvas from \"@/widgetLibrary/PublicSector/RenderChildrenCanvas\"\nimport { getGapByShadow } from \"../../utils\"\n\nconst RenderTemplateContainer: FC<RenderTemplateContainerProps> = (props) => {\n  const {\n    templateComponentDisplayName,\n    columnNumber,\n    itemGap = LIST_ITEM_MARGIN_TOP,\n    dynamicHeight,\n    extraHeight = 0,\n    templateContainerHeight,\n    handleUpdateOriginalDSLMultiAttr,\n    updateComponentHeight,\n    itemNumber = 1,\n    enableAutoPagination,\n    itemShadow,\n    itemPadding,\n  } = props\n  const enableAutoHeight = dynamicHeight !== \"fixed\"\n\n  const handleUpdateHeight = useCallback(\n    (height: number) => {\n      if (!updateComponentHeight) return\n      if (\n        height + 2 * WIDGET_SCALE_SQUARE_BORDER_WIDTH !==\n        templateContainerHeight\n      ) {\n        handleUpdateOriginalDSLMultiAttr(\n          {\n            itemHeight: height + 2 * WIDGET_SCALE_SQUARE_BORDER_WIDTH,\n          },\n          true,\n        )\n      }\n\n      // height + pagination height + pagination gap + every item height\n      let componentHeight: number\n      let gap = itemGap >= 0 ? itemGap : LIST_ITEM_MARGIN_TOP\n      if (enableAutoPagination) {\n        componentHeight =\n          height +\n          extraHeight +\n          LIST_ITEM_MARGIN_TOP +\n          2 * WIDGET_SCALE_SQUARE_BORDER_WIDTH +\n          (height + 2 * WIDGET_SCALE_SQUARE_BORDER_WIDTH + gap) *\n            (itemNumber - 1) +\n          getGapByShadow(itemShadow) * 2\n      } else {\n        componentHeight =\n          height +\n          2 * WIDGET_SCALE_SQUARE_BORDER_WIDTH +\n          (height + 2 * WIDGET_SCALE_SQUARE_BORDER_WIDTH + gap) *\n            (itemNumber - 1) +\n          getGapByShadow(itemShadow) * 2\n      }\n      updateComponentHeight(componentHeight)\n    },\n    [\n      handleUpdateOriginalDSLMultiAttr,\n      itemNumber,\n      templateContainerHeight,\n      updateComponentHeight,\n      extraHeight,\n      enableAutoPagination,\n      itemGap,\n      itemShadow,\n    ],\n  )\n\n  return (\n    <RenderChildrenCanvas\n      displayName={templateComponentDisplayName}\n      columnNumber={columnNumber}\n      handleUpdateHeight={handleUpdateHeight}\n      canResizeCanvas={enableAutoHeight}\n      containerPadding={itemPadding?.size}\n    />\n  )\n}\n\nexport default RenderTemplateContainer\n","import { chunk } from \"lodash-es\"\nimport { Resizable, ResizeCallback, ResizeStartCallback } from \"re-resizable\"\nimport { FC, useCallback, useMemo, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport useMeasure from \"react-use-measure\"\nimport { Pagination } from \"@illa-design/react\"\nimport { LIST_ITEM_MARGIN_TOP } from \"@/page/App/components/ScaleSquare/constant/widget\"\nimport { applyDashedLineStyle } from \"@/page/App/components/ScaleSquare/style\"\nimport { getIsILLAEditMode } from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { getShadowStyle } from \"@/utils/styleUtils/shadow\"\nimport RenderCopyContainer from \"@/widgetLibrary/GridListWidget/components/RenderCopyContainer\"\nimport RenderTemplateContainer from \"@/widgetLibrary/GridListWidget/components/RenderTemplateContainer\"\nimport {\n  COLUMN_NUM_ADAPTATION,\n  ListWidgetPropsWithChildrenNodes,\n} from \"@/widgetLibrary/GridListWidget/interface\"\nimport {\n  applyListItemStyle,\n  itemContainerStyle,\n  listParentContainerWithPagination,\n  paginationWrapperStyle,\n  selectStyle,\n} from \"@/widgetLibrary/GridListWidget/style\"\nimport { resizeBottomHandler } from \"@/widgetLibrary/GridListWidget/utils\"\n\nconst ListWidgetWithAutoPagination: FC<ListWidgetPropsWithChildrenNodes> = (\n  props,\n) => {\n  const {\n    dataSources,\n    itemHeight = 48,\n    displayName,\n    page = 0,\n    dynamicMinHeight,\n    dynamicMaxHeight,\n    enablePagination,\n    childrenNode,\n    itemGapX = LIST_ITEM_MARGIN_TOP,\n    itemGapY = LIST_ITEM_MARGIN_TOP,\n    itemShadow,\n    itemBorderColor,\n    itemBorderRadius,\n    itemBorderWidth,\n    columnNumAdaptation,\n    numberOfColumns = 3,\n    minColumnWidth,\n    handleUpdateOriginalDSLMultiAttr,\n    updateComponentHeight,\n    copyComponents,\n    pageSize,\n    handleUpdateSelectedItem,\n    itemBackGroundColor,\n    columnNumber,\n    dynamicHeight = \"fixed\",\n    selectIndexForMark,\n    themeColor,\n    loading,\n    handleUpdateMultiExecutionResult,\n    itemPadding,\n    h,\n  } = props\n\n  const [containerRef, containerBounds] = useMeasure()\n  const [paginationRef, paginationBounds] = useMeasure()\n  const [itemRef, itemBounds] = useMeasure()\n  const [isMouseHover, setIsMouseHover] = useState(false)\n  const isEditMode = useSelector(getIsILLAEditMode)\n  const dispatch = useDispatch()\n  const safePageSize = !pageSize ? 0 : pageSize\n\n  const currentContainerBoundsHeight =\n    containerBounds.height - paginationBounds.height\n  const itemNumber = useMemo(() => {\n    if (enablePagination) {\n      return safePageSize\n    } else {\n      return dataSources?.length\n    }\n  }, [dataSources?.length, enablePagination, safePageSize])\n\n  const handleChangeCurrentPage = useCallback(\n    (pageNumber: number) => {\n      handleUpdateSelectedItem()\n      handleUpdateMultiExecutionResult([\n        {\n          displayName,\n          value: {\n            page: pageNumber - 1,\n          },\n        },\n      ])\n    },\n    [displayName, handleUpdateMultiExecutionResult, handleUpdateSelectedItem],\n  )\n\n  const currentData = useMemo(() => {\n    const chunkData = chunk(copyComponents, itemNumber)\n    if (chunkData.length === 0) return []\n    return page < chunkData.length ? chunkData[page] : chunkData[0]\n  }, [copyComponents, page, itemNumber])\n\n  const rowsNum = useMemo(() => {\n    if (\n      columnNumAdaptation === COLUMN_NUM_ADAPTATION.FIXED &&\n      !!numberOfColumns\n    ) {\n      return Math.ceil(currentData.length / numberOfColumns)\n    } else {\n      return Math.ceil(\n        currentData.length / (containerBounds.width / itemBounds.width),\n      )\n    }\n  }, [\n    columnNumAdaptation,\n    containerBounds.width,\n    currentData.length,\n    itemBounds.width,\n    numberOfColumns,\n  ])\n\n  const handleResizeStart: ResizeStartCallback = (e) => {\n    e.preventDefault()\n    e.stopPropagation()\n    dispatch(\n      configActions.setResizingNodeIDsReducer([`${displayName}-resize-grid`]),\n    )\n  }\n\n  const handleOnResizeTopStop: ResizeCallback = useCallback(\n    (e, dir, elementRef, delta) => {\n      const { height } = delta\n      let finalHeight = itemHeight + height\n      handleUpdateOriginalDSLMultiAttr({\n        itemHeight: finalHeight,\n      })\n      dispatch(configActions.setResizingNodeIDsReducer([]))\n    },\n    [dispatch, handleUpdateOriginalDSLMultiAttr, itemHeight],\n  )\n\n  const canShowBorder = isEditMode && isMouseHover\n\n  const shadowStyle = getShadowStyle(itemShadow)\n  const borderStyle = useMemo(() => {\n    let borderWidth, borderRadius\n    const borderWidthNum = itemBorderWidth?.match(/\\d+(\\.\\d+)?/g)\n    if (borderWidthNum) borderWidth = borderWidthNum?.join(\"\") + \"px\"\n    const radiusNum = itemBorderRadius?.match(/\\d+(\\.\\d+)?/g)\n    if (radiusNum) borderRadius = radiusNum?.join(\"\") + \"px\"\n    return `\n    border: ${\n      borderWidth ? `${borderWidth} solid ${itemBorderColor}` : \"unset\"\n    };\n      border-radius: ${borderRadius ?? \"unset\"}\n    `\n  }, [itemBorderColor, itemBorderRadius, itemBorderWidth])\n\n  return (\n    <div\n      css={listParentContainerWithPagination}\n      onMouseEnter={() => {\n        setIsMouseHover(true)\n      }}\n      onMouseLeave={() => {\n        setIsMouseHover(false)\n      }}\n      ref={containerRef}\n    >\n      <div\n        css={itemContainerStyle(\n          columnNumAdaptation!,\n          itemGapX,\n          itemGapY,\n          itemShadow,\n          numberOfColumns,\n          minColumnWidth,\n        )}\n      >\n        {(page == undefined || page === 0) && (\n          <Resizable\n            size={{\n              width: \"100%\",\n              height: itemHeight,\n            }}\n            key={childrenNode[0]}\n            bounds=\"parent\"\n            minHeight={48}\n            maxHeight={\n              dynamicHeight !== \"fixed\"\n                ? \"unset\"\n                : currentContainerBoundsHeight - 4\n            }\n            handleComponent={isMouseHover ? resizeBottomHandler() : undefined}\n            enable={\n              dynamicHeight !== \"fixed\" || loading\n                ? {}\n                : {\n                    bottom: true,\n                  }\n            }\n            onResizeStart={handleResizeStart}\n            onResizeStop={handleOnResizeTopStop}\n          >\n            <div\n              css={selectStyle(\n                selectIndexForMark === 0,\n                isEditMode,\n                themeColor,\n                itemBorderRadius,\n              )}\n            >\n              <div\n                css={applyListItemStyle(\n                  true,\n                  itemBackGroundColor,\n                  shadowStyle,\n                  borderStyle,\n                  isEditMode,\n                  loading,\n                )}\n                ref={itemRef}\n                onClick={(e) => {\n                  const isClickOnContainer = !!(\n                    e.target as HTMLElement\n                  )?.getAttribute(\"data-list-widget-container\")\n                  handleUpdateSelectedItem(0, isClickOnContainer)\n                }}\n              >\n                <RenderTemplateContainer\n                  templateComponentDisplayName={childrenNode[0]}\n                  templateContainerHeight={itemHeight}\n                  columnNumber={columnNumber}\n                  dynamicHeight={dynamicHeight}\n                  itemNumber={rowsNum}\n                  extraHeight={paginationBounds.height}\n                  itemShadow={itemShadow}\n                  enableAutoPagination={enablePagination}\n                  handleUpdateOriginalDSLMultiAttr={\n                    handleUpdateOriginalDSLMultiAttr\n                  }\n                  h={h}\n                  updateComponentHeight={updateComponentHeight}\n                  dynamicMinHeight={dynamicMinHeight}\n                  dynamicMaxHeight={dynamicMaxHeight}\n                  itemGap={itemGapY}\n                  itemPadding={itemPadding}\n                />\n              </div>\n            </div>\n            {canShowBorder && (\n              <div css={applyDashedLineStyle(false, true, false)} />\n            )}\n          </Resizable>\n        )}\n        {currentData.map((node, index) => {\n          if ((page == undefined || page === 0) && index === 0) {\n            return null\n          }\n          const step = page == undefined ? 0 : page\n          return (\n            <div\n              key={node.displayName}\n              css={selectStyle(\n                selectIndexForMark === index,\n                isEditMode,\n                themeColor,\n                itemBorderRadius,\n                itemHeight,\n              )}\n            >\n              <div\n                css={applyListItemStyle(\n                  false,\n                  itemBackGroundColor,\n                  shadowStyle,\n                  borderStyle,\n                  isEditMode,\n                  loading,\n                  itemHeight,\n                  itemPadding?.size,\n                )}\n                onClick={(e) => {\n                  const isClickOnContainer = !!(\n                    e.target as HTMLElement\n                  )?.getAttribute(\"data-list-widget-container\")\n                  handleUpdateSelectedItem(index, isClickOnContainer)\n                }}\n              >\n                <RenderCopyContainer\n                  templateComponentNodes={node}\n                  templateContainerHeight={itemHeight}\n                  columnNumber={columnNumber}\n                  displayNamePrefix={`grid-list-child-${\n                    step * itemNumber! + index\n                  }-`}\n                />\n              </div>\n            </div>\n          )\n        })}\n      </div>\n      {enablePagination && (\n        <div css={paginationWrapperStyle} ref={paginationRef}>\n          <Pagination\n            total={dataSources?.length}\n            current={page + 1}\n            pageSize={itemNumber}\n            disableSimplePageJump\n            size=\"medium\"\n            sizeCanChange={false}\n            hideOnSinglePage={false}\n            simple\n            onChange={handleChangeCurrentPage}\n          />\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default ListWidgetWithAutoPagination\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const selectContainerStyle = css`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n`\n\nexport const operationIconStyle = (disabled: boolean) => {\n  return css`\n    pointer-events: ${disabled ? \"not-allowed\" : \"auto\"};\n    font-size: 14px;\n    width: 32px;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    height: 32px;\n    border-radius: 4px;\n    cursor: ${disabled ? \"not-allowed\" : \"pointer\"};\n    color: ${getColor(\"grayBlue\", disabled ? \"08\" : \"03\")};\n    background-color: unset;\n  `\n}\n","import { FC } from \"react\"\nimport { NextIcon, PreviousIcon } from \"@illa-design/react\"\nimport { operationIconStyle, selectContainerStyle } from \"./style\"\n\ninterface CursorBasedSelectorProps {\n  hasNextPage?: boolean\n  page: number\n  previousCursor?: string\n  nextCursor?: string\n  onChange: (isNext: boolean) => void\n}\nconst CursorBasedSelector: FC<CursorBasedSelectorProps> = ({\n  hasNextPage,\n  page,\n  onChange,\n}) => {\n  return (\n    <div css={selectContainerStyle}>\n      <span css={operationIconStyle(page <= 0)} onClick={() => onChange(false)}>\n        <PreviousIcon size=\"14px\" />\n      </span>\n      {page + 1}\n      <span\n        css={operationIconStyle(!hasNextPage)}\n        onClick={() => hasNextPage && onChange(true)}\n      >\n        <NextIcon size=\"14px\" />\n      </span>\n    </div>\n  )\n}\n\nexport default CursorBasedSelector\n","import { isEqual } from \"lodash-es\"\nimport { Resizable, ResizeCallback, ResizeStartCallback } from \"re-resizable\"\nimport { FC, useCallback, useEffect, useMemo, useRef, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport useMeasure from \"react-use-measure\"\nimport { Pagination } from \"@illa-design/react\"\nimport { LIST_ITEM_MARGIN_TOP } from \"@/page/App/components/ScaleSquare/constant/widget\"\nimport { applyDashedLineStyle } from \"@/page/App/components/ScaleSquare/style\"\nimport { getIsILLAEditMode } from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { getShadowStyle } from \"@/utils/styleUtils/shadow\"\nimport CursorBasedSelector from \"@/widgetLibrary/GridListWidget/components/CursorBasedSelector\"\nimport RenderCopyContainer from \"@/widgetLibrary/GridListWidget/components/RenderCopyContainer\"\nimport RenderTemplateContainer from \"@/widgetLibrary/GridListWidget/components/RenderTemplateContainer\"\nimport {\n  COLUMN_NUM_ADAPTATION,\n  ListWidgetPropsWithChildrenNodes,\n  PAGINATION_TYPE,\n} from \"@/widgetLibrary/GridListWidget/interface\"\nimport {\n  ListParentContainerWithScroll,\n  applyListItemStyle,\n  itemContainerStyle,\n  paginationWrapperStyle,\n  selectStyle,\n} from \"@/widgetLibrary/GridListWidget/style\"\nimport { resizeBottomHandler } from \"@/widgetLibrary/GridListWidget/utils\"\n\nconst ListWidgetWithServerPagination: FC<ListWidgetPropsWithChildrenNodes> = (\n  props,\n) => {\n  const {\n    itemHeight = 48,\n    handleUpdateOriginalDSLMultiAttr,\n    childrenNode,\n    copyComponents = [],\n    handleUpdateSelectedItem,\n    itemBackGroundColor,\n    columnNumber,\n    pageSize,\n    paginationType,\n    totalRowCount,\n    nextCursor,\n    previousCursor,\n    itemGapX = LIST_ITEM_MARGIN_TOP,\n    itemGapY = LIST_ITEM_MARGIN_TOP,\n    itemBorderColor,\n    itemBorderRadius,\n    itemBorderWidth,\n    itemShadow,\n    page = 1,\n    enableServerSidePagination,\n    dynamicHeight,\n    updateComponentHeight,\n    h,\n    dynamicMinHeight,\n    dynamicMaxHeight,\n    displayName,\n    columnNumAdaptation,\n    numberOfColumns = 3,\n    minColumnWidth,\n    disabled,\n    selectIndexForMark,\n    themeColor,\n    handleUpdateMultiExecutionResult,\n    triggerEventHandler,\n    enablePagination,\n    loading,\n    itemPadding,\n  } = props\n  const [containerRef, containerBounds] = useMeasure()\n  const [paginationRef, paginationBounds] = useMeasure()\n  const [itemRef, itemBounds] = useMeasure()\n  const [isMouseHover, setIsMouseHover] = useState(false)\n  const safePageSize = !pageSize ? 0 : pageSize\n\n  const currentContainerBoundsHeight =\n    containerBounds.height - paginationBounds.height\n  const isEditMode = useSelector(getIsILLAEditMode)\n  const dispatch = useDispatch()\n\n  const propsRef = useRef(props)\n  const handleChangePage = useCallback(\n    (pageNumber: number) => {\n      if (pageNumber <= 0 || disabled) return\n      handleUpdateSelectedItem()\n      new Promise((resolve) => {\n        handleUpdateMultiExecutionResult([\n          {\n            displayName,\n            value: {\n              page: pageNumber - 1,\n            },\n          },\n        ])\n        resolve(true)\n      }).then(() => {\n        triggerEventHandler(\"pageChange\")\n      })\n    },\n    [\n      disabled,\n      handleUpdateSelectedItem,\n      handleUpdateMultiExecutionResult,\n      displayName,\n      triggerEventHandler,\n    ],\n  )\n\n  const handleCursorBasedChangePage = useCallback(\n    (isNext: boolean) => {\n      if ((page <= 0 && !isNext) || disabled) return\n      handleUpdateSelectedItem()\n      let value: {\n        page: number\n        beforeCursor: string | undefined\n        afterCursor: string | undefined\n      }\n      if (isNext) {\n        value = {\n          page: page + 1,\n          beforeCursor: undefined,\n          afterCursor: nextCursor,\n        }\n      } else {\n        value = {\n          page: page - 1,\n          beforeCursor: previousCursor,\n          afterCursor: undefined,\n        }\n      }\n      new Promise((resolve) => {\n        handleUpdateMultiExecutionResult([\n          {\n            displayName,\n            value,\n          },\n        ])\n        resolve(true)\n      }).then(() => {\n        triggerEventHandler(\"pageChange\")\n      })\n    },\n    [\n      disabled,\n      displayName,\n      handleUpdateMultiExecutionResult,\n      handleUpdateSelectedItem,\n      nextCursor,\n      page,\n      previousCursor,\n      triggerEventHandler,\n    ],\n  )\n\n  useEffect(() => {\n    if (!isEqual(propsRef.current, props)) {\n      propsRef.current = props\n    }\n  }, [props])\n\n  const handleResizeStart: ResizeStartCallback = (e) => {\n    e.preventDefault()\n    e.stopPropagation()\n    dispatch(\n      configActions.setResizingNodeIDsReducer([\n        `${displayName}-resize-list-item`,\n      ]),\n    )\n  }\n\n  const handleOnResizeTopStop: ResizeCallback = useCallback(\n    (e, dir, elementRef, delta) => {\n      let finalHeight = itemHeight + delta.height\n      handleUpdateOriginalDSLMultiAttr({\n        itemHeight: finalHeight,\n      })\n      dispatch(configActions.setResizingNodeIDsReducer([]))\n    },\n    [dispatch, handleUpdateOriginalDSLMultiAttr, itemHeight],\n  )\n\n  const canShowBorder = isEditMode && isMouseHover\n\n  const shadowStyle = getShadowStyle(itemShadow)\n  const borderStyle = useMemo(() => {\n    let borderWidth, borderRadius\n    const borderWidthNum = itemBorderWidth?.match(/\\d+(\\.\\d+)?/g)\n    if (borderWidthNum) borderWidth = borderWidthNum?.join(\"\") + \"px\"\n    const radiusNum = itemBorderRadius?.match(/\\d+(\\.\\d+)?/g)\n    if (radiusNum) borderRadius = radiusNum?.join(\"\") + \"px\"\n    return `\n    border: ${\n      borderWidth ? `${borderWidth} solid ${itemBorderColor}` : \"unset\"\n    };\n      border-radius: ${borderRadius ?? \"unset\"}\n    `\n  }, [itemBorderColor, itemBorderRadius, itemBorderWidth])\n\n  const rowsNum = useMemo(() => {\n    const rows =\n      safePageSize > (copyComponents?.length ?? 0)\n        ? copyComponents?.length ?? 0\n        : safePageSize\n    if (\n      columnNumAdaptation === COLUMN_NUM_ADAPTATION.FIXED &&\n      !!numberOfColumns\n    ) {\n      return Math.ceil(rows / numberOfColumns)\n    } else {\n      return Math.ceil(rows / (containerBounds.width / itemBounds.width))\n    }\n  }, [\n    columnNumAdaptation,\n    containerBounds.width,\n    itemBounds.width,\n    numberOfColumns,\n    safePageSize,\n    copyComponents?.length,\n  ])\n\n  useEffect(() => {\n    handleUpdateMultiExecutionResult([\n      {\n        displayName,\n        value: {\n          offset: safePageSize * page,\n        },\n      },\n    ])\n  }, [displayName, handleUpdateMultiExecutionResult, page, safePageSize])\n\n  return (\n    <div\n      css={ListParentContainerWithScroll}\n      ref={containerRef}\n      onMouseEnter={() => {\n        setIsMouseHover(true)\n      }}\n      onMouseLeave={() => {\n        setIsMouseHover(false)\n      }}\n    >\n      <div\n        css={itemContainerStyle(\n          columnNumAdaptation!,\n          itemGapX,\n          itemGapY,\n          itemShadow,\n          numberOfColumns,\n          minColumnWidth,\n        )}\n      >\n        <Resizable\n          size={{\n            width: \"100%\",\n            height: itemHeight,\n          }}\n          bounds=\"parent\"\n          minHeight={48}\n          maxHeight={\n            dynamicHeight !== \"fixed\"\n              ? \"unset\"\n              : currentContainerBoundsHeight - 4\n          }\n          handleComponent={isMouseHover ? resizeBottomHandler() : undefined}\n          enable={\n            dynamicHeight !== \"fixed\" || loading\n              ? {}\n              : {\n                  bottom: true,\n                }\n          }\n          onResizeStart={handleResizeStart}\n          onResizeStop={handleOnResizeTopStop}\n        >\n          <div\n            css={selectStyle(\n              selectIndexForMark === 0,\n              isEditMode,\n              themeColor,\n              itemBorderRadius,\n            )}\n          >\n            <div\n              css={applyListItemStyle(\n                true,\n                itemBackGroundColor,\n                shadowStyle,\n                borderStyle,\n                isEditMode,\n                loading,\n              )}\n              onClick={(e) => {\n                const isClickOnContainer = !!(\n                  e.target as HTMLElement\n                )?.getAttribute(\"data-list-widget-container\")\n\n                handleUpdateSelectedItem(0, isClickOnContainer)\n              }}\n            >\n              <RenderTemplateContainer\n                templateComponentDisplayName={childrenNode[0]}\n                templateContainerHeight={itemHeight}\n                columnNumber={columnNumber}\n                dynamicHeight={dynamicHeight}\n                extraHeight={paginationBounds.height}\n                itemShadow={itemShadow}\n                enableAutoPagination={enablePagination}\n                handleUpdateOriginalDSLMultiAttr={\n                  handleUpdateOriginalDSLMultiAttr\n                }\n                itemNumber={rowsNum}\n                updateComponentHeight={updateComponentHeight}\n                h={h}\n                dynamicMinHeight={dynamicMinHeight}\n                dynamicMaxHeight={dynamicMaxHeight}\n                itemGap={itemGapY}\n                itemPadding={itemPadding}\n              />\n            </div>\n          </div>\n\n          {canShowBorder && (\n            <div css={applyDashedLineStyle(false, true, false)} />\n          )}\n        </Resizable>\n        {copyComponents?.map((node, index) => {\n          if (index === 0) return null\n          return (\n            <div\n              key={node.displayName}\n              css={selectStyle(\n                selectIndexForMark === index,\n                isEditMode,\n                themeColor,\n                itemBorderRadius,\n                itemHeight,\n              )}\n            >\n              <div\n                css={applyListItemStyle(\n                  false,\n                  itemBackGroundColor,\n                  shadowStyle,\n                  borderStyle,\n                  isEditMode,\n                  loading,\n                  itemHeight,\n                  itemPadding?.size,\n                )}\n                ref={itemRef}\n                onClick={(e) => {\n                  const isClickOnContainer = !!(\n                    e.target as HTMLElement\n                  )?.getAttribute(\"data-list-widget-container\")\n                  handleUpdateSelectedItem(index, isClickOnContainer)\n                }}\n              >\n                <RenderCopyContainer\n                  templateComponentNodes={node}\n                  templateContainerHeight={itemHeight}\n                  columnNumber={columnNumber}\n                  displayNamePrefix={`grid-list-child-${index}-`}\n                />\n              </div>\n            </div>\n          )\n        })}\n      </div>\n      {enablePagination && enableServerSidePagination && (\n        <div css={paginationWrapperStyle} ref={paginationRef}>\n          {paginationType === PAGINATION_TYPE.LIMIT_OFFSET_BASED ? (\n            <Pagination\n              total={totalRowCount ?? 1}\n              current={page + 1 ?? 1}\n              pageSize={safePageSize}\n              size=\"medium\"\n              disableSimplePageJump\n              sizeCanChange={false}\n              hideOnSinglePage={false}\n              simple\n              onChange={handleChangePage}\n            />\n          ) : (\n            <CursorBasedSelector\n              page={page}\n              hasNextPage={props.hasNextPage}\n              onChange={handleCursorBasedChangePage}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default ListWidgetWithServerPagination\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const ComponentLoadingStyle = css`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: ${getColor(\"white\", \"03\")};\n`\n","import { FC } from \"react\"\nimport { Loading } from \"@illa-design/react\"\nimport { ComponentLoadingStyle } from \"./style\"\n\nexport const ComponentLoading: FC<{ themeColor?: string }> = ({\n  themeColor,\n}) => {\n  return (\n    <div css={ComponentLoadingStyle}>\n      <Loading colorScheme={themeColor} />\n    </div>\n  )\n}\n\nComponentLoading.displayName = \"ComponentLoading\"\n","import { convertPathToString } from \"@illa-public/dynamic-string\"\nimport { ComponentTreeNode } from \"@illa-public/public-types\"\nimport { klona } from \"klona\"\nimport { get, isEqual, set, toPath } from \"lodash-es\"\nimport { FC, useCallback, useEffect, useMemo, useRef, useState } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { getComponentMap } from \"@/redux/currentApp/components/componentsSelector\"\nimport {\n  getExecutionResult,\n  getRawTree,\n} from \"@/redux/currentApp/executionTree/executionSelector\"\nimport { evaluateDynamicString } from \"@/utils/evaluateDynamicString\"\nimport { getObjectPaths } from \"@/utils/executionTreeHelper/utils\"\nimport { isObject } from \"@/utils/typeHelper\"\nimport { VALIDATION_TYPES, validationFactory } from \"@/utils/validationFactory\"\nimport ListWidgetWithAutoPagination from \"./components/ListWidgetWithAutoPagination\"\nimport ListWidgetWithServerPagination from \"./components/ListWidgetWithServerPagination\"\nimport { ComponentLoading } from \"./components/Loading\"\nimport { GridListWidgetProps } from \"./interface\"\n\nexport const GridListWidget: FC<GridListWidgetProps> = (props) => {\n  const {\n    displayName,\n    dataSources,\n    childrenNode,\n    enableServerSidePagination,\n    paginationType,\n    enablePagination,\n    handleUpdateMultiExecutionResult,\n    triggerEventHandler,\n    disabled,\n    loading,\n    themeColor,\n    page = 1,\n    pageSize = 10,\n  } = props\n\n  const executionResult = useSelector(getExecutionResult)\n  const rawTree = useSelector(getRawTree)\n  const components = useSelector(getComponentMap)\n  const prevDataSourcesRef = useRef(dataSources)\n  const [selectIndexForMark, setSelectIndexForMark] = useState<\n    undefined | number\n  >()\n\n  const updateTemplateContainerNodesProps = useCallback(\n    (childrenNodeDisplayNames: string[]) => {\n      return childrenNodeDisplayNames.map((itemContainerDisplayName, index) => {\n        const currentItemContainer = klona(components[itemContainerDisplayName])\n        const currentItemDisplayNames = currentItemContainer.childrenNode\n        if (\n          Array.isArray(currentItemDisplayNames) &&\n          currentItemDisplayNames.length > 0\n        ) {\n          let newCurrentItems = currentItemDisplayNames.map(\n            (currentItemDisplayName) => {\n              const currentItem = JSON.parse(\n                JSON.stringify(components[currentItemDisplayName]),\n              ) as ComponentTreeNode\n              if (\n                currentItem.props &&\n                Array.isArray(currentItem.props.$dynamicAttrPaths)\n              ) {\n                const { displayName } = currentItem\n                const { $dynamicAttrPaths } = currentItem.props\n                $dynamicAttrPaths.forEach((path) => {\n                  const finalPath = convertPathToString(toPath(path))\n                  const requireEvalString = get(\n                    currentItem.props,\n                    finalPath,\n                    \"\",\n                  )\n                  let evalResult: unknown\n                  try {\n                    evalResult = evaluateDynamicString(\n                      \"\",\n                      requireEvalString,\n                      executionResult,\n                    )\n                  } catch (e) {\n                    console.log(e)\n                    evalResult = \"\"\n                  }\n                  let value = evalResult\n                  if (Array.isArray(evalResult) && evalResult.length > index) {\n                    const rawWidget = rawTree[displayName]\n                    if (rawWidget && isObject(rawWidget.$validationPaths)) {\n                      const validationPaths = rawWidget.$validationPaths\n                      const validationType = get(validationPaths, finalPath)\n                      if (validationType === VALIDATION_TYPES.ARRAY) {\n                        if (Array.isArray(evalResult)) {\n                          const needSetValue = evalResult[index] ?? []\n                          const validationFunc =\n                            validationFactory[validationType]\n                          const res = validationFunc?.(needSetValue, \"\")\n                          value = res?.safeValue ?? needSetValue\n                        } else {\n                          const validationFunc =\n                            validationFactory[validationType]\n                          const res = validationFunc?.(evalResult, \"\")\n                          value = res?.safeValue ?? evalResult\n                        }\n                      } else {\n                        value = evalResult[index]\n                        const validationFunc = validationFactory[validationType]\n                        const res = validationFunc?.(value, \"\")\n                        value = res?.safeValue ?? value\n                      }\n                    }\n                  }\n                  set(currentItem, `props.${finalPath}`, value)\n                })\n              }\n              if (index !== 0) {\n                set(\n                  currentItem,\n                  \"displayName\",\n                  `grid-list-child-${index}-${currentItemDisplayName}`,\n                )\n                if (disabled != undefined) {\n                  set(currentItem, \"props.disabled\", disabled)\n                }\n              }\n              return currentItem\n            },\n          )\n          newCurrentItems = newCurrentItems.map((item) => {\n            const displayName = item.displayName\n            const displayNameArray = displayName.split(\"-\")\n            const realDisplayName = displayNameArray.at(-1)\n            const rawWidget = rawTree[realDisplayName as string]\n            const validationPaths = rawWidget.$validationPaths\n            if (isObject(validationPaths)) {\n              getObjectPaths(validationPaths).forEach((path) => {\n                const validationType = validationPaths[path] as VALIDATION_TYPES\n                const validationFunc = validationFactory[validationType]\n                const currentValue = get(item, `props.${path}`, \"\")\n                const res = validationFunc?.(currentValue, \"\")\n                set(item, `props.${path}`, res?.safeValue)\n              })\n            }\n            return item\n          })\n          set(currentItemContainer, \"childrenNode\", newCurrentItems)\n        }\n        if (index !== 0) {\n          set(\n            currentItemContainer,\n            \"displayName\",\n            `grid-list-widget-container-${index}`,\n          )\n        }\n        return currentItemContainer as unknown as ComponentTreeNode\n      })\n    },\n    [components, disabled, executionResult, rawTree],\n  )\n\n  const transTemplateContainerNodes = useCallback(\n    (templateContainerDisplayName: string) => {\n      const canvasChildrenDisplayNames: string[] = []\n      if (Array.isArray(dataSources) && dataSources.length > 0) {\n        dataSources.forEach((v, index) => {\n          canvasChildrenDisplayNames[index] = templateContainerDisplayName\n        })\n        return updateTemplateContainerNodesProps(canvasChildrenDisplayNames)\n      } else {\n        return updateTemplateContainerNodesProps([templateContainerDisplayName])\n      }\n    },\n    [dataSources, updateTemplateContainerNodesProps],\n  )\n\n  const getChildrenNodes = useMemo(() => {\n    if (childrenNode && childrenNode.length > 0 && dataSources) {\n      let canvasDisplayName = childrenNode[0]\n      return transTemplateContainerNodes(canvasDisplayName)\n    }\n    return null\n  }, [childrenNode, dataSources, transTemplateContainerNodes])\n\n  const handleUpdateSelectedItem = useCallback(\n    (index?: number, isContainerClick?: boolean) => {\n      if (!Array.isArray(dataSources) || disabled) return\n      if (\n        (selectIndexForMark === index && isContainerClick) ||\n        index === undefined\n      ) {\n        setSelectIndexForMark(undefined)\n      } else {\n        setSelectIndexForMark(index)\n      }\n      new Promise((resolve) => {\n        let value\n        if (\n          index === undefined ||\n          (selectIndexForMark === index && isContainerClick)\n        ) {\n          value = {\n            selectedItem: undefined,\n            selectedIndex: undefined,\n          }\n        } else {\n          const selectItemIndex = enableServerSidePagination\n            ? index\n            : index + page * (pageSize ?? 0)\n          value = {\n            selectedItem: dataSources[selectItemIndex],\n            selectedIndex: index,\n          }\n        }\n        handleUpdateMultiExecutionResult([\n          {\n            displayName,\n            value,\n          },\n        ])\n        resolve(value)\n      }).then(() => {\n        triggerEventHandler(\"clickItem\")\n      })\n    },\n    [\n      dataSources,\n      disabled,\n      displayName,\n      enableServerSidePagination,\n      handleUpdateMultiExecutionResult,\n      page,\n      pageSize,\n      selectIndexForMark,\n      triggerEventHandler,\n    ],\n  )\n\n  useEffect(() => {\n    if (!isEqual(prevDataSourcesRef.current, dataSources)) {\n      handleUpdateMultiExecutionResult?.([\n        {\n          displayName,\n          value: {\n            selectedIndex: undefined,\n            selectedItem: undefined,\n          },\n        },\n      ])\n    }\n  }, [dataSources, displayName, handleUpdateMultiExecutionResult])\n\n  useEffect(() => {\n    handleUpdateMultiExecutionResult?.([\n      {\n        displayName,\n        value: {\n          page: 0,\n        },\n      },\n    ])\n  }, [\n    displayName,\n    handleUpdateMultiExecutionResult,\n    paginationType,\n    enablePagination,\n    enableServerSidePagination,\n  ])\n\n  return (\n    <>\n      {enableServerSidePagination ? (\n        <ListWidgetWithServerPagination\n          {...props}\n          copyComponents={getChildrenNodes}\n          handleUpdateSelectedItem={handleUpdateSelectedItem}\n          selectIndexForMark={selectIndexForMark}\n        />\n      ) : (\n        <ListWidgetWithAutoPagination\n          {...props}\n          copyComponents={getChildrenNodes}\n          handleUpdateSelectedItem={handleUpdateSelectedItem}\n          selectIndexForMark={selectIndexForMark}\n        />\n      )}\n      {loading && <ComponentLoading themeColor={themeColor} />}\n    </>\n  )\n}\n\nexport default GridListWidget\n"],"names":["RenderCopyContainer","props","templateComponentNodes","_templateContainerHeight","columnNumber","displayNamePrefix","jsx","RenderComponentCanvasWithJson","RenderTemplateContainer","templateComponentDisplayName","itemGap","LIST_ITEM_MARGIN_TOP","dynamicHeight","extraHeight","templateContainerHeight","handleUpdateOriginalDSLMultiAttr","updateComponentHeight","itemNumber","enableAutoPagination","itemShadow","itemPadding","enableAutoHeight","handleUpdateHeight","useCallback","height","WIDGET_SCALE_SQUARE_BORDER_WIDTH","componentHeight","gap","getGapByShadow","RenderChildrenCanvas","ListWidgetWithAutoPagination","dataSources","itemHeight","displayName","page","dynamicMinHeight","dynamicMaxHeight","enablePagination","childrenNode","itemGapX","itemGapY","itemBorderColor","itemBorderRadius","itemBorderWidth","columnNumAdaptation","numberOfColumns","minColumnWidth","copyComponents","pageSize","handleUpdateSelectedItem","itemBackGroundColor","selectIndexForMark","themeColor","loading","handleUpdateMultiExecutionResult","h","containerRef","containerBounds","useMeasure","paginationRef","paginationBounds","itemRef","itemBounds","isMouseHover","setIsMouseHover","useState","isEditMode","useSelector","getIsILLAEditMode","dispatch","useDispatch","safePageSize","currentContainerBoundsHeight","useMemo","handleChangeCurrentPage","pageNumber","currentData","chunkData","chunk","rowsNum","COLUMN_NUM_ADAPTATION","handleResizeStart","e","configActions","handleOnResizeTopStop","dir","elementRef","delta","finalHeight","canShowBorder","shadowStyle","getShadowStyle","borderStyle","borderWidth","borderRadius","borderWidthNum","radiusNum","jsxs","listParentContainerWithPagination","itemContainerStyle","Resizable","resizeBottomHandler","selectStyle","applyListItemStyle","isClickOnContainer","_a","applyDashedLineStyle","node","index","step","paginationWrapperStyle","Pagination","selectContainerStyle","css","operationIconStyle","disabled","getColor","CursorBasedSelector","hasNextPage","onChange","PreviousIcon","NextIcon","ListWidgetWithServerPagination","paginationType","totalRowCount","nextCursor","previousCursor","enableServerSidePagination","triggerEventHandler","propsRef","useRef","handleChangePage","resolve","handleCursorBasedChangePage","isNext","value","useEffect","isEqual","rows","ListParentContainerWithScroll","PAGINATION_TYPE","ComponentLoadingStyle","ComponentLoading","Loading","GridListWidget","executionResult","getExecutionResult","rawTree","getRawTree","components","getComponentMap","prevDataSourcesRef","setSelectIndexForMark","updateTemplateContainerNodesProps","childrenNodeDisplayNames","itemContainerDisplayName","currentItemContainer","klona","currentItemDisplayNames","newCurrentItems","currentItemDisplayName","currentItem","$dynamicAttrPaths","path","finalPath","convertPathToString","toPath","requireEvalString","get","evalResult","evaluateDynamicString","rawWidget","isObject","validationPaths","validationType","VALIDATION_TYPES","needSetValue","validationFunc","validationFactory","res","set","item","realDisplayName","getObjectPaths","currentValue","transTemplateContainerNodes","templateContainerDisplayName","canvasChildrenDisplayNames","v","getChildrenNodes","canvasDisplayName","isContainerClick","selectItemIndex","Fragment"],"mappings":"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"}