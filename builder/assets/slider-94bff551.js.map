{"version":3,"file":"slider-94bff551.js","sources":["../../src/widgetLibrary/SliderWidget/style.ts","../../src/widgetLibrary/SliderWidget/utils.ts","../../src/widgetLibrary/SliderWidget/slider.tsx"],"sourcesContent":["import { SerializedStyles, css } from \"@emotion/react\"\n\nexport const applyLabelAndComponentWrapperStyle = (\n  labelPosition: \"left\" | \"right\" | \"top\" = \"left\",\n): SerializedStyles => {\n  if (labelPosition === \"left\") {\n    return css`\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n    `\n  }\n  if (labelPosition === \"right\") {\n    return css`\n      display: flex;\n      flex-direction: row-reverse;\n      align-items: center;\n      justify-content: space-between;\n    `\n  }\n  return css``\n}\n\nexport const applyWrapperSlider = css`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  padding: 0 8px;\n  gap: 8px;\n  align-items: center;\n`\n\nexport const applyIcon = css`\n  height: 16px;\n  width: 16px;\n`\n","import {\n  getValidateVFromString,\n  handleValidateCheck,\n} from \"../PublicSector/InvalidMessage/utils\"\nimport { SliderWidgetProps } from \"./interface\"\n\nexport const getValidateMessageFunc = (\n  value: number | number[] | undefined,\n  options: {\n    hideValidationMessage?: SliderWidgetProps[\"hideValidationMessage\"]\n    required?: SliderWidgetProps[\"required\"]\n    customRule?: SliderWidgetProps[\"customRule\"]\n  } = {},\n) => {\n  const { hideValidationMessage, required, customRule } = options\n  if (!hideValidationMessage) {\n    const message = handleValidateCheck({\n      value: getValidateVFromString(value),\n      required,\n      customRule,\n    })\n    const showMessage = message && message.length > 0\n    return showMessage ? message : \"\"\n  }\n  return \"\"\n}\n","import { debounce } from \"lodash-es\"\nimport { FC, forwardRef, useCallback, useEffect, useRef, useState } from \"react\"\nimport { Slider } from \"@illa-design/react\"\nimport { AutoHeightContainer } from \"@/widgetLibrary/PublicSector/AutoHeightContainer\"\nimport { InvalidMessage } from \"@/widgetLibrary/PublicSector/InvalidMessage/\"\nimport { Label } from \"@/widgetLibrary/PublicSector/Label\"\nimport { TooltipWrapper } from \"@/widgetLibrary/PublicSector/TooltipWrapper\"\nimport { applyValidateMessageWrapperStyle } from \"@/widgetLibrary/PublicSector/TransformWidgetWrapper/style\"\nimport { AllData } from \"../IconWidget/utils\"\nimport { SliderWidgetProps, WrappedSliderProps } from \"./interface\"\nimport {\n  applyIcon,\n  applyLabelAndComponentWrapperStyle,\n  applyWrapperSlider,\n} from \"./style\"\nimport { getValidateMessageFunc } from \"./utils\"\n\nexport const WrappedSlider = forwardRef<HTMLDivElement, WrappedSliderProps>(\n  (props, ref) => {\n    const { prefixIcon, suffixIcon, hideOutput, handleOnChange } = props\n\n    const getIcon = (iconName: string) =>\n      (iconName && AllData[iconName]) || null\n    const currentPrefixIcon = getIcon(prefixIcon ?? \"\")\n    const currentSuffixIcon = getIcon(suffixIcon ?? \"\")\n    return (\n      <div css={applyWrapperSlider}>\n        {currentPrefixIcon && (\n          <span css={applyIcon}>\n            {currentPrefixIcon && currentPrefixIcon({})}\n          </span>\n        )}\n        <Slider\n          tooltipVisible={!hideOutput}\n          isRange={false}\n          ref={ref}\n          {...props}\n          onChange={handleOnChange}\n        />\n        {currentSuffixIcon && (\n          <span css={applyIcon}>\n            {currentSuffixIcon && currentSuffixIcon({})}\n          </span>\n        )}\n      </div>\n    )\n  },\n)\n\nWrappedSlider.displayName = \"WrappedSlider\"\n\nexport const SliderWidget: FC<SliderWidgetProps> = (props) => {\n  const {\n    value,\n    min,\n    displayName,\n    handleUpdateMultiExecutionResult,\n    updateComponentRuntimeProps,\n    deleteComponentRuntimeProps,\n    labelPosition,\n    labelFull,\n    labelWrapping,\n    label,\n    labelAlign,\n    labelWidth = 33,\n    labelCaption,\n    labelWidthUnit,\n    required,\n    labelHidden,\n    tooltipText,\n    customRule,\n    hideValidationMessage,\n    validateMessage,\n    defaultValue,\n    updateComponentHeight,\n    triggerEventHandler,\n  } = props\n\n  const sliderRef = useRef<HTMLDivElement>(null)\n  const [sliderValue, setSliderValue] = useState<number | undefined>(\n    defaultValue as number,\n  )\n\n  useEffect(() => {\n    setSliderValue(defaultValue)\n\n    handleUpdateMultiExecutionResult([\n      {\n        displayName,\n        value: {\n          value: defaultValue || \"\",\n        },\n      },\n    ])\n  }, [defaultValue, displayName, handleUpdateMultiExecutionResult])\n\n  const handleValidate = useCallback(\n    (value: number | number[] | undefined) => {\n      const message = getValidateMessageFunc(value, {\n        hideValidationMessage: hideValidationMessage,\n        required: required,\n        customRule: customRule,\n      })\n      handleUpdateMultiExecutionResult([\n        {\n          displayName,\n          value: {\n            validateMessage: message,\n          },\n        },\n      ])\n      return message\n    },\n    [\n      customRule,\n      displayName,\n      handleUpdateMultiExecutionResult,\n      hideValidationMessage,\n      required,\n    ],\n  )\n\n  const debounceOnChange = useRef(\n    debounce(\n      (\n        value: number | undefined,\n        triggerEventHandler: SliderWidgetProps[\"triggerEventHandler\"],\n        options?: {\n          hideValidationMessage?: SliderWidgetProps[\"hideValidationMessage\"]\n          pattern?: SliderWidgetProps[\"pattern\"]\n          regex?: SliderWidgetProps[\"regex\"]\n          required?: SliderWidgetProps[\"required\"]\n          customRule?: SliderWidgetProps[\"customRule\"]\n        },\n      ) => {\n        new Promise((resolve) => {\n          const message = getValidateMessageFunc(value, options)\n          handleUpdateMultiExecutionResult([\n            {\n              displayName,\n              value: {\n                value: value || \"\",\n                validateMessage: message,\n              },\n            },\n          ])\n          resolve(true)\n        }).then(() => {\n          triggerEventHandler(\"change\")\n        })\n      },\n      180,\n    ),\n  )\n\n  const handleOnChange = useCallback(\n    (value: number | number[]) => {\n      setSliderValue(value as number)\n      debounceOnChange.current(value as number, triggerEventHandler, {\n        hideValidationMessage: hideValidationMessage,\n\n        required: required,\n        customRule: customRule,\n      })\n    },\n    [customRule, hideValidationMessage, required, triggerEventHandler],\n  )\n\n  useEffect(() => {\n    updateComponentRuntimeProps({\n      setValue: (value: number) => {\n        if (typeof value === \"number\") {\n          handleOnChange(value)\n        }\n      },\n      clearValue: () => {\n        handleOnChange(min ?? 0)\n      },\n      validate: () => {\n        return handleValidate(value)\n      },\n      clearValidation: () => {\n        handleUpdateMultiExecutionResult([\n          {\n            displayName,\n            value: {\n              validateMessage: \"\",\n            },\n          },\n        ])\n      },\n      reset: () => {\n        handleUpdateMultiExecutionResult([\n          {\n            displayName,\n            value: { value: defaultValue, validateMessage: \"\" },\n          },\n        ])\n      },\n      focus: () => {\n        sliderRef.current?.focus()\n      },\n    })\n    return () => {\n      deleteComponentRuntimeProps()\n    }\n  }, [\n    defaultValue,\n    deleteComponentRuntimeProps,\n    displayName,\n    handleOnChange,\n    handleUpdateMultiExecutionResult,\n    handleValidate,\n    min,\n    updateComponentRuntimeProps,\n    value,\n  ])\n\n  return (\n    <AutoHeightContainer updateComponentHeight={updateComponentHeight}>\n      <TooltipWrapper tooltipText={tooltipText} tooltipDisabled={!tooltipText}>\n        <div\n          css={applyLabelAndComponentWrapperStyle(\n            labelWrapping ? \"top\" : labelPosition,\n          )}\n        >\n          <Label\n            labelFull={labelFull}\n            label={label}\n            labelAlign={labelAlign}\n            labelWidth={labelWidth}\n            labelCaption={labelCaption}\n            labelWidthUnit={labelWidthUnit}\n            labelPosition={labelPosition}\n            required={required}\n            labelHidden={labelHidden}\n            hasTooltip={!!tooltipText}\n          />\n          <WrappedSlider\n            {...props}\n            value={sliderValue}\n            ref={sliderRef}\n            handleOnChange={handleOnChange}\n          />\n        </div>\n      </TooltipWrapper>\n      {!hideValidationMessage && (\n        <div\n          css={applyValidateMessageWrapperStyle(\n            labelWidth,\n            labelPosition,\n            labelHidden || !label,\n          )}\n        >\n          <InvalidMessage validateMessage={validateMessage} />\n        </div>\n      )}\n    </AutoHeightContainer>\n  )\n}\nSliderWidget.displayName = \"SliderWidget\"\nexport default SliderWidget\n"],"names":["applyLabelAndComponentWrapperStyle","labelPosition","css","applyWrapperSlider","applyIcon","getValidateMessageFunc","value","options","hideValidationMessage","required","customRule","message","handleValidateCheck","getValidateVFromString","WrappedSlider","forwardRef","props","ref","prefixIcon","suffixIcon","hideOutput","handleOnChange","getIcon","iconName","AllData","currentPrefixIcon","currentSuffixIcon","jsxs","jsx","Slider","SliderWidget","min","displayName","handleUpdateMultiExecutionResult","updateComponentRuntimeProps","deleteComponentRuntimeProps","labelFull","labelWrapping","label","labelAlign","labelWidth","labelCaption","labelWidthUnit","labelHidden","tooltipText","validateMessage","defaultValue","updateComponentHeight","triggerEventHandler","sliderRef","useRef","sliderValue","setSliderValue","useState","useEffect","handleValidate","useCallback","debounceOnChange","debounce","resolve","_a","AutoHeightContainer","TooltipWrapper","Label","applyValidateMessageWrapperStyle","InvalidMessage"],"mappings":"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"}