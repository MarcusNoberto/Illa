{"version":3,"file":"icon-d2d18220.js","sources":["../../src/widgetLibrary/IconWidget/style.ts","../../src/widgetLibrary/IconWidget/icon.tsx"],"sourcesContent":["import { css } from \"@emotion/react\"\n\nexport const getIconContainerStyle = (\n  isWidthBigger: boolean,\n  colorScheme?: string,\n) => {\n  const svgStyle = isWidthBigger\n    ? css`\n        height: 100%;\n        width: auto;\n      `\n    : css`\n        width: 100%;\n        height: auto;\n      `\n  const svgColor = colorScheme\n    ? css`\n        color: ${colorScheme};\n      `\n    : css``\n  return css`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    & div {\n      ${svgStyle};\n    }\n    & svg {\n      ${svgStyle};\n      ${svgColor};\n      cursor: pointer;\n      display: block;\n    }\n  `\n}\n","import { FC, useCallback } from \"react\"\nimport { useMeasure } from \"react-use\"\nimport { IconWidgetProps } from \"@/widgetLibrary/IconWidget/interface\"\nimport { getIconContainerStyle } from \"@/widgetLibrary/IconWidget/style\"\nimport { getIcon } from \"@/widgetLibrary/IconWidget/utils\"\nimport { TooltipWrapper } from \"@/widgetLibrary/PublicSector/TooltipWrapper\"\n\nexport const IconWidget: FC<IconWidgetProps> = (props) => {\n  const { tooltipText, iconName, colorScheme, triggerEventHandler } = props\n\n  const [containerRef, containerBounds] = useMeasure<HTMLDivElement>()\n\n  const Icon = getIcon(iconName)\n\n  const handleOnClick = useCallback(() => {\n    triggerEventHandler(\"click\")\n  }, [triggerEventHandler])\n\n  return (\n    <TooltipWrapper tooltipText={tooltipText} tooltipDisabled={!tooltipText}>\n      <div\n        ref={containerRef}\n        css={getIconContainerStyle(\n          containerBounds.width > containerBounds.height,\n          colorScheme,\n        )}\n      >\n        <div onClick={handleOnClick}>{Icon ? <Icon /> : null}</div>\n      </div>\n    </TooltipWrapper>\n  )\n}\n\nIconWidget.displayName = \"IconWidget\"\nexport default IconWidget\n"],"names":["getIconContainerStyle","isWidthBigger","colorScheme","svgStyle","css","svgColor","IconWidget","props","tooltipText","iconName","triggerEventHandler","containerRef","containerBounds","useMeasure","Icon","getIcon","handleOnClick","useCallback","jsx","TooltipWrapper"],"mappings":"6UAEa,MAAAA,EAAwB,CACnCC,EACAC,IACG,CACH,MAAMC,EAAWF,EACbG;AAAA;AAAA;AAAA,QAIAA;AAAA;AAAA;AAAA,QAIEC,EAAWH,EACbE;AAAA,iBACWF,CAAW;AAAA,QAEtBE,IACG,OAAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAODD,CAAQ;AAAA;AAAA;AAAA,QAGRA,CAAQ;AAAA,QACRE,CAAQ;AAAA;AAAA;AAAA;AAAA,GAKhB,EC7BaC,EAAmCC,GAAU,CACxD,KAAM,CAAE,YAAAC,EAAa,SAAAC,EAAU,YAAAP,EAAa,oBAAAQ,GAAwBH,EAE9D,CAACI,EAAcC,CAAe,EAAIC,EAA2B,EAE7DC,EAAOC,EAAQN,CAAQ,EAEvBO,EAAgBC,EAAAA,YAAY,IAAM,CACtCP,EAAoB,OAAO,CAAA,EAC1B,CAACA,CAAmB,CAAC,EAExB,OACGQ,EAAAC,EAAA,CAAe,YAAAX,EAA0B,gBAAiB,CAACA,EAC1D,SAAAU,EAAC,MAAA,CACC,IAAKP,EACL,IAAKX,EACHY,EAAgB,MAAQA,EAAgB,OACxCV,CACF,EAEA,SAAAgB,EAAC,OAAI,QAASF,EAAgB,WAAQE,EAAAJ,EAAA,EAAK,EAAK,IAAK,CAAA,CAAA,CAEzD,CAAA,CAAA,CAEJ,EAEAR,EAAW,YAAc"}