{"version":3,"file":"eventTargetWidgetSelect-21f26a2d.js","sources":["../../src/page/App/components/InspectPanel/PanelSetters/SelectSetter/eventTargetWidgetSelect.tsx"],"sourcesContent":["import { FC, useMemo } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport {\n  getCurrentPageWidgetExecutionResultArray,\n  getWidgetExecutionResult,\n} from \"@/redux/currentApp/executionTree/executionSelector\"\nimport { widgetBuilder } from \"@/widgetLibrary/widgetBuilder\"\nimport { BaseSelectSetterProps } from \"./interface\"\nimport SearchSelectSetter from \"./searchSelect\"\n\nconst EventTargetWidgetSelect: FC<BaseSelectSetterProps> = (props) => {\n  const { widgetDisplayName, value, widgetOrAction } = props\n\n  const widgetDisplayNameMapProps = useSelector(getWidgetExecutionResult)\n  const currentPageWidgetDisplayNameMapProps = useSelector(\n    getCurrentPageWidgetExecutionResultArray,\n  )\n\n  const finalOptions = useMemo(() => {\n    const tmpOptions: { label: string; value: string }[] = []\n    if (widgetOrAction === \"ACTION\") {\n      Object.keys(widgetDisplayNameMapProps).forEach((key) => {\n        if (key !== widgetDisplayName) {\n          const widgetType = widgetDisplayNameMapProps[key].$widgetType\n          const widgetMethod =\n            widgetBuilder(widgetType)?.eventHandlerConfig?.methods ?? []\n          if (widgetMethod.length > 0) {\n            tmpOptions.push({\n              label: key,\n              value: key,\n            })\n          }\n        }\n      })\n    }\n\n    if (widgetOrAction === \"WIDGET\") {\n      currentPageWidgetDisplayNameMapProps.forEach((node) => {\n        const key = node.displayName\n        if (key !== widgetDisplayName) {\n          const widgetType = node.$widgetType\n          const widgetMethod =\n            widgetBuilder(widgetType)?.eventHandlerConfig?.methods ?? []\n          if (widgetMethod.length > 0) {\n            tmpOptions.push({\n              label: key,\n              value: key,\n            })\n          }\n        }\n      })\n    }\n\n    return tmpOptions\n  }, [\n    currentPageWidgetDisplayNameMapProps,\n    widgetDisplayName,\n    widgetDisplayNameMapProps,\n    widgetOrAction,\n  ])\n\n  const actionFinalValue = useMemo(() => {\n    const index = finalOptions.findIndex((option) => {\n      return option.value === value\n    })\n    if (index !== -1) return value\n    return undefined\n  }, [finalOptions, value])\n\n  const widgetFinalValue = useMemo(() => {\n    const index = finalOptions.findIndex((option) => {\n      return option.value === value\n    })\n    if (index !== -1) return value\n    return undefined\n  }, [finalOptions, value])\n\n  const finalValue =\n    widgetOrAction === \"WIDGET\" ? widgetFinalValue : actionFinalValue\n\n  return (\n    <SearchSelectSetter\n      {...props}\n      value={finalValue as string}\n      options={finalOptions}\n    />\n  )\n}\n\nEventTargetWidgetSelect.displayName = \"EventTargetWidgetSelect\"\n\nexport default EventTargetWidgetSelect\n"],"names":["EventTargetWidgetSelect","props","widgetDisplayName","value","widgetOrAction","widgetDisplayNameMapProps","useSelector","getWidgetExecutionResult","currentPageWidgetDisplayNameMapProps","getCurrentPageWidgetExecutionResultArray","finalOptions","useMemo","tmpOptions","key","widgetType","_b","_a","widgetBuilder","node","actionFinalValue","option","widgetFinalValue","jsx","SearchSelectSetter"],"mappings":"ucAUM,MAAAA,EAAsDC,GAAU,CACpE,KAAM,CAAE,kBAAAC,EAAmB,MAAAC,EAAO,eAAAC,CAAA,EAAmBH,EAE/CI,EAA4BC,EAAYC,CAAwB,EAChEC,EAAuCF,EAC3CG,CAAA,EAGIC,EAAeC,EAAAA,QAAQ,IAAM,CACjC,MAAMC,EAAiD,CAAA,EACvD,OAAIR,IAAmB,UACrB,OAAO,KAAKC,CAAyB,EAAE,QAASQ,GAAQ,SACtD,GAAIA,IAAQX,EAAmB,CACvB,MAAAY,EAAaT,EAA0BQ,CAAG,EAAE,eAEhDE,GAAAC,EAAAC,EAAcH,CAAU,IAAxB,YAAAE,EAA2B,qBAA3B,YAAAD,EAA+C,UAAW,IAC3C,OAAS,GACxBH,EAAW,KAAK,CACd,MAAOC,EACP,MAAOA,CAAA,CACR,CAEL,CAAA,CACD,EAGCT,IAAmB,UACgBI,EAAA,QAASU,GAAS,SACrD,MAAML,EAAMK,EAAK,YACjB,GAAIL,IAAQX,EAAmB,CAC7B,MAAMY,EAAaI,EAAK,eAEtBH,GAAAC,EAAAC,EAAcH,CAAU,IAAxB,YAAAE,EAA2B,qBAA3B,YAAAD,EAA+C,UAAW,IAC3C,OAAS,GACxBH,EAAW,KAAK,CACd,MAAOC,EACP,MAAOA,CAAA,CACR,CAEL,CAAA,CACD,EAGID,CAAA,EACN,CACDJ,EACAN,EACAG,EACAD,CAAA,CACD,EAEKe,EAAmBR,EAAAA,QAAQ,IAAM,CAIrC,GAHcD,EAAa,UAAWU,GAC7BA,EAAO,QAAUjB,CACzB,IACa,GAAW,OAAAA,CAClB,EACN,CAACO,EAAcP,CAAK,CAAC,EAElBkB,EAAmBV,EAAAA,QAAQ,IAAM,CAIrC,GAHcD,EAAa,UAAWU,GAC7BA,EAAO,QAAUjB,CACzB,IACa,GAAW,OAAAA,CAClB,EACN,CAACO,EAAcP,CAAK,CAAC,EAMtB,OAAAmB,EAACC,EAAA,CACE,GAAGtB,EACJ,MALFG,IAAmB,SAAWiB,EAAmBF,EAM/C,QAAST,CAAA,CAAA,CAGf,EAEAV,EAAwB,YAAc"}