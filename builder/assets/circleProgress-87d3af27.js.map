{"version":3,"file":"circleProgress-87d3af27.js","sources":["../../src/widgetLibrary/CircleProgressWidget/style.ts","../../src/widgetLibrary/CircleProgressWidget/circleProgress.tsx"],"sourcesContent":["import { css } from \"@emotion/react\"\nimport { Alignment } from \"./interface\"\n\nexport function applyContainerCss(alignment: Alignment = \"center\") {\n  return css`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: ${alignment};\n    align-items: center;\n  `\n}\n","import { FC, useEffect, useMemo } from \"react\"\nimport useMeasure from \"react-use-measure\"\nimport { Progress } from \"@illa-design/react\"\nimport { applyContainerCss } from \"@/widgetLibrary/CircleProgressWidget/style\"\nimport { TooltipWrapper } from \"@/widgetLibrary/PublicSector/TooltipWrapper\"\nimport {\n  CircleProgressWidgetProps,\n  WrappedCircleProgressProps,\n} from \"./interface\"\n\nexport const WrappedCircleProgress: FC<WrappedCircleProgressProps> = (\n  props,\n) => {\n  const {\n    value,\n    showText,\n    color,\n    trailColor,\n    strokeWidth,\n    finalWidth,\n    finalHeight,\n  } = props\n\n  const _strokeWidth = useMemo(() => {\n    return !isNaN(Number(strokeWidth)) ? strokeWidth + \"px\" : strokeWidth\n  }, [strokeWidth])\n\n  // delete scale square padding\n  const progressWidth = Math.min(finalWidth, finalHeight) - 8 + \"px\"\n\n  return (\n    <Progress\n      type=\"circle\"\n      percent={value}\n      showText={!showText}\n      w={progressWidth}\n      color={color}\n      trailColor={trailColor}\n      strokeWidth={_strokeWidth}\n    />\n  )\n}\n\nWrappedCircleProgress.displayName = \"WrappedCircleProgress\"\n\nexport const CircleProgressWidget: FC<CircleProgressWidgetProps> = (props) => {\n  const {\n    handleUpdateDsl,\n    updateComponentRuntimeProps,\n    deleteComponentRuntimeProps,\n    alignment,\n    tooltipText,\n  } = props\n\n  useEffect(() => {\n    updateComponentRuntimeProps({\n      setValue: (value: number) => {\n        handleUpdateDsl({ value })\n      },\n      clearValue: () => {\n        handleUpdateDsl({ value: 0 })\n      },\n    })\n\n    return () => {\n      deleteComponentRuntimeProps()\n    }\n  }, [\n    deleteComponentRuntimeProps,\n    handleUpdateDsl,\n    updateComponentRuntimeProps,\n  ])\n\n  const [wrapperRef, bounds] = useMeasure()\n\n  return (\n    <TooltipWrapper tooltipText={tooltipText} tooltipDisabled={!tooltipText}>\n      <div css={applyContainerCss(alignment)} ref={wrapperRef}>\n        <WrappedCircleProgress\n          {...props}\n          finalHeight={bounds.height}\n          finalWidth={bounds.width}\n        />\n      </div>\n    </TooltipWrapper>\n  )\n}\n\nCircleProgressWidget.displayName = \"CircleProgressWidget\"\nexport default CircleProgressWidget\n"],"names":["applyContainerCss","alignment","css","WrappedCircleProgress","props","value","showText","color","trailColor","strokeWidth","finalWidth","finalHeight","_strokeWidth","useMemo","progressWidth","jsx","Progress","CircleProgressWidget","handleUpdateDsl","updateComponentRuntimeProps","deleteComponentRuntimeProps","tooltipText","useEffect","wrapperRef","bounds","useMeasure","TooltipWrapper"],"mappings":"wUAGgB,SAAAA,EAAkBC,EAAuB,SAAU,CAC1D,OAAAC;AAAA;AAAA;AAAA;AAAA,uBAIcD,CAAS;AAAA;AAAA,GAGhC,CCDa,MAAAE,EACXC,GACG,CACG,KAAA,CACJ,MAAAC,EACA,SAAAC,EACA,MAAAC,EACA,WAAAC,EACA,YAAAC,EACA,WAAAC,EACA,YAAAC,CACE,EAAAP,EAEEQ,EAAeC,EAAAA,QAAQ,IACnB,MAAM,OAAOJ,CAAW,CAAC,EAAyBA,EAArBA,EAAc,KAClD,CAACA,CAAW,CAAC,EAGVK,EAAgB,KAAK,IAAIJ,EAAYC,CAAW,EAAI,EAAI,KAG5D,OAAAI,EAACC,EAAA,CACC,KAAK,SACL,QAASX,EACT,SAAU,CAACC,EACX,EAAGQ,EACH,MAAAP,EACA,WAAAC,EACA,YAAaI,CAAA,CAAA,CAGnB,EAEAT,EAAsB,YAAc,wBAEvB,MAAAc,EAAuDb,GAAU,CACtE,KAAA,CACJ,gBAAAc,EACA,4BAAAC,EACA,4BAAAC,EACA,UAAAnB,EACA,YAAAoB,CACE,EAAAjB,EAEJkB,EAAAA,UAAU,KACoBH,EAAA,CAC1B,SAAWd,GAAkB,CACXa,EAAA,CAAE,MAAAb,EAAO,CAC3B,EACA,WAAY,IAAM,CACAa,EAAA,CAAE,MAAO,CAAA,CAAG,CAC9B,CAAA,CACD,EAEM,IAAM,CACiBE,GAAA,GAE7B,CACDA,EACAF,EACAC,CAAA,CACD,EAED,KAAM,CAACI,EAAYC,CAAM,EAAIC,EAAW,EAExC,OACGV,EAAAW,EAAA,CAAe,YAAAL,EAA0B,gBAAiB,CAACA,EAC1D,SAACN,EAAA,MAAA,CAAI,IAAKf,EAAkBC,CAAS,EAAG,IAAKsB,EAC3C,SAAAR,EAACZ,EAAA,CACE,GAAGC,EACJ,YAAaoB,EAAO,OACpB,WAAYA,EAAO,KAAA,CAAA,CAEvB,CAAA,CACF,CAAA,CAEJ,EAEAP,EAAqB,YAAc"}