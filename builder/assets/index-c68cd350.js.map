{"version":3,"file":"index-c68cd350.js","sources":["../../src/page/History/components/HistoryNavBar/style.ts","../../src/page/History/components/HistoryNavBar/index.tsx","../../src/page/History/components/ActionArea/style.ts","../../src/redux/currentAppHistory/currentAppHistorySelector.ts","../../src/page/History/components/ActionArea/index.tsx","../../src/page/History/components/SnapShotItem/assets/save.svg?react","../../src/page/History/components/SnapShotItem/style.ts","../../src/page/History/components/SnapShotItem/index.tsx","../../src/page/History/components/SnapShotList/style.ts","../../src/page/History/components/SnapShotList/index.tsx","../../src/page/History/index.tsx"],"sourcesContent":["import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const navDescStyle = css`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 22px;\n  margin-right: 19px;\n  color: ${getColor(\"grayBlue\", \"02\")};\n`\n","import { getILLABuilderURL, getILLACloudURL } from \"@illa-public/utils\"\nimport { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useSelector } from \"react-redux\"\nimport { Link, useParams } from \"react-router-dom\"\nimport { Button, ExitIcon } from \"@illa-design/react\"\nimport Logo from \"@/assets/illa-logo.svg?react\"\nimport {\n  informationStyle,\n  logoCursorStyle,\n  nameStyle,\n  navBarStyle,\n  rowCenter,\n} from \"@/page/App/Module/PageNavBar/style\"\nimport { navDescStyle } from \"@/page/History/components/HistoryNavBar/style\"\nimport { getAppInfo } from \"@/redux/currentApp/appInfo/appInfoSelector\"\n\nexport const HistoryNavBar: FC = () => {\n  const { teamIdentifier, appId } = useParams()\n  const { t } = useTranslation()\n\n  const appInfo = useSelector(getAppInfo)\n\n  return (\n    <div css={navBarStyle}>\n      <div css={rowCenter}>\n        <Link to={getILLACloudURL(window.customDomain)}>\n          <Logo width=\"34px\" css={logoCursorStyle} />\n        </Link>\n        <div css={informationStyle}>\n          <div css={nameStyle}>{appInfo.appName}</div>\n        </div>\n      </div>\n      <span css={navDescStyle}>{t(\"editor.history.history_list.label\")}</span>\n      <Link\n        to={`${getILLABuilderURL(\n          window.customDomain,\n        )}/${teamIdentifier}/app/${appId}`}\n      >\n        <Button minW=\"200px\" colorScheme=\"techPurple\" leftIcon={<ExitIcon />}>\n          {t(\"exit_preview\")}\n        </Button>\n      </Link>\n    </div>\n  )\n}\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const actionWrapperStyle = css`\n  padding: 8px 0;\n  min-height: 38px;\n`\n\nexport const actionTextStyle = css`\n  min-height: 38px;\n  padding: 8px;\n  color: ${getColor(\"techPurple\", \"03\")};\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 22px;\n  cursor: pointer;\n`\n","import { RootState } from \"@/store\"\n\nexport const getCurrentAppSnapshotList = (state: RootState) => {\n  return state.currentAppHistory.snapshotList\n}\n\nexport const getSnapshotListCurrentPage = (state: RootState) => {\n  return state.currentAppHistory.currentPage\n}\n\nexport const getSnapshotListHasMore = (state: RootState) => {\n  return state.currentAppHistory.hasMore\n}\n\nexport const getCurrentAppSnapshotID = (state: RootState) => {\n  return state.currentAppHistory.currentSnapshotID\n}\n","import { FC, useCallback, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useParams } from \"react-router-dom\"\nimport { Loading } from \"@illa-design/react\"\nimport {\n  actionTextStyle,\n  actionWrapperStyle,\n} from \"@/page/History/components/ActionArea/style\"\nimport { getSnapshotListCurrentPage } from \"@/redux/currentAppHistory/currentAppHistorySelector\"\nimport { currentAppHistoryActions } from \"@/redux/currentAppHistory/currentAppHistorySlice\"\nimport { fetchSnapShotList } from \"@/services/history\"\n\nexport const ActionArea: FC = () => {\n  const { appId } = useParams()\n  const { t } = useTranslation()\n  const dispatch = useDispatch()\n  const currentPage = useSelector(getSnapshotListCurrentPage)\n  const [loading, setLoading] = useState(false)\n\n  const fetchMore = useCallback(async () => {\n    if (!appId) return\n    setLoading(true)\n    const page = currentPage + 1\n    try {\n      const { data } = await fetchSnapShotList({\n        page,\n        appID: appId,\n      })\n      dispatch(\n        currentAppHistoryActions.updateCurrentAppHistoryReducer({\n          ...data,\n          currentPage: page,\n          hasMore: data.totalPages !== page,\n        }),\n      )\n    } catch (error) {\n      // Handle error\n      console.error(error)\n    } finally {\n      setLoading(false)\n    }\n  }, [appId, currentPage, dispatch])\n\n  return (\n    <div>\n      {loading ? (\n        <div css={actionWrapperStyle}>\n          <Loading colorScheme=\"techPurple\" />\n        </div>\n      ) : (\n        <div css={actionTextStyle} onClick={fetchMore}>\n          {t(\"editor.history.more\")}\n        </div>\n      )}\n    </div>\n  )\n}\n\nActionArea.displayName = \"ActionArea\"\n","import * as React from \"react\";\nconst SvgSave = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 16, height: 16, viewBox: \"0 0 16 16\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"g\", { id: \"Save\" }, /* @__PURE__ */ React.createElement(\"path\", { id: \"Vector\", d: \"M3.5 2.75C3.30109 2.75 3.11032 2.82902 2.96967 2.96967C2.82902 3.11032 2.75 3.30109 2.75 3.5V12.5C2.75 12.6989 2.82902 12.8897 2.96967 13.0303C3.11032 13.171 3.30109 13.25 3.5 13.25H12.5C12.6989 13.25 12.8897 13.171 13.0303 13.0303C13.171 12.8897 13.25 12.6989 13.25 12.5V3.5C13.25 3.30109 13.171 3.11032 13.0303 2.96967C12.8897 2.82902 12.6989 2.75 12.5 2.75H9.125C8.92609 2.75 8.73532 2.82902 8.59467 2.96967C8.45402 3.11032 8.375 3.30109 8.375 3.5V8.96975L10.3595 6.9845C10.4299 6.91408 10.5254 6.87453 10.625 6.87453C10.7246 6.87453 10.8201 6.91408 10.8905 6.9845C10.9609 7.05491 11.0005 7.15042 11.0005 7.25C11.0005 7.34958 10.9609 7.44509 10.8905 7.5155L8.2655 10.1405C8.23067 10.1754 8.18928 10.2031 8.14372 10.222C8.09817 10.2409 8.04933 10.2507 8 10.2507C7.95067 10.2507 7.90183 10.2409 7.85627 10.222C7.81072 10.2031 7.76933 10.1754 7.7345 10.1405L5.1095 7.5155C5.07463 7.48063 5.04698 7.43924 5.02811 7.39369C5.00924 7.34813 4.99953 7.29931 4.99953 7.25C4.99953 7.20069 5.00924 7.15187 5.02811 7.10631C5.04698 7.06076 5.07463 7.01937 5.1095 6.9845C5.14437 6.94963 5.18576 6.92198 5.23131 6.90311C5.27687 6.88424 5.32569 6.87453 5.375 6.87453C5.42431 6.87453 5.47313 6.88424 5.51869 6.90311C5.56424 6.92198 5.60563 6.94963 5.6405 6.9845L7.625 8.96975V3.5C7.625 3.10218 7.78304 2.72064 8.06434 2.43934C8.34564 2.15804 8.72718 2 9.125 2H12.5C12.8978 2 13.2794 2.15804 13.5607 2.43934C13.842 2.72064 14 3.10218 14 3.5V12.5C14 12.8978 13.842 13.2794 13.5607 13.5607C13.2794 13.842 12.8978 14 12.5 14H3.5C3.10218 14 2.72064 13.842 2.43934 13.5607C2.15804 13.2794 2 12.8978 2 12.5V3.5C2 3.10218 2.15804 2.72064 2.43934 2.43934C2.72064 2.15804 3.10218 2 3.5 2H5.375C5.47446 2 5.56984 2.03951 5.64016 2.10983C5.71049 2.18016 5.75 2.27554 5.75 2.375C5.75 2.47446 5.71049 2.56984 5.64016 2.64017C5.56984 2.71049 5.47446 2.75 5.375 2.75H3.5Z\", fill: \"currentColor\", stroke: \"currentColor\", strokeWidth: 0.5 })));\nexport default SvgSave;\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const leftWrapperStyle = css`\n  position: relative;\n  width: 16px;\n  display: flex;\n  justify-content: center;\n`\nexport const badgeDotStyle = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 24px;\n  position: relative;\n`\n\nexport const applyDotStyle = (selected?: boolean) => {\n  return css`\n    width: 6px;\n    height: 6px;\n    background-color: ${selected\n      ? getColor(\"techPurple\", \"03\")\n      : getColor(\"grayBlue\", \"02\")};\n    border-radius: 50%;\n  `\n}\n\nconst textEllipsisStyle = css`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`\n\nexport const lineStyle = css`\n  position: absolute;\n  transform: translateX(-50%);\n  left: 50%;\n  top: 24px;\n  width: 1px;\n  height: calc(100% - 24px);\n  background: ${getColor(\"grayBlue\", \"08\")};\n`\n\nexport const textStyle = css`\n  flex-direction: column;\n  justify-content: start;\n  align-items: start;\n  gap: 16px;\n  padding-bottom: 24px;\n  display: flex;\n  flex-grow: 1;\n  width: 263px;\n`\n\nexport const timelineStyle = css`\n  justify-content: start;\n  align-items: stretch;\n  gap: 8px;\n  display: flex;\n`\n\nexport const itemHeaderStyle = css`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n`\n\nexport const applyTimeStyle = (selected?: boolean) => {\n  return css`\n    color: ${selected\n      ? getColor(\"techPurple\", \"03\")\n      : getColor(\"grayBlue\", \"02\")};\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 24px;\n    cursor: pointer;\n  `\n}\n\nexport const manualStyle = css`\n  display: flex;\n  gap: 4px;\n  align-items: center;\n  color: ${getColor(\"grayBlue\", \"04\")};\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 20px;\n`\nexport const contentStyle = css`\n  flex-direction: column;\n  justify-content: start;\n  align-items: start;\n  gap: 16px;\n  display: flex;\n`\n\nexport const modifyContentStyle = css`\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n  gap: 8px;\n  display: flex;\n`\n\nexport const editorInfoStyle = css`\n  justify-content: start;\n  align-items: center;\n  gap: 8px;\n  display: flex;\n`\n\nexport const avatarStyle = css`\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  flex-shrink: 0;\n`\n\nexport const nameStyle = css`\n  color: ${getColor(\"grayBlue\", \"02\")};\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 22px;\n  max-width: 230px;\n  ${textEllipsisStyle};\n`\n\nexport const descStyle = css`\n  color: ${getColor(\"grayBlue\", \"03\")};\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 16px;\n`\n","import { Avatar } from \"@illa-public/avatar\"\nimport { isILLAAPiError } from \"@illa-public/illa-net\"\nimport { getILLABuilderURL } from \"@illa-public/utils\"\nimport { formatDate } from \"@illa-public/utils\"\nimport { FC, useCallback, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useParams } from \"react-router-dom\"\nimport { Button, useMessage } from \"@illa-design/react\"\nimport { Signal } from \"@/api/ws/ILLA_PROTO\"\nimport {\n  ModifyHistory,\n  Snapshot,\n  SnapshotTriggerMode,\n} from \"@/redux/currentAppHistory/currentAppHistoryState\"\nimport { recoverSnapShot, recoverSnapShotWS } from \"@/services/history\"\nimport SaveIcon from \"./assets/save.svg?react\"\nimport {\n  applyDotStyle,\n  applyTimeStyle,\n  avatarStyle,\n  badgeDotStyle,\n  contentStyle,\n  descStyle,\n  editorInfoStyle,\n  itemHeaderStyle,\n  leftWrapperStyle,\n  lineStyle,\n  manualStyle,\n  modifyContentStyle,\n  nameStyle,\n  textStyle,\n  timelineStyle,\n} from \"./style\"\n\ninterface SnapShotListProps {\n  snapshot: Snapshot\n  selected?: boolean\n  last: boolean\n  onChangeCurrentID: (snapshotID: string) => void\n}\n\nconst getKeyFromBroadcast = (type: string) => {\n  const typeList = type.split(\"/\")\n  const reduxAction = typeList[1] || \"\"\n  // Basic rules\n  if (reduxAction.startsWith(\"add\")) {\n    return \"editor.history.operation.Added\"\n  } else if (reduxAction.startsWith(\"delete\")) {\n    return \"editor.history.operation.Deleted\"\n  } else if (reduxAction.startsWith(\"update\")) {\n    return \"editor.history.operation.Updated\"\n  } else if (reduxAction.startsWith(\"reset\")) {\n    return \"editor.history.operation.Reseted\"\n  }\n}\n\nexport const SnapShotItem: FC<SnapShotListProps> = (props) => {\n  const message = useMessage()\n  const { teamIdentifier } = useParams()\n  const { t } = useTranslation()\n  const { snapshot, selected, last, onChangeCurrentID } = props\n  const [loading, setLoading] = useState(false)\n\n  const getDescFromBroadcast = useCallback(\n    (type: string, payload: any, operationTargetName: string) => {\n      const typeList = type.split(\"/\")\n      const reduxAction = typeList[1] || \"\"\n      // Supplementary rules\n      if (reduxAction === \"setGlobalStateReducer\") {\n        if (payload?.oldKey) {\n          return t(\"editor.history.operation.Updated\", {\n            operationTargetName: \"globalData\",\n          })\n        }\n        return t(\"editor.history.operation.Added\", {\n          operationTargetName: \"globalData\",\n        })\n      }\n      return t(\"editor.history.operation.Added\", {\n        operationTargetName,\n      })\n    },\n    [t],\n  )\n\n  const getOperationDesc = useCallback(\n    (history: ModifyHistory) => {\n      const {\n        operation,\n        operationTargetName,\n        operationBroadcastType,\n        operationBroadcastPayload,\n        operationTargetModifiedAt,\n      } = history\n\n      switch (operation) {\n        case Signal.UPDATE_STATE:\n          const operationKey = getKeyFromBroadcast(operationBroadcastType)\n          if (operationKey) {\n            return t(operationKey, { operationTargetName })\n          } else {\n            return getDescFromBroadcast(\n              operationBroadcastType,\n              operationBroadcastPayload,\n              operationTargetName,\n            )\n          }\n        case Signal.CREATE_STATE:\n          return t(\"editor.history.operation.Created\", { operationTargetName })\n        case Signal.DELETE_STATE:\n          return t(\"editor.history.operation.Deleted\", { operationTargetName })\n        case Signal.MOVE_STATE:\n          return t(\"editor.history.operation.Moved\", { operationTargetName })\n        case Signal.RECOVER_APP_SNAPSHOT:\n          return t(\"editor.history.operation.Restored\", {\n            versionName: formatDate(operationTargetModifiedAt),\n          })\n      }\n    },\n    [t, getDescFromBroadcast],\n  )\n\n  const handleRecoverSnapShot = useCallback(async () => {\n    setLoading(true)\n    try {\n      await recoverSnapShot(snapshot.appID, snapshot.snapshotID)\n      await recoverSnapShotWS(snapshot.appID)\n      message.success({ content: t(\"editor.history.message.suc.restore\") })\n      window.location.href = `${getILLABuilderURL(\n        window.customDomain,\n      )}/${teamIdentifier}/app/${snapshot.appID}`\n    } catch (error) {\n      if (isILLAAPiError(error)) {\n        message.error({ content: t(\"editor.history.message.fail.restore\") })\n      } else {\n        message.error({ content: t(\"network_error\") })\n      }\n    } finally {\n      setLoading(false)\n    }\n  }, [snapshot.appID, snapshot.snapshotID, teamIdentifier, message, t])\n\n  const handleClickItem = useCallback(() => {\n    onChangeCurrentID(snapshot.snapshotID)\n  }, [onChangeCurrentID, snapshot.snapshotID])\n\n  return (\n    <div css={timelineStyle}>\n      <div css={leftWrapperStyle}>\n        <div css={badgeDotStyle}>\n          <div css={applyDotStyle(selected)} />\n        </div>\n        {!last && <div css={lineStyle} />}\n      </div>\n      <div css={textStyle}>\n        {snapshot.targetVersion === 0 ? (\n          <div css={applyTimeStyle(selected)} onClick={handleClickItem}>\n            {t(\"editor.history.history_list.current\")}\n          </div>\n        ) : (\n          <>\n            <div css={itemHeaderStyle}>\n              <div css={applyTimeStyle(selected)} onClick={handleClickItem}>\n                {formatDate(snapshot.createdAt)}\n              </div>\n              {snapshot.snapshotTriggerMode === SnapshotTriggerMode.MANUAL && (\n                <div css={manualStyle}>\n                  <SaveIcon />\n                  {t(\"editor.history.history_list.manual\")}\n                </div>\n              )}\n            </div>\n            {snapshot.modifyHistory.length > 0 && (\n              <div css={contentStyle}>\n                {snapshot.modifyHistory.map((modify) => {\n                  const desc = getOperationDesc(modify)\n                  return (\n                    <div key={modify.modifiedAt} css={modifyContentStyle}>\n                      <div css={editorInfoStyle}>\n                        <Avatar\n                          key={modify.modifiedBy.userID}\n                          css={avatarStyle}\n                          avatarUrl={modify.modifiedBy.avatar}\n                          name={modify.modifiedBy.nickname}\n                          id={modify.modifiedBy.userID}\n                        />\n                        <div css={nameStyle}>{modify.modifiedBy.nickname}</div>\n                      </div>\n                      <div css={descStyle}>{desc}</div>\n                    </div>\n                  )\n                })}\n              </div>\n            )}\n            {selected && (\n              <Button\n                colorScheme=\"blackAlpha\"\n                loading={loading}\n                onClick={handleRecoverSnapShot}\n              >\n                {t(\"editor.history.restore\")}\n              </Button>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n\nSnapShotItem.displayName = \"SnapShotItem\"\n","import { css } from \"@emotion/react\"\n\nexport const snapShotListWrapperStyle = css`\n  overflow: hidden;\n`\nexport const headerContainerStyle = css`\n  width: 100%;\n  padding: 12px 16px;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 22px;\n`\n\nexport const contentContainerStyle = css`\n  padding: 24px 16px 64px;\n  margin-bottom: 24px;\n  overflow: scroll;\n  height: 100%;\n`\n","import { FC, HTMLAttributes, useMemo } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { Divider } from \"@illa-design/react\"\nimport { Signal } from \"@/api/ws/ILLA_PROTO\"\nimport { ActionArea } from \"@/page/History/components/ActionArea\"\nimport { SnapShotItem } from \"@/page/History/components/SnapShotItem\"\nimport {\n  contentContainerStyle,\n  headerContainerStyle,\n  snapShotListWrapperStyle,\n} from \"@/page/History/components/SnapShotList/style\"\nimport {\n  getCurrentAppSnapshotID,\n  getCurrentAppSnapshotList,\n  getSnapshotListHasMore,\n} from \"@/redux/currentAppHistory/currentAppHistorySelector\"\n\ninterface SnapShotListProps extends HTMLAttributes<HTMLDivElement> {\n  onChangeCurrentID: (snapshotID: string) => void\n}\n\nconst validOperations = [\n  Signal.CREATE_STATE,\n  Signal.DELETE_STATE,\n  Signal.UPDATE_STATE,\n  Signal.MOVE_STATE,\n  Signal.RECOVER_APP_SNAPSHOT,\n]\n\nexport const SnapShotList: FC<SnapShotListProps> = (props) => {\n  const { className, onChangeCurrentID, ...rest } = props\n  const snapshotList = useSelector(getCurrentAppSnapshotList)\n  const hasMore = useSelector(getSnapshotListHasMore)\n  const currentSnapshotID = useSelector(getCurrentAppSnapshotID)\n\n  const filteredSnapshotList = useMemo(() => {\n    return snapshotList.map((snapshot) => {\n      const modifyHistory = snapshot.modifyHistory\n        .filter((history) => {\n          return validOperations.includes(history.operation)\n        })\n        .slice(0, 2)\n\n      return {\n        ...snapshot,\n        modifyHistory,\n      }\n    })\n  }, [snapshotList])\n\n  return (\n    <div css={snapShotListWrapperStyle} className={className} {...rest}>\n      <div css={headerContainerStyle}>Version History</div>\n      <Divider />\n      <div css={contentContainerStyle}>\n        {filteredSnapshotList.map((snapshot, index) => {\n          return (\n            <SnapShotItem\n              key={snapshot.snapshotID}\n              snapshot={snapshot}\n              last={!hasMore && filteredSnapshotList.length - 1 === index}\n              selected={currentSnapshotID === snapshot.snapshotID}\n              onChangeCurrentID={onChangeCurrentID}\n            />\n          )\n        })}\n        {hasMore && <ActionArea />}\n      </div>\n    </div>\n  )\n}\n\nSnapShotList.displayName = \"SnapShotList\"\n","import { getCurrentTeamInfo, getPlanUtils } from \"@illa-public/user-data\"\nimport { canManage } from \"@illa-public/user-role-utils\"\nimport { ACTION_MANAGE, ATTRIBUTE_GROUP } from \"@illa-public/user-role-utils\"\nimport { Unsubscribe } from \"@reduxjs/toolkit\"\nimport { FC, useCallback, useEffect, useRef, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useParams } from \"react-router-dom\"\nimport { Loading, TriggerProvider, useMessage } from \"@illa-design/react\"\nimport { updateCurrentAppInfo } from \"@/hooks/useInitApp\"\nimport { CanvasPanel } from \"@/page/App/Module/CanvasPanel\"\nimport {\n  centerPanelStyle,\n  contentStyle,\n  editorContainerStyle,\n  loadingStyle,\n  middlePanelStyle,\n  rightPanelStyle,\n} from \"@/page/App/style\"\nimport { HistoryNavBar } from \"@/page/History/components/HistoryNavBar\"\nimport { SnapShotList } from \"@/page/History/components/SnapShotList\"\nimport { setupConfigListeners } from \"@/redux/config/configListener\"\nimport { setupActionListeners } from \"@/redux/currentApp/action/actionListener\"\nimport { appInfoActions } from \"@/redux/currentApp/appInfo/appInfoSlice\"\nimport { DashboardAppInitialState } from \"@/redux/currentApp/appInfo/appInfoState\"\nimport { setupComponentsListeners } from \"@/redux/currentApp/components/componentsListener\"\nimport { setupExecutionListeners } from \"@/redux/currentApp/executionTree/executionListener\"\nimport { setupLayoutInfoListeners } from \"@/redux/currentApp/layoutInfo/layoutInfoListener\"\nimport { getCurrentAppSnapshotID } from \"@/redux/currentAppHistory/currentAppHistorySelector\"\nimport { currentAppHistoryActions } from \"@/redux/currentAppHistory/currentAppHistorySlice\"\nimport { fetchSnapShot } from \"@/services/history\"\nimport { startAppListening } from \"@/store\"\n\nexport const History: FC = () => {\n  const dispatch = useDispatch()\n  const message = useMessage()\n  const { appId } = useParams()\n  const { t } = useTranslation()\n\n  const teamInfo = useSelector(getCurrentTeamInfo)\n  const currentSnapshotID = useSelector(getCurrentAppSnapshotID)\n  const currentUserRole = teamInfo?.myRole\n  const uid = teamInfo?.uid ?? \"\"\n  const teamID = teamInfo?.id ?? \"\"\n\n  const [contentLoading, setContentLoading] = useState(false)\n  const preSnapshotID = useRef<string>()\n\n  // check if user can manage the app\n  if (currentUserRole) {\n    const canEditApp = canManage(\n      currentUserRole,\n      ATTRIBUTE_GROUP.APP,\n      getPlanUtils(teamInfo),\n      ACTION_MANAGE.EDIT_APP,\n    )\n    if (!canEditApp) {\n      throw new Error(\"You don't have permission to edit this app\")\n    }\n  }\n\n  useEffect(() => {\n    const subscriptions: Unsubscribe[] = [\n      setupExecutionListeners(startAppListening),\n      setupLayoutInfoListeners(startAppListening),\n      setupComponentsListeners(startAppListening),\n      setupActionListeners(startAppListening),\n      setupConfigListeners(startAppListening),\n    ]\n    return () => subscriptions.forEach((unsubscribe) => unsubscribe())\n  }, [])\n\n  const onChangeCurrentID = useCallback(\n    (snapshotID: string) => {\n      preSnapshotID.current = currentSnapshotID\n      dispatch(\n        currentAppHistoryActions.updateCurrentSnapshotIDReducer(snapshotID),\n      )\n    },\n    [currentSnapshotID, dispatch],\n  )\n\n  useEffect(() => {\n    const controller = new AbortController()\n    if (currentSnapshotID && appId) {\n      setContentLoading(true)\n      fetchSnapShot(appId, currentSnapshotID, controller.signal)\n        .then((res) => {\n          preSnapshotID.current = currentSnapshotID\n          updateCurrentAppInfo(res.data, \"preview\", appId, teamID, uid)\n        })\n        .catch(() => {\n          message.error({\n            content: t(\"editor.history.message.fail.preview\"),\n          })\n          preSnapshotID.current &&\n            dispatch(\n              currentAppHistoryActions.updateCurrentSnapshotIDReducer(\n                preSnapshotID.current,\n              ),\n            )\n        })\n        .finally(() => {\n          setContentLoading(false)\n        })\n    }\n    return () => {\n      controller.abort()\n      dispatch(appInfoActions.updateAppInfoReducer(DashboardAppInitialState))\n    }\n  }, [t, dispatch, message, appId, currentSnapshotID, teamID, uid])\n\n  return (\n    <div css={editorContainerStyle}>\n      <HistoryNavBar />\n      <div css={contentStyle}>\n        <div css={middlePanelStyle}>\n          {contentLoading ? (\n            <div css={loadingStyle}>\n              <Loading colorScheme=\"techPurple\" />\n            </div>\n          ) : (\n            <TriggerProvider renderInBody zIndex={10}>\n              <CanvasPanel css={centerPanelStyle} />\n            </TriggerProvider>\n          )}\n        </div>\n        <TriggerProvider renderInBody zIndex={10}>\n          <SnapShotList\n            onChangeCurrentID={onChangeCurrentID}\n            css={rightPanelStyle}\n          />\n        </TriggerProvider>\n      </div>\n    </div>\n  )\n}\n\nexport default History\n\nHistory.displayName = \"History\"\n"],"names":["navDescStyle","css","getColor","HistoryNavBar","teamIdentifier","appId","useParams","t","useTranslation","appInfo","useSelector","getAppInfo","jsxs","navBarStyle","rowCenter","jsx","Link","getILLACloudURL","Logo","logoCursorStyle","informationStyle","nameStyle","getILLABuilderURL","Button","ExitIcon","actionWrapperStyle","actionTextStyle","getCurrentAppSnapshotList","state","getSnapshotListCurrentPage","getSnapshotListHasMore","getCurrentAppSnapshotID","ActionArea","dispatch","useDispatch","currentPage","loading","setLoading","useState","fetchMore","useCallback","page","data","fetchSnapShotList","currentAppHistoryActions","error","Loading","SvgSave","props","React.createElement","leftWrapperStyle","badgeDotStyle","applyDotStyle","selected","textEllipsisStyle","lineStyle","textStyle","timelineStyle","itemHeaderStyle","applyTimeStyle","manualStyle","contentStyle","modifyContentStyle","editorInfoStyle","avatarStyle","descStyle","getKeyFromBroadcast","type","reduxAction","SnapShotItem","message","useMessage","snapshot","last","onChangeCurrentID","getDescFromBroadcast","payload","operationTargetName","getOperationDesc","history","operation","operationBroadcastType","operationBroadcastPayload","operationTargetModifiedAt","Signal","operationKey","formatDate","handleRecoverSnapShot","recoverSnapShot","recoverSnapShotWS","isILLAAPiError","handleClickItem","Fragment","SnapshotTriggerMode","SaveIcon","modify","desc","Avatar","snapShotListWrapperStyle","headerContainerStyle","contentContainerStyle","validOperations","SnapShotList","className","rest","snapshotList","hasMore","currentSnapshotID","filteredSnapshotList","useMemo","modifyHistory","Divider","index","History","teamInfo","getCurrentTeamInfo","currentUserRole","uid","teamID","contentLoading","setContentLoading","preSnapshotID","useRef","canManage","ATTRIBUTE_GROUP","getPlanUtils","ACTION_MANAGE","useEffect","subscriptions","setupExecutionListeners","startAppListening","setupLayoutInfoListeners","setupComponentsListeners","setupActionListeners","setupConfigListeners","unsubscribe","snapshotID","controller","fetchSnapShot","res","updateCurrentAppInfo","appInfoActions","DashboardAppInitialState","editorContainerStyle","middlePanelStyle","loadingStyle","TriggerProvider","CanvasPanel","centerPanelStyle","rightPanelStyle"],"mappings":"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"}