{"version":3,"file":"index-2493c661.js","sources":["../../src/services/public.ts","../../src/page/App/Module/LeftPanel/Components/DebugButton/index.tsx","../../src/page/App/Module/LeftPanel/Components/HistoryButton/index.tsx","../../src/page/App/Module/LeftPanel/Components/MissingResourceButton/index.tsx","../../src/page/App/Module/LeftPanel/Components/MoreActionButton/style.ts","../../src/page/App/Module/LeftPanel/Components/MoreActionButton/utils.ts","../../src/page/App/Module/LeftPanel/Components/MoreActionButton/index.tsx","../../src/page/App/Module/LeftPanel/Components/ToolBar/style.ts","../../src/page/App/Module/LeftPanel/Components/ToolBar/index.tsx","../../src/page/App/Module/LeftPanel/style.ts","../../src/page/App/Module/LeftPanel/index.tsx","../../src/page/App/index.tsx"],"sourcesContent":["import { builderRequest } from \"@illa-public/illa-net\"\nimport { getCurrentTeamID } from \"../utils/team\"\n\ninterface IFetchWsURLResponse {\n  wsURL: string\n}\n\nexport const fetchDashboardWsURL = async (abortSingle?: AbortSignal) => {\n  return await builderRequest<IFetchWsURLResponse>(\n    {\n      url: `/room/websocketConnection/dashboard`,\n      method: \"GET\",\n      signal: abortSingle,\n    },\n    {\n      teamID: getCurrentTeamID(),\n    },\n  )\n}\n\nexport const fetchAppTextWsUrl = async (\n  roomID: string,\n  abortSingle?: AbortSignal,\n) => {\n  return await builderRequest<IFetchWsURLResponse>(\n    {\n      url: `/room/websocketConnection/app/${roomID}`,\n      method: \"GET\",\n      signal: abortSingle,\n    },\n    {\n      teamID: getCurrentTeamID(),\n    },\n  )\n}\n\nexport const fetchAppBinaryWsUrl = async (\n  roomID: string,\n  abortSingle?: AbortSignal,\n) => {\n  return await builderRequest<IFetchWsURLResponse>(\n    {\n      url: `/room/binaryWebsocketConnection/app/${roomID}`,\n      method: \"GET\",\n      signal: abortSingle,\n    },\n    {\n      teamID: getCurrentTeamID(),\n    },\n  )\n}\n","import IconHotSpot from \"@illa-public/icon-hot-spot\"\nimport { ILLA_MIXPANEL_EVENT_TYPE } from \"@illa-public/mixpanel-utils\"\nimport { t } from \"i18next\"\nimport { FC, memo, useMemo } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { Badge, BugIcon, Trigger, getColor } from \"@illa-design/react\"\nimport { isOpenDebugger } from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { getExecutionError } from \"@/redux/currentApp/executionTree/executionSelector\"\nimport { trackInEditor } from \"@/utils/mixpanelHelper\"\n\nconst DebugButton: FC = () => {\n  const debuggerData = useSelector(getExecutionError)\n  const debuggerVisible = useSelector(isOpenDebugger)\n\n  const debugMessageNumber = useMemo(() => {\n    if (debuggerData) {\n      let count = 0\n      Object.keys(debuggerData).forEach((errors) => {\n        if (Array.isArray(debuggerData[errors])) {\n          count += debuggerData[errors].length\n        }\n      })\n      return count\n    }\n    return undefined\n  }, [debuggerData])\n  const dispatch = useDispatch()\n\n  const handleClickDebuggerIcon = () => {\n    trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n      element: \"debug\",\n      parameter2: debugMessageNumber ?? 0,\n    })\n    dispatch(configActions.updateDebuggerVisible(!debuggerVisible))\n  }\n\n  return (\n    <Trigger position=\"right\" content={t(\"flow.editor.app.tooltips.debug\")}>\n      <IconHotSpot onClick={handleClickDebuggerIcon}>\n        <Badge count={debugMessageNumber}>\n          <BugIcon color={getColor(\"grayBlue\", \"02\")} />\n        </Badge>\n      </IconHotSpot>\n    </Trigger>\n  )\n}\n\nexport default memo(DebugButton)\n","import IconHotSpot from \"@illa-public/icon-hot-spot\"\nimport { useUpgradeModal } from \"@illa-public/upgrade-modal\"\nimport { getCurrentTeamInfo, getPlanUtils } from \"@illa-public/user-data\"\nimport { canUseUpgradeFeature } from \"@illa-public/user-role-utils\"\nimport { t } from \"i18next\"\nimport { FC, memo } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { useNavigate, useParams } from \"react-router-dom\"\nimport { HistoryIcon, Trigger, getColor } from \"@illa-design/react\"\n\nconst HistoryButton: FC = () => {\n  const { teamIdentifier, appId } = useParams()\n\n  const teamInfo = useSelector(getCurrentTeamInfo)\n\n  const navigate = useNavigate()\n  const upgradeModal = useUpgradeModal()\n\n  const canUseBillingFeature = canUseUpgradeFeature(\n    teamInfo?.myRole,\n    getPlanUtils(teamInfo),\n    teamInfo?.totalTeamLicense?.teamLicensePurchased,\n    teamInfo?.totalTeamLicense?.teamLicenseAllPaid,\n  )\n\n  const handleOpenHistory = () => {\n    if (!canUseBillingFeature) {\n      upgradeModal({\n        modalType: \"upgrade\",\n        from: \"app_edit_more_history\",\n      })\n    } else {\n      navigate(`/${teamIdentifier}/appHistory/${appId}`)\n    }\n  }\n\n  return (\n    <Trigger\n      position=\"right\"\n      content={t(\"flow.editor.app.tooltips.edit_history\")}\n    >\n      <IconHotSpot onClick={handleOpenHistory}>\n        <HistoryIcon color={getColor(\"grayBlue\", \"02\")} />\n      </IconHotSpot>\n    </Trigger>\n  )\n}\n\nexport default memo(HistoryButton)\n","import IconHotSpot from \"@illa-public/icon-hot-spot\"\nimport { t } from \"i18next\"\nimport { FC, memo, useEffect, useState } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { QuestionCircleIcon, Trigger, getColor } from \"@illa-design/react\"\nimport MissingResourceModal from \"@/page/App/components/MissingRosourceModal\"\nimport { getHasMissingResourceAction } from \"@/redux/currentApp/action/actionSelector\"\n\nconst MissingResourceButton: FC = () => {\n  const hasMissingResources = useSelector(getHasMissingResourceAction)\n\n  const [shownMissingResource, setShownMissingResource] =\n    useState(hasMissingResources)\n  const [shownTooltip, setShownTooltip] = useState(false)\n\n  useEffect(() => {\n    setShownMissingResource(hasMissingResources)\n  }, [hasMissingResources])\n\n  const handleClickMissingResourceIcon = () => {\n    setShownMissingResource(true)\n  }\n\n  const handleCloseModal = (shown: boolean) => {\n    if (shown) {\n      setShownMissingResource(true)\n    } else {\n      setShownMissingResource(false)\n      setShownTooltip(true)\n      setTimeout(() => {\n        setShownTooltip(false)\n      }, 1500)\n    }\n  }\n\n  return (\n    hasMissingResources && (\n      <>\n        <Trigger\n          content={t(\"flow.editor.flow.tooltips.missing_resources\")}\n          position=\"right\"\n          popupVisible={shownTooltip}\n          onVisibleChange={setShownTooltip}\n        >\n          <IconHotSpot onClick={handleClickMissingResourceIcon}>\n            <QuestionCircleIcon color={getColor(\"orange\", \"03\")} />\n          </IconHotSpot>\n        </Trigger>\n        <MissingResourceModal\n          shown={shownMissingResource}\n          changeShown={handleCloseModal}\n        />\n      </>\n    )\n  )\n}\n\nexport default memo(MissingResourceButton)\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const rowCenter = css`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nexport const spaceBetweenStyle = css`\n  ${rowCenter};\n  justify-content: space-between;\n  gap: 8px;\n`\n\nexport const keyTextStyle = css`\n  color: ${getColor(\"grayBlue\", \"04\")};\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 22px;\n  text-transform: capitalize;\n`\n\nexport const upgradeStyle = css`\n  ${rowCenter};\n  gap: 8px;\n`\n","import { fetchCopyApp } from \"@/services/apps\"\n\nconst APP_NAME_MAX_LENGTH = 128\nconst COPY_SUFFIX = \" Copy\"\nconst trimmedLength = APP_NAME_MAX_LENGTH - COPY_SUFFIX.length\nexport const duplicateApp = (appId: string, appName?: string) => {\n  const newAppName = `${(appName || \"\").slice(0, trimmedLength)}${COPY_SUFFIX}`\n  return fetchCopyApp(appId, newAppName)\n}\n","import IconHotSpot from \"@illa-public/icon-hot-spot\"\nimport { isILLAAPiError } from \"@illa-public/illa-net\"\nimport { ILLA_MIXPANEL_EVENT_TYPE } from \"@illa-public/mixpanel-utils\"\nimport { useUpgradeModal } from \"@illa-public/upgrade-modal\"\nimport { getCurrentTeamInfo, getPlanUtils } from \"@illa-public/user-data\"\nimport { canUseUpgradeFeature } from \"@illa-public/user-role-utils\"\nimport { isCloudVersion } from \"@illa-public/utils\"\nimport { FC, MouseEvent, memo, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useNavigate, useParams } from \"react-router-dom\"\nimport {\n  DropList,\n  DropListItem,\n  Dropdown,\n  MoreIcon,\n  Switch,\n  getColor,\n  useMessage,\n} from \"@illa-design/react\"\nimport { UpgradeTag } from \"@/components/UpgradeTag\"\nimport {\n  getAppInfo,\n  getCurrentAppWaterMarkConfig,\n} from \"@/redux/currentApp/appInfo/appInfoSelector\"\nimport { appInfoActions } from \"@/redux/currentApp/appInfo/appInfoSlice\"\nimport { updateWaterMarkConfig } from \"@/services/apps\"\nimport { takeSnapShot } from \"@/services/history\"\nimport { trackInEditor } from \"@/utils/mixpanelHelper\"\nimport { isMAC } from \"@/utils/userAgent\"\nimport { keyTextStyle, spaceBetweenStyle, upgradeStyle } from \"./style\"\nimport { duplicateApp } from \"./utils\"\n\nconst MoreActionButton: FC = () => {\n  const { teamIdentifier, appId } = useParams()\n  const [duplicateLoading, setDuplicateLoading] = useState(false)\n\n  const { t } = useTranslation()\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n  const upgradeModal = useUpgradeModal()\n\n  const appInfo = useSelector(getAppInfo)\n  const teamInfo = useSelector(getCurrentTeamInfo)\n  const waterMark = useSelector(getCurrentAppWaterMarkConfig)\n\n  const message = useMessage()\n\n  const canUseBillingFeature = canUseUpgradeFeature(\n    teamInfo?.myRole,\n    getPlanUtils(teamInfo),\n    teamInfo?.totalTeamLicense?.teamLicensePurchased,\n    teamInfo?.totalTeamLicense?.teamLicenseAllPaid,\n  )\n\n  const handleDropdownVisibleChange = (visible: boolean) => {\n    if (visible) {\n      trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.SHOW, {\n        element: \"app_duplicate\",\n        parameter5: appId,\n      })\n    }\n  }\n\n  const handleDuplicateApp = async () => {\n    trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n      element: \"app_duplicate\",\n      parameter5: appId,\n    })\n    if (duplicateLoading) return\n    setDuplicateLoading(true)\n    try {\n      const response = await duplicateApp(appInfo.appId, appInfo.appName)\n      navigate(`/${teamIdentifier}/app/${response.data.appId}`)\n    } catch (error) {\n      if (isILLAAPiError(error)) {\n        message.error({ content: t(\"dashboard.app.duplicate_fail\") })\n      } else {\n        message.error({ content: t(\"network_error\") })\n      }\n    } finally {\n      setDuplicateLoading(false)\n    }\n  }\n\n  const handleSaveToHistory = async () => {\n    if (appId) {\n      try {\n        await takeSnapShot(appId)\n        message.success({ content: t(\"editor.history.message.suc.save\") })\n      } catch (error) {\n        if (isILLAAPiError(error)) {\n          message.error({ content: t(\"editor.history.message.fail.save\") })\n        } else {\n          message.error({ content: t(\"network_error\") })\n        }\n      }\n    }\n  }\n\n  const handleWaterMarkChange = async (value: boolean, event: MouseEvent) => {\n    if (appId) {\n      event.stopPropagation()\n      const res = await updateWaterMarkConfig(!value, appId)\n      dispatch(appInfoActions.updateAppInfoReducer(res.data))\n    }\n  }\n\n  const checkUpgrade = () => {\n    if (!canUseBillingFeature) {\n      upgradeModal({\n        modalType: \"upgrade\",\n        from: \"app_edit_more_watermark\",\n      })\n    }\n  }\n\n  return (\n    <Dropdown\n      position=\"bottom-end\"\n      trigger=\"click\"\n      triggerProps={{ closeDelay: 0, openDelay: 0 }}\n      onVisibleChange={handleDropdownVisibleChange}\n      dropList={\n        <DropList>\n          <DropListItem\n            key=\"duplicate\"\n            value=\"duplicate\"\n            title={t(\"duplicate\")}\n            onClick={handleDuplicateApp}\n          />\n          {isCloudVersion && (\n            <>\n              {canUseBillingFeature && (\n                <DropListItem\n                  key=\"saveHistory\"\n                  value=\"saveHistory\"\n                  title={\n                    <div css={spaceBetweenStyle}>\n                      <span>{t(\"editor.history.save\")}</span>\n                      <span css={keyTextStyle}>\n                        {isMAC()\n                          ? t(\"editor.history.save_keyboard.cmds\")\n                          : t(\"editor.history.save_keyboard.ctrls\")}\n                      </span>\n                    </div>\n                  }\n                  onClick={handleSaveToHistory}\n                />\n              )}\n              <DropListItem\n                key=\"configWaterMark\"\n                value=\"configWaterMark\"\n                title={\n                  <span css={upgradeStyle}>\n                    {t(\"billing.advanced.feature\")}\n                    {canUseBillingFeature ? (\n                      <Switch\n                        checked={!waterMark}\n                        onChange={handleWaterMarkChange}\n                      />\n                    ) : (\n                      <UpgradeTag />\n                    )}\n                  </span>\n                }\n                onClick={checkUpgrade}\n              />\n            </>\n          )}\n        </DropList>\n      }\n    >\n      <IconHotSpot>\n        <MoreIcon color={getColor(\"grayBlue\", \"02\")} />\n      </IconHotSpot>\n    </Dropdown>\n  )\n}\n\nexport default memo(MoreActionButton)\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const ToolBarContainerStyle = css`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  border-right: 1px solid ${getColor(\"grayBlue\", \"08\")};\n  background-color: white;\n  padding: 12px;\n  gap: 24px;\n`\n","import { FC, memo } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { getIsILLAGuideMode } from \"@/redux/config/configSelector\"\nimport DebugButton from \"../DebugButton\"\nimport HistoryButton from \"../HistoryButton\"\nimport MissingResourceButton from \"../MissingResourceButton\"\nimport MoreActionButton from \"../MoreActionButton\"\nimport { ToolBarContainerStyle } from \"./style\"\n\nconst ToolBar: FC = () => {\n  const isGuideMode = useSelector(getIsILLAGuideMode)\n\n  return (\n    <div css={ToolBarContainerStyle}>\n      <MissingResourceButton />\n      <DebugButton />\n      {!isGuideMode && <HistoryButton />}\n      {!isGuideMode && <MoreActionButton />}\n    </div>\n  )\n}\n\nexport default memo(ToolBar)\n","import { css } from \"@emotion/react\"\n\nexport const leftPanelContainerStyle = css`\n  display: flex;\n  height: 100%;\n  flex: none;\n`\n","import { FC, memo } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { isOpenLeftPanel } from \"@/redux/config/configSelector\"\nimport { DataWorkspace } from \"../DataWorkspace\"\nimport ToolBar from \"./Components/ToolBar\"\nimport { leftPanelContainerStyle } from \"./style\"\n\nconst LeftPanel: FC = () => {\n  const showLeftPanel = useSelector(isOpenLeftPanel)\n\n  return (\n    <div css={leftPanelContainerStyle}>\n      <ToolBar />\n      {showLeftPanel && <DataWorkspace />}\n    </div>\n  )\n}\n\nexport default memo(LeftPanel)\n","import {\n  ILLA_MIXPANEL_BUILDER_PAGE_NAME,\n  ILLA_MIXPANEL_EVENT_TYPE,\n} from \"@illa-public/mixpanel-utils\"\nimport {\n  getCurrentTeamInfo,\n  getCurrentUser,\n  getPlanUtils,\n} from \"@illa-public/user-data\"\nimport { canManage } from \"@illa-public/user-role-utils\"\nimport { ACTION_MANAGE, ATTRIBUTE_GROUP } from \"@illa-public/user-role-utils\"\nimport { Unsubscribe } from \"@reduxjs/toolkit\"\nimport { motion, useAnimation } from \"framer-motion\"\nimport { FC, MouseEvent, useCallback, useEffect } from \"react\"\nimport { Helmet } from \"react-helmet-async\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useBeforeUnload, useParams } from \"react-router-dom\"\nimport { TriggerProvider, WarningCircleIcon } from \"@illa-design/react\"\nimport { Connection, fixedWsURL } from \"@/api/ws\"\nimport {\n  ILLA_WEBSOCKET_CONTEXT,\n  ILLA_WEBSOCKET_STATUS,\n} from \"@/api/ws/interface\"\nimport { useInitBuilderApp } from \"@/hooks/useInitApp\"\nimport { ActionEditor } from \"@/page/App/Module/ActionEditor\"\nimport { CanvasPanel } from \"@/page/App/Module/CanvasPanel\"\nimport { ComponentsManager } from \"@/page/App/Module/ComponentManager\"\nimport { AppLoading } from \"@/page/App/components/AppLoading\"\nimport { Debugger } from \"@/page/App/components/Debugger\"\nimport { setupConfigListeners } from \"@/redux/config/configListener\"\nimport {\n  getAppWSStatus,\n  getIsOnline,\n  isOpenBottomPanel,\n  isOpenDebugger,\n  isOpenRightPanel,\n} from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { setupActionListeners } from \"@/redux/currentApp/action/actionListener\"\nimport { getAppInfo } from \"@/redux/currentApp/appInfo/appInfoSelector\"\nimport { collaboratorsActions } from \"@/redux/currentApp/collaborators/collaboratorsSlice\"\nimport { setupComponentsListeners } from \"@/redux/currentApp/components/componentsListener\"\nimport { setupExecutionListeners } from \"@/redux/currentApp/executionTree/executionListener\"\nimport { setupLayoutInfoListeners } from \"@/redux/currentApp/layoutInfo/layoutInfoListener\"\nimport { fetchAppBinaryWsUrl, fetchAppTextWsUrl } from \"@/services/public\"\nimport { startAppListening } from \"@/store\"\nimport { MediaSourceLoadProvider } from \"@/utils/mediaSourceLoad\"\nimport {\n  track,\n  trackPageDurationEnd,\n  trackPageDurationStart,\n} from \"@/utils/mixpanelHelper\"\nimport { Shortcut } from \"@/utils/shortcut\"\nimport LeftPanel from \"./Module/LeftPanel\"\nimport { PageNavBar } from \"./Module/PageNavBar\"\nimport { useResize } from \"./components/ScaleSquare/components/ResizingAndDragContainer/ResizeHandler/hooks\"\nimport {\n  bottomPanelStyle,\n  centerPanelStyle,\n  contentStyle,\n  editorContainerStyle,\n  messageWrapperStyle,\n  middlePanelStyle,\n  modalStyle,\n  navbarStyle,\n  waringIconStyle,\n} from \"./style\"\n\nexport const Editor: FC = () => {\n  const dispatch = useDispatch()\n  const { t } = useTranslation()\n  const { appId } = useParams()\n  const controls = useAnimation()\n\n  const currentUser = useSelector(getCurrentUser)\n  const teamInfo = useSelector(getCurrentTeamInfo)\n  const wsStatus = useSelector(getAppWSStatus)\n\n  const currentUserRole = teamInfo?.myRole\n\n  const handleLeaveRoom = useCallback(() => {\n    Connection.leaveRoom(\"app\", appId ?? \"\")\n  }, [appId])\n\n  // check if user can manage the app\n  if (currentUserRole) {\n    const canEditApp = canManage(\n      currentUserRole,\n      ATTRIBUTE_GROUP.APP,\n      getPlanUtils(teamInfo),\n      ACTION_MANAGE.EDIT_APP,\n    )\n    if (!canEditApp) {\n      throw new Error(\"You don't have permission to edit this app\")\n    }\n  }\n  useEffect(() => {\n    const abortController = new AbortController()\n    if (currentUser != null && currentUser.userID != \"\" && appId) {\n      Promise.all([\n        fetchAppTextWsUrl(appId, abortController.signal),\n        fetchAppBinaryWsUrl(appId, abortController.signal),\n      ])\n        .then((res) => {\n          Connection.enterAppRoom(\n            fixedWsURL(res[0].data.wsURL),\n            fixedWsURL(res[1].data.wsURL),\n            appId as string,\n          )\n        })\n        .catch(() => {})\n      window.addEventListener(\"beforeunload\", handleLeaveRoom)\n    }\n    return () => {\n      abortController.abort()\n      handleLeaveRoom()\n      dispatch(\n        collaboratorsActions.setInRoomUsers({\n          inRoomUsers: [],\n        }),\n      )\n      dispatch(\n        configActions.updateWSStatusReducer({\n          context: ILLA_WEBSOCKET_CONTEXT.APP,\n          wsStatus: ILLA_WEBSOCKET_STATUS.CLOSED,\n        }),\n      )\n      window.removeEventListener(\"beforeunload\", handleLeaveRoom)\n    }\n  }, [currentUser, appId, handleLeaveRoom, dispatch])\n\n  useEffect(() => {\n    const subscriptions: Unsubscribe[] = [\n      setupExecutionListeners(startAppListening),\n      setupLayoutInfoListeners(startAppListening),\n      setupComponentsListeners(startAppListening),\n      setupActionListeners(startAppListening),\n      setupConfigListeners(startAppListening),\n    ]\n    return () => subscriptions.forEach((unsubscribe) => unsubscribe())\n  }, [])\n\n  const showRightPanel = useSelector(isOpenRightPanel)\n  const showBottomPanel = useSelector(isOpenBottomPanel)\n  const showDebugger = useSelector(isOpenDebugger)\n  const isOnline = useSelector(getIsOnline)\n\n  // init app\n  const { loadingState } = useInitBuilderApp(\"edit\")\n\n  const handleMouseDownOnModal = useCallback(\n    (e: MouseEvent<HTMLDivElement>) => {\n      e.stopPropagation()\n      controls\n        .start({\n          scale: 1.05,\n          transition: {\n            duration: 0.2,\n          },\n        })\n        .then(() => {\n          controls.start({\n            scale: 1,\n            transition: {\n              duration: 0.2,\n            },\n          })\n        })\n    },\n    [controls],\n  )\n\n  useEffect(() => {\n    track(\n      ILLA_MIXPANEL_EVENT_TYPE.VISIT,\n      ILLA_MIXPANEL_BUILDER_PAGE_NAME.EDITOR,\n    )\n    trackPageDurationStart()\n    return () => {\n      trackPageDurationEnd(ILLA_MIXPANEL_BUILDER_PAGE_NAME.EDITOR)\n    }\n  }, [])\n\n  useBeforeUnload(() => {\n    trackPageDurationEnd(ILLA_MIXPANEL_BUILDER_PAGE_NAME.EDITOR)\n  })\n\n  const [, resizeDropRef] = useResize()\n\n  const appInfo = useSelector(getAppInfo)\n\n  const combineLoadingState =\n    loadingState ||\n    wsStatus === ILLA_WEBSOCKET_STATUS.INIT ||\n    wsStatus === ILLA_WEBSOCKET_STATUS.CONNECTING\n\n  return (\n    <>\n      <Helmet>\n        <title>{appInfo.appName}</title>\n      </Helmet>\n      <div css={editorContainerStyle} ref={resizeDropRef}>\n        {combineLoadingState && <AppLoading />}\n        {!combineLoadingState && (\n          <Shortcut>\n            <MediaSourceLoadProvider>\n              <TriggerProvider renderInBody zIndex={10}>\n                <PageNavBar css={navbarStyle} />\n              </TriggerProvider>\n              <div css={contentStyle}>\n                <LeftPanel />\n                <div css={middlePanelStyle}>\n                  <TriggerProvider renderInBody zIndex={10}>\n                    <CanvasPanel css={centerPanelStyle} />\n                  </TriggerProvider>\n                  <TriggerProvider renderInBody zIndex={10}>\n                    {showBottomPanel && !showDebugger ? <ActionEditor /> : null}\n                  </TriggerProvider>\n                  {showDebugger && <Debugger css={bottomPanelStyle} />}\n                </div>\n                {showRightPanel && (\n                  <TriggerProvider renderInBody zIndex={10}>\n                    <ComponentsManager />\n                  </TriggerProvider>\n                )}\n              </div>\n              {!isOnline && (\n                <div css={modalStyle} onMouseDown={handleMouseDownOnModal}>\n                  <motion.div css={messageWrapperStyle} animate={controls}>\n                    <WarningCircleIcon css={waringIconStyle} />\n                    {wsStatus === ILLA_WEBSOCKET_STATUS.LOCKING\n                      ? t(\"editor.history.message.version_change\")\n                      : t(\"not_online_tips\")}\n                  </motion.div>\n                </div>\n              )}\n            </MediaSourceLoadProvider>\n          </Shortcut>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default Editor\n\nEditor.displayName = \"Editor\"\n"],"names":["fetchAppTextWsUrl","roomID","abortSingle","builderRequest","getCurrentTeamID","fetchAppBinaryWsUrl","DebugButton","debuggerData","useSelector","getExecutionError","debuggerVisible","isOpenDebugger","debugMessageNumber","useMemo","count","errors","dispatch","useDispatch","handleClickDebuggerIcon","trackInEditor","ILLA_MIXPANEL_EVENT_TYPE","configActions","jsx","Trigger","t","IconHotSpot","Badge","BugIcon","getColor","memo","HistoryButton","teamIdentifier","appId","useParams","teamInfo","getCurrentTeamInfo","navigate","useNavigate","upgradeModal","useUpgradeModal","canUseBillingFeature","canUseUpgradeFeature","getPlanUtils","_a","_b","handleOpenHistory","HistoryIcon","MissingResourceButton","hasMissingResources","getHasMissingResourceAction","shownMissingResource","setShownMissingResource","useState","shownTooltip","setShownTooltip","useEffect","handleClickMissingResourceIcon","handleCloseModal","shown","jsxs","Fragment","QuestionCircleIcon","MissingResourceModal","rowCenter","css","APP_NAME_MAX_LENGTH","COPY_SUFFIX","trimmedLength","duplicateApp","appName","newAppName","fetchCopyApp","MoreActionButton","duplicateLoading","setDuplicateLoading","useTranslation","appInfo","getAppInfo","getCurrentAppWaterMarkConfig","message","useMessage","handleDropdownVisibleChange","visible","handleDuplicateApp","response","error","isILLAAPiError","Dropdown","DropList","DropListItem","isCloudVersion","MoreIcon","ToolBarContainerStyle","ToolBar","isGuideMode","getIsILLAGuideMode","leftPanelContainerStyle","LeftPanel","showLeftPanel","isOpenLeftPanel","DataWorkspace","Editor","controls","useAnimation","currentUser","getCurrentUser","wsStatus","getAppWSStatus","currentUserRole","handleLeaveRoom","useCallback","Connection","canManage","ATTRIBUTE_GROUP","ACTION_MANAGE","abortController","res","fixedWsURL","collaboratorsActions","ILLA_WEBSOCKET_CONTEXT","ILLA_WEBSOCKET_STATUS","subscriptions","setupExecutionListeners","startAppListening","setupLayoutInfoListeners","setupComponentsListeners","setupActionListeners","setupConfigListeners","unsubscribe","showRightPanel","isOpenRightPanel","showBottomPanel","isOpenBottomPanel","showDebugger","isOnline","getIsOnline","loadingState","useInitBuilderApp","handleMouseDownOnModal","e","track","ILLA_MIXPANEL_BUILDER_PAGE_NAME","trackPageDurationStart","trackPageDurationEnd","useBeforeUnload","resizeDropRef","useResize","combineLoadingState","Helmet","editorContainerStyle","AppLoading","Shortcut","MediaSourceLoadProvider","TriggerProvider","PageNavBar","navbarStyle","contentStyle","middlePanelStyle","CanvasPanel","centerPanelStyle","ActionEditor","Debugger","bottomPanelStyle","ComponentsManager","modalStyle","motion","messageWrapperStyle","WarningCircleIcon","waringIconStyle"],"mappings":"0rDAoBa,MAAAA,GAAoB,MAC/BC,EACAC,IAEO,MAAMC,EACX,CACE,IAAK,iCAAiCF,CAAM,GAC5C,OAAQ,MACR,OAAQC,CACV,EACA,CACE,OAAQE,EAAiB,CAC3B,CAAA,EAISC,GAAsB,MACjCJ,EACAC,IAEO,MAAMC,EACX,CACE,IAAK,uCAAuCF,CAAM,GAClD,OAAQ,MACR,OAAQC,CACV,EACA,CACE,OAAQE,EAAiB,CAC3B,CAAA,ECrCEE,GAAkB,IAAM,CACtB,MAAAC,EAAeC,EAAYC,EAAiB,EAC5CC,EAAkBF,EAAYG,CAAc,EAE5CC,EAAqBC,EAAAA,QAAQ,IAAM,CACvC,GAAIN,EAAc,CAChB,IAAIO,EAAQ,EACZ,cAAO,KAAKP,CAAY,EAAE,QAASQ,GAAW,CACxC,MAAM,QAAQR,EAAaQ,CAAM,CAAC,IAC3BD,GAAAP,EAAaQ,CAAM,EAAE,OAChC,CACD,EACMD,CACT,CACO,EACN,CAACP,CAAY,CAAC,EACXS,EAAWC,IAEXC,EAA0B,IAAM,CACpCC,EAAcC,EAAyB,MAAO,CAC5C,QAAS,QACT,WAAYR,GAAsB,CAAA,CACnC,EACDI,EAASK,EAAc,sBAAsB,CAACX,CAAe,CAAC,CAAA,EAI9D,OAAAY,EAACC,EAAQ,CAAA,SAAS,QAAQ,QAASC,EAAE,gCAAgC,EACnE,SAACF,EAAAG,EAAA,CAAY,QAASP,EACpB,WAACQ,EAAM,CAAA,MAAOd,EACZ,SAAAU,EAACK,GAAQ,CAAA,MAAOC,EAAS,WAAY,IAAI,CAAA,CAAG,CAC9C,CAAA,CAAA,CACF,CACF,CAAA,CAEJ,EAEeC,GAAAA,EAAAA,KAAKvB,EAAW,ECtCzBwB,GAAoB,IAAM,SAC9B,KAAM,CAAE,eAAAC,EAAgB,MAAAC,CAAM,EAAIC,EAAU,EAEtCC,EAAW1B,EAAY2B,CAAkB,EAEzCC,EAAWC,IACXC,EAAeC,KAEfC,EAAuBC,EAC3BP,GAAA,YAAAA,EAAU,OACVQ,EAAaR,CAAQ,GACrBS,EAAAT,GAAA,YAAAA,EAAU,mBAAV,YAAAS,EAA4B,sBAC5BC,EAAAV,GAAA,YAAAA,EAAU,mBAAV,YAAAU,EAA4B,kBAAA,EAGxBC,EAAoB,IAAM,CACzBL,EAMHJ,EAAS,IAAIL,CAAc,eAAeC,CAAK,EAAE,EALpCM,EAAA,CACX,UAAW,UACX,KAAM,uBAAA,CACP,CAGH,EAIA,OAAAhB,EAACC,EAAA,CACC,SAAS,QACT,QAASC,EAAE,uCAAuC,EAElD,SAAAF,EAACG,EAAY,CAAA,QAASoB,EACpB,SAAAvB,EAACwB,GAAY,CAAA,MAAOlB,EAAS,WAAY,IAAI,CAAG,CAAA,EAClD,CAAA,CAAA,CAGN,EAEeC,GAAAA,EAAAA,KAAKC,EAAa,ECxC3BiB,GAA4B,IAAM,CAChC,MAAAC,EAAsBxC,EAAYyC,EAA2B,EAE7D,CAACC,EAAsBC,CAAuB,EAClDC,WAASJ,CAAmB,EACxB,CAACK,EAAcC,CAAe,EAAIF,WAAS,EAAK,EAEtDG,EAAAA,UAAU,IAAM,CACdJ,EAAwBH,CAAmB,CAAA,EAC1C,CAACA,CAAmB,CAAC,EAExB,MAAMQ,EAAiC,IAAM,CAC3CL,EAAwB,EAAI,CAAA,EAGxBM,EAAoBC,GAAmB,CACvCA,EACFP,EAAwB,EAAI,GAE5BA,EAAwB,EAAK,EAC7BG,EAAgB,EAAI,EACpB,WAAW,IAAM,CACfA,EAAgB,EAAK,GACpB,IAAI,EACT,EAGF,OACEN,GAEIW,EAAAC,EAAA,CAAA,SAAA,CAAAtC,EAACC,EAAA,CACC,QAASC,EAAE,6CAA6C,EACxD,SAAS,QACT,aAAc6B,EACd,gBAAiBC,EAEjB,SAAAhC,EAACG,EAAY,CAAA,QAAS+B,EACpB,SAAAlC,EAACuC,GAAmB,CAAA,MAAOjC,EAAS,SAAU,IAAI,CAAG,CAAA,EACvD,CAAA,CACF,EACAN,EAACwC,GAAA,CACC,MAAOZ,EACP,YAAaO,CAAA,CACf,CACF,CAAA,CAAA,CAGN,EAEe5B,GAAAA,EAAAA,KAAKkB,EAAqB,ECtD5BgB,EAAYC;AAAA;AAAA;AAAA;AAAA,EAMQA;AAAA,IAC7BD,CAAS;AAAA;AAAA;AAAA,EAKeC;AAAA,WACjBpC,EAAS,WAAY,IAAI,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,EAOToC;AAAA,IACxBD,CAAS;AAAA;AAAA,ECtBb,MAAME,GAAsB,IACtBC,EAAc,QACdC,GAAgBF,GAAsBC,EAAY,OAC3CE,GAAe,CAACpC,EAAeqC,IAAqB,CACzD,MAAAC,EAAa,IAAID,GAAW,IAAI,MAAM,EAAGF,EAAa,CAAC,GAAGD,CAAW,GACpE,OAAAK,GAAavC,EAAOsC,CAAU,CACvC,ECyBME,GAAuB,IAAM,SACjC,KAAM,CAAE,eAAAzC,EAAgB,MAAAC,CAAM,EAAIC,EAAU,EACtC,CAACwC,EAAkBC,CAAmB,EAAItB,WAAS,EAAK,EAExD,CAAE,EAAA5B,GAAMmD,IACRvC,EAAWC,IACApB,EAAY,EAGvB,MAAA2D,EAAUpE,EAAYqE,CAAU,EAChC3C,EAAW1B,EAAY2B,CAAkB,EAC7B3B,EAAYsE,EAA4B,EAE1D,MAAMC,EAAUC,KAEavC,EAC3BP,GAAA,YAAAA,EAAU,OACVQ,EAAaR,CAAQ,GACrBS,EAAAT,GAAA,YAAAA,EAAU,mBAAV,YAAAS,EAA4B,sBAC5BC,EAAAV,GAAA,YAAAA,EAAU,mBAAV,YAAAU,EAA4B,kBAC9B,EAEM,MAAAqC,EAA+BC,GAAqB,CACpDA,GACF/D,EAAcC,EAAyB,KAAM,CAC3C,QAAS,gBACT,WAAYY,CAAA,CACb,CACH,EAGImD,EAAqB,SAAY,CAKjC,GAJJhE,EAAcC,EAAyB,MAAO,CAC5C,QAAS,gBACT,WAAYY,CAAA,CACb,EACG,CAAAyC,EACJ,CAAAC,EAAoB,EAAI,EACpB,GAAA,CACF,MAAMU,EAAW,MAAMhB,GAAaQ,EAAQ,MAAOA,EAAQ,OAAO,EAClExC,EAAS,IAAIL,CAAc,QAAQqD,EAAS,KAAK,KAAK,EAAE,QACjDC,EAAO,CACVC,GAAeD,CAAK,EACtBN,EAAQ,MAAM,CAAE,QAASvD,EAAE,8BAA8B,EAAG,EAE5DuD,EAAQ,MAAM,CAAE,QAASvD,EAAE,eAAe,EAAG,CAC/C,QACA,CACAkD,EAAoB,EAAK,CAC3B,EAAA,EAoCA,OAAApD,EAACiE,GAAA,CACC,SAAS,aACT,QAAQ,QACR,aAAc,CAAE,WAAY,EAAG,UAAW,CAAE,EAC5C,gBAAiBN,EACjB,WACGO,GACC,CAAA,SAAA,CAAAlE,EAACmE,GAAA,CAEC,MAAM,YACN,MAAOjE,EAAE,WAAW,EACpB,QAAS2D,CAAA,EAHL,WAIN,EACCO,EAqCC,EAEJ,EAGF,SAAApE,EAACG,GACC,SAACH,EAAAqE,GAAA,CAAS,MAAO/D,EAAS,WAAY,IAAI,CAAA,CAAG,CAC/C,CAAA,CAAA,CAAA,CAGN,EAEeC,GAAAA,EAAAA,KAAK2C,EAAgB,ECjLvBoB,GAAwB5B;AAAA;AAAA;AAAA;AAAA,4BAITpC,EAAS,WAAY,IAAI,CAAC;AAAA;AAAA;AAAA;AAAA,ECEhDiE,GAAc,IAAM,CAClB,MAAAC,EAActF,EAAYuF,EAAkB,EAGhD,OAAApC,EAAC,MAAI,CAAA,IAAKiC,GACR,SAAA,CAAAtE,EAACyB,GAAsB,EAAA,IACtBzC,GAAY,EAAA,EACZ,CAACwF,GAAexE,EAACQ,GAAc,EAAA,EAC/B,CAACgE,GAAexE,EAACkD,GAAiB,EAAA,CACrC,CAAA,CAAA,CAEJ,EAEe3C,GAAAA,EAAAA,KAAKgE,EAAO,ECpBdG,GAA0BhC;AAAA;AAAA;AAAA;AAAA,ECKjCiC,GAAgB,IAAM,CACpB,MAAAC,EAAgB1F,EAAY2F,EAAe,EAG/C,OAAAxC,EAAC,MAAI,CAAA,IAAKqC,GACR,SAAA,CAAA1E,EAACuE,GAAQ,EAAA,EACRK,KAAkBE,GAAc,EAAA,CACnC,CAAA,CAAA,CAEJ,EAEevE,GAAAA,EAAAA,KAAKoE,EAAS,ECmDhBI,GAAa,IAAM,CAC9B,MAAMrF,EAAWC,IACX,CAAE,EAAAO,GAAMmD,IACR,CAAE,MAAA3C,GAAUC,IACZqE,EAAWC,KAEXC,EAAchG,EAAYiG,EAAc,EACxCvE,EAAW1B,EAAY2B,CAAkB,EACzCuE,EAAWlG,EAAYmG,EAAc,EAErCC,EAAkB1E,GAAA,YAAAA,EAAU,OAE5B2E,EAAkBC,EAAAA,YAAY,IAAM,CAC7BC,EAAA,UAAU,MAAO/E,GAAS,EAAE,CAAA,EACtC,CAACA,CAAK,CAAC,EAGV,GAAI4E,GAOE,CANeI,GACjBJ,EACAK,GAAgB,IAChBvE,EAAaR,CAAQ,EACrBgF,GAAc,QAAA,EAGR,MAAA,IAAI,MAAM,4CAA4C,EAGhE3D,EAAAA,UAAU,IAAM,CACR,MAAA4D,EAAkB,IAAI,gBAC5B,OAAIX,GAAe,MAAQA,EAAY,QAAU,IAAMxE,IACrD,QAAQ,IAAI,CACVhC,GAAkBgC,EAAOmF,EAAgB,MAAM,EAC/C9G,GAAoB2B,EAAOmF,EAAgB,MAAM,CAAA,CAClD,EACE,KAAMC,GAAQ,CACFL,EAAA,aACTM,EAAWD,EAAI,CAAC,EAAE,KAAK,KAAK,EAC5BC,EAAWD,EAAI,CAAC,EAAE,KAAK,KAAK,EAC5BpF,CAAA,CACF,CACD,EACA,MAAM,IAAM,CAAA,CAAE,EACV,OAAA,iBAAiB,eAAgB6E,CAAe,GAElD,IAAM,CACXM,EAAgB,MAAM,EACNN,IAChB7F,EACEsG,GAAqB,eAAe,CAClC,YAAa,CAAC,CAAA,CACf,CAAA,EAEHtG,EACEK,EAAc,sBAAsB,CAClC,QAASkG,GAAuB,IAChC,SAAUC,EAAsB,MAAA,CACjC,CAAA,EAEI,OAAA,oBAAoB,eAAgBX,CAAe,CAAA,GAE3D,CAACL,EAAaxE,EAAO6E,EAAiB7F,CAAQ,CAAC,EAElDuC,EAAAA,UAAU,IAAM,CACd,MAAMkE,EAA+B,CACnCC,GAAwBC,CAAiB,EACzCC,GAAyBD,CAAiB,EAC1CE,GAAyBF,CAAiB,EAC1CG,GAAqBH,CAAiB,EACtCI,GAAqBJ,CAAiB,CAAA,EAExC,MAAO,IAAMF,EAAc,QAASO,GAAgBA,EAAa,CAAA,CACnE,EAAG,CAAE,CAAA,EAEC,MAAAC,EAAiBzH,EAAY0H,EAAgB,EAC7CC,EAAkB3H,EAAY4H,EAAiB,EAC/CC,EAAe7H,EAAYG,CAAc,EACzC2H,EAAW9H,EAAY+H,EAAW,EAGlC,CAAE,aAAAC,CAAA,EAAiBC,GAAkB,MAAM,EAE3CC,EAAyB5B,EAAA,YAC5B6B,GAAkC,CACjCA,EAAE,gBAAgB,EAClBrC,EACG,MAAM,CACL,MAAO,KACP,WAAY,CACV,SAAU,EACZ,CAAA,CACD,EACA,KAAK,IAAM,CACVA,EAAS,MAAM,CACb,MAAO,EACP,WAAY,CACV,SAAU,EACZ,CAAA,CACD,CAAA,CACF,CACL,EACA,CAACA,CAAQ,CAAA,EAGX/C,EAAAA,UAAU,KACRqF,GACExH,EAAyB,MACzByH,EAAgC,MAAA,EAEXC,KAChB,IAAM,CACXC,EAAqBF,EAAgC,MAAM,CAAA,GAE5D,CAAE,CAAA,EAELG,GAAgB,IAAM,CACpBD,EAAqBF,EAAgC,MAAM,CAAA,CAC5D,EAED,KAAM,CAAG,CAAAI,CAAa,EAAIC,KAEpBtE,EAAUpE,EAAYqE,CAAU,EAEhCsE,EACJX,GACA9B,IAAac,EAAsB,MACnCd,IAAac,EAAsB,WAErC,OAEI7D,EAAAC,EAAA,CAAA,SAAA,CAAAtC,EAAC8H,GACC,CAAA,SAAA9H,EAAC,QAAO,CAAA,SAAAsD,EAAQ,OAAQ,CAAA,EAC1B,EACCjB,EAAA,MAAA,CAAI,IAAK0F,GAAsB,IAAKJ,EAClC,SAAA,CAAAE,KAAwBG,GAAW,EAAA,EACnC,CAACH,GACC7H,EAAAiI,GAAA,CACC,WAACC,GACC,CAAA,SAAA,CAAClI,EAAAmI,EAAA,CAAgB,aAAY,GAAC,OAAQ,GACpC,SAACnI,EAAAoI,GAAA,CAAW,IAAKC,EAAA,CAAa,CAChC,CAAA,EACAhG,EAAC,MAAI,CAAA,IAAKiG,GACR,SAAA,CAAAtI,EAAC2E,GAAU,EAAA,EACXtC,EAAC,MAAI,CAAA,IAAKkG,GACR,SAAA,CAACvI,EAAAmI,EAAA,CAAgB,aAAY,GAAC,OAAQ,GACpC,SAACnI,EAAAwI,GAAA,CAAY,IAAKC,EAAA,CAAkB,CACtC,CAAA,EACCzI,EAAAmI,EAAA,CAAgB,aAAY,GAAC,OAAQ,GACnC,SAAmBtB,GAAA,CAACE,EAAe/G,EAAC0I,GAAa,CAAA,CAAA,EAAK,KACzD,EACC3B,GAAgB/G,EAAC2I,GAAS,CAAA,IAAKC,EAAkB,CAAA,CAAA,EACpD,EACCjC,KACEwB,EAAgB,CAAA,aAAY,GAAC,OAAQ,GACpC,SAACnI,EAAA6I,GAAA,CAAA,CAAkB,CACrB,CAAA,CAAA,EAEJ,EACC,CAAC7B,GACChH,EAAA,MAAA,CAAI,IAAK8I,GAAY,YAAa1B,EACjC,SAAA/E,EAAC0G,GAAO,IAAP,CAAW,IAAKC,GAAqB,QAAShE,EAC7C,SAAA,CAAChF,EAAAiJ,GAAA,CAAkB,IAAKC,EAAiB,CAAA,EACxC9D,IAAac,EAAsB,QAChChG,EAAE,uCAAuC,EACzCA,EAAE,iBAAiB,CAAA,CAAA,CACzB,CACF,CAAA,CAAA,CAAA,CAEJ,CACF,CAAA,CAAA,EAEJ,CACF,CAAA,CAAA,CAEJ,EAIA6E,GAAO,YAAc"}