{"version":3,"file":"chartTypeSelectSetter-6f06191e.js","sources":["../../src/assets/chart/doughnut-chart.svg?react","../../src/assets/chart/pie-chart.svg?react","../../src/assets/chart/radar-chart.svg?react","../../src/page/App/components/InspectPanel/PanelSetters/ChartSetter/chartTypeSelectSetter.tsx"],"sourcesContent":["import * as React from \"react\";\nconst SvgDoughnutChart = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 16, height: 16, viewBox: \"0 0 16 16\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M8 2C9.05039 2 10.0824 2.27575 10.9928 2.79968C11.9032 3.32361 12.6601 4.07736 13.1878 4.98556C13.7155 5.89376 13.9956 6.92459 13.9999 7.97497C14.0043 9.02535 13.7329 10.0585 13.2128 10.9711C12.6926 11.8836 11.942 12.6437 11.0361 13.1752C10.1301 13.7067 9.10041 13.991 8.05006 13.9998C6.99971 14.0086 5.96545 13.7414 5.05072 13.2251C4.13599 12.7088 3.37282 11.9614 2.83754 11.0576L5.52202 9.46766C5.77896 9.90146 6.14527 10.2602 6.58435 10.5081C7.02342 10.7559 7.51986 10.8841 8.02403 10.8799C8.5282 10.8757 9.02243 10.7392 9.45731 10.4841C9.89218 10.229 10.2525 9.86414 10.5021 9.4261C10.7518 8.98807 10.8821 8.49217 10.88 7.98799C10.8779 7.4838 10.7434 6.98901 10.4901 6.55307C10.2368 6.11713 9.87352 5.75533 9.43653 5.50385C8.99954 5.25236 8.50419 5.12 8 5.12V2Z\", fill: \"#0D6EFD\", stroke: \"white\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M8 2C8.78793 2 9.56815 2.15519 10.2961 2.45672C11.0241 2.75825 11.6855 3.20021 12.2426 3.75736C12.7998 4.31451 13.2417 4.97595 13.5433 5.7039C13.8448 6.43185 14 7.21207 14 8L10.88 8C10.88 7.62179 10.8055 7.24729 10.6608 6.89787C10.516 6.54845 10.3039 6.23097 10.0365 5.96353C9.76903 5.6961 9.45155 5.48396 9.10213 5.33923C8.75271 5.19449 8.37821 5.12 8 5.12V2Z\", fill: \"#0D6EFD\", stroke: \"white\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M2.97549 11.2794C2.38436 10.3737 2.04904 9.32504 2.00498 8.24441C1.96092 7.16377 2.20978 6.09132 2.72522 5.14052C3.24065 4.18971 4.00351 3.3959 4.93307 2.84307C5.86264 2.29024 6.92435 1.99894 8.00588 2L8.00282 5.12C7.48369 5.11949 6.97407 5.25931 6.52787 5.52467C6.08168 5.79003 5.71551 6.17106 5.4681 6.62745C5.22069 7.08384 5.10124 7.59861 5.12239 8.11732C5.14354 8.63602 5.30449 9.13936 5.58823 9.5741L2.97549 11.2794Z\", fill: \"#14DDD9\", stroke: \"white\" }));\nexport default SvgDoughnutChart;\n","import * as React from \"react\";\nconst SvgPieChart = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 16, height: 16, viewBox: \"0 0 16 16\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M8 2C9.05039 2 10.0824 2.27575 10.9928 2.79968C11.9032 3.32361 12.6601 4.07736 13.1878 4.98556C13.7155 5.89376 13.9956 6.92459 13.9999 7.97497C14.0043 9.02535 13.7329 10.0585 13.2128 10.9711C12.6926 11.8836 11.942 12.6437 11.0361 13.1752C10.1301 13.7067 9.10041 13.991 8.05006 13.9998C6.99971 14.0086 5.96545 13.7414 5.05072 13.2251C4.13599 12.7088 3.37282 11.9614 2.83754 11.0576L8 8V2Z\", fill: \"#0D6EFD\", stroke: \"white\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M8 2C8.78793 2 9.56815 2.15519 10.2961 2.45672C11.0241 2.75825 11.6855 3.20021 12.2426 3.75736C12.7998 4.31451 13.2417 4.97595 13.5433 5.7039C13.8448 6.43185 14 7.21207 14 8L8 8V2Z\", fill: \"#0D6EFD\", stroke: \"white\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M2.97549 11.2794C2.38436 10.3737 2.04904 9.32504 2.00498 8.24441C1.96092 7.16377 2.20978 6.09132 2.72522 5.14052C3.24065 4.18971 4.00351 3.3959 4.93307 2.84307C5.86264 2.29024 6.92435 1.99894 8.00588 2L8 8L2.97549 11.2794Z\", fill: \"#14DDD9\", stroke: \"white\" }));\nexport default SvgPieChart;\n","import * as React from \"react\";\nconst SvgRadarChart = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 16, height: 16, viewBox: \"0 0 16 16\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M8 3L12.7553 6.45492L10.9389 12.0451H5.06107L3.24472 6.45492L8 3Z\", fill: \"#14DDD9\", fillOpacity: 0.3 }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M8 5L10.8532 7.07295L9.76336 10.4271H6.23664L5.14683 7.07295L8 5Z\", fill: \"#14DDD9\", fillOpacity: 0.9 }), /* @__PURE__ */ React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M7.95003 3.03633V7.9315L3.27256 6.43471L3.24475 6.45492L3.27227 6.53961L7.91788 8.02621L5.01353 11.8987L5.05132 12.015L8.00003 8.08333L10.9487 12.015L10.9865 11.8987L8.08219 8.02621L12.7278 6.53961L12.7553 6.45492L12.7275 6.43471L8.05003 7.9315V3.03633L8.00003 3L7.95003 3.03633Z\", fill: \"#25DFDB\" }));\nexport default SvgRadarChart;\n","import { ChartType } from \"chart.js\"\nimport { get } from \"lodash-es\"\nimport { FC, useCallback, useMemo } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport BarChartIcon from \"@/assets/chart/bar-chart.svg?react\"\nimport DoughnutIcon from \"@/assets/chart/doughnut-chart.svg?react\"\nimport LineChartIcon from \"@/assets/chart/line-chart.svg?react\"\nimport PieChartIcon from \"@/assets/chart/pie-chart.svg?react\"\nimport RadarIcon from \"@/assets/chart/radar-chart.svg?react\"\nimport ScatterPlotIcon from \"@/assets/chart/scatter-plot.svg?react\"\nimport i18n from \"@/i18n/config\"\nimport { ChartDatasetShape } from \"@/page/App/components/InspectPanel/PanelSetters/ChartSetter/chartDatasetsSetter/interface\"\nimport { CHART_PRESET_COLOR } from \"@/page/App/components/InspectPanel/PanelSetters/ChartSetter/chartDatasetsSetter/listItem\"\nimport {\n  chartTypeIconCss,\n  chartTypeStringCss,\n  chatOptionContainerStyle,\n} from \"@/page/App/components/InspectPanel/PanelSetters/ChartSetter/style\"\nimport BaseSelectSetter from \"@/page/App/components/InspectPanel/PanelSetters/SelectSetter/baseSelect\"\nimport {\n  getComponentMap,\n  searchComponentFromMap,\n} from \"@/redux/currentApp/components/componentsSelector\"\nimport { RootState } from \"@/store\"\nimport { ChartTypeSelectSetterProps } from \"./interface\"\n\nconst typeOptions = [\n  {\n    label: (\n      <div css={chatOptionContainerStyle}>\n        <BarChartIcon css={chartTypeIconCss} />\n        <span css={chartTypeStringCss}>\n          {i18n.t(\"editor.inspect.setter_content.chart_type.bar\")}\n        </span>\n      </div>\n    ),\n    value: \"bar\",\n  },\n  {\n    label: (\n      <div css={chatOptionContainerStyle}>\n        <LineChartIcon css={chartTypeIconCss} />\n        <span css={chartTypeStringCss}>\n          {i18n.t(\"editor.inspect.setter_content.chart_type.line\")}\n        </span>\n      </div>\n    ),\n    value: \"line\",\n  },\n  {\n    label: (\n      <div css={chatOptionContainerStyle}>\n        <ScatterPlotIcon css={chartTypeIconCss} />\n        <span css={chartTypeStringCss}>\n          {i18n.t(\"editor.inspect.setter_content.chart_type.scatterplot\")}\n        </span>\n      </div>\n    ),\n    value: \"scatter\",\n  },\n  {\n    label: (\n      <div css={chatOptionContainerStyle}>\n        <PieChartIcon css={chartTypeIconCss} />\n        <span css={chartTypeStringCss}>\n          {i18n.t(\"editor.inspect.setter_content.chart_type.pie\")}\n        </span>\n      </div>\n    ),\n    value: \"pie\",\n  },\n  {\n    label: (\n      <div css={chatOptionContainerStyle}>\n        <DoughnutIcon css={chartTypeIconCss} />\n        <span css={chartTypeStringCss}>\n          {i18n.t(\"editor.inspect.setter_option.chart.chart-type.Doughnut\")}\n        </span>\n      </div>\n    ),\n    value: \"doughnut\",\n  },\n  {\n    label: (\n      <div css={chatOptionContainerStyle}>\n        <RadarIcon css={chartTypeIconCss} />\n        <span css={chartTypeStringCss}>\n          {i18n.t(\"editor.inspect.setter_option.chart.chart-type.Radar\")}\n        </span>\n      </div>\n    ),\n    value: \"radar\",\n  },\n]\n\nconst ChartTypeSelectSetter: FC<ChartTypeSelectSetterProps> = (props) => {\n  const { widgetDisplayName, handleUpdateMultiAttrDSL } = props\n\n  const insertValues = useSelector<RootState, Record<string, any>>(\n    (rootState) => {\n      const targetComponentNode = searchComponentFromMap(\n        getComponentMap(rootState),\n        widgetDisplayName,\n      )\n      if (!targetComponentNode) return {}\n      return targetComponentNode.props || {}\n    },\n  )\n\n  const datasets: ChartDatasetShape[] = useMemo(() => {\n    return get(insertValues, \"datasets\", [])\n  }, [insertValues])\n\n  const isCanGroupBy = useMemo(() => {\n    return !!get(insertValues, \"groupBy\", \"\")\n  }, [insertValues])\n\n  const generateNewDatasets = useCallback(\n    (chartType: ChartType) => {\n      if (!datasets.length) return []\n      if (!isCanGroupBy && chartType !== \"pie\") {\n        return datasets.map((dataset, index) => {\n          return {\n            ...dataset,\n            type: chartType,\n            color: CHART_PRESET_COLOR[index % CHART_PRESET_COLOR.length],\n          }\n        })\n      } else {\n        return datasets.map((dataset) => {\n          return {\n            ...dataset,\n            type: chartType,\n            color: \"illa-preset\",\n          }\n        })\n      }\n    },\n    [datasets, isCanGroupBy],\n  )\n\n  const handleUpdateDsl = useCallback(\n    (attrName: string, value: any) => {\n      const newDatasets = generateNewDatasets(value)\n      handleUpdateMultiAttrDSL?.({\n        datasets: newDatasets,\n        [attrName]: value,\n      })\n    },\n    [generateNewDatasets, handleUpdateMultiAttrDSL],\n  )\n\n  return (\n    <BaseSelectSetter\n      {...props}\n      handleUpdateDsl={handleUpdateDsl}\n      options={typeOptions}\n    />\n  )\n}\n\nChartTypeSelectSetter.displayName = \"ChartTypeSelectSetter\"\nexport default ChartTypeSelectSetter\n"],"names":["SvgDoughnutChart","props","React.createElement","SvgPieChart","SvgRadarChart","typeOptions","jsxs","chatOptionContainerStyle","jsx","BarChartIcon","chartTypeIconCss","chartTypeStringCss","i18n","LineChartIcon","ScatterPlotIcon","PieChartIcon","DoughnutIcon","RadarIcon","ChartTypeSelectSetter","widgetDisplayName","handleUpdateMultiAttrDSL","insertValues","useSelector","rootState","targetComponentNode","searchComponentFromMap","getComponentMap","datasets","useMemo","get","isCanGroupBy","generateNewDatasets","useCallback","chartType","dataset","index","CHART_PRESET_COLOR","handleUpdateDsl","attrName","value","newDatasets","BaseSelectSetter"],"mappings":"khBACA,MAAMA,EAAoBC,GAA0BC,EAAAA,cAAoB,MAAO,CAAE,MAAO,GAAI,OAAQ,GAAI,QAAS,YAAa,KAAM,OAAQ,MAAO,6BAA8B,GAAGD,CAAK,EAAoBC,EAAmB,cAAC,OAAQ,CAAE,EAAG,gwBAAiwB,KAAM,UAAW,OAAQ,QAAS,EAAmBA,gBAAoB,OAAQ,CAAE,EAAG,2WAA4W,KAAM,UAAW,OAAQ,OAAS,CAAA,EAAmBA,EAAmB,cAAC,OAAQ,CAAE,EAAG,waAAya,KAAM,UAAW,OAAQ,OAAO,CAAE,CAAC,ECA78DC,EAAeF,GAA0BC,EAAAA,cAAoB,MAAO,CAAE,MAAO,GAAI,OAAQ,GAAI,QAAS,YAAa,KAAM,OAAQ,MAAO,6BAA8B,GAAGD,CAAK,EAAoBC,EAAmB,cAAC,OAAQ,CAAE,EAAG,sYAAuY,KAAM,UAAW,OAAQ,QAAS,EAAmBA,gBAAoB,OAAQ,CAAE,EAAG,uLAAwL,KAAM,UAAW,OAAQ,OAAS,CAAA,EAAmBA,EAAmB,cAAC,OAAQ,CAAE,EAAG,iOAAkO,KAAM,UAAW,OAAQ,OAAO,CAAE,CAAC,ECAntCE,EAAiBH,GAA0BC,EAAmB,cAAC,MAAO,CAAE,MAAO,GAAI,OAAQ,GAAI,QAAS,YAAa,KAAM,OAAQ,MAAO,6BAA8B,GAAGD,CAAO,EAAkBC,gBAAoB,OAAQ,CAAE,EAAG,oEAAqE,KAAM,UAAW,YAAa,GAAK,EAAmBA,gBAAoB,OAAQ,CAAE,EAAG,oEAAqE,KAAM,UAAW,YAAa,EAAK,CAAA,EAAmBA,EAAmB,cAAC,OAAQ,CAAE,SAAU,UAAW,SAAU,UAAW,EAAG,0RAA2R,KAAM,SAAW,CAAA,CAAC,ECyBp3BG,EAAc,CAClB,CACE,MACEC,EAAC,MAAI,CAAA,IAAKC,EACR,SAAA,CAACC,EAAAC,EAAA,CAAa,IAAKC,CAAkB,CAAA,IACpC,OAAK,CAAA,IAAKC,EACR,SAAKC,EAAA,EAAE,8CAA8C,EACxD,CAAA,EACF,EAEF,MAAO,KACT,EACA,CACE,MACEN,EAAC,MAAI,CAAA,IAAKC,EACR,SAAA,CAACC,EAAAK,EAAA,CAAc,IAAKH,CAAkB,CAAA,IACrC,OAAK,CAAA,IAAKC,EACR,SAAKC,EAAA,EAAE,+CAA+C,EACzD,CAAA,EACF,EAEF,MAAO,MACT,EACA,CACE,MACEN,EAAC,MAAI,CAAA,IAAKC,EACR,SAAA,CAACC,EAAAM,EAAA,CAAgB,IAAKJ,CAAkB,CAAA,IACvC,OAAK,CAAA,IAAKC,EACR,SAAKC,EAAA,EAAE,sDAAsD,EAChE,CAAA,EACF,EAEF,MAAO,SACT,EACA,CACE,MACEN,EAAC,MAAI,CAAA,IAAKC,EACR,SAAA,CAACC,EAAAO,EAAA,CAAa,IAAKL,CAAkB,CAAA,IACpC,OAAK,CAAA,IAAKC,EACR,SAAKC,EAAA,EAAE,8CAA8C,EACxD,CAAA,EACF,EAEF,MAAO,KACT,EACA,CACE,MACEN,EAAC,MAAI,CAAA,IAAKC,EACR,SAAA,CAACC,EAAAQ,EAAA,CAAa,IAAKN,CAAkB,CAAA,IACpC,OAAK,CAAA,IAAKC,EACR,SAAKC,EAAA,EAAE,wDAAwD,EAClE,CAAA,EACF,EAEF,MAAO,UACT,EACA,CACE,MACEN,EAAC,MAAI,CAAA,IAAKC,EACR,SAAA,CAACC,EAAAS,EAAA,CAAU,IAAKP,CAAkB,CAAA,IACjC,OAAK,CAAA,IAAKC,EACR,SAAKC,EAAA,EAAE,qDAAqD,EAC/D,CAAA,EACF,EAEF,MAAO,OACT,CACF,EAEMM,EAAyDjB,GAAU,CACjE,KAAA,CAAE,kBAAAkB,EAAmB,yBAAAC,CAA6B,EAAAnB,EAElDoB,EAAeC,EAClBC,GAAc,CACb,MAAMC,EAAsBC,EAC1BC,EAAgBH,CAAS,EACzBJ,CAAA,EAEF,OAAKK,EACEA,EAAoB,OAAS,GADH,EAEnC,CAAA,EAGIG,EAAgCC,EAAAA,QAAQ,IACrCC,EAAIR,EAAc,WAAY,CAAE,CAAA,EACtC,CAACA,CAAY,CAAC,EAEXS,EAAeF,EAAAA,QAAQ,IACpB,CAAC,CAACC,EAAIR,EAAc,UAAW,EAAE,EACvC,CAACA,CAAY,CAAC,EAEXU,EAAsBC,EAAA,YACzBC,GACMN,EAAS,OACV,CAACG,GAAgBG,IAAc,MAC1BN,EAAS,IAAI,CAACO,EAASC,KACrB,CACL,GAAGD,EACH,KAAMD,EACN,MAAOG,EAAmBD,EAAQC,EAAmB,MAAM,CAAA,EAE9D,EAEMT,EAAS,IAAKO,IACZ,CACL,GAAGA,EACH,KAAMD,EACN,MAAO,aAAA,EAEV,EAhB0B,GAmB/B,CAACN,EAAUG,CAAY,CAAA,EAGnBO,EAAkBL,EAAA,YACtB,CAACM,EAAkBC,IAAe,CAC1B,MAAAC,EAAcT,EAAoBQ,CAAK,EAClBnB,GAAA,MAAAA,EAAA,CACzB,SAAUoB,EACV,CAACF,CAAQ,EAAGC,CAAA,EAEhB,EACA,CAACR,EAAqBX,CAAwB,CAAA,EAI9C,OAAAZ,EAACiC,EAAA,CACE,GAAGxC,EACJ,gBAAAoC,EACA,QAAShC,CAAA,CAAA,CAGf,EAEAa,EAAsB,YAAc"}