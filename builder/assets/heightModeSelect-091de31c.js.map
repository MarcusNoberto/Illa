{"version":3,"file":"heightModeSelect-091de31c.js","sources":["../../src/page/App/components/InspectPanel/PanelSetters/SelectSetter/heightModeSelect.tsx"],"sourcesContent":["import { FC, useCallback } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { UNIT_HEIGHT } from \"@/page/App/components/DotPanel/constant/canvas\"\nimport BaseSelectSetter from \"@/page/App/components/InspectPanel/PanelSetters/SelectSetter/baseSelect\"\nimport { HeightModeSetterProps } from \"@/page/App/components/InspectPanel/PanelSetters/SelectSetter/interface\"\nimport { DEFAULT_MAX_HEIGHT } from \"@/page/App/components/ScaleSquare/components/AutoHeightWithLimitedContainer\"\nimport {\n  getComponentMap,\n  searchComponentFromMap,\n} from \"@/redux/currentApp/components/componentsSelector\"\nimport { RootState } from \"@/store\"\nimport { RESIZE_DIRECTION } from \"@/widgetLibrary/interface\"\n\nconst HeightModeSelect: FC<HeightModeSetterProps> = (props) => {\n  const currentNode = useSelector((state: RootState) => {\n    const components = getComponentMap(state)\n    return searchComponentFromMap(components, props.widgetDisplayName)\n  })!\n  const { handleUpdateMultiAttrDSL, value: heightMode } = props\n  const handleUpdateHeightMode = useCallback(\n    (attrName: string, value: string) => {\n      if (heightMode === value) return\n      const resizeDirection =\n        value === \"fixed\" ? RESIZE_DIRECTION.ALL : RESIZE_DIRECTION.HORIZONTAL\n      const otherAttrs =\n        value === \"limited\"\n          ? {\n              dynamicMaxHeight:\n                currentNode.h * UNIT_HEIGHT + DEFAULT_MAX_HEIGHT,\n              dynamicMinHeight: currentNode.h * UNIT_HEIGHT,\n            }\n          : {\n              dynamicMaxHeight: undefined,\n              dynamicMinHeight: undefined,\n            }\n      handleUpdateMultiAttrDSL({\n        [attrName]: value,\n        resizeDirection,\n        ...otherAttrs,\n      })\n    },\n    [currentNode, handleUpdateMultiAttrDSL, heightMode],\n  )\n  return (\n    <BaseSelectSetter {...props} handleUpdateDsl={handleUpdateHeightMode} />\n  )\n}\n\nHeightModeSelect.displayName = \"HeightModeSelect\"\n\nexport default HeightModeSelect\n"],"names":["HeightModeSelect","props","currentNode","useSelector","state","components","getComponentMap","searchComponentFromMap","handleUpdateMultiAttrDSL","heightMode","handleUpdateHeightMode","useCallback","attrName","value","resizeDirection","RESIZE_DIRECTION","otherAttrs","UNIT_HEIGHT","DEFAULT_MAX_HEIGHT","jsx","BaseSelectSetter"],"mappings":"odAaM,MAAAA,EAA+CC,GAAU,CACvD,MAAAC,EAAcC,EAAaC,GAAqB,CAC9C,MAAAC,EAAaC,EAAgBF,CAAK,EACjC,OAAAG,EAAuBF,EAAYJ,EAAM,iBAAiB,CAAA,CAClE,EACK,CAAE,yBAAAO,EAA0B,MAAOC,CAAA,EAAeR,EAClDS,EAAyBC,EAAA,YAC7B,CAACC,EAAkBC,IAAkB,CACnC,GAAIJ,IAAeI,EAAO,OAC1B,MAAMC,EACJD,IAAU,QAAUE,EAAiB,IAAMA,EAAiB,WACxDC,EACJH,IAAU,UACN,CACE,iBACEX,EAAY,EAAIe,EAAcC,EAChC,iBAAkBhB,EAAY,EAAIe,CAAA,EAEpC,CACE,iBAAkB,OAClB,iBAAkB,MAAA,EAEDT,EAAA,CACvB,CAACI,CAAQ,EAAGC,EACZ,gBAAAC,EACA,GAAGE,CAAA,CACJ,CACH,EACA,CAACd,EAAaM,EAA0BC,CAAU,CAAA,EAEpD,OACGU,EAAAC,EAAA,CAAkB,GAAGnB,EAAO,gBAAiBS,CAAwB,CAAA,CAE1E,EAEAV,EAAiB,YAAc"}