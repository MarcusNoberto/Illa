{"version":3,"file":"multiselect-4cb9bf92.js","sources":["../../src/widgetLibrary/MultiselectWidget/multiselect.tsx"],"sourcesContent":["import { FC, useCallback, useEffect, useMemo } from \"react\"\nimport { Select } from \"@illa-design/react\"\nimport {\n  MultiselectWidgetProps,\n  WrappedMultiselectProps,\n} from \"@/widgetLibrary/MultiselectWidget/interface\"\nimport { AutoHeightContainer } from \"@/widgetLibrary/PublicSector/AutoHeightContainer\"\nimport { InvalidMessage } from \"@/widgetLibrary/PublicSector/InvalidMessage\"\nimport { handleValidateCheck } from \"@/widgetLibrary/PublicSector/InvalidMessage/utils\"\nimport { Label } from \"@/widgetLibrary/PublicSector/Label\"\nimport { TooltipWrapper } from \"@/widgetLibrary/PublicSector/TooltipWrapper\"\nimport {\n  applyLabelAndComponentWrapperStyle,\n  applyValidateMessageWrapperStyle,\n} from \"@/widgetLibrary/PublicSector/TransformWidgetWrapper/style\"\nimport { formatSelectOptions } from \"@/widgetLibrary/PublicSector/utils/formatSelectOptions\"\n\nexport const WrappedMultiselect: FC<WrappedMultiselectProps> = (props) => {\n  const {\n    showClear,\n    value,\n    options,\n    placeholder,\n    disabled,\n    loading,\n    readOnly,\n    colorScheme,\n    handleUpdateMultiExecutionResult,\n    handleOnChange,\n    getValidateMessage,\n    displayName,\n  } = props\n\n  const onChangeSelectValue = useCallback(\n    (value: unknown) => {\n      new Promise((resolve) => {\n        const message = getValidateMessage(value)\n        handleUpdateMultiExecutionResult([\n          {\n            displayName,\n            value: {\n              value: value || [],\n              validateMessage: message,\n            },\n          },\n        ])\n        resolve(true)\n      }).then(() => {\n        handleOnChange?.()\n      })\n    },\n    [\n      displayName,\n      getValidateMessage,\n      handleOnChange,\n      handleUpdateMultiExecutionResult,\n    ],\n  )\n\n  return (\n    <Select\n      allowClear={showClear}\n      multiple\n      options={options}\n      value={Array.isArray(value) ? value : []}\n      placeholder={placeholder}\n      disabled={disabled}\n      loading={loading}\n      readOnly={readOnly}\n      showSearch\n      colorScheme={colorScheme}\n      onChange={onChangeSelectValue}\n    />\n  )\n}\nWrappedMultiselect.displayName = \"WrappedMultiselect\"\n\nexport const MultiselectWidget: FC<MultiselectWidgetProps> = (props) => {\n  const {\n    value,\n    handleUpdateDsl,\n    updateComponentRuntimeProps,\n    deleteComponentRuntimeProps,\n    labelPosition,\n    labelFull,\n    label,\n    labelAlign,\n    labelWidth = 33,\n    labelCaption,\n    labelWidthUnit,\n    dynamicHeight,\n    atLeastNumber,\n    upToNumber,\n    required,\n    labelHidden,\n    tooltipText,\n    customRule,\n    hideValidationMessage,\n    validateMessage,\n    optionConfigureMode,\n    mappedOption,\n    manualOptions,\n    updateComponentHeight,\n    triggerEventHandler,\n  } = props\n\n  const getValidateMessage = useCallback(\n    (value: unknown) => {\n      if (!hideValidationMessage) {\n        const message = handleValidateCheck({\n          value,\n          required,\n          customRule,\n          atLeastNumber,\n          upToNumber,\n        })\n        const showMessage = message && message.length > 0\n        return showMessage ? message : \"\"\n      }\n      return \"\"\n    },\n    [customRule, hideValidationMessage, required, atLeastNumber, upToNumber],\n  )\n\n  const handleValidate = useCallback(\n    (value: unknown) => {\n      const message = getValidateMessage(value)\n      handleUpdateDsl({\n        validateMessage: message,\n      })\n      return message\n    },\n    [getValidateMessage, handleUpdateDsl],\n  )\n\n  useEffect(() => {\n    updateComponentRuntimeProps({\n      setSelectedValue: (value: any) => {\n        handleUpdateDsl({ value })\n      },\n      clearValue: () => {\n        handleUpdateDsl({ value: undefined })\n      },\n      validate: () => {\n        return handleValidate(value)\n      },\n      clearValidation: () => {\n        handleUpdateDsl({\n          validateMessage: undefined,\n        })\n      },\n    })\n    return () => {\n      deleteComponentRuntimeProps()\n    }\n  }, [\n    deleteComponentRuntimeProps,\n    handleUpdateDsl,\n    handleValidate,\n    updateComponentRuntimeProps,\n    value,\n  ])\n\n  const handleOnChange = useCallback(() => {\n    triggerEventHandler(\"change\")\n  }, [triggerEventHandler])\n\n  const handleOnFocus = useCallback(() => {\n    triggerEventHandler(\"focus\")\n  }, [triggerEventHandler])\n\n  const handleOnBlur = useCallback(() => {\n    triggerEventHandler(\"blur\")\n  }, [triggerEventHandler])\n\n  const enableAutoHeight =\n    dynamicHeight !== \"fixed\" && dynamicHeight != undefined\n\n  const finalOptions = useMemo(() => {\n    return formatSelectOptions(optionConfigureMode, manualOptions, mappedOption)\n  }, [optionConfigureMode, manualOptions, mappedOption])\n\n  return (\n    <AutoHeightContainer\n      updateComponentHeight={updateComponentHeight}\n      enable={enableAutoHeight}\n    >\n      <TooltipWrapper tooltipText={tooltipText} tooltipDisabled={!tooltipText}>\n        <div css={applyLabelAndComponentWrapperStyle(labelPosition)}>\n          <Label\n            labelFull={labelFull}\n            label={label}\n            labelAlign={labelAlign}\n            labelWidth={labelWidth}\n            labelCaption={labelCaption}\n            labelWidthUnit={labelWidthUnit}\n            labelPosition={labelPosition}\n            required={required}\n            labelHidden={labelHidden}\n            hasTooltip={!!tooltipText}\n          />\n          <WrappedMultiselect\n            {...props}\n            options={finalOptions}\n            getValidateMessage={getValidateMessage}\n            handleOnChange={handleOnChange}\n            handleOnBlur={handleOnBlur}\n            handleOnFocus={handleOnFocus}\n          />\n        </div>\n      </TooltipWrapper>\n      {!hideValidationMessage && (\n        <div\n          css={applyValidateMessageWrapperStyle(\n            labelWidth,\n            labelPosition,\n            labelHidden || !label,\n          )}\n        >\n          <InvalidMessage validateMessage={validateMessage} />\n        </div>\n      )}\n    </AutoHeightContainer>\n  )\n}\n\nMultiselectWidget.displayName = \"MultiselectWidget\"\nexport default MultiselectWidget\n"],"names":["WrappedMultiselect","props","showClear","value","options","placeholder","disabled","loading","readOnly","colorScheme","handleUpdateMultiExecutionResult","handleOnChange","getValidateMessage","displayName","onChangeSelectValue","useCallback","resolve","message","jsx","Select","MultiselectWidget","handleUpdateDsl","updateComponentRuntimeProps","deleteComponentRuntimeProps","labelPosition","labelFull","label","labelAlign","labelWidth","labelCaption","labelWidthUnit","dynamicHeight","atLeastNumber","upToNumber","required","labelHidden","tooltipText","customRule","hideValidationMessage","validateMessage","optionConfigureMode","mappedOption","manualOptions","updateComponentHeight","triggerEventHandler","handleValidateCheck","handleValidate","useEffect","handleOnFocus","handleOnBlur","enableAutoHeight","finalOptions","useMemo","formatSelectOptions","jsxs","AutoHeightContainer","TooltipWrapper","applyLabelAndComponentWrapperStyle","Label","applyValidateMessageWrapperStyle","InvalidMessage"],"mappings":"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"}