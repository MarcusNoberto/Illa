{"version":3,"file":"panelFolder-5e4290ef.js","sources":["../../src/components/FolderOperateModal/constants.ts","../../src/components/FolderOperateModal/context.ts","../../src/components/FolderOperateModal/components/SameNameModal/style.ts","../../src/components/FolderOperateModal/components/SameNameModal/content.tsx","../../src/components/FolderOperateModal/components/SameNameModal/index.tsx","../../src/components/FolderOperateModal/components/CreateFolderModal/style.ts","../../src/components/FolderOperateModal/components/CreateFolderModal/index.tsx","../../src/components/FolderOperateModal/components/Empty/style.ts","../../src/components/FolderOperateModal/components/Empty/index.tsx","../../src/components/FolderOperateModal/components/FolderList/style.ts","../../src/components/FolderOperateModal/components/FolderList/index.tsx","../../src/components/FolderOperateModal/components/LoadingState/style.ts","../../src/components/FolderOperateModal/components/LoadingState/index.tsx","../../src/components/FolderOperateModal/components/FolderModalContent/style.ts","../../src/components/FolderOperateModal/components/FolderModalContent/index.tsx","../../src/components/FolderOperateModal/index.tsx","../../src/assets/drive/panelFolder.svg?react"],"sourcesContent":["export const FOLDER_LIST_CONTAINER_HEIGHT = 224\nexport const FOLDER_LIST_ITEM_HEIGHT = 32\nexport const FOLDER_LIST_LIMIT_IN_MODAL = 10\nexport const ROOT_PATH = \"root\"\n","import { ReactNode, createContext } from \"react\"\n\ninterface Injected {\n  title?: string\n  subTitle: string\n  currentFolderPath: string\n  folderOperateVisible: boolean\n  createFolderVisible: boolean\n  operateChildren: ReactNode\n  setCurrentFolderPath: (path: string) => void\n  setFolderOperateVisible: (v: boolean) => void\n  setCreateFolderVisible: (v: boolean) => void\n}\n\nexport const FolderOperateModalContext = createContext<Injected>({} as Injected)\n","import { css } from \"@emotion/react\"\n\nexport const controlContainer = css`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  gap: 8px;\n`\n\nexport const hasApplyForAllContainer = css`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  gap: 8px;\n  margin-top: 8px;\n`\n","import { DUPLICATION_HANDLER } from \"@illa-public/public-types\"\nimport { FC, useCallback, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { Button } from \"@illa-design/react\"\nimport { SameNameModalContentProps } from \"./interface\"\nimport { controlContainer } from \"./style\"\n\nconst SameNameModalContent: FC<SameNameModalContentProps> = (props) => {\n  const { objectName, onCancel, createFolder } = props\n  const { t } = useTranslation()\n  const [isLoading, setIsLoading] = useState(false)\n\n  const createFolderEffect = useCallback(\n    (duplicationHandler: DUPLICATION_HANDLER) => {\n      return async () => {\n        setIsLoading(true)\n        try {\n          await createFolder(objectName, duplicationHandler)\n          onCancel()\n        } catch (e) {\n          console.log(e)\n        } finally {\n          setIsLoading(false)\n        }\n      }\n    },\n    [createFolder, objectName, onCancel],\n  )\n  return (\n    <div css={controlContainer}>\n      <Button\n        onClick={createFolderEffect(DUPLICATION_HANDLER.RENAME)}\n        disabled={isLoading}\n      >\n        {t(\"drive.same_name_modal.keep_both\")}\n      </Button>\n      <Button\n        colorScheme=\"red\"\n        onClick={createFolderEffect(DUPLICATION_HANDLER.COVER)}\n        disabled={isLoading}\n      >\n        {t(\"drive.same_name_modal.replace\")}\n      </Button>\n    </div>\n  )\n}\n\nexport default SameNameModalContent\n","import { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { Modal } from \"@illa-design/react\"\nimport SameNameModalContent from \"./content\"\nimport { SameNameModalProps } from \"./interface\"\n\nexport const SameNameModal: FC<SameNameModalProps> = (props) => {\n  const { objectName, sameModalVisible, setSameModalVisible, createFolder } =\n    props\n\n  const { t } = useTranslation()\n  const onCancel = () => {\n    setSameModalVisible(false)\n  }\n\n  return (\n    <div\n      onClick={(e) => {\n        e.stopPropagation()\n      }}\n    >\n      <Modal\n        closable\n        visible={sameModalVisible}\n        onCancel={onCancel}\n        title={t(\"drive.same_name_modal.this_folder_already\")}\n        footer={false}\n      >\n        <SameNameModalContent\n          objectName={objectName}\n          createFolder={createFolder}\n          onCancel={onCancel}\n        />\n      </Modal>\n    </div>\n  )\n}\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const createFolderModalMaskStyle = css`\n  background-color: ${getColor(\"white\", \"05\")};\n  backdrop-filter: blur(5px);\n`\n\nexport const invalidTipsStyle = css`\n  display: inline-flex;\n  color: ${getColor(\"orange\", \"03\")};\n  font-size: 14px;\n  margin-top: 4px;\n`\n\nexport const messageStyle = css`\n  display: inline-flex;\n  color: ${getColor(\"grayBlue\", \"04\")};\n  font-size: 14px;\n  margin-top: 4px;\n`\n","import { DUPLICATION_HANDLER, GCS_OBJECT_TYPE } from \"@illa-public/public-types\"\nimport { FC, useCallback, useContext, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { Modal, useMessage } from \"@illa-design/react\"\nimport { Input } from \"@illa-design/react\"\nimport {\n  fetchCheckFileExist,\n  fetchGCSUploadPresignedURL,\n} from \"@/services/drive\"\nimport { FolderOperateModalContext } from \"../../context\"\nimport { SameNameModal } from \"../SameNameModal\"\nimport { CreateFolderModalProps } from \"./interface\"\nimport { invalidTipsStyle, messageStyle } from \"./style\"\n\nconst availableFilenameRule = /^[\\u4e00-\\u9fa5a-zA-Z0-9=_~\\-]+$/u\n\nconst isInvalidFolderName = (folderName: string) => {\n  return !availableFilenameRule.test(folderName)\n}\n\nconst CreateFolderModal: FC<CreateFolderModalProps> = ({ currentFolderID }) => {\n  const {\n    currentFolderPath,\n    createFolderVisible,\n    setCreateFolderVisible,\n    setCurrentFolderPath,\n  } = useContext(FolderOperateModalContext)\n  const { t } = useTranslation()\n  const message = useMessage()\n  const [folderName, setFolderName] = useState(\"\")\n  const [newFolderName, setNewFolderName] = useState(\"\")\n  const [isLoading, setIsLoading] = useState(false)\n  const [sameModalVisible, setSameModalVisible] = useState(false)\n\n  const isDisabled =\n    !!folderName && isInvalidFolderName((folderName ?? \"\").trim())\n\n  const createFolder = useCallback(\n    async (name: string, duplicationHandler = DUPLICATION_HANDLER.RENAME) => {\n      try {\n        const response = await fetchGCSUploadPresignedURL({\n          name: name,\n          folderID: currentFolderID,\n          type: GCS_OBJECT_TYPE.FOLDER,\n          size: 0,\n          resumable: false,\n          duplicationHandler,\n          contentType: \"\",\n        })\n        setCreateFolderVisible(false)\n        message.success({\n          content: t(\"drive.message.create_suc\"),\n        })\n        setCurrentFolderPath(`${currentFolderPath}/${response.data.name}`)\n      } catch (e) {\n        message.error({\n          content: t(\"drive.message.create_failed\"),\n        })\n      }\n    },\n    [\n      currentFolderID,\n      currentFolderPath,\n      message,\n      setCreateFolderVisible,\n      setCurrentFolderPath,\n      t,\n    ],\n  )\n\n  const handleClickCreate = useCallback(async () => {\n    setIsLoading(true)\n    try {\n      const duplicateResponse = await fetchCheckFileExist([\n        {\n          folderID: currentFolderID,\n          name: folderName,\n          type: GCS_OBJECT_TYPE.FOLDER,\n        },\n      ])\n      const duplicateInfo = duplicateResponse.data[0]\n      if (duplicateInfo.isDuplicated) {\n        setNewFolderName(duplicateInfo.name)\n        setSameModalVisible(true)\n        return\n      }\n      await createFolder(folderName.trim())\n    } catch (e) {\n    } finally {\n      setIsLoading(false)\n    }\n  }, [createFolder, currentFolderID, folderName, setSameModalVisible])\n\n  return (\n    <>\n      <Modal\n        closable\n        visible={createFolderVisible}\n        okButtonProps={{\n          disabled: (folderName ?? \"\").trim().length <= 0 || isDisabled,\n          loading: isLoading,\n          colorScheme: \"techPurple\",\n        }}\n        enableOnFormTags={[]}\n        title={t(\"drive.create_modal.title.create_a_folder\")}\n        okText={t(\"drive.create_modal.title.create\")}\n        cancelText={t(\"drive.create_modal.title.cancel\")}\n        onOk={handleClickCreate}\n        onCancel={() => {\n          setCreateFolderVisible(false)\n        }}\n        afterClose={() => {\n          setFolderName(\"\")\n          setIsLoading(false)\n        }}\n      >\n        <Input\n          colorScheme=\"techPurple\"\n          onChange={setFolderName}\n          value={folderName}\n          maxLength={255}\n        />\n        {isDisabled ? (\n          <span css={invalidTipsStyle}>\n            {t(\"drive.create_modal.validate_failed\")}\n          </span>\n        ) : (\n          <span css={messageStyle}>{t(\"drive.create_modal.validate\")}</span>\n        )}\n      </Modal>\n      <SameNameModal\n        objectName={newFolderName}\n        createFolder={createFolder}\n        sameModalVisible={sameModalVisible}\n        setSameModalVisible={setSameModalVisible}\n      />\n    </>\n  )\n}\n\nexport default CreateFolderModal\n","import { css } from \"@emotion/react\"\n\nexport const emptyContainerStyle = css`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n","import { FolderIcon } from \"@illa-public/icon\"\nimport { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { emptyContainerStyle } from \"./style\"\n\nconst EmptyState: FC = () => {\n  const { t } = useTranslation()\n  return (\n    <div css={emptyContainerStyle}>\n      <FolderIcon />\n      <span>{t(\"drive.move_modal.no_folders\")}</span>\n    </div>\n  )\n}\n\nexport default EmptyState\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\nimport { FOLDER_LIST_ITEM_HEIGHT } from \"../../constants\"\n\nexport const listItemContainerStyle = css`\n  display: flex;\n  align-items: center;\n  height: ${FOLDER_LIST_ITEM_HEIGHT}px;\n  gap: 4px;\n  cursor: pointer;\n`\n\nexport const folderIconStyle = css`\n  width: 24px;\n  height: 24px;\n`\n\nexport const folderNameStyle = css`\n  font-size: 14px;\n  color: ${getColor(\"grayBlue\", \"02\")};\n  font-weight: 500;\n`\n\nexport const doubtStyle = css`\n  display: flex;\n  width: 16px;\n  height: 16px;\n`\n","import { AnonymousIcon, FolderIcon } from \"@illa-public/icon\"\nimport { GCS_OBJECT_TYPE, IILLAFileInfo } from \"@illa-public/public-types\"\nimport VirtualList from \"rc-virtual-list\"\nimport { FC, useCallback, useContext, useRef } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { DoubtIcon, Trigger } from \"@illa-design/react\"\nimport {\n  FOLDER_LIST_CONTAINER_HEIGHT,\n  FOLDER_LIST_ITEM_HEIGHT,\n} from \"../../constants\"\nimport { FolderOperateModalContext } from \"../../context\"\nimport { FolderListProps } from \"./interface\"\nimport {\n  doubtStyle,\n  folderIconStyle,\n  folderNameStyle,\n  listItemContainerStyle,\n} from \"./style\"\n\nconst FolderList: FC<FolderListProps> = (props) => {\n  const { listData, updateListData } = props\n  const { t } = useTranslation()\n  const { currentFolderPath, setCurrentFolderPath } = useContext(\n    FolderOperateModalContext,\n  )\n\n  const handleClickItem = useCallback(\n    (name: string) => {\n      return () => {\n        const path = `${currentFolderPath}/${name}`\n        setCurrentFolderPath(path)\n      }\n    },\n    [currentFolderPath, setCurrentFolderPath],\n  )\n  const currentPageIndexRef = useRef(1)\n\n  const onScroll = (e: React.UIEvent<HTMLElement, UIEvent>) => {\n    if (\n      e.currentTarget.scrollHeight - e.currentTarget.scrollTop ===\n      FOLDER_LIST_CONTAINER_HEIGHT\n    ) {\n      updateListData(++currentPageIndexRef.current, currentFolderPath)\n    }\n  }\n\n  return (\n    <VirtualList\n      height={FOLDER_LIST_CONTAINER_HEIGHT}\n      itemHeight={FOLDER_LIST_ITEM_HEIGHT}\n      itemKey=\"id\"\n      data={listData}\n      onScroll={onScroll}\n    >\n      {(item: IILLAFileInfo) => {\n        return (\n          <div\n            css={listItemContainerStyle}\n            onClick={handleClickItem(item.name)}\n          >\n            {item.type === GCS_OBJECT_TYPE.ANONYMOUS_FOLDER ? (\n              <AnonymousIcon css={folderIconStyle} />\n            ) : (\n              <FolderIcon css={folderIconStyle} />\n            )}\n            <span css={folderNameStyle}>{item.name}</span>\n            {item.type === GCS_OBJECT_TYPE.ANONYMOUS_FOLDER && (\n              <Trigger\n                position=\"top\"\n                content={t(\"drive.drive_builder.public_folder.tips\")}\n              >\n                <span css={doubtStyle}>\n                  <DoubtIcon size=\"16px\" />\n                </span>\n              </Trigger>\n            )}\n          </div>\n        )\n      }}\n    </VirtualList>\n  )\n}\n\nexport default FolderList\n","import { css } from \"@emotion/react\"\nimport { FOLDER_LIST_CONTAINER_HEIGHT } from \"../../constants\"\n\nexport const loadingContainerStyle = css`\n  height: ${FOLDER_LIST_CONTAINER_HEIGHT}px;\n  width: 100%;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: 0;\n  z-index: 4;\n`\n","import { FC } from \"react\"\nimport { Loading } from \"@illa-design/react\"\nimport { loadingContainerStyle } from \"./style\"\n\nconst LoadingState: FC = () => {\n  return (\n    <div css={loadingContainerStyle}>\n      <Loading colorScheme=\"techPurple\" />\n    </div>\n  )\n}\n\nexport default LoadingState\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\nimport { FOLDER_LIST_CONTAINER_HEIGHT } from \"../../constants\"\n\nexport const containerStyle = css`\n  padding: 24px;\n`\n\nexport const contentHeaderStyle = css`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-bottom: 8px;\n  & > span {\n    font-size: 16px;\n    font-weight: 600;\n    line-height: 32px;\n  }\n`\n\nexport const applyInnerFolderListContainerStyle = (isLoading: boolean) => {\n  const loadingStyle = css`\n    opacity: 0.5;\n    transition: opacity 0.3s;\n    user-select: none;\n    pointer-events: none;\n  `\n  return css`\n    height: 100%;\n    width: 100%;\n    ${isLoading && loadingStyle};\n  `\n}\n\nexport const breadcrumbContainerStyle = css`\n  display: flex;\n  align-items: center;\n  gap: 16px;\n  padding: 8px 0;\n`\n\nexport const folderListContainerStyle = css`\n  height: ${FOLDER_LIST_CONTAINER_HEIGHT}px;\n  width: 100%;\n  position: relative;\n  color: ${getColor(\"grayBlue\", \"02\")};\n`\n\nexport const footerContainerStyle = css`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-top: 24px;\n`\n\nexport const footerOperationsContainerStyle = css`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`\n\nexport const newFolderButtonStyle = css`\n  color: ${getColor(\"grayBlue\", \"02\")};\n  padding: 5px 8px !important;\n`\n\nexport const spanBreadcrumbStyle = css`\n  font-size: 14px;\n  font-weight: 500;\n`\n\nexport const closeStyle = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 6px;\n  cursor: pointer;\n`\n\nexport const breadItemStyle = (isLast: boolean) => css`\n  color: ${isLast ? getColor(\"techPurple\", \"03\") : getColor(\"gray\", \"04\")};\n`\n","import {\n  DRIVE_FILE_TYPE,\n  IILLAFileInfo,\n  SORTED_TYPE,\n} from \"@illa-public/public-types\"\nimport {\n  FC,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  CloseIcon,\n} from \"@illa-design/react\"\nimport { PlusIcon } from \"@illa-design/react\"\nimport { fetchFileList } from \"@/services/drive\"\nimport { FOLDER_LIST_LIMIT_IN_MODAL, ROOT_PATH } from \"../../constants\"\nimport { FolderOperateModalContext } from \"../../context\"\nimport CreateFolderModal from \"../CreateFolderModal\"\nimport EmptyState from \"../Empty\"\nimport FolderList from \"../FolderList\"\nimport LoadingState from \"../LoadingState\"\nimport {\n  applyInnerFolderListContainerStyle,\n  breadItemStyle,\n  breadcrumbContainerStyle,\n  closeStyle,\n  containerStyle,\n  contentHeaderStyle,\n  folderListContainerStyle,\n  footerContainerStyle,\n  footerOperationsContainerStyle,\n  newFolderButtonStyle,\n  spanBreadcrumbStyle,\n} from \"./style\"\n\nconst FolderModalContent: FC = () => {\n  const {\n    title,\n    subTitle,\n    currentFolderPath,\n    setCurrentFolderPath,\n    setFolderOperateVisible,\n    setCreateFolderVisible,\n    operateChildren,\n  } = useContext(FolderOperateModalContext)\n  const { t } = useTranslation()\n  const [folderList, setFolderList] = useState<IILLAFileInfo[]>([])\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n\n  const totalRef = useRef<number>(0)\n  const currentFolderID = useRef(\"\")\n\n  const breadList = useMemo(() => {\n    return currentFolderPath.split(\"/\").map((item, index, array) => {\n      const path = array.slice(0, index + 1).join(\"/\")\n      const isLast = index === array.length - 1\n      const isFirst = index === 0\n      if (isFirst) {\n        return {\n          title: t(\"drive.upload.modal.all\"),\n          path: ROOT_PATH,\n          last: isLast,\n        }\n      }\n      return {\n        path,\n        title: item,\n        last: isLast,\n      }\n    })\n  }, [currentFolderPath, t])\n\n  const handleFetchFileList = useCallback(\n    (pageIndex: number = 1, path: string) => {\n      if (folderList.length >= totalRef.current) {\n        return\n      }\n      setIsLoading(true)\n      fetchFileList({\n        path: `/${path}`,\n        page: pageIndex,\n        limit: FOLDER_LIST_LIMIT_IN_MODAL,\n        type: DRIVE_FILE_TYPE.FOLDER,\n        sortedBy: \"name\",\n        sortedType: SORTED_TYPE.ascend,\n      })\n        .then((res) => {\n          const folders = res.data.files ?? []\n          currentFolderID.current = res.data.currentFolderID\n          totalRef.current = res.data.total\n          setFolderList(folderList.concat(folders))\n        })\n        .finally(() => {\n          setIsLoading(false)\n        })\n    },\n    [folderList],\n  )\n\n  const handleInitFIleList = useCallback(\n    async (abortSignal: AbortSignal) => {\n      setIsLoading(true)\n      try {\n        const res = await fetchFileList(\n          {\n            path: `/${currentFolderPath}`,\n            page: 1,\n            limit: FOLDER_LIST_LIMIT_IN_MODAL,\n            type: DRIVE_FILE_TYPE.FOLDER,\n            sortedBy: \"name\",\n            sortedType: SORTED_TYPE.ascend,\n          },\n          abortSignal,\n        )\n        const folders = res.data.files ?? []\n        currentFolderID.current = res.data.currentFolderID\n        totalRef.current = res.data.total\n        setFolderList(folders)\n        setIsLoading(false)\n      } catch (e) {\n        console.log(\"e\", e)\n      }\n    },\n    [currentFolderPath, currentFolderID],\n  )\n\n  useEffect(() => {\n    const abortController = new AbortController()\n    handleInitFIleList(abortController.signal)\n\n    return () => {\n      abortController.abort()\n    }\n  }, [handleInitFIleList])\n\n  return (\n    <div css={containerStyle}>\n      <div css={contentHeaderStyle}>\n        <span>{title ?? t(\"drive.upload.modal.title\")}</span>\n        <span css={closeStyle} onClick={() => setFolderOperateVisible(false)}>\n          <CloseIcon size=\"12px\" />\n        </span>\n      </div>\n      <div css={breadcrumbContainerStyle}>\n        <span css={spanBreadcrumbStyle}>{subTitle}: </span>\n        <Breadcrumb\n          blockRouterChange\n          flexWrap=\"wrap\"\n          onClickPath={(path: string, last: boolean) => {\n            !last && setCurrentFolderPath(path)\n          }}\n        >\n          {breadList.map((item, index) => (\n            <BreadcrumbItem key={index} href={item.path}>\n              <span css={breadItemStyle(item.last)}>{item.title}</span>\n            </BreadcrumbItem>\n          ))}\n        </Breadcrumb>\n      </div>\n      <div css={folderListContainerStyle}>\n        <div css={applyInnerFolderListContainerStyle(isLoading)}>\n          {folderList.length > 0 ? (\n            <FolderList\n              listData={folderList}\n              updateListData={handleFetchFileList}\n              key={currentFolderPath}\n            />\n          ) : !isLoading ? (\n            <EmptyState />\n          ) : (\n            <></>\n          )}\n        </div>\n        {isLoading && <LoadingState />}\n      </div>\n      <div css={footerContainerStyle}>\n        <Button\n          variant=\"text\"\n          leftIcon={<PlusIcon />}\n          css={newFolderButtonStyle}\n          onClick={() => {\n            setCreateFolderVisible(true)\n          }}\n        >\n          {t(\"drive.upload.modal.create_folder\")}\n        </Button>\n        <div css={footerOperationsContainerStyle}>\n          <Button\n            colorScheme=\"grayBlue\"\n            onClick={() => setFolderOperateVisible(false)}\n          >\n            {t(\"drive.upload.modal.cancel\")}\n          </Button>\n          {operateChildren}\n        </div>\n      </div>\n      <CreateFolderModal currentFolderID={currentFolderID.current} />\n    </div>\n  )\n}\n\nexport default FolderModalContent\n","import { FC, useContext } from \"react\"\nimport { Modal } from \"@illa-design/react\"\nimport FolderModalContent from \"./components/FolderModalContent\"\nimport { FolderOperateModalContext } from \"./context\"\n\nconst FolderOperateModal: FC = () => {\n  const { folderOperateVisible, setFolderOperateVisible } = useContext(\n    FolderOperateModalContext,\n  )\n\n  return (\n    <div\n      onClick={(e) => {\n        e.stopPropagation()\n      }}\n    >\n      <Modal\n        visible={folderOperateVisible}\n        w=\"auto\"\n        footer={false}\n        withoutPadding\n        onCancel={() => setFolderOperateVisible(false)}\n      >\n        <FolderModalContent />\n      </Modal>\n    </div>\n  )\n}\n\nexport default FolderOperateModal\nexport * from \"./constants\"\nexport * from \"./context\"\n","import * as React from \"react\";\nconst SvgPanelFolder = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 16, height: 16, viewBox: \"0 0 16 16\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M14 7H2V4C2 2.89543 2.89543 2 4 2H5.46483C5.79917 2 6.1114 2.16709 6.29687 2.44528L6.70313 3.05465C6.8886 3.33284 7.20083 3.49994 7.53517 3.49994H12C13.1046 3.49994 14 4.39537 14 5.49994V7ZM14 7.99994H2V11.9999C2 13.1045 2.89543 13.9999 4 13.9999H12C13.1046 13.9999 14 13.1045 14 11.9999V7.99994Z\", fill: \"#1D2129\" }));\nexport default SvgPanelFolder;\n"],"names":["FOLDER_LIST_CONTAINER_HEIGHT","FOLDER_LIST_ITEM_HEIGHT","FOLDER_LIST_LIMIT_IN_MODAL","ROOT_PATH","FolderOperateModalContext","createContext","controlContainer","css","SameNameModalContent","props","objectName","onCancel","createFolder","t","useTranslation","isLoading","setIsLoading","useState","createFolderEffect","useCallback","duplicationHandler","e","jsxs","jsx","Button","DUPLICATION_HANDLER","SameNameModal","sameModalVisible","setSameModalVisible","Modal","getColor","invalidTipsStyle","messageStyle","availableFilenameRule","isInvalidFolderName","folderName","CreateFolderModal","currentFolderID","currentFolderPath","createFolderVisible","setCreateFolderVisible","setCurrentFolderPath","useContext","message","useMessage","setFolderName","newFolderName","setNewFolderName","isDisabled","name","response","fetchGCSUploadPresignedURL","GCS_OBJECT_TYPE","handleClickCreate","duplicateInfo","fetchCheckFileExist","Fragment","Input","emptyContainerStyle","EmptyState","FolderIcon","listItemContainerStyle","folderIconStyle","folderNameStyle","doubtStyle","FolderList","listData","updateListData","handleClickItem","path","currentPageIndexRef","useRef","VirtualList","item","AnonymousIcon","Trigger","DoubtIcon","loadingContainerStyle","LoadingState","Loading","containerStyle","contentHeaderStyle","applyInnerFolderListContainerStyle","loadingStyle","breadcrumbContainerStyle","folderListContainerStyle","footerContainerStyle","footerOperationsContainerStyle","newFolderButtonStyle","spanBreadcrumbStyle","closeStyle","breadItemStyle","isLast","FolderModalContent","title","subTitle","setFolderOperateVisible","operateChildren","folderList","setFolderList","totalRef","breadList","useMemo","index","array","handleFetchFileList","pageIndex","fetchFileList","DRIVE_FILE_TYPE","SORTED_TYPE","res","folders","handleInitFIleList","abortSignal","useEffect","abortController","CloseIcon","Breadcrumb","last","BreadcrumbItem","PlusIcon","FolderOperateModal","folderOperateVisible","SvgPanelFolder","React.createElement"],"mappings":"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"}