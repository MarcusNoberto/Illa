{"version":3,"file":"index-dadf6af3.js","sources":["../../src/page/App/components/InspectPanel/PanelSetters/InputSetter/BaseInput/index.tsx"],"sourcesContent":["import { hasDynamicStringSnippet } from \"@illa-public/dynamic-string\"\nimport { ILLA_MIXPANEL_EVENT_TYPE } from \"@illa-public/mixpanel-utils\"\nimport { isString } from \"lodash-es\"\nimport { FC, useCallback, useMemo } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { CodeEditor } from \"@/components/CodeEditor\"\nimport {\n  CODE_LANG,\n  CODE_TYPE,\n} from \"@/components/CodeEditor/CodeMirror/extensions/interface\"\nimport {\n  getNeedComputedValueWithList,\n  realInputValueWithList,\n} from \"@/page/App/components/InspectPanel/PanelSetters/InputSetter/util\"\nimport { PanelLabel } from \"@/page/App/components/InspectPanel/components/Label\"\nimport { getContainerListDisplayNameMappedChildrenNodeDisplayName } from \"@/redux/currentApp/components/componentsSelector\"\nimport { trackInEditor } from \"@/utils/mixpanelHelper\"\nimport { NewBaseInputSetterProps } from \"./interface\"\nimport { applyInputSetterWrapperStyle, setterContainerStyle } from \"./style\"\n\nconst BaseInput: FC<NewBaseInputSetterProps> = (props) => {\n  const {\n    isSetterSingleRow,\n    placeholder,\n    attrName,\n    handleUpdateDsl,\n    expectedType,\n    value,\n    widgetDisplayName,\n    labelName,\n    detailedDescription,\n    defaultValue,\n    labelDesc,\n    widgetType,\n    wrappedCodeFunc,\n    labelSize,\n    onlyHasSetter = false,\n  } = props\n\n  const listWidgets = useSelector(\n    getContainerListDisplayNameMappedChildrenNodeDisplayName,\n  )\n\n  const currentListDisplayName = useMemo(() => {\n    const listWidgetDisplayNames = Object.keys(listWidgets)\n    for (let i = 0; i < listWidgetDisplayNames.length; i++) {\n      if (listWidgets[listWidgetDisplayNames[i]].includes(widgetDisplayName)) {\n        return listWidgetDisplayNames[i]\n      }\n    }\n    return \"\"\n  }, [listWidgets, widgetDisplayName])\n\n  const finalWrapperCode = useMemo(() => {\n    if (\n      currentListDisplayName &&\n      hasDynamicStringSnippet(value ?? \"\") &&\n      value?.includes(\"currentItem\")\n    ) {\n      return (value: string) => {\n        return getNeedComputedValueWithList(value, currentListDisplayName)\n      }\n    }\n    return wrappedCodeFunc\n  }, [currentListDisplayName, value, wrappedCodeFunc])\n\n  const finalValue = useMemo(() => {\n    if (currentListDisplayName) {\n      return realInputValueWithList(\n        value ?? defaultValue,\n        currentListDisplayName,\n      )\n    }\n\n    if (value === undefined && defaultValue === undefined) {\n      return undefined\n    }\n\n    if (!isString(value ?? defaultValue)) {\n      return `{{ ${value ?? defaultValue} }}`\n    }\n    return value ?? defaultValue\n  }, [currentListDisplayName, defaultValue, value])\n\n  const onChange = useCallback(\n    (value: string) => {\n      let output = value\n      if (\n        currentListDisplayName &&\n        hasDynamicStringSnippet(value ?? \"\") &&\n        value.includes(\"currentItem\")\n      ) {\n        output = getNeedComputedValueWithList(value, currentListDisplayName)\n      }\n      handleUpdateDsl(attrName, output)\n    },\n    [attrName, currentListDisplayName, handleUpdateDsl],\n  )\n\n  const onFocus = useCallback(() => {\n    trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.FOCUS, {\n      element: \"component_inspect_code_mirror\",\n      parameter1: widgetType,\n      parameter2: attrName,\n    })\n  }, [attrName, widgetType])\n\n  const onBlur = useCallback(\n    (value: string) => {\n      trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.BLUR, {\n        element: \"component_inspect_code_mirror\",\n        parameter1: widgetType,\n        parameter2: attrName,\n        parameter3: value.length,\n      })\n    },\n    [attrName, widgetType],\n  )\n\n  return (\n    <div css={setterContainerStyle(isSetterSingleRow, onlyHasSetter)}>\n      {!onlyHasSetter && labelName && (\n        <span>\n          <PanelLabel\n            labelName={labelName}\n            labelDesc={labelDesc}\n            labelSize={labelSize}\n          />\n        </span>\n      )}\n      <div css={applyInputSetterWrapperStyle(isSetterSingleRow)}>\n        <CodeEditor\n          scopeOfAutoComplete=\"page\"\n          value={finalValue}\n          onChange={onChange}\n          showLineNumbers={false}\n          placeholder={placeholder}\n          expectValueType={currentListDisplayName ? undefined : expectedType}\n          lang={CODE_LANG.JAVASCRIPT}\n          maxHeight=\"208px\"\n          maxWidth=\"100%\"\n          codeType={CODE_TYPE.EXPRESSION}\n          modalTitle={labelName}\n          modalDescription={detailedDescription ?? labelDesc}\n          onFocus={onFocus}\n          onBlur={onBlur}\n          wrappedCodeFunc={finalWrapperCode}\n        />\n      </div>\n    </div>\n  )\n}\n\nBaseInput.displayName = \"BaseInput\"\nexport default BaseInput\n"],"names":["BaseInput","props","isSetterSingleRow","placeholder","attrName","handleUpdateDsl","expectedType","value","widgetDisplayName","labelName","detailedDescription","defaultValue","labelDesc","widgetType","wrappedCodeFunc","labelSize","onlyHasSetter","listWidgets","useSelector","getContainerListDisplayNameMappedChildrenNodeDisplayName","currentListDisplayName","useMemo","listWidgetDisplayNames","i","finalWrapperCode","hasDynamicStringSnippet","getNeedComputedValueWithList","finalValue","realInputValueWithList","isString","onChange","useCallback","output","onFocus","trackInEditor","ILLA_MIXPANEL_EVENT_TYPE","onBlur","setterContainerStyle","jsx","PanelLabel","applyInputSetterWrapperStyle","CodeEditor","CODE_LANG","CODE_TYPE"],"mappings":"2oBAoBM,MAAAA,EAA0CC,GAAU,CAClD,KAAA,CACJ,kBAAAC,EACA,YAAAC,EACA,SAAAC,EACA,gBAAAC,EACA,aAAAC,EACA,MAAAC,EACA,kBAAAC,EACA,UAAAC,EACA,oBAAAC,EACA,aAAAC,EACA,UAAAC,EACA,WAAAC,EACA,gBAAAC,EACA,UAAAC,EACA,cAAAC,EAAgB,EACd,EAAAf,EAEEgB,EAAcC,EAClBC,CAAA,EAGIC,EAAyBC,EAAAA,QAAQ,IAAM,CACrC,MAAAC,EAAyB,OAAO,KAAKL,CAAW,EACtD,QAASM,EAAI,EAAGA,EAAID,EAAuB,OAAQC,IACjD,GAAIN,EAAYK,EAAuBC,CAAC,CAAC,EAAE,SAASf,CAAiB,EACnE,OAAOc,EAAuBC,CAAC,EAG5B,MAAA,EAAA,EACN,CAACN,EAAaT,CAAiB,CAAC,EAE7BgB,EAAmBH,EAAAA,QAAQ,IAE7BD,GACAK,EAAwBlB,GAAS,EAAE,IACnCA,GAAA,MAAAA,EAAO,SAAS,gBAERA,GACCmB,EAA6BnB,EAAOa,CAAsB,EAG9DN,EACN,CAACM,EAAwBb,EAAOO,CAAe,CAAC,EAE7Ca,EAAaN,EAAAA,QAAQ,IAAM,CAC/B,GAAID,EACK,OAAAQ,EACLrB,GAASI,EACTS,CAAA,EAIA,GAAA,EAAAb,IAAU,QAAaI,IAAiB,QAI5C,OAAKkB,EAAStB,GAASI,CAAY,EAG5BJ,GAASI,EAFP,MAAMJ,GAASI,CAAY,KAGnC,EAAA,CAACS,EAAwBT,EAAcJ,CAAK,CAAC,EAE1CuB,EAAWC,EAAA,YACdxB,GAAkB,CACjB,IAAIyB,EAASzB,EAEXa,GACAK,EAAwBlB,GAAS,EAAE,GACnCA,EAAM,SAAS,aAAa,IAEnByB,EAAAN,EAA6BnB,EAAOa,CAAsB,GAErEf,EAAgBD,EAAU4B,CAAM,CAClC,EACA,CAAC5B,EAAUgB,EAAwBf,CAAe,CAAA,EAG9C4B,EAAUF,EAAAA,YAAY,IAAM,CAChCG,EAAcC,EAAyB,MAAO,CAC5C,QAAS,gCACT,WAAYtB,EACZ,WAAYT,CAAA,CACb,CAAA,EACA,CAACA,EAAUS,CAAU,CAAC,EAEnBuB,EAASL,EAAA,YACZxB,GAAkB,CACjB2B,EAAcC,EAAyB,KAAM,CAC3C,QAAS,gCACT,WAAYtB,EACZ,WAAYT,EACZ,WAAYG,EAAM,MAAA,CACnB,CACH,EACA,CAACH,EAAUS,CAAU,CAAA,EAGvB,SACG,MAAI,CAAA,IAAKwB,EAAqBnC,EAAmBc,CAAa,EAC5D,SAAA,CAAC,CAAAA,GAAiBP,GACjB6B,EAAC,OACC,CAAA,SAAAA,EAACC,EAAA,CACC,UAAA9B,EACA,UAAAG,EACA,UAAAG,CAAA,CAAA,EAEJ,EAEDuB,EAAA,MAAA,CAAI,IAAKE,EAA6BtC,CAAiB,EACtD,SAAAoC,EAACG,EAAA,CACC,oBAAoB,OACpB,MAAOd,EACP,SAAAG,EACA,gBAAiB,GACjB,YAAA3B,EACA,gBAAiBiB,EAAyB,OAAYd,EACtD,KAAMoC,EAAU,WAChB,UAAU,QACV,SAAS,OACT,SAAUC,EAAU,WACpB,WAAYlC,EACZ,iBAAkBC,GAAuBE,EACzC,QAAAqB,EACA,OAAAG,EACA,gBAAiBZ,CAAA,CAAA,EAErB,CACF,CAAA,CAAA,CAEJ,EAEAxB,EAAU,YAAc"}