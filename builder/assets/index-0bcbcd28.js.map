{"version":3,"file":"index-0bcbcd28.js","sources":["../../src/page/App/components/Actions/ActionPanel/RedisPanel/style.ts","../../src/page/App/components/Actions/ActionPanel/RedisPanel/index.tsx"],"sourcesContent":["import { css } from \"@emotion/react\"\n\nexport const actionItemContainer = css`\n  padding: 8px 0;\n`\n","import { RedisAction } from \"@illa-public/public-types\"\nimport { FC, useCallback, useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { CODE_LANG } from \"@/components/CodeEditor/CodeMirror/extensions/interface\"\nimport { actionItemContainer } from \"@/page/App/components/Actions/ActionPanel/RedisPanel/style\"\nimport { TransformerComponent } from \"@/page/App/components/Actions/ActionPanel/TransformerComponent\"\nimport { InputEditor } from \"@/page/App/components/Actions/InputEditor\"\nimport { getCachedAction } from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { fetchResourceMeta } from \"@/services/resource\"\nimport { VALIDATION_TYPES } from \"@/utils/validationFactory\"\n\nconst RedisPanel: FC = () => {\n  const action = useSelector(getCachedAction)!!\n  const [sqlTable, setSqlTable] = useState<Record<string, unknown>>()\n\n  useEffect(() => {\n    if (action.resourceID == undefined) return\n    fetchResourceMeta(action.resourceID).then(({ data }) => {\n      setSqlTable(data?.Schema ?? {})\n    })\n  }, [action.resourceID])\n\n  const currentContent = action.content as RedisAction\n  const dispatch = useDispatch()\n\n  const handleValueChange = useCallback(\n    (value: string) => {\n      dispatch(\n        configActions.updateCachedAction({\n          ...action,\n          content: {\n            ...currentContent,\n            query: value,\n          },\n        }),\n      )\n    },\n    [action, currentContent, dispatch],\n  )\n\n  return (\n    <div css={actionItemContainer}>\n      <InputEditor\n        style={{ maxHeight: \"88px\" }}\n        placeholder=\"SET runoobkey redis\"\n        lineNumbers\n        canShowCompleteInfo\n        value={currentContent.query}\n        mode={CODE_LANG.JAVASCRIPT}\n        expectedType={VALIDATION_TYPES.STRING}\n        sqlScheme={sqlTable}\n        onChange={handleValueChange}\n      />\n\n      <TransformerComponent fullWidth />\n    </div>\n  )\n}\nRedisPanel.displayName = \"RedisPanel\"\nexport default RedisPanel\n"],"names":["actionItemContainer","css","RedisPanel","action","useSelector","getCachedAction","sqlTable","setSqlTable","useState","useEffect","fetchResourceMeta","data","currentContent","dispatch","useDispatch","handleValueChange","useCallback","value","configActions","jsxs","jsx","InputEditor","CODE_LANG","VALIDATION_TYPES","TransformerComponent"],"mappings":"kkCAEO,MAAMA,EAAsBC;AAAA;AAAA,ECU7BC,EAAiB,IAAM,CACrB,MAAAC,EAASC,EAAYC,CAAe,EACpC,CAACC,EAAUC,CAAW,EAAIC,EAAkC,SAAA,EAElEC,EAAAA,UAAU,IAAM,CACVN,EAAO,YAAc,MACzBO,EAAkBP,EAAO,UAAU,EAAE,KAAK,CAAC,CAAE,KAAAQ,KAAW,CAC1CJ,GAAAI,GAAA,YAAAA,EAAM,SAAU,CAAA,CAAE,CAAA,CAC/B,CAAA,EACA,CAACR,EAAO,UAAU,CAAC,EAEtB,MAAMS,EAAiBT,EAAO,QACxBU,EAAWC,IAEXC,EAAoBC,EAAA,YACvBC,GAAkB,CACjBJ,EACEK,EAAc,mBAAmB,CAC/B,GAAGf,EACH,QAAS,CACP,GAAGS,EACH,MAAOK,CACT,CAAA,CACD,CAAA,CAEL,EACA,CAACd,EAAQS,EAAgBC,CAAQ,CAAA,EAIjC,OAAAM,EAAC,MAAI,CAAA,IAAKnB,EACR,SAAA,CAAAoB,EAACC,EAAA,CACC,MAAO,CAAE,UAAW,MAAO,EAC3B,YAAY,sBACZ,YAAW,GACX,oBAAmB,GACnB,MAAOT,EAAe,MACtB,KAAMU,EAAU,WAChB,aAAcC,EAAiB,OAC/B,UAAWjB,EACX,SAAUS,CAAA,CACZ,EAEAK,EAACI,EAAqB,CAAA,UAAS,EAAC,CAAA,CAClC,CAAA,CAAA,CAEJ,EACAtB,EAAW,YAAc"}