{"version":3,"file":"index-b8442d1a.js","sources":["../../src/page/App/components/Avatar/style.ts","../../src/page/App/components/Avatar/index.tsx"],"sourcesContent":["import { SerializedStyles, css } from \"@emotion/react\"\nimport { globalColor, illaPrefix } from \"@illa-design/react\"\n\nexport function applyUserAvatarStyle(\n  background: string,\n  showType?: string,\n  type?: string,\n): SerializedStyles {\n  const basicStyle = css`\n    display: inline-block;\n    background: ${background};\n    text-align: center;\n    border-radius: 50%;\n    cursor: pointer;\n    flex-shrink: 0;\n    color: ${globalColor(`--${illaPrefix}-white-01`)};\n  `\n  if (showType === \"components\") {\n    if (type === \"list\") {\n      return css`\n        ${basicStyle};\n        width: 24px;\n        height: 24px;\n        line-height: 24px;\n      `\n    }\n    return css`\n      ${basicStyle};\n      width: 14px;\n      height: 14px;\n      line-height: 14px;\n      font-weight: 500;\n    `\n  }\n\n  return css`\n    ${basicStyle};\n    width: 32px;\n    height: 32px;\n    line-height: 32px;\n  `\n}\n\nexport const getAvatarStyle = (showType?: string, type?: string) => {\n  const basicStyle = css`\n    text-align: center;\n    border-radius: 50%;\n    display: inline-block;\n    cursor: pointer;\n    flex-shrink: 0;\n  `\n  if (showType === \"components\") {\n    if (type === \"list\") {\n      return css`\n        ${basicStyle};\n        width: 24px;\n        height: 24px;\n        line-height: 24px;\n      `\n    }\n    return css`\n      ${basicStyle};\n      width: 14px;\n      height: 14px;\n      line-height: 14px;\n    `\n  }\n\n  return css`\n    ${basicStyle};\n    width: 32px;\n    height: 32px;\n    line-height: 32px;\n  `\n}\n\nexport const triggerStyle = css`\n  z-index: 10;\n`\n","import { HTTP_REQUEST_PUBLIC_BASE_URL } from \"@illa-public/illa-net/constant\"\nimport { getColorByString } from \"@illa-public/utils\"\nimport { isCloudVersion } from \"@illa-public/utils\"\nimport { FC } from \"react\"\nimport { Popover } from \"@illa-design/react\"\nimport { AvatarProps } from \"@/page/App/components/Avatar/interface\"\nimport {\n  applyUserAvatarStyle,\n  getAvatarStyle,\n} from \"@/page/App/components/Avatar/style\"\n\nconst getFirstChar = (str: string | undefined) => {\n  if (!str) return \"U\"\n  const trimStr = str.trim()\n  const regex = /^./u\n  const match = trimStr.match(regex)\n  return match ? match[0].toUpperCase() : \"U\"\n}\n\nexport const Avatar: FC<AvatarProps> = (props) => {\n  const { userID, nickname, avatar, showType, type, showTooltips, className } =\n    props\n  const avatarBgColor = getColorByString(userID || \"\")\n  const avatarText = getFirstChar(nickname)\n  const node = avatar ? (\n    <img\n      src={\n        avatar\n          ? isCloudVersion\n            ? avatar\n            : `${HTTP_REQUEST_PUBLIC_BASE_URL}${avatar}`\n          : undefined\n      }\n      css={getAvatarStyle(showType, type)}\n      className={className}\n    />\n  ) : (\n    <span\n      css={applyUserAvatarStyle(avatarBgColor, showType, type)}\n      className={className}\n    >\n      {avatarText}\n    </span>\n  )\n  return (\n    <Popover\n      trigger=\"hover\"\n      content={nickname}\n      disabled={!showTooltips}\n      hasCloseIcon={false}\n      position=\"top\"\n      colorScheme=\"grayBlue\"\n    >\n      {node}\n    </Popover>\n  )\n}\n"],"names":["applyUserAvatarStyle","background","showType","type","basicStyle","css","globalColor","illaPrefix","getAvatarStyle","getFirstChar","str","trimStr","regex","match","Avatar","props","userID","nickname","avatar","showTooltips","className","avatarBgColor","getColorByString","avatarText","node","jsx","HTTP_REQUEST_PUBLIC_BASE_URL","Popover"],"mappings":"iKAGgB,SAAAA,EACdC,EACAC,EACAC,EACkB,CAClB,MAAMC,EAAaC;AAAA;AAAA,kBAEHJ,CAAU;AAAA;AAAA;AAAA;AAAA;AAAA,aAKfK,EAAY,KAAKC,CAAU,WAAW,CAAC;AAAA,IAElD,OAAIL,IAAa,aACXC,IAAS,OACJE;AAAA,UACHD,CAAU;AAAA;AAAA;AAAA;AAAA,QAMTC;AAAA,QACHD,CAAU;AAAA;AAAA;AAAA;AAAA;AAAA,MAQTC;AAAA,MACHD,CAAU;AAAA;AAAA;AAAA;AAAA,GAKhB,CAEa,MAAAI,EAAiB,CAACN,EAAmBC,IAAkB,CAClE,MAAMC,EAAaC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOnB,OAAIH,IAAa,aACXC,IAAS,OACJE;AAAA,UACHD,CAAU;AAAA;AAAA;AAAA;AAAA,QAMTC;AAAA,QACHD,CAAU;AAAA;AAAA;AAAA;AAAA,MAOTC;AAAA,MACHD,CAAU;AAAA;AAAA;AAAA;AAAA,GAKhB,EAE4BC;AAAA;AAAA,ECjE5B,MAAMI,EAAgBC,GAA4B,CAChD,GAAI,CAACA,EAAY,MAAA,IACX,MAAAC,EAAUD,EAAI,OACdE,EAAQ,MACRC,EAAQF,EAAQ,MAAMC,CAAK,EACjC,OAAOC,EAAQA,EAAM,CAAC,EAAE,cAAgB,GAC1C,EAEaC,EAA2BC,GAAU,CAC1C,KAAA,CAAE,OAAAC,EAAQ,SAAAC,EAAU,OAAAC,EAAQ,SAAAhB,EAAU,KAAAC,EAAM,aAAAgB,EAAc,UAAAC,CAC9D,EAAAL,EACIM,EAAgBC,EAAiBN,GAAU,EAAE,EAC7CO,EAAad,EAAaQ,CAAQ,EAClCO,EAAON,EACXO,EAAC,MAAA,CACC,IACEP,EAGM,GAAGQ,CAA4B,GAAGR,CAAM,GAC1C,OAEN,IAAKV,EAAeN,EAAUC,CAAI,EAClC,UAAAiB,CAAA,CAAA,EAGFK,EAAC,OAAA,CACC,IAAKzB,EAAqBqB,EAAenB,EAAUC,CAAI,EACvD,UAAAiB,EAEC,SAAAG,CAAA,CAAA,EAIH,OAAAE,EAACE,EAAA,CACC,QAAQ,QACR,QAASV,EACT,SAAU,CAACE,EACX,aAAc,GACd,SAAS,MACT,YAAY,WAEX,SAAAK,CAAA,CAAA,CAGP"}