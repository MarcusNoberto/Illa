{"version":3,"file":"date-3a06a0cc.js","sources":["../../src/widgetLibrary/DateWidget/date.tsx"],"sourcesContent":["import dayjs, { Dayjs } from \"dayjs\"\nimport { FC, useCallback, useEffect } from \"react\"\nimport { SingleDatePicker } from \"@illa-design/react\"\nimport { AutoHeightContainer } from \"@/widgetLibrary/PublicSector/AutoHeightContainer\"\nimport { InvalidMessage } from \"@/widgetLibrary/PublicSector/InvalidMessage\"\nimport {\n  getValidateVFromString,\n  handleValidateCheck,\n} from \"@/widgetLibrary/PublicSector/InvalidMessage/utils\"\nimport { Label } from \"@/widgetLibrary/PublicSector/Label\"\nimport { TooltipWrapper } from \"@/widgetLibrary/PublicSector/TooltipWrapper\"\nimport {\n  applyLabelAndComponentWrapperStyle,\n  applyValidateMessageWrapperStyle,\n} from \"@/widgetLibrary/PublicSector/TransformWidgetWrapper/style\"\nimport { DateWidgetProps, WrappedDateProps } from \"./interface\"\n\nexport const WrappedDate: FC<WrappedDateProps> = (props) => {\n  const {\n    value,\n    dateFormat,\n    placeholder,\n    showClear,\n    minDate,\n    disabled,\n    maxDate,\n    colorScheme,\n    getValidateMessage,\n    handleUpdateMultiExecutionResult,\n    handleOnChange,\n    displayName,\n    readOnly,\n  } = props\n\n  const changeValue = (value?: unknown) => {\n    new Promise((resolve) => {\n      const message = getValidateMessage(value)\n      handleUpdateMultiExecutionResult([\n        {\n          displayName,\n          value: {\n            value: value || \"\",\n            validateMessage: message,\n          },\n        },\n      ])\n      resolve(true)\n    }).then(() => {\n      handleOnChange?.()\n    })\n  }\n\n  const checkRange = useCallback(\n    (current?: Dayjs) => {\n      const beforeMinDate = minDate\n        ? !!current?.isBefore(dayjs(minDate))\n        : false\n      const afterMaxDate = maxDate ? !!current?.isAfter(dayjs(maxDate)) : false\n      return beforeMinDate || afterMaxDate\n    },\n    [minDate, maxDate],\n  )\n\n  return (\n    <SingleDatePicker\n      w=\"100%\"\n      editable={!readOnly}\n      colorScheme={colorScheme}\n      format={dateFormat}\n      value={value}\n      disabled={disabled}\n      placeholder={placeholder}\n      allowClear={showClear}\n      disabledDate={checkRange}\n      onClear={() => {\n        changeValue(\"\")\n      }}\n      onChange={changeValue}\n    />\n  )\n}\n\nWrappedDate.displayName = \"WrappedDate\"\n\nexport const DateWidget: FC<DateWidgetProps> = (props) => {\n  const {\n    value,\n    handleUpdateDsl,\n    updateComponentRuntimeProps,\n    deleteComponentRuntimeProps,\n    labelPosition,\n    labelFull,\n    label,\n    labelAlign,\n    labelWidth = 33,\n    labelCaption,\n    labelWidthUnit,\n    required,\n    labelHidden,\n    tooltipText,\n    pattern,\n    regex,\n    customRule,\n    hideValidationMessage,\n    updateComponentHeight,\n    validateMessage,\n    triggerEventHandler,\n  } = props\n\n  const getValidateMessage = useCallback(\n    (value?: unknown) => {\n      if (!hideValidationMessage) {\n        const message = handleValidateCheck({\n          value: getValidateVFromString(value),\n          required,\n          customRule,\n          pattern,\n          regex,\n        })\n        const showMessage = message && message.length > 0\n        return showMessage ? message : \"\"\n      }\n      return \"\"\n    },\n    [customRule, hideValidationMessage, pattern, regex, required],\n  )\n\n  const handleValidate = useCallback(\n    (value?: unknown) => {\n      const message = getValidateMessage(value)\n      handleUpdateDsl({\n        validateMessage: message,\n      })\n      return message\n    },\n    [getValidateMessage, handleUpdateDsl],\n  )\n\n  useEffect(() => {\n    updateComponentRuntimeProps({\n      setValue: (value: string) => {\n        handleUpdateDsl({ value })\n      },\n      clearValue: () => {\n        handleUpdateDsl({ value: \"\" })\n      },\n      validate: () => {\n        return handleValidate(value)\n      },\n    })\n    return () => {\n      deleteComponentRuntimeProps()\n    }\n  }, [\n    updateComponentRuntimeProps,\n    handleUpdateDsl,\n    deleteComponentRuntimeProps,\n    handleValidate,\n    value,\n  ])\n\n  const handleOnChange = useCallback(() => {\n    triggerEventHandler(\"change\")\n  }, [triggerEventHandler])\n\n  return (\n    <AutoHeightContainer updateComponentHeight={updateComponentHeight}>\n      <TooltipWrapper tooltipText={tooltipText} tooltipDisabled={!tooltipText}>\n        <div css={applyLabelAndComponentWrapperStyle(labelPosition)}>\n          <Label\n            labelFull={labelFull}\n            label={label}\n            labelAlign={labelAlign}\n            labelWidth={labelWidth}\n            labelCaption={labelCaption}\n            labelWidthUnit={labelWidthUnit}\n            labelPosition={labelPosition}\n            required={required}\n            labelHidden={labelHidden}\n            hasTooltip={!!tooltipText}\n          />\n          <WrappedDate\n            {...props}\n            getValidateMessage={getValidateMessage}\n            handleOnChange={handleOnChange}\n          />\n        </div>\n      </TooltipWrapper>\n      {!hideValidationMessage && (\n        <div\n          css={applyValidateMessageWrapperStyle(\n            labelWidth,\n            labelPosition,\n            labelHidden || !label,\n          )}\n        >\n          <InvalidMessage validateMessage={validateMessage} />\n        </div>\n      )}\n    </AutoHeightContainer>\n  )\n}\nDateWidget.displayName = \"DateWidget\"\n\nexport default DateWidget\n"],"names":["WrappedDate","props","value","dateFormat","placeholder","showClear","minDate","disabled","maxDate","colorScheme","getValidateMessage","handleUpdateMultiExecutionResult","handleOnChange","displayName","readOnly","changeValue","resolve","message","checkRange","useCallback","current","beforeMinDate","dayjs","afterMaxDate","jsx","SingleDatePicker","DateWidget","handleUpdateDsl","updateComponentRuntimeProps","deleteComponentRuntimeProps","labelPosition","labelFull","label","labelAlign","labelWidth","labelCaption","labelWidthUnit","required","labelHidden","tooltipText","pattern","regex","customRule","hideValidationMessage","updateComponentHeight","validateMessage","triggerEventHandler","handleValidateCheck","getValidateVFromString","handleValidate","useEffect","jsxs","AutoHeightContainer","TooltipWrapper","applyLabelAndComponentWrapperStyle","Label","applyValidateMessageWrapperStyle","InvalidMessage"],"mappings":"sdAiBa,MAAAA,EAAqCC,GAAU,CACpD,KAAA,CACJ,MAAAC,EACA,WAAAC,EACA,YAAAC,EACA,UAAAC,EACA,QAAAC,EACA,SAAAC,EACA,QAAAC,EACA,YAAAC,EACA,mBAAAC,EACA,iCAAAC,EACA,eAAAC,EACA,YAAAC,EACA,SAAAC,CACE,EAAAb,EAEEc,EAAeb,GAAoB,CACnC,IAAA,QAASc,GAAY,CACjB,MAAAC,EAAUP,EAAmBR,CAAK,EACPS,EAAA,CAC/B,CACE,YAAAE,EACA,MAAO,CACL,MAAOX,GAAS,GAChB,gBAAiBe,CACnB,CACF,CAAA,CACD,EACDD,EAAQ,EAAI,CAAA,CACb,EAAE,KAAK,IAAM,CACKJ,GAAA,MAAAA,GAAA,CAClB,CAAA,EAGGM,EAAaC,EAAA,YAChBC,GAAoB,CACb,MAAAC,EAAgBf,EAClB,CAAC,EAACc,GAAA,MAAAA,EAAS,SAASE,EAAMhB,CAAO,IACjC,GACEiB,EAAef,EAAU,CAAC,EAACY,GAAA,MAAAA,EAAS,QAAQE,EAAMd,CAAO,IAAK,GACpE,OAAOa,GAAiBE,CAC1B,EACA,CAACjB,EAASE,CAAO,CAAA,EAIjB,OAAAgB,EAACC,EAAA,CACC,EAAE,OACF,SAAU,CAACX,EACX,YAAAL,EACA,OAAQN,EACR,MAAAD,EACA,SAAAK,EACA,YAAAH,EACA,WAAYC,EACZ,aAAca,EACd,QAAS,IAAM,CACbH,EAAY,EAAE,CAChB,EACA,SAAUA,CAAA,CAAA,CAGhB,EAEAf,EAAY,YAAc,cAEb,MAAA0B,EAAmCzB,GAAU,CAClD,KAAA,CACJ,MAAAC,EACA,gBAAAyB,EACA,4BAAAC,EACA,4BAAAC,EACA,cAAAC,EACA,UAAAC,EACA,MAAAC,EACA,WAAAC,EACA,WAAAC,EAAa,GACb,aAAAC,EACA,eAAAC,EACA,SAAAC,EACA,YAAAC,EACA,YAAAC,EACA,QAAAC,EACA,MAAAC,EACA,WAAAC,EACA,sBAAAC,EACA,sBAAAC,EACA,gBAAAC,EACA,oBAAAC,CACE,EAAA7C,EAEES,EAAqBS,EAAA,YACxBjB,GAAoB,CACnB,GAAI,CAACyC,EAAuB,CAC1B,MAAM1B,EAAU8B,EAAoB,CAClC,MAAOC,EAAuB9C,CAAK,EACnC,SAAAmC,EACA,WAAAK,EACA,QAAAF,EACA,MAAAC,CAAA,CACD,EAED,OADoBxB,GAAWA,EAAQ,OAAS,EAC3BA,EAAU,EACjC,CACO,MAAA,EACT,EACA,CAACyB,EAAYC,EAAuBH,EAASC,EAAOJ,CAAQ,CAAA,EAGxDY,EAAiB9B,EAAA,YACpBjB,GAAoB,CACb,MAAAe,EAAUP,EAAmBR,CAAK,EACxB,OAAAyB,EAAA,CACd,gBAAiBV,CAAA,CAClB,EACMA,CACT,EACA,CAACP,EAAoBiB,CAAe,CAAA,EAGtCuB,EAAAA,UAAU,KACoBtB,EAAA,CAC1B,SAAW1B,GAAkB,CACXyB,EAAA,CAAE,MAAAzB,CAAAA,CAAO,CAC3B,EACA,WAAY,IAAM,CACAyB,EAAA,CAAE,MAAO,EAAA,CAAI,CAC/B,EACA,SAAU,IACDsB,EAAe/C,CAAK,CAC7B,CACD,EACM,IAAM,CACiB2B,GAAA,GAE7B,CACDD,EACAD,EACAE,EACAoB,EACA/C,CAAA,CACD,EAEK,MAAAU,EAAiBO,EAAAA,YAAY,IAAM,CACvC2B,EAAoB,QAAQ,CAAA,EAC3B,CAACA,CAAmB,CAAC,EAGtB,OAAAK,EAACC,GAAoB,sBAAAR,EACnB,SAAA,CAACpB,EAAA6B,EAAA,CAAe,YAAAd,EAA0B,gBAAiB,CAACA,EAC1D,WAAC,MAAI,CAAA,IAAKe,EAAmCxB,CAAa,EACxD,SAAA,CAAAN,EAAC+B,EAAA,CACC,UAAAxB,EACA,MAAAC,EACA,WAAAC,EACA,WAAAC,EACA,aAAAC,EACA,eAAAC,EACA,cAAAN,EACA,SAAAO,EACA,YAAAC,EACA,WAAY,CAAC,CAACC,CAAA,CAChB,EACAf,EAACxB,EAAA,CACE,GAAGC,EACJ,mBAAAS,EACA,eAAAE,CAAA,CACF,CAAA,CAAA,CACF,CACF,CAAA,EACC,CAAC+B,GACAnB,EAAC,MAAA,CACC,IAAKgC,EACHtB,EACAJ,EACAQ,GAAe,CAACN,CAClB,EAEA,SAAAR,EAACiC,GAAe,gBAAAZ,CAAkC,CAAA,CAAA,CACpD,CAEJ,CAAA,CAAA,CAEJ,EACAnB,EAAW,YAAc"}