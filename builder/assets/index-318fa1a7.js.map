{"version":3,"file":"index-318fa1a7.js","sources":["../../src/page/App/components/Actions/ActionPanel/HuggingFaceCommonPanel/constants.ts","../../src/page/App/components/Actions/ActionPanel/HuggingFaceCommonPanel/style.ts","../../src/page/App/components/Actions/ActionPanel/HuggingFaceCommonPanel/index.tsx"],"sourcesContent":["export const ParametersTypeMap = [\n  {\n    label: 'Fill in \"inputs\" parameter with key-value',\n    value: \"pairs\",\n  },\n  {\n    label: 'Fill in \"inputs\" parameter with text',\n    value: \"text\",\n  },\n  {\n    label: 'Fill in \"inputs\" parameter with JSON',\n    value: \"json\",\n  },\n  {\n    label: \"Binary\",\n    value: \"binary\",\n  },\n]\n","import { css } from \"@emotion/react\"\n\nexport const actionItemContainer = css`\n  padding: 8px 0;\n`\n\nexport const textCodeEditorStyle = css`\n  width: 100%;\n  margin-top: 8px;\n  margin-bottom: 8px;\n`\n","import {\n  HuggingFaceInputInitial,\n  HuggingFacePairsBodyInitital,\n} from \"@illa-public/public-configs\"\nimport {\n  ActionItem,\n  HuggingFaceAction,\n  HuggingFaceBodyContent,\n  HuggingFaceParametesType,\n} from \"@illa-public/public-types\"\nimport { Params } from \"@illa-public/public-types\"\nimport { TextLink } from \"@illa-public/text-link\"\nimport { Namespace, TFunction } from \"i18next\"\nimport { FC, useCallback } from \"react\"\nimport { Trans, useTranslation } from \"react-i18next\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { Select, SelectValue } from \"@illa-design/react\"\nimport { CodeEditor } from \"@/components/CodeEditor\"\nimport { CODE_LANG } from \"@/components/CodeEditor/CodeMirror/extensions/interface\"\nimport { RecordEditor } from \"@/components/RecordEditor\"\nimport { HuggingFaceCommonPanelProps } from \"@/page/App/components/Actions/ActionPanel/HuggingFaceCommonPanel/interface\"\nimport {\n  bodyChooserStyle,\n  bodyEditorContainerStyle,\n  bodyLabelStyle,\n  bodySelectorStyle,\n  codeEditorStyle,\n} from \"@/page/App/components/Actions/ActionPanel/RestApiPanel/BodyEditor/style\"\nimport { SingleTypeComponent } from \"@/page/App/components/Actions/ActionPanel/SingleTypeComponent\"\nimport { TransformerComponent } from \"@/page/App/components/Actions/ActionPanel/TransformerComponent\"\nimport { InputEditor } from \"@/page/App/components/Actions/InputEditor\"\nimport {\n  getCachedAction,\n  getSelectedAction,\n} from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { VALIDATION_TYPES } from \"@/utils/validationFactory\"\nimport { ParametersTypeMap } from \"./constants\"\nimport { actionItemContainer, textCodeEditorStyle } from \"./style\"\n\nconst getDetailedParameters = ({\n  t,\n  content,\n  handleParametersValueChange,\n}: {\n  t: TFunction<Namespace, undefined>\n  content: HuggingFaceAction<HuggingFaceBodyContent>\n  handleParametersValueChange: (value: string, key: string) => void\n}) => {\n  return (\n    <>\n      {[\n        {\n          title: t(\"editor.action.panel.hugging_face.use_cache\"),\n          name: \"useCache\",\n          value: content.detailParams?.useCache,\n          placeholder: t(\n            \"editor.action.panel.hugging_face.placeholder.use_cache\",\n          ),\n        },\n        {\n          title: t(\"editor.action.panel.hugging_face.wait_for_model\"),\n          name: \"waitForModel\",\n          value: content.detailParams?.waitForModel,\n          placeholder: t(\n            \"editor.action.panel.hugging_face.placeholder.use_cache\",\n          ),\n        },\n        {\n          title: t(\"editor.action.panel.hugging_face.min_length\"),\n          name: \"minLength\",\n          value: content.detailParams?.minLength,\n          placeholder: t(\n            \"editor.action.panel.hugging_face.placeholder.min_length\",\n          ),\n        },\n        {\n          title: t(\"editor.action.panel.hugging_face.max_length\"),\n          name: \"maxLength\",\n          value: content.detailParams?.maxLength,\n          placeholder: t(\n            \"editor.action.panel.hugging_face.placeholder.min_length\",\n          ),\n        },\n\n        {\n          title: t(\"editor.action.panel.hugging_face.top_k\"),\n          name: \"topK\",\n          value: content.detailParams?.topK,\n          placeholder: t(\"editor.action.panel.hugging_face.placeholder.top_k\"),\n        },\n        {\n          title: t(\"editor.action.panel.hugging_face.top_p\"),\n          name: \"topP\",\n          value: content.detailParams?.topP,\n          placeholder: t(\"editor.action.panel.hugging_face.placeholder.top_p\"),\n        },\n\n        {\n          title: t(\"editor.action.panel.hugging_face.temperature\"),\n          name: \"temperature\",\n          value: content.detailParams?.temperature,\n          placeholder: t(\n            \"editor.action.panel.hugging_face.placeholder.temperature\",\n          ),\n          tips: t(\"editor.action.panel.hugging_face.tips.temperature\"),\n        },\n        {\n          title: t(\"editor.action.panel.hugging_face.repetition_penalty\"),\n          name: \"repetitionPenalty\",\n          value: content.detailParams?.repetitionPenalty,\n          placeholder: t(\n            \"editor.action.panel.hugging_face.placeholder.repetition_penalty\",\n          ),\n          tips: t(\"editor.action.panel.hugging_face.tips.repetition_penalty\"),\n        },\n        {\n          title: t(\"editor.action.panel.hugging_face.max_time\"),\n          name: \"maxTime\",\n          value: content.detailParams?.maxTime,\n          placeholder: t(\n            \"editor.action.panel.hugging_face.placeholder.max_time\",\n          ),\n        },\n      ].map(\n        (\n          {\n            title,\n            name,\n            value,\n            placeholder,\n            tips,\n          }: {\n            title: string\n            name: string\n            value: string\n            placeholder?: string\n            tips?: string\n          },\n          index: number,\n        ) => (\n          <InputEditor\n            key={index}\n            title={title}\n            value={value ?? \"\"}\n            onChange={(value) => handleParametersValueChange(value, name)}\n            expectedType={VALIDATION_TYPES.STRING}\n            placeholder={placeholder ?? \"\"}\n            tips={tips ?? \"\"}\n          />\n        ),\n      )}\n    </>\n  )\n}\n\nexport const HuggingFaceCommonPanel: FC<HuggingFaceCommonPanelProps> = (\n  props,\n) => {\n  const { withoutModel = false } = props\n  const { t } = useTranslation()\n\n  const cachedAction = useSelector(getCachedAction) as ActionItem<\n    HuggingFaceAction<HuggingFaceBodyContent>\n  >\n  const selectedAction = useSelector(getSelectedAction) as ActionItem<\n    HuggingFaceAction<HuggingFaceBodyContent>\n  >\n\n  const content =\n    cachedAction.content as HuggingFaceAction<HuggingFaceBodyContent>\n  const currentParameterType = content.inputs.type || \"text\"\n  const dispatch = useDispatch()\n\n  const handleURLClick = (link: string) => window.open(link, \"_blank\")\n\n  const handleValueChange = useCallback(\n    (key: string) => (value: string | boolean) => {\n      dispatch(\n        configActions.updateCachedAction({\n          ...cachedAction,\n          content: {\n            ...content,\n            [key]: value,\n          },\n        }),\n      )\n    },\n    [cachedAction, content, dispatch],\n  )\n\n  const handleInputsValueChange = useCallback(\n    (value: HuggingFaceBodyContent) => {\n      dispatch(\n        configActions.updateCachedAction({\n          ...cachedAction,\n          content: {\n            ...content,\n            inputs: {\n              type: content.inputs.type,\n              content: value,\n            },\n          },\n        }),\n      )\n    },\n    [cachedAction, content, dispatch],\n  )\n\n  const handleParameterChange = useCallback(\n    (value?: SelectValue) => {\n      let newBody =\n        value === \"pairs\"\n          ? HuggingFacePairsBodyInitital\n          : HuggingFaceInputInitial\n      if (\n        selectedAction.resourceID === cachedAction.resourceID &&\n        selectedAction.content?.inputs?.type === value\n      ) {\n        newBody = selectedAction.content.inputs.content\n      }\n      dispatch(\n        configActions.updateCachedAction({\n          ...cachedAction,\n          content: {\n            ...content,\n            withDetailParams:\n              value === \"binary\" ? false : content.withDetailParams,\n            inputs: {\n              type: value as HuggingFaceParametesType,\n              content: newBody,\n            },\n          },\n        }),\n      )\n    },\n    [cachedAction, content, dispatch, selectedAction],\n  )\n\n  const handleOnAddKeys = useCallback(() => {\n    let newList: Params[] = [\n      ...((content.inputs.content as Params[]) ?? [{ key: \"\", value: \"\" }]),\n      { key: \"\", value: \"\" } as Params,\n    ]\n    handleInputsValueChange(newList)\n  }, [content, handleInputsValueChange])\n\n  const handleOnChangeKey = useCallback(\n    (index: number, key: string, value: string) => {\n      let newList: Params[] = [\n        ...((content.inputs.content as Params[]) ?? [{ key: \"\", value: \"\" }]),\n      ]\n      newList[index] = { key, value: value } as Params\n      handleInputsValueChange(newList)\n    },\n    [content, handleInputsValueChange],\n  )\n\n  const handleOnChangeValue = useCallback(\n    (index: number, key: string, value: string) => {\n      let newList: Params[] = [\n        ...((content.inputs.content as Params[]) ?? [{ key: \"\", value: \"\" }]),\n      ]\n      newList[index] = { key, value: value } as Params\n      handleInputsValueChange(newList)\n    },\n    [content, handleInputsValueChange],\n  )\n\n  const handleOnDeleteKey = useCallback(\n    (index: number, _record: Params) => {\n      let newList: Params[] = [\n        ...((content.inputs.content as Params[]) ?? [{ key: \"\", value: \"\" }]),\n      ]\n      newList.splice(index, 1)\n      handleInputsValueChange(newList)\n    },\n    [content, handleInputsValueChange],\n  )\n\n  const handleParametersValueChange = useCallback(\n    (value: string, key: string) => {\n      dispatch(\n        configActions.updateCachedAction({\n          ...cachedAction,\n          content: {\n            ...content,\n            detailParams: {\n              ...content.detailParams,\n              [key]: value,\n            },\n          },\n        }),\n      )\n    },\n    [cachedAction, content, dispatch],\n  )\n\n  return (\n    <div css={actionItemContainer}>\n      {!withoutModel && (\n        <InputEditor\n          title={t(\"editor.action.panel.hugging_face.mode_id\")}\n          value={content.modelID ?? \"\"}\n          onChange={handleValueChange(\"modelID\")}\n          expectedType={VALIDATION_TYPES.STRING}\n          tips={\n            <Trans\n              i18nKey=\"editor.action.panel.hugging_face.tips.mode_id\"\n              t={t}\n              components={[\n                <TextLink\n                  key=\"editor.action.panel.hugging_face.tips.mode_id\"\n                  onClick={() => {\n                    handleURLClick(\"https://huggingface.co/models\")\n                  }}\n                />,\n              ]}\n            />\n          }\n        />\n      )}\n      <div css={bodyEditorContainerStyle}>\n        <span css={bodyLabelStyle}>\n          {t(\"editor.action.panel.hugging_face.parameter\")}\n        </span>\n        <div css={bodyChooserStyle}>\n          <div css={bodySelectorStyle}>\n            <Select\n              colorScheme=\"techPurple\"\n              showSearch={true}\n              defaultValue={content?.inputs?.type || \"text\"}\n              value={content?.inputs?.type || \"text\"}\n              w=\"100%\"\n              placeholder={t(\n                \"editor.action.panel.firebase.placeholder.select_an_action\",\n              )}\n              onChange={handleParameterChange}\n              options={ParametersTypeMap}\n            />\n          </div>\n          {currentParameterType === \"pairs\" && (\n            <RecordEditor\n              label=\"\"\n              records={\n                (content.inputs.content as Params[]) ?? [{ key: \"\", value: \"\" }]\n              }\n              onChangeKey={handleOnChangeKey}\n              onChangeValue={handleOnChangeValue}\n              onDelete={handleOnDeleteKey}\n              onAdd={handleOnAddKeys}\n              valueInputType={VALIDATION_TYPES.ANY}\n            />\n          )}\n          {(currentParameterType === \"binary\" ||\n            currentParameterType === \"json\") && (\n            <div css={codeEditorStyle}>\n              <CodeEditor\n                key={currentParameterType}\n                lang={CODE_LANG.JAVASCRIPT}\n                showLineNumbers\n                value={(content.inputs.content as string) ?? \"\"}\n                expectValueType={VALIDATION_TYPES.STRING}\n                height=\"88px\"\n                placeholder={\n                  currentParameterType === \"binary\"\n                    ? t(\"editor.action.panel.hugging_face.placeholder.binary\")\n                    : t(\"editor.action.panel.hugging_face.placeholder.json\")\n                }\n                onChange={handleInputsValueChange}\n              />\n            </div>\n          )}\n          {currentParameterType === \"text\" && (\n            <div css={textCodeEditorStyle}>\n              <CodeEditor\n                lang={CODE_LANG.JAVASCRIPT}\n                value={(content?.inputs.content ?? \"\") as string}\n                onChange={handleInputsValueChange}\n                expectValueType={VALIDATION_TYPES.STRING}\n                placeholder={t(\n                  \"editor.action.panel.hugging_face.placeholder.text\",\n                )}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      {currentParameterType !== \"binary\" && (\n        <SingleTypeComponent\n          componentType=\"checkbox\"\n          value={content.withDetailParams ?? false}\n          checkoutTitle={t(\n            \"editor.action.panel.hugging_face.use_detail_parameters\",\n          )}\n          onBooleanValueChange={handleValueChange(\"withDetailParams\")}\n          tips={\n            <Trans\n              i18nKey=\"editor.action.panel.hugging_face.tips.use_detail_parameters\"\n              t={t}\n              components={[\n                <TextLink\n                  key=\"editor.action.panel.hugging_face.tips.use_detail_parameters\"\n                  onClick={() => {\n                    handleURLClick(\n                      \"https://huggingface.co/docs/api-inference/detailed_parameters\",\n                    )\n                  }}\n                />,\n              ]}\n            />\n          }\n        />\n      )}\n      {content.withDetailParams && (\n        <>\n          {getDetailedParameters({ t, content, handleParametersValueChange })}\n        </>\n      )}\n      <TransformerComponent />\n    </div>\n  )\n}\n\nHuggingFaceCommonPanel.displayName = \"HuggingFaceCommonPanel\"\n"],"names":["ParametersTypeMap","actionItemContainer","css","textCodeEditorStyle","getDetailedParameters","t","content","handleParametersValueChange","jsx","Fragment","_a","_b","_c","_d","_e","_f","_g","_h","_i","title","name","value","placeholder","tips","index","InputEditor","VALIDATION_TYPES","HuggingFaceCommonPanel","props","withoutModel","useTranslation","cachedAction","useSelector","getCachedAction","selectedAction","getSelectedAction","currentParameterType","dispatch","useDispatch","handleURLClick","link","handleValueChange","useCallback","key","configActions","handleInputsValueChange","handleParameterChange","newBody","HuggingFacePairsBodyInitital","HuggingFaceInputInitial","handleOnAddKeys","newList","handleOnChangeKey","handleOnChangeValue","handleOnDeleteKey","_record","jsxs","Trans","TextLink","bodyEditorContainerStyle","bodyLabelStyle","bodyChooserStyle","bodySelectorStyle","Select","RecordEditor","codeEditorStyle","CodeEditor","CODE_LANG","SingleTypeComponent","TransformerComponent"],"mappings":"2hBAAO,MAAMA,EAAoB,CAC/B,CACE,MAAO,4CACP,MAAO,OACT,EACA,CACE,MAAO,uCACP,MAAO,MACT,EACA,CACE,MAAO,uCACP,MAAO,MACT,EACA,CACE,MAAO,SACP,MAAO,QACT,CACF,ECfaC,EAAsBC;AAAA;AAAA,EAItBC,EAAsBD;AAAA;AAAA;AAAA;AAAA,ECkC7BE,GAAwB,CAAC,CAC7B,EAAAC,EACA,QAAAC,EACA,4BAAAC,CACF,IAIM,uBACJ,OAEKC,EAAAC,EAAA,CAAA,SAAA,CACC,CACE,MAAOJ,EAAE,4CAA4C,EACrD,KAAM,WACN,OAAOK,EAAAJ,EAAQ,eAAR,YAAAI,EAAsB,SAC7B,YAAaL,EACX,wDACF,CACF,EACA,CACE,MAAOA,EAAE,iDAAiD,EAC1D,KAAM,eACN,OAAOM,EAAAL,EAAQ,eAAR,YAAAK,EAAsB,aAC7B,YAAaN,EACX,wDACF,CACF,EACA,CACE,MAAOA,EAAE,6CAA6C,EACtD,KAAM,YACN,OAAOO,EAAAN,EAAQ,eAAR,YAAAM,EAAsB,UAC7B,YAAaP,EACX,yDACF,CACF,EACA,CACE,MAAOA,EAAE,6CAA6C,EACtD,KAAM,YACN,OAAOQ,EAAAP,EAAQ,eAAR,YAAAO,EAAsB,UAC7B,YAAaR,EACX,yDACF,CACF,EAEA,CACE,MAAOA,EAAE,wCAAwC,EACjD,KAAM,OACN,OAAOS,EAAAR,EAAQ,eAAR,YAAAQ,EAAsB,KAC7B,YAAaT,EAAE,oDAAoD,CACrE,EACA,CACE,MAAOA,EAAE,wCAAwC,EACjD,KAAM,OACN,OAAOU,EAAAT,EAAQ,eAAR,YAAAS,EAAsB,KAC7B,YAAaV,EAAE,oDAAoD,CACrE,EAEA,CACE,MAAOA,EAAE,8CAA8C,EACvD,KAAM,cACN,OAAOW,EAAAV,EAAQ,eAAR,YAAAU,EAAsB,YAC7B,YAAaX,EACX,0DACF,EACA,KAAMA,EAAE,mDAAmD,CAC7D,EACA,CACE,MAAOA,EAAE,qDAAqD,EAC9D,KAAM,oBACN,OAAOY,EAAAX,EAAQ,eAAR,YAAAW,EAAsB,kBAC7B,YAAaZ,EACX,iEACF,EACA,KAAMA,EAAE,0DAA0D,CACpE,EACA,CACE,MAAOA,EAAE,2CAA2C,EACpD,KAAM,UACN,OAAOa,EAAAZ,EAAQ,eAAR,YAAAY,EAAsB,QAC7B,YAAab,EACX,uDACF,CACF,CAAA,EACA,IACA,CACE,CACE,MAAAc,EACA,KAAAC,EACA,MAAAC,EACA,YAAAC,EACA,KAAAC,GAQFC,IAEAhB,EAACiB,EAAA,CAEC,MAAAN,EACA,MAAOE,GAAS,GAChB,SAAWA,GAAUd,EAA4Bc,EAAOD,CAAI,EAC5D,aAAcM,EAAiB,OAC/B,YAAaJ,GAAe,GAC5B,KAAMC,GAAQ,EAAA,EANTC,CAOP,CAGN,CAAA,CAAA,CAEJ,EAEaG,GACXC,GACG,SACG,KAAA,CAAE,aAAAC,EAAe,EAAU,EAAAD,EAC3B,CAAE,EAAAvB,GAAMyB,IAERC,EAAeC,EAAYC,CAAe,EAG1CC,EAAiBF,EAAYG,CAAiB,EAI9C7B,EACJyB,EAAa,QACTK,EAAuB9B,EAAQ,OAAO,MAAQ,OAC9C+B,EAAWC,IAEXC,EAAkBC,GAAiB,OAAO,KAAKA,EAAM,QAAQ,EAE7DC,EAAoBC,EAAA,YACvBC,GAAiBtB,GAA4B,CAC5CgB,EACEO,EAAc,mBAAmB,CAC/B,GAAGb,EACH,QAAS,CACP,GAAGzB,EACH,CAACqC,CAAG,EAAGtB,CACT,CAAA,CACD,CAAA,CAEL,EACA,CAACU,EAAczB,EAAS+B,CAAQ,CAAA,EAG5BQ,EAA0BH,EAAA,YAC7BrB,GAAkC,CACjCgB,EACEO,EAAc,mBAAmB,CAC/B,GAAGb,EACH,QAAS,CACP,GAAGzB,EACH,OAAQ,CACN,KAAMA,EAAQ,OAAO,KACrB,QAASe,CACX,CACF,CAAA,CACD,CAAA,CAEL,EACA,CAACU,EAAczB,EAAS+B,CAAQ,CAAA,EAG5BS,EAAwBJ,EAAA,YAC3BrB,GAAwB,SACnB,IAAA0B,EACF1B,IAAU,QACN2B,EACAC,EAEJf,EAAe,aAAeH,EAAa,cAC3CpB,GAAAD,EAAAwB,EAAe,UAAf,YAAAxB,EAAwB,SAAxB,YAAAC,EAAgC,QAASU,IAE/B0B,EAAAb,EAAe,QAAQ,OAAO,SAE1CG,EACEO,EAAc,mBAAmB,CAC/B,GAAGb,EACH,QAAS,CACP,GAAGzB,EACH,iBACEe,IAAU,SAAW,GAAQf,EAAQ,iBACvC,OAAQ,CACN,KAAMe,EACN,QAAS0B,CACX,CACF,CAAA,CACD,CAAA,CAEL,EACA,CAAChB,EAAczB,EAAS+B,EAAUH,CAAc,CAAA,EAG5CgB,EAAkBR,EAAAA,YAAY,IAAM,CACxC,IAAIS,EAAoB,CACtB,GAAK7C,EAAQ,OAAO,SAAwB,CAAC,CAAE,IAAK,GAAI,MAAO,GAAI,EACnE,CAAE,IAAK,GAAI,MAAO,EAAG,CAAA,EAEvBuC,EAAwBM,CAAO,CAAA,EAC9B,CAAC7C,EAASuC,CAAuB,CAAC,EAE/BO,EAAoBV,EAAA,YACxB,CAAClB,EAAemB,EAAatB,IAAkB,CAC7C,IAAI8B,EAAoB,CACtB,GAAK7C,EAAQ,OAAO,SAAwB,CAAC,CAAE,IAAK,GAAI,MAAO,GAAI,CAAA,EAErE6C,EAAQ3B,CAAK,EAAI,CAAE,IAAAmB,EAAK,MAAAtB,CAAa,EACrCwB,EAAwBM,CAAO,CACjC,EACA,CAAC7C,EAASuC,CAAuB,CAAA,EAG7BQ,EAAsBX,EAAA,YAC1B,CAAClB,EAAemB,EAAatB,IAAkB,CAC7C,IAAI8B,EAAoB,CACtB,GAAK7C,EAAQ,OAAO,SAAwB,CAAC,CAAE,IAAK,GAAI,MAAO,GAAI,CAAA,EAErE6C,EAAQ3B,CAAK,EAAI,CAAE,IAAAmB,EAAK,MAAAtB,CAAa,EACrCwB,EAAwBM,CAAO,CACjC,EACA,CAAC7C,EAASuC,CAAuB,CAAA,EAG7BS,EAAoBZ,EAAA,YACxB,CAAClB,EAAe+B,IAAoB,CAClC,IAAIJ,EAAoB,CACtB,GAAK7C,EAAQ,OAAO,SAAwB,CAAC,CAAE,IAAK,GAAI,MAAO,GAAI,CAAA,EAE7D6C,EAAA,OAAO3B,EAAO,CAAC,EACvBqB,EAAwBM,CAAO,CACjC,EACA,CAAC7C,EAASuC,CAAuB,CAAA,EAG7BtC,EAA8BmC,EAAA,YAClC,CAACrB,EAAesB,IAAgB,CAC9BN,EACEO,EAAc,mBAAmB,CAC/B,GAAGb,EACH,QAAS,CACP,GAAGzB,EACH,aAAc,CACZ,GAAGA,EAAQ,aACX,CAACqC,CAAG,EAAGtB,CACT,CACF,CAAA,CACD,CAAA,CAEL,EACA,CAACU,EAAczB,EAAS+B,CAAQ,CAAA,EAIhC,OAAAmB,EAAC,MAAI,CAAA,IAAKvD,EACP,SAAA,CAAA,CAAC4B,GACArB,EAACiB,EAAA,CACC,MAAOpB,EAAE,0CAA0C,EACnD,MAAOC,EAAQ,SAAW,GAC1B,SAAUmC,EAAkB,SAAS,EACrC,aAAcf,EAAiB,OAC/B,KACElB,EAACiD,EAAA,CACC,QAAQ,gDACR,EAAApD,EACA,WAAY,CACVG,EAACkD,EAAA,CAEC,QAAS,IAAM,CACbnB,EAAe,+BAA+B,CAChD,CAAA,EAHI,+CAIN,CACF,CAAA,CACF,CAAA,CAEJ,EAEFiB,EAAC,MAAI,CAAA,IAAKG,EACR,SAAA,CAAAnD,EAAC,OAAK,CAAA,IAAKoD,EACR,SAAAvD,EAAE,4CAA4C,EACjD,EACAmD,EAAC,MAAI,CAAA,IAAKK,EACR,SAAA,CAACrD,EAAA,MAAA,CAAI,IAAKsD,EACR,SAAAtD,EAACuD,EAAA,CACC,YAAY,aACZ,WAAY,GACZ,eAAcrD,EAAAJ,GAAA,YAAAA,EAAS,SAAT,YAAAI,EAAiB,OAAQ,OACvC,QAAOC,EAAAL,GAAA,YAAAA,EAAS,SAAT,YAAAK,EAAiB,OAAQ,OAChC,EAAE,OACF,YAAaN,EACX,2DACF,EACA,SAAUyC,EACV,QAAS9C,CAAA,CAAA,EAEb,EACCoC,IAAyB,SACxB5B,EAACwD,EAAA,CACC,MAAM,GACN,QACG1D,EAAQ,OAAO,SAAwB,CAAC,CAAE,IAAK,GAAI,MAAO,GAAI,EAEjE,YAAa8C,EACb,cAAeC,EACf,SAAUC,EACV,MAAOJ,EACP,eAAgBxB,EAAiB,GAAA,CACnC,GAEAU,IAAyB,UACzBA,IAAyB,SACxB5B,EAAA,MAAA,CAAI,IAAKyD,EACR,SAAAzD,EAAC0D,EAAA,CAEC,KAAMC,EAAU,WAChB,gBAAe,GACf,MAAQ7D,EAAQ,OAAO,SAAsB,GAC7C,gBAAiBoB,EAAiB,OAClC,OAAO,OACP,YAEMrB,EADJ+B,IAAyB,SACnB,sDACA,mDADqD,EAG7D,SAAUS,CAAA,EAXLT,CAAA,EAaT,EAEDA,IAAyB,QACvB5B,EAAA,MAAA,CAAI,IAAKL,EACR,SAAAK,EAAC0D,EAAA,CACC,KAAMC,EAAU,WAChB,OAAQ7D,GAAA,YAAAA,EAAS,OAAO,UAAW,GACnC,SAAUuC,EACV,gBAAiBnB,EAAiB,OAClC,YAAarB,EACX,mDACF,CAAA,CAAA,EAEJ,CAAA,EAEJ,CAAA,EACF,EACC+B,IAAyB,UACxB5B,EAAC4D,EAAA,CACC,cAAc,WACd,MAAO9D,EAAQ,kBAAoB,GACnC,cAAeD,EACb,wDACF,EACA,qBAAsBoC,EAAkB,kBAAkB,EAC1D,KACEjC,EAACiD,EAAA,CACC,QAAQ,8DACR,EAAApD,EACA,WAAY,CACVG,EAACkD,EAAA,CAEC,QAAS,IAAM,CACbnB,EACE,+DAAA,CAEJ,CAAA,EALI,6DAMN,CACF,CAAA,CACF,CAAA,CAEJ,EAEDjC,EAAQ,kBAEJE,EAAAC,EAAA,CAAA,SAAAL,GAAsB,CAAE,EAAAC,EAAG,QAAAC,EAAS,4BAAAC,CAA4B,CAAC,CACpE,CAAA,IAED8D,EAAqB,EAAA,CACxB,CAAA,CAAA,CAEJ,EAEA1C,GAAuB,YAAc"}