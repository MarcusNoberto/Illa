{"version":3,"file":"index-d5454c31.js","sources":["../../src/page/App/components/Actions/ActionPanel/CouchDBPanel/values.ts","../../src/page/App/components/Actions/ActionPanel/CouchDBPanel/CreateRecordSubPanel/index.tsx","../../src/page/App/components/Actions/ActionPanel/CouchDBPanel/DeleteRecordSubPanel/index.tsx","../../src/page/App/components/Actions/ActionPanel/CouchDBPanel/FindRecordSubPanel/index.tsx","../../src/page/App/components/Actions/ActionPanel/CouchDBPanel/GetViewSubPanel/index.tsx","../../src/page/App/components/Actions/ActionPanel/CouchDBPanel/ListRecordsSubPanel/index.tsx","../../src/page/App/components/Actions/ActionPanel/CouchDBPanel/RetrieveRecordSubPanel/index.tsx","../../src/page/App/components/Actions/ActionPanel/CouchDBPanel/UpdateRecordSubPanel/index.tsx","../../src/page/App/components/Actions/ActionPanel/CouchDBPanel/index.tsx"],"sourcesContent":["import {\n  CouchDBCreateRecordInitial,\n  CouchDBDeleteRecordInitial,\n  CouchDBFindRecordInitial,\n  CouchDBGetViewInitial,\n  CouchDBListRecordsInitial,\n  CouchDBRetrieveRecordInitial,\n  CouchDBUpdateRecordInitial,\n} from \"@illa-public/public-configs\"\nimport { CouchDBOptionsType } from \"@illa-public/public-types\"\nimport i18n from \"@/i18n/config\"\nimport { VALIDATION_TYPES } from \"@/utils/validationFactory\"\n\nexport const CouchDBPanelMethodOptions = [\n  {\n    label: i18n.t(\"editor.action.panel.label.option.couchdb.action_type.list\"),\n    value: \"listRecords\",\n  },\n  {\n    label: i18n.t(\n      \"editor.action.panel.label.option.couchdb.action_type.retrieve\",\n    ),\n    value: \"retrieveRecord\",\n  },\n  {\n    label: i18n.t(\n      \"editor.action.panel.label.option.couchdb.action_type.create\",\n    ),\n    value: \"createRecord\",\n  },\n  {\n    label: i18n.t(\n      \"editor.action.panel.label.option.couchdb.action_type.update\",\n    ),\n    value: \"updateRecord\",\n  },\n  {\n    label: i18n.t(\n      \"editor.action.panel.label.option.couchdb.action_type.delete\",\n    ),\n    value: \"deleteRecord\",\n  },\n  {\n    label: i18n.t(\"editor.action.panel.label.option.couchdb.action_type.find\"),\n    value: \"find\",\n  },\n  {\n    label: i18n.t(\"editor.action.panel.label.option.couchdb.action_type.get\"),\n    value: \"getView\",\n  },\n]\n\nexport const ListRecordsInfo = [\n  {\n    title: i18n.t(\"editor.action.panel.label.option.couchdb.skip\"),\n    type: \"editor\",\n    expectedType: VALIDATION_TYPES.NUMBER,\n    name: [\"opts\", \"skip\"],\n  },\n  {\n    title: i18n.t(\"editor.action.panel.label.option.couchdb.limit\"),\n    type: \"editor\",\n    expectedType: VALIDATION_TYPES.NUMBER,\n    name: [\"opts\", \"limit\"],\n  },\n  {\n    title: i18n.t(\"editor.action.panel.label.option.couchdb.include\"),\n    type: \"switch\",\n    name: [\"opts\", \"includeDocs\"],\n    content: i18n.t(\n      \"editor.action.panel.label.option.couchdb.include_doc_option\",\n    ),\n  },\n  {\n    title: i18n.t(\"editor.action.panel.label.option.couchdb.des\"),\n    type: \"switch\",\n    name: [\"opts\", \"descendingOrder\"],\n    content: i18n.t(\"editor.action.panel.label.option.couchdb.des_option\"),\n  },\n]\n\nexport const RetrieveRecordInfo = [\n  {\n    title: i18n.t(\"editor.action.panel.label.option.couchdb.id\"),\n    type: \"editor\",\n    expectedType: VALIDATION_TYPES.STRING,\n    name: [\"opts\", \"_id\"],\n    lineNumbers: true,\n    style: {\n      maxHeight: \"88px\",\n    },\n  },\n]\n\nexport const CreateRecordInfo = [\n  {\n    title: i18n.t(\"editor.action.panel.label.option.couchdb.record\"),\n    type: \"editor\",\n    expectedType: VALIDATION_TYPES.OBJECT,\n    name: [\"opts\", \"record\"],\n    lineNumbers: true,\n    placeholder: i18n.t(\"editor.action.panel.label.placeholder.couchdb.record\"),\n    style: {\n      height: \"88px\",\n    },\n  },\n]\n\nexport const UpdateRecordInfo = [\n  {\n    title: i18n.t(\"editor.action.panel.label.option.couchdb.id\"),\n    type: \"editor\",\n    expectedType: VALIDATION_TYPES.STRING,\n    name: [\"opts\", \"_id\"],\n    lineNumbers: true,\n    style: {\n      maxHeight: \"88px\",\n    },\n  },\n  {\n    title: i18n.t(\"editor.action.panel.label.option.couchdb.rev\"),\n    type: \"editor\",\n    expectedType: VALIDATION_TYPES.STRING,\n    name: [\"opts\", \"_rev\"],\n    lineNumbers: true,\n    style: {\n      maxHeight: \"88px\",\n    },\n  },\n  {\n    title: i18n.t(\"editor.action.panel.label.option.couchdb.record\"),\n    type: \"editor\",\n    expectedType: VALIDATION_TYPES.OBJECT,\n    name: [\"opts\", \"record\"],\n    lineNumbers: true,\n    placeholder: i18n.t(\"editor.action.panel.label.placeholder.couchdb.record\"),\n    style: {\n      height: \"88px\",\n    },\n  },\n]\n\nexport const DeleteRecordInfo = [\n  {\n    title: i18n.t(\"editor.action.panel.label.option.couchdb.id\"),\n    type: \"editor\",\n    expectedType: VALIDATION_TYPES.STRING,\n    name: [\"opts\", \"_id\"],\n    lineNumbers: true,\n    style: {\n      maxHeight: \"88px\",\n    },\n  },\n  {\n    title: i18n.t(\"editor.action.panel.label.option.couchdb.rev\"),\n    type: \"editor\",\n    expectedType: VALIDATION_TYPES.STRING,\n    name: [\"opts\", \"_rev\"],\n    lineNumbers: true,\n    style: {\n      maxHeight: \"88px\",\n    },\n  },\n]\n\nexport const FindRecordInfo = [\n  {\n    title: i18n.t(\"editor.action.panel.label.option.couchdb.mangoquery\"),\n    type: \"editor\",\n    expectedType: VALIDATION_TYPES.OBJECT,\n    name: [\"opts\", \"mangoQuery\"],\n    lineNumbers: true,\n    placeholder: i18n.t(\n      \"editor.action.panel.label.placeholder.couchdb.mangoquery\",\n    ),\n    style: {\n      height: \"88px\",\n    },\n  },\n]\n\nexport const GetViewRecordsInfo = [\n  {\n    title: i18n.t(\"editor.action.panel.label.option.couchdb.ViewURL\"),\n    type: \"editor\",\n    expectedType: VALIDATION_TYPES.STRING,\n    name: [\"opts\", \"viewurl\"],\n    lineNumbers: true,\n    style: {\n      maxHeight: \"88px\",\n    },\n  },\n  {\n    title: i18n.t(\"editor.action.panel.label.option.couchdb.StartKey\"),\n    type: \"editor\",\n    expectedType: VALIDATION_TYPES.STRING,\n    name: [\"opts\", \"startkey\"],\n    lineNumbers: true,\n    style: {\n      maxHeight: \"88px\",\n    },\n  },\n  {\n    title: i18n.t(\"editor.action.panel.label.option.couchdb.EndKey\"),\n    type: \"editor\",\n    expectedType: VALIDATION_TYPES.STRING,\n    name: [\"opts\", \"endkey\"],\n    lineNumbers: true,\n    style: {\n      maxHeight: \"88px\",\n    },\n  },\n  {\n    title: i18n.t(\"editor.action.panel.label.option.couchdb.skip\"),\n    type: \"editor\",\n    expectedType: VALIDATION_TYPES.NUMBER,\n    name: [\"opts\", \"skip\"],\n  },\n  {\n    title: i18n.t(\"editor.action.panel.label.option.couchdb.limit\"),\n    type: \"editor\",\n    expectedType: VALIDATION_TYPES.NUMBER,\n    name: [\"opts\", \"limit\"],\n  },\n  {\n    title: i18n.t(\"editor.action.panel.label.option.couchdb.include\"),\n    type: \"switch\",\n    name: [\"opts\", \"includeDocs\"],\n    content: i18n.t(\n      \"editor.action.panel.label.option.couchdb.include_doc_option\",\n    ),\n  },\n]\n\nexport const CouchDBMethodsInitialValueMap: Record<string, CouchDBOptionsType> =\n  {\n    listRecords: CouchDBListRecordsInitial,\n    retrieveRecord: CouchDBRetrieveRecordInitial,\n    createRecord: CouchDBCreateRecordInitial,\n    updateRecord: CouchDBUpdateRecordInitial,\n    deleteRecord: CouchDBDeleteRecordInitial,\n    find: CouchDBFindRecordInitial,\n    getView: CouchDBGetViewInitial,\n  }\n","import { CouchDBCreateRecord } from \"@illa-public/public-types\"\nimport { FC } from \"react\"\nimport { CouchDBSubPanelProps } from \"@/page/App/components/Actions/ActionPanel/CouchDBPanel/interface\"\nimport { CreateRecordInfo } from \"@/page/App/components/Actions/ActionPanel/CouchDBPanel/values\"\nimport { InputEditor } from \"@/page/App/components/Actions/InputEditor\"\n\nexport const CreateRecordSubPanel: FC<CouchDBSubPanelProps> = (props) => {\n  const { onInputValueChange } = props\n  const opts = props.opts as CouchDBCreateRecord\n  return (\n    <>\n      {CreateRecordInfo.map((info) => {\n        const {\n          title,\n          name,\n          expectedType,\n          lineNumbers,\n          style = {},\n          placeholder,\n        } = info\n        const value = opts[name[1] as keyof CouchDBCreateRecord]\n        return (\n          <InputEditor\n            key={name.join(\"-\")}\n            title={title}\n            expectedType={expectedType}\n            value={value as string}\n            onChange={onInputValueChange(name)}\n            lineNumbers={!!lineNumbers}\n            placeholder={placeholder}\n            style={style}\n          />\n        )\n      })}\n    </>\n  )\n}\nCreateRecordSubPanel.displayName = \"CreateRecordSubPanel\"\n","import { CouchDBDeleteRecord } from \"@illa-public/public-types\"\nimport { FC } from \"react\"\nimport { CouchDBSubPanelProps } from \"@/page/App/components/Actions/ActionPanel/CouchDBPanel/interface\"\nimport { DeleteRecordInfo } from \"@/page/App/components/Actions/ActionPanel/CouchDBPanel/values\"\nimport { InputEditor } from \"@/page/App/components/Actions/InputEditor\"\n\nexport const DeleteRecordSubPanel: FC<CouchDBSubPanelProps> = (props) => {\n  const { onInputValueChange } = props\n  const opts = props.opts as CouchDBDeleteRecord\n\n  return (\n    <>\n      {DeleteRecordInfo.map((info) => {\n        const { title, name, expectedType, lineNumbers, style = {} } = info\n        const value = opts[name[1] as keyof CouchDBDeleteRecord]\n        return (\n          <InputEditor\n            key={name.join(\"-\")}\n            title={title}\n            expectedType={expectedType}\n            value={value as string}\n            onChange={onInputValueChange(name)}\n            lineNumbers={!!lineNumbers}\n            style={style}\n          />\n        )\n      })}\n    </>\n  )\n}\nDeleteRecordSubPanel.displayName = \"DeleteRecordSubPanel\"\n","import { CouchDBFindRecord } from \"@illa-public/public-types\"\nimport { FC } from \"react\"\nimport { CouchDBSubPanelProps } from \"@/page/App/components/Actions/ActionPanel/CouchDBPanel/interface\"\nimport { FindRecordInfo } from \"@/page/App/components/Actions/ActionPanel/CouchDBPanel/values\"\nimport { InputEditor } from \"@/page/App/components/Actions/InputEditor\"\n\nexport const FindRecordSubPanel: FC<CouchDBSubPanelProps> = (props) => {\n  const { onInputValueChange } = props\n  const opts = props.opts as CouchDBFindRecord\n\n  return (\n    <>\n      {FindRecordInfo.map((info) => {\n        const { title, name, expectedType, lineNumbers, style, placeholder } =\n          info\n        const value = opts[name[1] as keyof CouchDBFindRecord]\n        return (\n          <InputEditor\n            key={name.join(\"-\")}\n            title={title}\n            expectedType={expectedType}\n            value={value as string}\n            onChange={onInputValueChange(name)}\n            lineNumbers={!!lineNumbers}\n            placeholder={placeholder}\n            style={style}\n          />\n        )\n      })}\n    </>\n  )\n}\nFindRecordSubPanel.displayName = \"FindRecordSubPanel\"\n","import { CouchDBGetView } from \"@illa-public/public-types\"\nimport { FC } from \"react\"\nimport { CouchDBSubPanelProps } from \"@/page/App/components/Actions/ActionPanel/CouchDBPanel/interface\"\nimport { GetViewRecordsInfo } from \"@/page/App/components/Actions/ActionPanel/CouchDBPanel/values\"\nimport { SingleTypeComponent } from \"@/page/App/components/Actions/ActionPanel/SingleTypeComponent\"\nimport { SingleComponentType } from \"@/page/App/components/Actions/ActionPanel/SingleTypeComponent/interface\"\nimport { InputEditor } from \"@/page/App/components/Actions/InputEditor\"\n\nexport const GetViewSubPanel: FC<CouchDBSubPanelProps> = (props) => {\n  const { onInputValueChange, onBooleanValueChange } = props\n  const opts = props.opts as CouchDBGetView\n\n  return (\n    <>\n      {GetViewRecordsInfo.map((info) => {\n        const {\n          title,\n          type,\n          name,\n          expectedType,\n          lineNumbers = false,\n          style = {},\n          content = \"\",\n        } = info\n        const value = opts[name[1] as keyof CouchDBGetView]\n        if (type === \"editor\") {\n          return (\n            <InputEditor\n              key={name.join(\"-\")}\n              title={title}\n              expectedType={expectedType}\n              value={value as string}\n              onChange={onInputValueChange(name)}\n              lineNumbers={lineNumbers}\n              style={style}\n            />\n          )\n        }\n        return (\n          <SingleTypeComponent\n            key={name.join(\"-\")}\n            title={title}\n            componentType={type as SingleComponentType}\n            onBooleanValueChange={onBooleanValueChange(name)}\n            value={value}\n            switchContent={content}\n          />\n        )\n      })}\n    </>\n  )\n}\nGetViewSubPanel.displayName = \"GetViewSubPanel\"\n","import { CouchDBListRecords } from \"@illa-public/public-types\"\nimport { FC } from \"react\"\nimport { CouchDBSubPanelProps } from \"@/page/App/components/Actions/ActionPanel/CouchDBPanel/interface\"\nimport { ListRecordsInfo } from \"@/page/App/components/Actions/ActionPanel/CouchDBPanel/values\"\nimport { SingleTypeComponent } from \"@/page/App/components/Actions/ActionPanel/SingleTypeComponent\"\nimport { SingleComponentType } from \"@/page/App/components/Actions/ActionPanel/SingleTypeComponent/interface\"\nimport { InputEditor } from \"@/page/App/components/Actions/InputEditor\"\n\nexport const ListRecordsSubPanel: FC<CouchDBSubPanelProps> = (props) => {\n  const { onBooleanValueChange, onInputValueChange } = props\n  const opts = props.opts as CouchDBListRecords\n\n  return (\n    <>\n      {ListRecordsInfo.map((info) => {\n        const { title, type, name, expectedType, content = \"\" } = info\n        const value = opts[name[1] as keyof CouchDBListRecords]\n        if (type === \"editor\") {\n          return (\n            <InputEditor\n              key={name.join(\"-\")}\n              title={title}\n              expectedType={expectedType}\n              value={value as string}\n              onChange={onInputValueChange(name)}\n            />\n          )\n        }\n        return (\n          <SingleTypeComponent\n            key={name.join(\"-\")}\n            title={title}\n            componentType={type as SingleComponentType}\n            onBooleanValueChange={onBooleanValueChange(name)}\n            value={value}\n            switchContent={content}\n          />\n        )\n      })}\n    </>\n  )\n}\nListRecordsSubPanel.displayName = \"ListRecordsSubPanel\"\n","import { CouchDBRetrieveRecord } from \"@illa-public/public-types\"\nimport { FC } from \"react\"\nimport { CouchDBSubPanelProps } from \"@/page/App/components/Actions/ActionPanel/CouchDBPanel/interface\"\nimport { RetrieveRecordInfo } from \"@/page/App/components/Actions/ActionPanel/CouchDBPanel/values\"\nimport { InputEditor } from \"@/page/App/components/Actions/InputEditor\"\n\nexport const RetrieveRecordSubPanel: FC<CouchDBSubPanelProps> = (props) => {\n  const { onInputValueChange } = props\n  const opts = props.opts as CouchDBRetrieveRecord\n\n  return (\n    <>\n      {RetrieveRecordInfo.map((info) => {\n        const { title, name, expectedType, lineNumbers, style = {} } = info\n        const value = opts[name[1] as keyof CouchDBRetrieveRecord]\n        return (\n          <InputEditor\n            key={name.join(\"-\")}\n            title={title}\n            expectedType={expectedType}\n            value={value as string}\n            onChange={onInputValueChange(name)}\n            lineNumbers={!!lineNumbers}\n            style={style}\n          />\n        )\n      })}\n    </>\n  )\n}\nRetrieveRecordSubPanel.displayName = \"RetrieveRecordSubPanel\"\n","import { CouchDBUpdateRecord } from \"@illa-public/public-types\"\nimport { FC } from \"react\"\nimport { CouchDBSubPanelProps } from \"@/page/App/components/Actions/ActionPanel/CouchDBPanel/interface\"\nimport { UpdateRecordInfo } from \"@/page/App/components/Actions/ActionPanel/CouchDBPanel/values\"\nimport { InputEditor } from \"@/page/App/components/Actions/InputEditor\"\n\nexport const UpdateRecordSubPanel: FC<CouchDBSubPanelProps> = (props) => {\n  const { onInputValueChange } = props\n  const opts = props.opts as CouchDBUpdateRecord\n\n  return (\n    <>\n      {UpdateRecordInfo.map((info) => {\n        const {\n          title,\n          name,\n          expectedType,\n          lineNumbers,\n          style = {},\n          placeholder,\n        } = info\n        const value = opts[name[1] as keyof CouchDBUpdateRecord]\n        return (\n          <InputEditor\n            key={name.join(\"-\")}\n            title={title}\n            expectedType={expectedType}\n            value={value as string}\n            onChange={onInputValueChange(name)}\n            lineNumbers={!!lineNumbers}\n            placeholder={placeholder}\n            style={style}\n          />\n        )\n      })}\n    </>\n  )\n}\nUpdateRecordSubPanel.displayName = \"UpdateRecordSubPanel\"\n","import {\n  ActionItem,\n  CouchDBAction,\n  CouchDBActionMethods,\n  CouchDBOptionsType,\n} from \"@illa-public/public-types\"\nimport { FC, useCallback, useEffect, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { SelectValue } from \"@illa-design/react\"\nimport { CreateRecordSubPanel } from \"@/page/App/components/Actions/ActionPanel/CouchDBPanel/CreateRecordSubPanel\"\nimport { DeleteRecordSubPanel } from \"@/page/App/components/Actions/ActionPanel/CouchDBPanel/DeleteRecordSubPanel\"\nimport { FindRecordSubPanel } from \"@/page/App/components/Actions/ActionPanel/CouchDBPanel/FindRecordSubPanel\"\nimport { GetViewSubPanel } from \"@/page/App/components/Actions/ActionPanel/CouchDBPanel/GetViewSubPanel\"\nimport { ListRecordsSubPanel } from \"@/page/App/components/Actions/ActionPanel/CouchDBPanel/ListRecordsSubPanel\"\nimport { RetrieveRecordSubPanel } from \"@/page/App/components/Actions/ActionPanel/CouchDBPanel/RetrieveRecordSubPanel\"\nimport { UpdateRecordSubPanel } from \"@/page/App/components/Actions/ActionPanel/CouchDBPanel/UpdateRecordSubPanel\"\nimport {\n  CouchDBMethodsInitialValueMap,\n  CouchDBPanelMethodOptions,\n} from \"@/page/App/components/Actions/ActionPanel/CouchDBPanel/values\"\nimport { SingleTypeComponent } from \"@/page/App/components/Actions/ActionPanel/SingleTypeComponent\"\nimport { TransformerComponent } from \"@/page/App/components/Actions/ActionPanel/TransformerComponent\"\nimport { actionItemContainer } from \"@/page/App/components/Actions/ActionPanel/style\"\nimport {\n  getCachedAction,\n  getSelectedAction,\n} from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { fetchResourceMeta } from \"@/services/resource\"\n\ntype CouchDBPanelType = ActionItem<CouchDBAction<CouchDBOptionsType>>\n\nconst MethodSubPanelMap = {\n  listRecords: ListRecordsSubPanel,\n  retrieveRecord: RetrieveRecordSubPanel,\n  createRecord: CreateRecordSubPanel,\n  updateRecord: UpdateRecordSubPanel,\n  deleteRecord: DeleteRecordSubPanel,\n  find: FindRecordSubPanel,\n  getView: GetViewSubPanel,\n}\nconst updateActionContent = <T extends Record<string, unknown>>(\n  obj: T,\n  path: string[],\n  value: string | boolean,\n) => {\n  if (path.length === 1) {\n    const key = path[0]\n    return { ...obj, [key]: value } as T\n  }\n  const [currentKey, ...restKeys] = path\n  const currentObj = obj[currentKey] as Record<string, unknown>\n  const updatedObj = updateActionContent(currentObj, restKeys, value) as T\n\n  return { ...obj, [currentKey]: updatedObj } as T\n}\n\nconst CouchDBPanel: FC = () => {\n  const { t } = useTranslation()\n  const dispatch = useDispatch()\n  const selectedAction = useSelector(getSelectedAction) as CouchDBPanelType\n  const cachedAction = useSelector(getCachedAction) as CouchDBPanelType\n  const content = cachedAction.content\n  const selectedContent = selectedAction.content\n  const [selectOptions, setSelectOptions] = useState<string[]>([])\n\n  useEffect(() => {\n    if (cachedAction.resourceID == undefined) return\n    fetchResourceMeta(cachedAction.resourceID).then(({ data }) => {\n      const { Schema } = data\n      setSelectOptions((Schema?.databases ?? []) as string[])\n    })\n  }, [cachedAction.resourceID])\n\n  const handleValueChange = useCallback(\n    (value: string | boolean, name: string[]) => {\n      const isMethod = name[0] === \"method\"\n      let newContent: CouchDBAction<CouchDBOptionsType> = { ...content }\n      if (isMethod) {\n        if (selectedContent.method === value) {\n          newContent = { ...selectedContent }\n        } else {\n          newContent = {\n            ...content,\n            method: value as CouchDBActionMethods,\n            opts: CouchDBMethodsInitialValueMap[value as string],\n          }\n        }\n      } else {\n        newContent = updateActionContent({ ...newContent }, name, value)\n      }\n      dispatch(\n        configActions.updateCachedAction({\n          ...cachedAction,\n          content: newContent,\n        }),\n      )\n    },\n    [cachedAction, content, dispatch, selectedContent],\n  )\n\n  const handleSelectedValueChange = useCallback(\n    (name: string | string[]) => (value: SelectValue) => {\n      handleValueChange(value as string, ([] as string[]).concat(name))\n    },\n    [handleValueChange],\n  )\n\n  const handleBooleanValueChange = useCallback(\n    (name: string | string[]) => (value: boolean) => {\n      handleValueChange(value, ([] as string[]).concat(name))\n    },\n    [handleValueChange],\n  )\n\n  const SubPanel = MethodSubPanelMap[content.method]\n\n  return (\n    <div css={actionItemContainer}>\n      <SingleTypeComponent\n        title={t(\"editor.action.panel.label.couchdb.database\")}\n        componentType=\"select\"\n        onSelectedValueChange={handleSelectedValueChange(\"database\")}\n        value={content.database}\n        options={selectOptions}\n        placeholder={t(\n          \"editor.action.panel.label.placeholder.couchdb.database\",\n        )}\n      />\n      <SingleTypeComponent\n        title={t(\"editor.action.panel.label.couchdb.action_type\")}\n        componentType=\"select\"\n        onSelectedValueChange={handleSelectedValueChange(\"method\")}\n        value={content.method}\n        options={CouchDBPanelMethodOptions}\n      />\n      <SubPanel\n        onInputValueChange={handleSelectedValueChange}\n        onBooleanValueChange={handleBooleanValueChange}\n        opts={content.opts}\n      />\n      <TransformerComponent />\n    </div>\n  )\n}\nCouchDBPanel.displayName = \"CouchDBPanel\"\nexport default CouchDBPanel\n"],"names":["CouchDBPanelMethodOptions","i18n","ListRecordsInfo","VALIDATION_TYPES","RetrieveRecordInfo","CreateRecordInfo","UpdateRecordInfo","DeleteRecordInfo","FindRecordInfo","GetViewRecordsInfo","CouchDBMethodsInitialValueMap","CouchDBListRecordsInitial","CouchDBRetrieveRecordInitial","CouchDBCreateRecordInitial","CouchDBUpdateRecordInitial","CouchDBDeleteRecordInitial","CouchDBFindRecordInitial","CouchDBGetViewInitial","CreateRecordSubPanel","props","onInputValueChange","opts","jsx","Fragment","info","title","name","expectedType","lineNumbers","style","placeholder","value","InputEditor","DeleteRecordSubPanel","FindRecordSubPanel","GetViewSubPanel","onBooleanValueChange","type","content","SingleTypeComponent","ListRecordsSubPanel","RetrieveRecordSubPanel","UpdateRecordSubPanel","MethodSubPanelMap","updateActionContent","obj","path","key","currentKey","restKeys","currentObj","updatedObj","CouchDBPanel","t","useTranslation","dispatch","useDispatch","selectedAction","useSelector","getSelectedAction","cachedAction","getCachedAction","selectedContent","selectOptions","setSelectOptions","useState","useEffect","fetchResourceMeta","data","Schema","handleValueChange","useCallback","isMethod","newContent","configActions","handleSelectedValueChange","handleBooleanValueChange","SubPanel","jsxs","actionItemContainer","TransformerComponent"],"mappings":"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"}