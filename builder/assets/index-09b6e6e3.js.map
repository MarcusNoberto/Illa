{"version":3,"file":"index-09b6e6e3.js","sources":["../../src/page/Deploy/style.ts","../../src/page/Deploy/Watermark/style.ts","../../src/page/Deploy/Watermark/index.tsx","../../src/page/Deploy/content.tsx","../../src/page/Deploy/index.tsx"],"sourcesContent":["import { SerializedStyles, css } from \"@emotion/react\"\nimport { globalColor, illaPrefix } from \"@illa-design/react\"\n\nexport const deployContainerStyle = css`\n  width: 100%;\n  height: 100%;\n  position: relative;\n`\n\nexport const loadingStyle = css`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n`\n\nexport function applyPopupStateStyle(openState?: boolean): SerializedStyles {\n  const transform = openState\n    ? css`\n        transform: rotate(180deg);\n      `\n    : css`\n        transform: rotate(0deg);\n      `\n\n  return css`\n    margin-left: 8px;\n    transition: transform 0.2s ease;\n    ${transform};\n  `\n}\n\nexport const upgradeBgStyle = css`\n  padding: 5px 4px;\n`\n\nexport const upgradePopContainerStyle = css`\n  text-align: center;\n  font-size: 12px;\n  line-height: 20px;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-03`)};\n  ${upgradeBgStyle};\n`\n\nexport const upgradeTitleStyle = css`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 22px;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-02`)};\n`\n\nexport const upgradeConfigStyle = css`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  gap: 8px;\n  ${upgradeBgStyle};\n`\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const deployLogoStyle = css`\n  position: absolute;\n  bottom: 16px;\n  right: 16px;\n  box-shadow: 0 0 8px 0 ${getColor(\"blackAlpha\", \"07\")};\n  border: solid 1px ${getColor(\"grayBlue\", \"09\")};\n  border-radius: 8px;\n  font-size: 12px;\n  padding: 0 12px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  font-weight: 500;\n  cursor: pointer;\n  background-color: ${getColor(\"white\", \"01\")};\n  gap: 8px;\n`\nexport const logoStyle = css`\n  width: 25px;\n  height: 12px;\n`\n\nexport function applyPopupStateStyle(openState: boolean) {\n  const transform = openState\n    ? css`\n        transform: rotate(180deg);\n      `\n    : css`\n        transform: rotate(0deg);\n      `\n\n  return css`\n    margin-left: 8px;\n    transition: transform 0.2s ease;\n    ${transform};\n  `\n}\n\nexport const upgradeBgStyle = css`\n  padding: 5px 4px;\n`\n\nexport const upgradePopContainerStyle = css`\n  text-align: center;\n  font-size: 12px;\n  line-height: 20px;\n  color: ${getColor(\"grayBlue\", \"03\")};\n  ${upgradeBgStyle};\n`\n\nexport const upgradeTitleStyle = css`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 22px;\n  color: ${getColor(\"grayBlue\", \"02\")};\n`\n\nexport const upgradeConfigStyle = css`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  gap: 8px;\n  ${upgradeBgStyle};\n`\n","import { UpgradeIcon } from \"@illa-public/icon\"\nimport { USER_ROLE } from \"@illa-public/public-types\"\nimport { useUpgradeModal } from \"@illa-public/upgrade-modal\"\nimport { getCurrentTeamInfo, getPlanUtils } from \"@illa-public/user-data\"\nimport {\n  ACTION_MANAGE,\n  ATTRIBUTE_GROUP,\n  canManage,\n  canUseUpgradeFeature,\n} from \"@illa-public/user-role-utils\"\nimport { isCloudVersion } from \"@illa-public/utils\"\nimport { FC, useCallback, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useParams } from \"react-router-dom\"\nimport { Button, DownIcon, Switch, Trigger } from \"@illa-design/react\"\nimport Logo from \"@/assets/illa-logo.svg?react\"\nimport { getCurrentAppWaterMarkConfig } from \"@/redux/currentApp/appInfo/appInfoSelector\"\nimport { appInfoActions } from \"@/redux/currentApp/appInfo/appInfoSlice\"\nimport { updateWaterMarkConfig } from \"@/services/apps\"\nimport {\n  applyPopupStateStyle,\n  deployLogoStyle,\n  logoStyle,\n  upgradeConfigStyle,\n  upgradePopContainerStyle,\n  upgradeTitleStyle,\n} from \"./style\"\n\nexport const WaterMark: FC = () => {\n  const [popupVisible, setPopupVisible] = useState<boolean>(false)\n  const dispatch = useDispatch()\n\n  const upgradeModal = useUpgradeModal()\n  const { t } = useTranslation()\n  const teamInfo = useSelector(getCurrentTeamInfo)\n  const waterMark = useSelector(getCurrentAppWaterMarkConfig)\n  const { appId } = useParams()\n\n  const currentUserRole = teamInfo?.myRole ?? USER_ROLE.VIEWER\n  const canUseBillingFeature = canUseUpgradeFeature(\n    currentUserRole,\n    getPlanUtils(teamInfo),\n    teamInfo?.totalTeamLicense?.teamLicensePurchased,\n    teamInfo?.totalTeamLicense?.teamLicenseAllPaid,\n  )\n\n  const canUpdateAppWaterMark = canManage(\n    currentUserRole,\n    ATTRIBUTE_GROUP.APP,\n    getPlanUtils(teamInfo),\n    ACTION_MANAGE.EDIT_APP,\n  )\n\n  const handleUpgradeModal = () => {\n    if (!canUseBillingFeature) {\n      upgradeModal({\n        modalType: \"upgrade\",\n        from: \"deploy_watermark\",\n      })\n    }\n  }\n\n  const handleWaterMarkChange = useCallback(\n    async (value: boolean, event: React.MouseEvent<Element, MouseEvent>) => {\n      if (appId) {\n        event.stopPropagation()\n        const res = await updateWaterMarkConfig(!value, appId)\n        dispatch(appInfoActions.updateAppInfoReducer(res.data))\n      }\n    },\n    [appId, dispatch],\n  )\n\n  return (\n    <>\n      {waterMark && (\n        <Trigger\n          trigger=\"click\"\n          colorScheme=\"white\"\n          position=\"top-end\"\n          mb={\"12px\"}\n          popupVisible={popupVisible}\n          onVisibleChange={setPopupVisible}\n          disabled={!isCloudVersion || !canUpdateAppWaterMark}\n          content={\n            canUseBillingFeature ? (\n              <div css={upgradeConfigStyle}>\n                {t(\"billing.advanced.feature\")}\n                <Switch checked={!waterMark} onChange={handleWaterMarkChange} />\n              </div>\n            ) : (\n              <div css={upgradePopContainerStyle}>\n                <div css={upgradeTitleStyle}>\n                  {t(\"billing.modal.upgrade_now_admin.upgrade_to_plus\")}\n                </div>\n                <div>{t(\"billing.advanced.feature\")}</div>\n                <Button\n                  mt=\"8px\"\n                  colorScheme=\"techPurple\"\n                  onClick={() => {\n                    handleUpgradeModal()\n                  }}\n                  leftIcon={<UpgradeIcon />}\n                >\n                  {t(\"billing.homepage.upgrade\")}\n                </Button>\n              </div>\n            )\n          }\n        >\n          <div\n            css={deployLogoStyle}\n            onClick={() => {\n              if (!isCloudVersion || !canUpdateAppWaterMark) {\n                window.open(\"https://illacloud.com\", \"_blank\")\n              }\n            }}\n          >\n            <span>Powered by</span>\n            <Logo css={logoStyle} />\n            {isCloudVersion && canUpdateAppWaterMark && (\n              <DownIcon css={applyPopupStateStyle(popupVisible)} />\n            )}\n          </div>\n        </Trigger>\n      )}\n    </>\n  )\n}\n\nWaterMark.displayName = \"WaterMark\"\n","import {\n  ILLA_MIXPANEL_BUILDER_PAGE_NAME,\n  ILLA_MIXPANEL_EVENT_TYPE,\n} from \"@illa-public/mixpanel-utils\"\nimport { Unsubscribe } from \"@reduxjs/toolkit\"\nimport { AxiosResponse } from \"axios\"\nimport { FC, useEffect } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { useAsyncValue, useBeforeUnload, useParams } from \"react-router-dom\"\nimport { TriggerProvider } from \"@illa-design/react\"\nimport { useDestroyApp } from \"@/hooks/useDestoryExecutionTree\"\nimport { fixedActionToNewAction } from \"@/hooks/utils/fixedAction\"\nimport { fixedComponentsToNewComponents } from \"@/hooks/utils/fixedComponents\"\nimport { WaterMark } from \"@/page/Deploy/Watermark\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { actionActions } from \"@/redux/currentApp/action/actionSlice\"\nimport { appInfoActions } from \"@/redux/currentApp/appInfo/appInfoSlice\"\nimport { setupComponentsListeners } from \"@/redux/currentApp/components/componentsListener\"\nimport { componentsActions } from \"@/redux/currentApp/components/componentsSlice\"\nimport { setupExecutionListeners } from \"@/redux/currentApp/executionTree/executionListener\"\nimport { executionActions } from \"@/redux/currentApp/executionTree/executionSlice\"\nimport { setupLayoutInfoListeners } from \"@/redux/currentApp/layoutInfo/layoutInfoListener\"\nimport { startAppListening } from \"@/store\"\nimport { flatTreeToMap } from \"@/utils/componentNode/flatTree\"\nimport {\n  track,\n  trackPageDurationEnd,\n  trackPageDurationStart,\n} from \"@/utils/mixpanelHelper\"\nimport { CanvasPanel } from \"../App/Module/CanvasPanel\"\nimport { CurrentAppResp } from \"../App/resp/currentAppResp\"\n\ninterface IDeployContentAsyncValue {\n  isPublic: boolean\n  appInfo: Promise<AxiosResponse<CurrentAppResp>>\n}\n\nexport const DeployContent: FC = () => {\n  const asyncValue = useAsyncValue() as IDeployContentAsyncValue\n  const dispatch = useDispatch()\n\n  let { pageName } = useParams()\n\n  useEffect(() => {\n    const subscriptions: Unsubscribe[] = [\n      setupComponentsListeners(startAppListening),\n      setupExecutionListeners(startAppListening),\n      setupLayoutInfoListeners(startAppListening),\n    ]\n    return () => subscriptions.forEach((unsubscribe) => unsubscribe())\n  }, [])\n\n  useEffect(() => {\n    const initApp = async () => {\n      const appInfo = await asyncValue.appInfo\n      document.title = appInfo.data.appInfo.appName\n      dispatch(configActions.updateIllaMode(\"production\"))\n      dispatch(appInfoActions.updateAppInfoReducer(appInfo.data.appInfo))\n      const canvasTree = appInfo.data.components\n      let needFixedCanvasTree = canvasTree\n      if (canvasTree.props) {\n        const { homepageDisplayName, pageSortedKey, currentPageIndex } =\n          canvasTree.props\n        let defaultPageIndex: number | undefined\n        const pageIndex = pageSortedKey?.findIndex(\n          (name: string) => name === pageName,\n        )\n        if (pageIndex != undefined && pageIndex !== -1) {\n          defaultPageIndex = pageIndex\n        }\n\n        const homePageIndex = pageSortedKey?.findIndex(\n          (name: string) => name === homepageDisplayName,\n        )\n        if (\n          defaultPageIndex == undefined &&\n          homePageIndex != undefined &&\n          homePageIndex !== -1\n        ) {\n          defaultPageIndex = homePageIndex\n        }\n\n        if (defaultPageIndex == undefined && currentPageIndex != undefined) {\n          defaultPageIndex = currentPageIndex\n        }\n        if (defaultPageIndex == undefined) {\n          defaultPageIndex = 0\n        }\n\n        needFixedCanvasTree = {\n          ...canvasTree,\n          props: {\n            ...canvasTree.props,\n            currentPageIndex: defaultPageIndex,\n          },\n        }\n      }\n      const fixedComponents =\n        fixedComponentsToNewComponents(needFixedCanvasTree)\n      dispatch(\n        componentsActions.initComponentReducer(flatTreeToMap(fixedComponents)),\n      )\n      const fixedActions = fixedActionToNewAction(appInfo.data.actions)\n      dispatch(actionActions.initActionListReducer(fixedActions))\n      dispatch(executionActions.startExecutionReducer())\n    }\n    initApp()\n  }, [asyncValue, dispatch, pageName])\n\n  useDestroyApp()\n\n  useEffect(() => {\n    track(\n      ILLA_MIXPANEL_EVENT_TYPE.VISIT,\n      ILLA_MIXPANEL_BUILDER_PAGE_NAME.DEPLOY,\n    )\n    trackPageDurationStart()\n    return () => {\n      trackPageDurationEnd(ILLA_MIXPANEL_BUILDER_PAGE_NAME.DEPLOY)\n    }\n  }, [])\n\n  useBeforeUnload(() => {\n    trackPageDurationEnd(ILLA_MIXPANEL_BUILDER_PAGE_NAME.DEPLOY)\n  })\n\n  return (\n    <TriggerProvider renderInBody zIndex={10}>\n      {<CanvasPanel />}\n      {<WaterMark />}\n    </TriggerProvider>\n  )\n}\n","import { FC, Suspense } from \"react\"\nimport { Helmet } from \"react-helmet-async\"\nimport { useSelector } from \"react-redux\"\nimport { Await, useLoaderData } from \"react-router-dom\"\nimport { FullPageLoading } from \"@/components/FullPageLoading\"\nimport { deployContainerStyle } from \"@/page/Deploy/style\"\nimport Page404 from \"@/page/Status/404\"\nimport { getAppInfo } from \"@/redux/currentApp/appInfo/appInfoSelector\"\nimport { MediaSourceLoadProvider } from \"@/utils/mediaSourceLoad\"\nimport { DeployContent } from \"./content\"\n\nexport const Deploy: FC = () => {\n  const data = useLoaderData()\n\n  const appInfo = useSelector(getAppInfo)\n\n  return (\n    <>\n      <Helmet>\n        <title>{appInfo.appName}</title>\n      </Helmet>\n      <div css={deployContainerStyle}>\n        <Suspense fallback={<FullPageLoading />}>\n          <Await resolve={data} errorElement={<Page404 />}>\n            <MediaSourceLoadProvider>\n              <DeployContent />\n            </MediaSourceLoadProvider>\n          </Await>\n        </Suspense>\n      </div>\n    </>\n  )\n}\n\nexport default Deploy\n\nDeploy.displayName = \"Deploy\"\n"],"names":["deployContainerStyle","css","upgradeBgStyle","globalColor","illaPrefix","deployLogoStyle","getColor","logoStyle","upgradePopContainerStyle","upgradeTitleStyle","upgradeConfigStyle","WaterMark","popupVisible","setPopupVisible","useState","dispatch","useDispatch","upgradeModal","useUpgradeModal","t","useTranslation","teamInfo","useSelector","getCurrentTeamInfo","waterMark","getCurrentAppWaterMarkConfig","appId","useParams","currentUserRole","USER_ROLE","canUseBillingFeature","canUseUpgradeFeature","getPlanUtils","_a","_b","canManage","ATTRIBUTE_GROUP","ACTION_MANAGE","handleUpgradeModal","handleWaterMarkChange","useCallback","value","event","res","updateWaterMarkConfig","appInfoActions","jsx","Trigger","isCloudVersion","jsxs","Switch","Button","UpgradeIcon","Logo","DeployContent","asyncValue","useAsyncValue","pageName","useEffect","subscriptions","setupComponentsListeners","startAppListening","setupExecutionListeners","setupLayoutInfoListeners","unsubscribe","appInfo","configActions","canvasTree","needFixedCanvasTree","homepageDisplayName","pageSortedKey","currentPageIndex","defaultPageIndex","pageIndex","name","homePageIndex","fixedComponents","fixedComponentsToNewComponents","componentsActions","flatTreeToMap","fixedActions","fixedActionToNewAction","actionActions","executionActions","useDestroyApp","track","ILLA_MIXPANEL_EVENT_TYPE","ILLA_MIXPANEL_BUILDER_PAGE_NAME","trackPageDurationStart","trackPageDurationEnd","useBeforeUnload","TriggerProvider","CanvasPanel","Deploy","data","useLoaderData","getAppInfo","Fragment","Helmet","Suspense","FullPageLoading","Await","Page404","MediaSourceLoadProvider"],"mappings":"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"}