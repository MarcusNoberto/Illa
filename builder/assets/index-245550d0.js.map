{"version":3,"file":"index-245550d0.js","sources":["../../src/page/App/components/InspectPanel/PanelSetters/TabsSetter/TabsContainerSelectSetter/style.ts","../../src/page/App/components/InspectPanel/PanelSetters/TabsSetter/TabsContainerSelectSetter/index.tsx"],"sourcesContent":["import { css } from \"@emotion/react\"\n\nexport const containerStyle = css`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`\nexport const selectContainerStyle = css`\n  width: 100%;\n  padding: 8px 16px;\n`\n","import { get } from \"lodash-es\"\nimport { FC, useCallback, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useSelector } from \"react-redux\"\nimport { BaseSelectSetterProps } from \"@/page/App/components/InspectPanel/PanelSetters/SelectSetter/interface\"\nimport SearchSelectSetter from \"@/page/App/components/InspectPanel/PanelSetters/SelectSetter/searchSelect\"\nimport DynamicSwitchSetter from \"@/page/App/components/InspectPanel/PanelSetters/SwitchSetter/dynamicSwitch\"\nimport { getAllContainerWidget } from \"@/redux/currentApp/components/componentsSelector\"\nimport { getExecutionResult } from \"@/redux/currentApp/executionTree/executionSelector\"\nimport { RootState } from \"@/store\"\nimport { VALIDATION_TYPES } from \"@/utils/validationFactory\"\nimport { containerStyle, selectContainerStyle } from \"./style\"\n\nconst TabsContainerSelectSetter: FC<BaseSelectSetterProps> = (props) => {\n  const {\n    handleUpdateMultiAttrDSL,\n    handleUpdateOtherMultiAttrDSL,\n    widgetDisplayName,\n    handleUpdateDsl,\n  } = props\n  const containers = useSelector(getAllContainerWidget)\n  const { t } = useTranslation()\n\n  const targetComponentProps = useSelector<RootState, Record<string, any>>(\n    (rootState) => {\n      const executionTree = getExecutionResult(rootState)\n      return get(executionTree, widgetDisplayName, {})\n    },\n  )\n\n  const linkWidgetDisplayName = get(\n    targetComponentProps,\n    \"linkWidgetDisplayName\",\n    \"\",\n  ) as string\n\n  const isLinkToContainer = get(\n    targetComponentProps,\n    \"navigateContainer\",\n    false,\n  )\n\n  const selectedOptions = useMemo(() => {\n    if (!containers) return\n    return Object.keys(containers)\n  }, [containers])\n\n  const handleUpdateViewList = useCallback(\n    (attrName: string, targetDisplayName: string) => {\n      try {\n        const newList = get(containers, `${targetDisplayName}.viewList`, {})\n        const currentIndex = get(\n          containers,\n          `${targetDisplayName}.currentIndex`,\n          0,\n        )\n        const currentKey = get(\n          containers,\n          `${targetDisplayName}.currentKey`,\n          \"\",\n        )\n        handleUpdateMultiAttrDSL?.({\n          viewList: newList,\n          currentIndex,\n          currentKey,\n          [attrName]: targetDisplayName,\n        })\n        const targetLinkedDisplayNames = get(\n          containers,\n          `${targetDisplayName}.linkWidgetDisplayName`,\n          [],\n        )\n        const oldLinkedDisplayNames = get(\n          containers,\n          `${linkWidgetDisplayName}.linkWidgetDisplayName`,\n          [],\n        )\n        // del old link\n        if (oldLinkedDisplayNames && Array.isArray(oldLinkedDisplayNames)) {\n          const needUpdateDisplayNames = oldLinkedDisplayNames.filter(\n            (name) => name !== widgetDisplayName,\n          )\n          handleUpdateOtherMultiAttrDSL?.(linkWidgetDisplayName, {\n            linkWidgetDisplayName: needUpdateDisplayNames,\n          })\n        }\n        // ad new link\n        if (\n          Array.isArray(targetLinkedDisplayNames) &&\n          !targetLinkedDisplayNames.includes(widgetDisplayName)\n        ) {\n          handleUpdateOtherMultiAttrDSL?.(targetDisplayName, {\n            linkWidgetDisplayName: [\n              ...targetLinkedDisplayNames,\n              widgetDisplayName,\n            ],\n          })\n        } else {\n          handleUpdateOtherMultiAttrDSL?.(targetDisplayName, {\n            linkWidgetDisplayName: [widgetDisplayName],\n          })\n        }\n      } catch (e) {}\n      handleUpdateMultiAttrDSL?.({\n        [attrName]: targetDisplayName,\n      })\n    },\n    [\n      containers,\n      handleUpdateMultiAttrDSL,\n      handleUpdateOtherMultiAttrDSL,\n      linkWidgetDisplayName,\n      widgetDisplayName,\n    ],\n  )\n\n  const handleUpdateLinkContainer = useCallback(\n    (attrName: string, v: unknown) => {\n      if (!v && linkWidgetDisplayName) {\n        handleUpdateMultiAttrDSL?.({\n          linkWidgetDisplayName: undefined,\n        })\n        const targetLinkedDisplayNames = get(\n          containers,\n          `${linkWidgetDisplayName}.linkWidgetDisplayName`,\n          [],\n        )\n        if (Array.isArray(targetLinkedDisplayNames)) {\n          handleUpdateOtherMultiAttrDSL?.(linkWidgetDisplayName, {\n            linkWidgetDisplayName: targetLinkedDisplayNames.filter(\n              (item) => item !== widgetDisplayName,\n            ),\n          })\n        }\n      }\n      handleUpdateDsl(attrName, v)\n    },\n    [\n      containers,\n      handleUpdateDsl,\n      handleUpdateMultiAttrDSL,\n      handleUpdateOtherMultiAttrDSL,\n      linkWidgetDisplayName,\n      widgetDisplayName,\n    ],\n  )\n\n  return (\n    <div css={containerStyle}>\n      <DynamicSwitchSetter\n        {...props}\n        labelName={t(\"editor.inspect.setter_label.link_to_container\")}\n        value={isLinkToContainer}\n        openDynamic\n        attrName=\"navigateContainer\"\n        expectedType={VALIDATION_TYPES.BOOLEAN}\n        handleUpdateDsl={handleUpdateLinkContainer}\n      />\n      {isLinkToContainer && (\n        <div css={selectContainerStyle}>\n          <SearchSelectSetter\n            {...props}\n            options={selectedOptions}\n            handleUpdateDsl={handleUpdateViewList}\n          />\n        </div>\n      )}\n    </div>\n  )\n}\n\nTabsContainerSelectSetter.displayName = \"TabsContainerSelectSetter\"\n\nexport default TabsContainerSelectSetter\n"],"names":["containerStyle","css","selectContainerStyle","TabsContainerSelectSetter","props","handleUpdateMultiAttrDSL","handleUpdateOtherMultiAttrDSL","widgetDisplayName","handleUpdateDsl","containers","useSelector","getAllContainerWidget","t","useTranslation","targetComponentProps","rootState","executionTree","getExecutionResult","get","linkWidgetDisplayName","isLinkToContainer","selectedOptions","useMemo","handleUpdateViewList","useCallback","attrName","targetDisplayName","newList","currentIndex","currentKey","targetLinkedDisplayNames","oldLinkedDisplayNames","needUpdateDisplayNames","name","handleUpdateLinkContainer","v","item","jsxs","jsx","DynamicSwitchSetter","VALIDATION_TYPES","SearchSelectSetter"],"mappings":"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"}