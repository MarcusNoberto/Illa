{"version":3,"mappings":"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","names":["AirtableBaseConfigInitial","AirtableListRecordInitial","AirtableGetRecordInitial","AirtableCreateRecordInitial","AirtableUpdateMultipleRecordInitial","AirtableUpdateRecordInitial","AirtableDeleteMultipleRecordInitial","AirtableDeleteRecordInitial","AirtableActionConfigInitial","AppwriteDocumentOperationsInitial","AppwriteListDocumentsInitial","AppwriteActionInitial","GraphQLActionInitial","MicrosoftSqlActionSqlModeInitial","MicrosoftSqlActionGUIModeInitial","MicrosoftSqlActionInitial","MongoDbAggregateContentInitial","MongoDbBulkWriteContentInitial","MongoDbCountContentInitial","MongoDbDeleteManyContentInitial","MongoDbDeleteOneContentInitial","MongoDbDistinctContentInitial","MongoDbFindContentInitial","MongoDbFindOneContentInitial","MongoDbFindOneAndUpdateContentInitial","MongoDbInsertOneContentInitial","MongoDbInsertManyContentInitial","MongoDbListCollectionsContentInitial","MongoDbUpdateManyContentInitial","MongoDbUpdateOneContentInitial","MongoDbCommandContentInitial","MongoDbActionInitial","MysqlLikeActionInitial","OracleDBActionSQLModeInitial","OracleDBActionInitial","RedisActionInitial","RestAPIRawBodyInitial","RestAPIActionInitial","TransformerActionInitial","getInitialContent","actionType","ElasticSearchActionInitial","DynamoDBActionInitial","S3ActionInitial","SMTPActionInitial","GoogleSheetsActionInitial","FirebaseActionInitial","HuggingFaceActionInitial","CouchDBActionInitial","ILLADriveActionInitial","getInitialAgentContent","agent","useCreateAction","isGuideMode","useSelector","getIsILLAGuideMode","dispatch","useDispatch","message","useMessage","t","useTranslation","handleDirectCreateAction","useCallback","currentActionType","resourceID","successCallback","loadingCallback","displayName","DisplayNameGenerator","initialContent","data","actionItemInitial","INIT_ACTION_ADVANCED_CONFIG","INIT_ACTION_MOCK_CONFIG","createActionData","v4","actionActions","configActions","responseData","fetchCreateAction","handleCreateAgentAction","item","aiAgentActions","initalAgentContent","categoryTitleStyle","css","getColor","headerContainerStyle","categoryItemContainerStyle","basicButtonStyle","categoryItemNameStyle","ActionPanelSection","props","actionTypes","title","hasMore","changeLoading","filterFunc","generatorVisible","setGeneratorVisible","useState","setCurrentActionType","resourceList","getAllResources","handleClickActionType","type","componentsActions","handleFinishCreateNewResource","resource","isUpdate","track","ILLA_MIXPANEL_EVENT_TYPE","ILLA_MIXPANEL_BUILDER_PAGE_NAME","resourceActions","jsxs","Fragment","jsx","Button","NextIcon","Suspense","getIconFromResourceType","getResourceNameFromResourceType","MixpanelTrackProvider","ResourceGeneratorProvider","ActionGenerator","memo","applyActionEditorStyle","h","contentContainerStyle","agentActionStyle","size","getAgentIcon","RECOMMEND_RESOURCES_SELF_HOST","MORE_DATA_TYPE_SELF_HOST","getRecommendAgentID","titleAndContentContainerStyle","titleStyle","descStyle","AgentPanelSection","agents","recommendAgents","setRecommendAgents","isLoadingRecommendAgents","setIsLoadingRecommendAgents","filterAgents","handleClickAction","fromRecommend","response","forkAIAgentToTeam","useEffect","abortController","needFetches","id","getAIAgentMarketplaceInfo","res","result","v","Skeleton","guidePanelOutContainerStyle","guidePanelContainerStyle","loadingContainerStyle","ActionGuidePanel","isLoading","setIsLoading","getDashboardTeamAIAgentList","Loading","useGoogleAuthStatus","finished","actions","getActionList","urlParams","setUrlParams","useSearchParams","status","GoogleSheetAuthStatus","searchHeaderStyle","globalColor","illaPrefix","searchInputContainerStyle","searchInputStyle","chroma","searchInputIconStyle","actionListHeaderContainerStyle","actionTitleStyle","SearchInput","onSearch","setInSearchState","motion","Input","SearchIcon","SearchHeader","inSearchState","AnimatePresence","IconHotSpot","SvgActionListEmptyState","React.createElement","DatabaseIcon","createIcon","actionIconContainer","actionItemDotStyle","applyActionItemTitleStyle","error","warningCircleStyle","applyActionItemContainerStyle","selected","actionItemLeftStyle","runningTimeStyle","Item","DropListItem","ActionListItem","forwardRef","ref","action","onItemClick","onCopyItem","onDeleteItem","selectedAction","getSelectedAction","cachedAction","getCachedAction","state","targetActionErrors","isObject","executionResult","getExecutionResult","startRunningTime","_a","endRunningTime","_b","isRunning","_c","isMocking","_f","_e","_d","currentRunningTime","setCurrentRunningTime","dealData","currentTime","time","isChanged","useMemo","isEqual","editName","setEditName","changing","setChanging","changeDisplayName","newName","isValidDisplayName","newAction","fetchUpdateAction","calcTimeString","startTime","endTime","calcLoadingTimeString","Dropdown","DropList","trackInEditor","WarningCircleIcon","e","LoadingIcon","event","searchHeaderContainerStyle","addNewActionButtonStyle","listContainerStyle","listStyle","actionListEmptyStyle","createDropListItemContainerStyle","prefixIconContainerStyle","ActionListWithNewButton","searchActionValue","shortcut","useContext","ShortCutContext","actionList","getActionMixedList","teamInfo","getCurrentTeamInfo","upgradeModal","useUpgradeModal","searchList","value","modal","useModal","isSubscribeForUseDrive","generateBaseActionItem","isCloudVersion","Space","AddIcon","List","onCopyActionItem","Empty","ActionListEmptyState","ActionList","className","setSearchActionValue","handleOnSearch","resourceAction","r","actionResultContainerStyle","applyActionContentContainerStyle","renderResult","restApiAlertBarStyle","alertTabsContainerStyle","alertTabsItemStyle","tabsContentStyle","getActiveStyle","active","alertInfoContainerStyle","alertInfoStyle","applyStatusCodeStyle","statusCode","timestampStyle","alertTextStyle","customerCodeStyle","actionEditorDragBarStyle","handleResize","resizeRef","movementY","minHeight","getMaxHeight","placeholderRef","callback","resize","placeholder","height","updatedHeight","maxHeight","isNumber","DragBar","onChange","mouseDown","setMouseDown","handleMouseMove","handleMouseUp","RESULT_SHOW_TYPE","AdvancedResultHeader","handleResultTabsClick","showType","runningTimes","tabsConfig","onClose","isError","canShownTabs","info","SuccessCircleIcon","CloseIcon","getDisplayResult","ActionResult","visible","useRef","alertRef","setShowType","currentActionExecutionResult","rootState","rawResult","responseHeader","codeMirrorHeight","setCodeMirrorHeight","activeKey","finalResult","advancedApiResultTabs","displayData","CodeEditor","CODE_LANG","editableTextWrapperStyle","textStyle","innerTextStyle","EditableText","updateDisplayNameByBlur","onMouseEnter","onClick","onBlur","onValidate","inputValue","setInputValue","isFocusInput","setIsFocusInput","inputRef","handleChangeInputValue","handleClickOnSpan","handleBlurInput","PenIcon","tabsHeaderContainerStyle","applyTabsHeaderItemStyle","isActive","getRenderBody","items","SimpleTabs","containerStyle","handleClickChangeTab","innerActiveKey","setInnerActiveKey","handleChangeTab","key","componentContainerStyle","searchWrapperStyle","sessionListContainerStyle","sessionContainerStyle","sessionTitleStyle","componentListContainerStyle","itemContainerStyle","iconStyle","nameStyle","emptyContainerStyle","upgradeIconStyle","ComponentItem","widgetName","widgetType","icon","isPremiumWidget","isEditMode","getIsILLAEditMode","isGuideOpen","getGuideStatus","dragRef","useDrag","draggedItem","monitor","dropResultInfo","draggedComponents","sendShadowMessageHandler","endDragMultiNodes","widgetLayoutInfo","generateWidgetLayoutInfo","DRAG_EFFECT","DEFAULT_BODY_COLUMNS_NUMBER","store","allWidgetLayoutInfo","getClientWidgetLayoutInfo","illaSnapshot","startDragMultiNodes","UpgradeIcon","ComponentSession","sessionTitle","widgetCardInfos","sessionType","rowSuggestComponentContainerStyle","columnSuggestComponentContainerStyle","columnSessionTitleStyle","clickSuggest","RowSuggestComponent","CommentIcon","ColumnSuggestComponent","getMatchComponent","options","valueArr","regKey","reg","newSessionList","removeCommonlyOptions","option","sessionTypeMapSessionNameKey","session","widgetCardInfo","keyword","ComponentPanel","defaultList","buildComponentList","componentList","searchInput","setSearchInput","searchRes","setSearchRes","handleOnChange","FocusManager","Search","ConfigPanel","lazy","__vitePreload","PagePanel","ACTION_PANEL_TABS","i18n","COMPONENT_MANAGER_TABS","SQLModeTipContext","createContext","SQLModeTipProvider","children","showSQLModeTip","setShowSQLModeTip","handleSetSQModeTip","actionID","show","prev","SAFE_MODE_ACTION_TYPE","isSafeModeAction","actionTitleBarStyle","editableTitleBarWrapperStyle","actionSuccessBlockStyle","actionFailBlockStyle","actionTextStyle","applyOpenStateStyle","openState","transform","tabsContainerStyle","runResultAndRunContainerStyle","FILE_SIZE_LIMIT_TYPE","getCanRunAction","smtpContent","isFileOversize","getActionFilteredContent","cachedActionValue","content","ElasticSearchIDEditorType","_id","otherContent","ElasticSearchBodyContentType","_body","ElasticSearchQueryContentType","_query","to","cc","bcc","attachment","ActionTitleBar","onResultVisibleChange","activeTab","saveLoading","setSaveLoading","docLink","getDocLink","canRunAction","canNotRunMessage","runError","runMode","innerTabItems","runCachedAction","runOriginAction","updateAndRunCachedAction","handleActionOperation","renderButton","successBlock","UpIcon","failBlock","Link","DocsIcon","MoreIcon","PlayFillIcon","actionPanelStyle","actionPanelContainerStyle","actionContentStyle","outterActionContainerStyle","actionItemContainer","widgetLoadingWrapperStyle","WidgetLoading","transformTitleStyle","transformRadioStyle","transformSpaceStyle","codeMirrorStyle","transformTitle","codeMirrorContainer","codeMirrorPaddingContainer","getCodeMirrorContainerStyle","mysqlLike","TransformerComponent","fullWidth","PanelLabel","RadioGroup","transformer","TransformerInitial","TransformerInitialTrue","VALIDATION_TYPES","CODE_TYPE","mockDataContainerStyle","mockDataTitleStyle","mockPanelContainerStyle","ActionMockPanel","mockData","enableForReleasedApp","handleOnChangeMockData","handleOnChangeEnableForReleasedApp","checked","Checkbox","actionEventHandlerStyle","actionEventHandlerWrapperStyle","ActionEventHandler","handleUpdateDsl","attrPath","newActionContent","klona","updateSlice","getNewWidgetPropsByUpdateSlice","handleUpdateMultiAttrDSL","handleUpdateOtherMultiAttrDSL","_displayName","_updateSlice","TriggerProvider","SelectedProvider","RenderPanelSetter","actionSuccessEventHandlerConfig","actionFailedEventHandlerConfig","createNewStyle","itemContainer","itemLogo","itemText","ResourceChoose","setEditorVisible","currentSelectResource","Select","TriggerModeChoose","ACTION_RUN_TIME","resourceChooseContainerStyle","resourceTitleStyle","resourceEndStyle","spaceStyle","PanelHeader","editorVisible","createOrUpdateResourceCallback","Modal","ACTION_MODAL_WIDTH","ResourceCreator","ResourceGenerator","AIAgentResourceChoose","agentList","mockOperationContainerStyle","mockOperationTitleStyle","MockOperation","handleChangeDataType","NO_OPTIONS_HEADER","NO_EVENT_HANDLER","actionContainerStyle","headerOptionContainerStyle","headerOptionTitleStyle","MockPanelHeader","DataPanelHeader","GeneralPanelLayout","mockEnabled","AdvancedPanel","AirtablePanel","AppwritePanel","CouchDBPanel","DynamoDBPanel","ElasticSearchPanel","FirebasePanel","GoogleSheetsPanel","GraphQLPanel","HuggingFaceEndpointPanel","HuggingFacePanel","MicrosoftSqlPanel","MongoDbPanel","MysqlLikePanel","OracleDBPanel","RedisPanel","RestApiPanel","S3Panel","SMTPPanel","TransformerPanel","AIAgentPanel","GlobalDataPanel","ILLADrivePanel","ActionPanel","resultVisible","setResultVisible","setActiveKey","basicTrack","pageName","properties","mockConfig","panel","ILLA_MIXPANEL_PUBLIC_PAGE_NAME","ActionEditorDefaultHeight","ActionEditor","panelRef","actionLists","Divider","resourceContextHelper","RIGHT_PANEL_WIDTH","ComponentsManager","selectedDisplayNames","getSelectedComponentDisplayNames","currentPageDisplayName","getCurrentPageDisplayName","prevPageDisplayName","isClickChange","enlargeNavBar","keyframes","NAVBAR_HEIGHT","enlargeLeftPanel","LEFT_PANEL_WIDTH","enlargeRightPanel","leftAnimationStyle","leftPanelStyle","rightAnimationStyle","rightPanelStyle","navStyle","navbarStyle","AppLoading","showLoading","setShowLoading","contentStyle","loadingStyle","applyJsonValueColorStyle","canEdit","color","innerContainerStyle","errorContainerStyle","errorItemStyle","errorItemContentStyle","errorInfoStyle","sourceStyle","errorIconStyle","errorExpandStyle","applyExpandIconStyle","expanded","jsonStyle","errorMessageStyle","jsonContentAnimation","itemDescStyle","jsonExpandStyle","applyLevelStyle","level","JsonView","name","isExpanded","setIsExpanded","isArray","keyArr","CaretRightIcon","isString","ErrorItem","pathName","components","getComponentMap","getDisplayNameAndPropertyPath","attrValue","node","searchComponentFromMap","get","handleComponentSelect","selectedComponent","ErrorCircleIcon","applyDebuggerStyle","errorContentStyle","DebuggerDefaultHeight","Debugger","debuggerData","getExecutionError","debuggerVisible","isOpenDebugger","handleClickDebuggerIcon","index","exports","Key","Shortcut","appId","useParams","currentSelectedComponent","currentSelectedAction","componentsMap","showShadows","isShowDot","alreadyShowDeleteDialog","setAlreadyShowDeleteDialog","canUseBillingFeature","canUseUpgradeFeature","getPlanUtils","showDeleteDialog","createModal","textList","i","getActionItemByDisplayName","globalDataNames","getOriginalGlobalDataNames","onDeleteActionItem","selectAllBodyComponentsHandler","rootNode","pageNode","bodySectionDisplayName","sectionNodeDisplayName","currentSectionProps","currentViewIndex","viewSortedKey","allChildrenNodeDisplayNames","copySomethingHandler","CopyManager","copyAndPasteHandler","showDotHandler","keyboardEventType","changeShadowHidden","handleSaveToHistory","takeSnapShot","isILLAAPiError","useHotkeys","isMAC","keyboardEvent","IllaUndoRedoManager","getPanelBarHeaderHeight","getPanelBarHeaderBorder","applyPanelBarHeaderStyle","heightCss","borderCss","getPanelTitleFontStyle","applyPanelBarTitleStyle","getIconColorStyle","applyPanelBarOpenedIconStyle","isOpened","fontColorStyle","rotate","panelBarItemContentStyle","panelBarItemContainerAnimationVariants","customIconHotpotStyle","PanelBar","customIcon","destroyChildrenWhenClose","saveToggleState","onIllaFocus","isOpenedState","setIsOpenedState","containerRef","handleToggle","target","SvgState","MoreAction","handleClickDelete","handleClickCopy","targetAction","jsonContentStyle","jsonNameStyle","colorStyle","objectAndArrayTitleStyle","objectAndArrayDescStyle","applyObjectOrArrayContainerStyle","applySimpleItemContainerStyle","isSelected","labelNameAndValueContainerStyle","applyTitleAndDescContainerStyle","WorkSpaceTreeItem","parentKey","isChild","expandedKeys","getExpandedKeys","uniqueKey","convertPathToString","toPath","copyToClipboard","CopyIcon","WorkSpaceTreeNode","renderJsonValue","MAX_LEN_WITH_SNIPPETS","outerContainerStyle","canExpand","expendContainerStyle","rectangleStyle","titleAndIconContainerStyle","iconContainerStyle","modalBodyContainerStyle","itemContentStyle","formatModalTitle","BaseDataItem","fakeTitle","haveMoreAction","dataType","isOpenCodeModal","setIsOpenCodeModal","expandedStatus","getExpandedWidgets","handleClickOnContainer","handleClickOnExpandIcon","getIconFromWidgetType","StateIcon","MovableModal","ActionSpaceTree","actionExecution","getActionExecutionResultWithOutIgnoreKey","handleActionSelect","selectedKey","actionDisplayName","treeContainerStyle","WorkSpaceTreeGroup","ComponentSpaceTree","footerSectionTree","getCurrentPageFooterWidgetTree","leftSectionTree","getCurrentPageLeftWidgetTree","rightSectionTree","getCurrentPageRightWidgetTree","headerSectionTree","getCurrentPageHeaderWidgetTree","bodySectionTree","getCurrentPageBodyWidgetTree","modalSectionTree","getCurrentPageModalWidgetTree","handleClick","clickPosition","autoChangeWhenClickOnCanvas","executionActions","autoChangeContainersIndexWhenClick","dom","tree","GlobalsSpaceTree","globalInfoList","getGlobalInfoExecutionResult","LIBRARIES","titleContainerStyle","actionGroupContainerStyle","aliasContainerStyle","libraryContainerStyle","LibrariesItem","alias","LibrarySpaceTree","library","SvgHomepage","SvgWebsite","ActionMenu","pageDisplayName","isParentPage","parentPageName","openRenameModal","pageDisplayNames","getCurrentPageSortedKeys","handleClickSetHomePage","handleDeletePage","handleClickRename","getLabelSizeFontStyle","labelStyle","disabledTooltip","borderStyle","PageLabel","tooltip","labelName","Trigger","leftAndRightCss","LeftAndRightLayout","setterPaddingStyle","SetterPadding","modalWrapperStyle","modalHeaderWrapper","modalHeaderCloseIconHotSpot","onCloseModal","path","handleUpdateItem","pageItemContainerStyle","pageNameStyle","parentPageNameStyle","pageNameContainerStyle","baseIconStyle","actionAreaContainerStyle","iconHotSpotContainerStyle","plusIconStyle","pageItemInnerContainerStyle","PageItem","isHomePage","subPagePaths","currentPagePath","currentSubPagePath","subPageIsSelected","modalVisible","setModalVisible","actionMenuVisible","setActionMenuVisible","currentPageName","setCurrentPageName","handleClickChangePage","handlerAfterClose","handleOpenModal","addSubPage","WebsiteIcon","HomepageIcon","SettingIcon","PlusIcon","subPagePath","pageSpaceTreeStyle","PageSpaceTree","rootNodeProps","getRootNodeExecutionResult","currentPageIndex","homepageDisplayName","pageSortedKey","handleClickAddButton","newPageConfig","generatePageConfig","pageDisplayNameMapSubPageDisplayName","getPageDisplayNameMapViewDisplayName","DataWorkspace","headerStyle","MissingResourceHeader","handleCloseModal","MissingResourceContext","MissingResourcesProvider","others","missingResourceFooterContainerStyle","MissingResourceFooter","handleCancelModal","handleConfirmModal","isSaving","canSave","LIKE_MYSQL_TYPES","getSameTypeResourceList","isLikeMysql","origanResourceType","changeResourceID","aiAgentList","addResourceCallback","MixpanelTrackContext","finalResourceList","isMysqlLike","isAIAgent","resourceType","missingListContainerStyle","columnContainerStyle","cellStyle","width","cellFontStyle","statusContainerStyle","statusTextStyle","getStatusIcon","QuestionCircleIcon","ListItem","actionIDs","replacementResourceID","tutorialHref","handleChangePlaceInfo","actionIDMapAction","shownNames","getStatusText","openTutorial","PlayOutlineIcon","MissingList","missingActionsMap","resourceIDMapResource","agentIDMapAgent","updateActions","setIsSaving","replaceInfo","setReplaceInfo","prevInfo","newReplaceInfo","replaceInfoList","payload","updateActionList","newResourceID","missingActionIDs","MissingResources","shown","changeShown","createPortal","MissingResourceModal","getResourceIDMapResource","getMissingResourceActionGroupByTutorialOrResourceID","getActionIDMapAction","getAIAgentIDMapAgent","fetchBatchUpdateAction","SvgSnowIcon","applyConfigItemLabelText","margin","marginLeft","zIndex","modalHeaderWrapperStyle","modalTitleStyle","closeIconHotSpotStyle","gridFormStyle","gridFormFieldStyle","gridItemStyle","gridValidStyle","formLabelStyle","AppSettingModal","appInfo","onVisibleChange","onSaveEvent","onCloseEvent","control","formState","handleSubmit","reset","useForm","isSubmitting","isDirty","useFormState","onSubmit","updateAppConfig","appInfoActions","Controller","field","TextArea","nameContainerStyle","AppName","appSettingVisible","setAppSettingVisible","SvgDesktop","SvgFilter","SvgFluid","SvgTablet","validateHeight","currentHeight","BODY_MIN_HEIGHT","HEADER_MIN_HEIGHT","FOOTER_MIN_HEIGHT","validateWidth","currentWidth","BODY_MIN_WIDTH","LEFT_MIN_WIDTH","RIGHT_MIN_WIDTH","PreviewPopContent","viewportWidth","viewportHeight","getViewportSizeSelector","inputWidth","setInputWidth","inputHeight","setInputHeight","saveNewViewportSize","handleUpdateInputWidth","handleUpdateInputHeight","handleOnBlurInputHeight","isValidate","handleOnBlurInputWidth","handleOnFocusOnWidth","handleOnFocusOnHeight","inputAreaWrapperStyle","inputAreaLabelWrapperStyle","closeIconStyle","InputNumber","previewButtonGroupWrapperStyle","appSizeContainerStyle","appSizeIconContainerStyle","appSizeIconStyle","getAppSizeIconSelectedStyle","AppSizeIcons","FluidIcon","DesktopIcon","TabletIcon","CustomIcon","defaultAppSize","variants","AppSizeButtonGroup","viewportSizeType","showCustomInputs","currentSizeType","updateAppSize","handleAppSizeTypeChange","newType","sizeObj","Icon","DeployButtonGroup","loading","isPublic","onClickDeploy","disPrivate","onClickDeployMenu","windowIconBodyStyle","windowIconStyle","WindowIcons","leftPanelVisible","isOpenLeftPanel","rightPanelVisible","isOpenRightPanel","bottomPanelVisible","isOpenBottomPanel","handleClickLeftWindowIcon","handleClickRightWindowIcon","handleClickBottomWindowIcon","WindowLeftIcon","WindowBottomIcon","WindowRightIcon","PageNavBar","teamIdentifier","getAppInfo","isOnline","getIsOnline","isPreviewMode","getIsILLAPreviewMode","hasMissingResources","getHasMissingResourceAction","deployLoading","setDeployLoading","shownMissingResource","setShownMissingResource","deployApp","onSuccess","onFailed","fetchDeployApp","getILLABuilderURL","forkGuideAppAndDeploy","appName","forkCurrentApp","handleClickDeploy","missingResourceModalContainerStyle","missingHeaderContainerStyle","missingResourceHeaderStyle","missingContentStyle","handleClickDeployMenu","handlePreviewButtonClick","PreviewButton","FullScreenIcon","ExitIcon","canShowShareAppModal","showShareAppModal","navBarStyle","rowCenter","getILLACloudURL","Logo","logoCursorStyle","informationStyle","descriptionStyle","fromNow","saveFailedTipStyle","SnowIcon","viewControlStyle","rightContentStyle","buttonGroupStyle"],"sources":["../../../../packages/illa-public-component/publicConfig/action/initConfig/airtableAction.ts","../../../../packages/illa-public-component/publicConfig/action/initConfig/appwriteAction.ts","../../../../packages/illa-public-component/publicConfig/action/initConfig/graphqlAction.ts","../../../../packages/illa-public-component/publicConfig/action/initConfig/microsoftSqlAction.ts","../../../../packages/illa-public-component/publicConfig/action/initConfig/mongoDbAction.ts","../../../../packages/illa-public-component/publicConfig/action/initConfig/mysqlLikeAction.ts","../../../../packages/illa-public-component/publicConfig/action/initConfig/oracleDBAction.ts","../../../../packages/illa-public-component/publicConfig/action/initConfig/redisAction.ts","../../../../packages/illa-public-component/publicConfig/action/initConfig/restapiAction.ts","../../../../packages/illa-public-component/publicConfig/action/initConfig/transformerAction.ts","../../../../packages/illa-public-component/publicConfig/action/initConfig/getInitialContent.ts","../../src/page/App/components/Actions/hook.ts","../../src/page/App/components/Actions/ActionGuidePanel/components/ActionSection/style.ts","../../src/page/App/components/Actions/ActionGuidePanel/components/ActionSection/index.tsx","../../src/page/App/Module/ActionEditor/styles.ts","../../src/page/App/components/Actions/getIcon.tsx","../../src/page/App/components/Actions/ActionGuidePanel/constans.ts","../../src/page/App/components/Actions/ActionGuidePanel/components/AgentSection/style.ts","../../src/page/App/components/Actions/ActionGuidePanel/components/AgentSection/index.tsx","../../src/page/App/components/Actions/ActionGuidePanel/style.ts","../../src/page/App/components/Actions/ActionGuidePanel/index.tsx","../../src/hooks/useGoogleAuthStatus.tsx","../../src/page/App/components/Actions/SearchHeader/style.tsx","../../src/page/App/components/Actions/SearchHeader/index.tsx","../../src/assets/action-list-empty-state.svg?react","../../src/page/App/components/Icons/database.tsx","../../src/page/App/components/Actions/ActionListItem/style.ts","../../src/page/App/components/Actions/ActionListItem/index.tsx","../../src/page/App/components/Actions/ActionList/style.ts","../../src/page/App/components/Actions/ActionList/listWithNewButton.tsx","../../src/page/App/components/Actions/ActionList/index.tsx","../../src/page/App/components/Actions/ActionPanel/ActionResult/style.ts","../../src/page/App/components/Actions/DragBar/style.ts","../../src/page/App/components/Actions/DragBar/index.tsx","../../src/page/App/components/Actions/ActionPanel/ActionResult/restApiHeader.tsx","../../src/page/App/components/Actions/ActionPanel/ActionResult/utils.ts","../../src/page/App/components/Actions/ActionPanel/ActionResult/index.tsx","../../src/components/EditableText/style.ts","../../src/components/EditableText/index.tsx","../../src/components/Tabs/style.ts","../../src/components/Tabs/index.tsx","../../src/page/App/components/ComponentPanel/style.tsx","../../src/page/App/components/ComponentPanel/ComponentItem.tsx","../../src/page/App/components/ComponentPanel/ComponentSession.tsx","../../src/page/App/components/ComponentPanel/components/SuggestComponent/style.ts","../../src/page/App/components/ComponentPanel/components/SuggestComponent/index.tsx","../../src/page/App/components/ComponentPanel/utils.tsx","../../src/page/App/components/ComponentPanel/index.tsx","../../src/components/Tabs/constant.tsx","../../src/page/App/components/Actions/Context/SqlModeTipContext/index.tsx","../../src/page/App/components/Actions/ActionPanel/utils/safeModeTip.ts","../../src/page/App/components/Actions/ActionPanel/ActionTitleBar/style.ts","../../src/page/App/components/Actions/ActionPanel/ActionTitleBar/index.tsx","../../src/page/App/components/Actions/ActionPanel/style.ts","../../src/widgetLibrary/PublicSector/WidgetLoading/style.ts","../../src/widgetLibrary/PublicSector/WidgetLoading/index.tsx","../../src/page/App/components/Actions/ActionPanel/TransformerComponent/style.ts","../../src/page/App/components/Actions/ActionPanel/TransformerComponent/index.tsx","../../src/page/App/components/Actions/ActionPanel/ActionMockPanel/style.ts","../../src/page/App/components/Actions/ActionPanel/ActionMockPanel/index.tsx","../../src/page/App/components/Actions/ActionPanel/ActionEventHandler/style.ts","../../src/page/App/components/Actions/ActionPanel/ActionEventHandler/index.tsx","../../src/page/App/components/Actions/ActionPanel/PanelHeader/ResourceChoose/style.ts","../../src/page/App/components/Actions/ActionPanel/PanelHeader/ResourceChoose/index.tsx","../../src/page/App/components/Actions/ActionPanel/PanelHeader/TriggerModeChoose/index.tsx","../../src/page/App/components/Actions/ActionPanel/PanelHeader/style.ts","../../src/page/App/components/Actions/ActionPanel/PanelHeader/index.tsx","../../src/page/App/components/Actions/ActionPanel/PanelHeader/AIAgentResourceChoose/style.ts","../../src/page/App/components/Actions/ActionPanel/PanelHeader/AIAgentResourceChoose/index.tsx","../../src/page/App/components/Actions/ActionPanel/PanelHeader/MockOperation/style.ts","../../src/page/App/components/Actions/ActionPanel/PanelHeader/MockOperation/index.tsx","../../src/page/App/components/Actions/ActionPanel/Layout/GeneralPanelLayout/constants.ts","../../src/page/App/components/Actions/ActionPanel/Layout/GeneralPanelLayout/style.ts","../../src/page/App/components/Actions/ActionPanel/Layout/GeneralPanelLayout/index.tsx","../../src/page/App/components/Actions/ActionPanel/index.tsx","../../src/page/App/Module/ActionEditor/index.tsx","../../src/page/App/Module/ComponentManager/style.tsx","../../src/page/App/Module/ComponentManager/index.tsx","../../src/page/App/components/AppLoading/style.ts","../../src/page/App/components/AppLoading/index.tsx","../../src/page/App/Module/DataWorkspace/style.ts","../../src/page/App/components/Debugger/components/ErrorItem/style.ts","../../src/page/App/components/Debugger/components/JsonView/style.ts","../../src/page/App/components/Debugger/components/JsonView/index.tsx","../../src/page/App/components/Debugger/components/ErrorItem/index.tsx","../../src/page/App/components/Debugger/style.ts","../../src/page/App/components/Debugger/index.tsx","../../../../node_modules/.pnpm/ts-key-enum@2.0.12/node_modules/ts-key-enum/dist/js/Key.enum.js","../../src/utils/shortcut/index.tsx","../../src/components/PanelBar/style.ts","../../src/components/PanelBar/index.tsx","../../src/assets/dataWorkspace/state.svg?react","../../src/page/App/Module/DataWorkspace/components/MoreAction/index.tsx","../../src/page/App/Module/DataWorkspace/components/WorkSpaceTreeItem/style.ts","../../src/page/App/Module/DataWorkspace/components/WorkSpaceTreeItem/index.tsx","../../src/page/App/Module/DataWorkspace/components/WorkSpaceTreeItem/utils.tsx","../../src/page/App/Module/DataWorkspace/components/WorkSpaceTreeItem/WorkSpaceTreeNode.tsx","../../src/page/App/Module/DataWorkspace/components/BaseDataItem/style.ts","../../src/page/App/Module/DataWorkspace/components/BaseDataItem/index.tsx","../../src/page/App/Module/DataWorkspace/components/ActionSpaceTree/index.tsx","../../src/page/App/Module/DataWorkspace/components/WorkSpaceTreeGroup/style.ts","../../src/page/App/Module/DataWorkspace/components/WorkSpaceTreeGroup/index.tsx","../../src/page/App/Module/DataWorkspace/components/ComponentSpaceTree/index.tsx","../../src/page/App/Module/DataWorkspace/components/GlobalsSpaceTree/index.tsx","../../src/page/App/Module/DataWorkspace/components/LibrariesTree/constants.ts","../../src/page/App/Module/DataWorkspace/components/LibrariesTree/style.ts","../../src/page/App/Module/DataWorkspace/components/LibrariesTree/item.tsx","../../src/page/App/Module/DataWorkspace/components/LibrariesTree/index.tsx","../../src/assets/dataWorkspace/homepage.svg?react","../../src/assets/dataWorkspace/website.svg?react","../../src/page/App/Module/DataWorkspace/components/PageSpaceTree/components/ActionMenu/index.tsx","../../src/page/App/components/PagePanel/Components/Label/style.ts","../../src/page/App/components/PagePanel/Components/Label/index.tsx","../../src/page/App/components/PagePanel/Layout/leftAndRight/style.ts","../../src/page/App/components/PagePanel/Layout/leftAndRight/index.tsx","../../src/page/App/components/PagePanel/Layout/setterPadding/style.ts","../../src/page/App/components/PagePanel/Layout/setterPadding/index.tsx","../../src/page/App/Module/DataWorkspace/components/PageSpaceTree/components/ChangePathModal/style.tsx","../../src/page/App/Module/DataWorkspace/components/PageSpaceTree/components/ChangePathModal/modal.tsx","../../src/page/App/Module/DataWorkspace/components/PageSpaceTree/components/PageItem/style.ts","../../src/page/App/Module/DataWorkspace/components/PageSpaceTree/components/PageItem/index.tsx","../../src/page/App/Module/DataWorkspace/components/PageSpaceTree/style.ts","../../src/page/App/Module/DataWorkspace/components/PageSpaceTree/index.tsx","../../src/page/App/Module/DataWorkspace/index.tsx","../../../../packages/illa-public-component/MissingResourceModule/Components/Header/style.ts","../../../../packages/illa-public-component/MissingResourceModule/Components/Header/index.tsx","../../../../packages/illa-public-component/MissingResourceModule/context/index.tsx","../../../../packages/illa-public-component/MissingResourceModule/Components/Footer/style.ts","../../../../packages/illa-public-component/MissingResourceModule/Components/Footer/index.tsx","../../../../packages/illa-public-component/MissingResourceModule/Components/ResourceChoose/style.ts","../../../../packages/illa-public-component/MissingResourceModule/Components/ResourceChoose/utils.ts","../../../../packages/illa-public-component/MissingResourceModule/Components/ResourceChoose/index.tsx","../../../../packages/illa-public-component/MissingResourceModule/Components/MissingList/style.ts","../../../../packages/illa-public-component/MissingResourceModule/Components/MissingList/listItem.tsx","../../../../packages/illa-public-component/MissingResourceModule/Components/MissingList/index.tsx","../../../../packages/illa-public-component/MissingResourceModule/index.tsx","../../src/page/App/components/MissingRosourceModal/index.tsx","../../src/components/UpgradeTag/style.ts","../../src/assets/snow-icon.svg?react","../../src/page/App/components/Actions/ControlledElement/style.ts","../../src/page/App/Module/PageNavBar/AppSettingModal/style.ts","../../src/page/App/Module/PageNavBar/AppSettingModal/index.tsx","../../src/page/App/Module/PageNavBar/AppName/style.ts","../../src/page/App/Module/PageNavBar/AppName/index.tsx","../../src/assets/appSize/desktop.svg?react","../../src/assets/appSize/filter.svg?react","../../src/assets/appSize/fluid.svg?react","../../src/assets/appSize/tablet.svg?react","../../src/page/App/Module/PageNavBar/PreviewPopContent/index.tsx","../../src/page/App/Module/PageNavBar/AppSizeButtonGroup/style.ts","../../src/page/App/Module/PageNavBar/AppSizeButtonGroup/index.tsx","../../src/page/App/Module/PageNavBar/CollaboratorsList/ListItem/style.ts","../../src/page/App/Module/PageNavBar/CollaboratorsList/style.ts","../../src/page/App/Module/PageNavBar/DeloyButtonGroup/style.ts","../../src/page/App/Module/PageNavBar/DeloyButtonGroup/index.tsx","../../src/page/App/Module/PageNavBar/WindowIcons/style.ts","../../src/page/App/Module/PageNavBar/WindowIcons/index.tsx","../../src/page/App/Module/PageNavBar/index.tsx"],"sourcesContent":["import {\n  AirtableAction,\n  AirtableActionConfigType,\n  AirtableBaseConfig,\n  AirtableCreateRecord,\n  AirtableDeleteMultipleRecords,\n  AirtableDeleteRecord,\n  AirtableGetRecord,\n  AirtableListRecord,\n  AirtableUpdateMultipleRecords,\n  AirtableUpdateRecord,\n} from \"@illa-public/public-types\"\n\nexport const AirtableBaseConfigInitial: AirtableBaseConfig = {\n  baseId: \"\",\n  tableName: \"\",\n}\n\nexport const AirtableListRecordInitial: AirtableListRecord = {\n  cellFormat: \"\",\n  fields: \"\",\n  filterByFormula: \"\",\n  maxRecords: \"\",\n  offset: \"\",\n  pageSize: \"\",\n  sort: \"\",\n  timeZone: \"\",\n  userLocale: \"\",\n  view: \"\",\n}\n\nexport const AirtableGetRecordInitial: AirtableGetRecord = {\n  recordID: \"\",\n}\n\nexport const AirtableCreateRecordInitial: AirtableCreateRecord = {\n  records: \"\", //object[],\n}\n\nexport const AirtableUpdateMultipleRecordInitial: AirtableUpdateMultipleRecords =\n  {\n    records: \"\",\n  }\n\nexport const AirtableUpdateRecordInitial: AirtableUpdateRecord = {\n  recordID: \"\",\n  record: \"\",\n}\n\nexport const AirtableDeleteMultipleRecordInitial: AirtableDeleteMultipleRecords =\n  {\n    recordIDs: \"\",\n  }\n\nexport const AirtableDeleteRecordInitial: AirtableDeleteRecord = {\n  recordID: \"\",\n}\n\nexport const AirtableActionConfigInitial: AirtableAction<AirtableActionConfigType> =\n  {\n    baseConfig: AirtableBaseConfigInitial,\n    config: AirtableListRecordInitial,\n    method: \"list\",\n  }\n","import {\n  AppwriteAction,\n  AppwriteDocumentOperations,\n  AppwriteFilterParams,\n  AppwriteListDocuments,\n  Params,\n} from \"@illa-public/public-types\"\n\nexport const AppwriteDocumentOperationsInitial: AppwriteDocumentOperations = {\n  collectionID: \"\",\n  documentID: \"\",\n  data: \"\",\n}\n\nexport const AppwriteFilterInitial: AppwriteFilterParams = {\n  key: \"\",\n  operator: \"equal\",\n  value: \"\",\n}\n\nexport const AppwriteOrderByInitial: Params = { key: \"\", value: \"asc\" }\n\nexport const AppwriteListDocumentsInitial: AppwriteListDocuments = {\n  collectionID: \"\",\n  filter: [\n    {\n      key: \"\",\n      operator: \"equal\",\n      value: \"\",\n    },\n  ],\n  orderBy: [\n    {\n      key: \"\",\n      value: \"asc\",\n    },\n  ],\n  limit: \"{{100}}\",\n}\n\nexport const AppwriteActionInitial: AppwriteAction<AppwriteListDocuments> = {\n  method: \"list\",\n  opts: AppwriteListDocumentsInitial,\n}\n","import { GraphQLAction } from \"@illa-public/public-types\"\n\nexport const GraphQLActionInitial: GraphQLAction = {\n  query: \"\",\n  variables: [\n    {\n      key: \"\",\n      value: \"\",\n    },\n  ],\n  headers: [\n    {\n      key: \"\",\n      value: \"\",\n    },\n  ],\n}\n","import {\n  MicrosoftSqlAction,\n  MicrosoftSqlActionGUIMode,\n  MicrosoftSqlActionSqlMode,\n  MicrosoftSqlActionType,\n} from \"@illa-public/public-types\"\n\nexport const MicrosoftSqlActionSqlModeInitial: MicrosoftSqlActionSqlMode = {\n  sql: \"\",\n}\n\nexport const MicrosoftSqlActionGUIModeInitial: MicrosoftSqlActionGUIMode = {\n  table: \"\",\n  type: \"bulk_insert\",\n  records: \"\",\n}\n\nexport const MicrosoftSqlActionInitial: MicrosoftSqlAction<MicrosoftSqlActionType> =\n  {\n    mode: \"sql-safe\",\n    query: MicrosoftSqlActionSqlModeInitial,\n  }\n","import {\n  MongoDbAction,\n  MongoDbActionTypeContent,\n  MongoDbAggregateContent,\n  MongoDbBulkWriteContent,\n  MongoDbCommandContent,\n  MongoDbCountContent,\n  MongoDbDeleteManyContent,\n  MongoDbDeleteOneContent,\n  MongoDbDistinctContent,\n  MongoDbFindContent,\n  MongoDbFindOneAndUpdateContent,\n  MongoDbFindOneContent,\n  MongoDbInsertManyContent,\n  MongoDbInsertOneContent,\n  MongoDbListCollectionsContent,\n  MongoDbUpdateManyContent,\n  MongoDbUpdateOneContent,\n} from \"@illa-public/public-types\"\n\nexport const MongoDbAggregateContentInitial: MongoDbAggregateContent = {\n  aggregation: \"\",\n  options: \"\",\n}\n\nexport const MongoDbBulkWriteContentInitial: MongoDbBulkWriteContent = {\n  operations: \"\",\n  options: \"\",\n}\n\nexport const MongoDbCountContentInitial: MongoDbCountContent = {\n  query: \"\",\n}\n\nexport const MongoDbDeleteManyContentInitial: MongoDbDeleteManyContent = {\n  filter: \"\",\n}\n\nexport const MongoDbDeleteOneContentInitial: MongoDbDeleteOneContent = {\n  filter: \"\",\n}\n\nexport const MongoDbDistinctContentInitial: MongoDbDistinctContent = {\n  query: \"\",\n  field: \"\",\n  options: \"\",\n}\n\nexport const MongoDbFindContentInitial: MongoDbFindContent = {\n  query: \"\",\n  projection: \"\",\n  sortBy: \"\",\n  limit: \"\",\n  skip: \"\",\n}\n\nexport const MongoDbFindOneContentInitial: MongoDbFindOneContent = {\n  query: \"\",\n  projection: \"\",\n  skip: \"\",\n}\n\nexport const MongoDbFindOneAndUpdateContentInitial: MongoDbFindOneAndUpdateContent =\n  {\n    filter: \"\",\n    update: \"\",\n    options: \"\",\n  }\n\nexport const MongoDbInsertOneContentInitial: MongoDbInsertOneContent = {\n  document: \"\",\n}\n\nexport const MongoDbInsertManyContentInitial: MongoDbInsertManyContent = {\n  document: \"\",\n}\n\nexport const MongoDbListCollectionsContentInitial: MongoDbListCollectionsContent =\n  {\n    query: \"\",\n  }\n\nexport const MongoDbUpdateManyContentInitial: MongoDbUpdateManyContent = {\n  filter: \"\",\n  update: \"\",\n  options: \"\",\n}\n\nexport const MongoDbUpdateOneContentInitial: MongoDbUpdateOneContent = {\n  filter: \"\",\n  update: \"\",\n  options: \"\",\n}\n\nexport const MongoDbCommandContentInitial: MongoDbCommandContent = {\n  document: \"\",\n}\n\nexport const MongoDbActionInitial: MongoDbAction<MongoDbActionTypeContent> = {\n  actionType: \"aggregate\",\n  collection: \"\",\n  typeContent: MongoDbAggregateContentInitial,\n}\n","import { MysqlLikeAction } from \"@illa-public/public-types\"\n\nexport const MysqlLikeActionInitial: MysqlLikeAction = {\n  mode: \"sql-safe\",\n  query: \"\",\n}\n","import { OracleDBAction, OracleDBActionType } from \"@illa-public/public-types\"\n\nexport const OracleDBActionSQLModeInitial = {\n  raw: \"\",\n}\n\nexport const OracleDBActionInitial: OracleDBAction<OracleDBActionType> = {\n  mode: \"sql-safe\",\n  opts: OracleDBActionSQLModeInitial,\n}\n","import { RedisAction } from \"@illa-public/public-types\"\n\nexport const RedisActionInitial: RedisAction = {\n  mode: \"raw\",\n  query: \"\",\n}\n","import {\n  Params,\n  RestAPIAction,\n  RestAPIBodyContent,\n  RestAPIRawBody,\n} from \"@illa-public/public-types\"\n\nexport const RestAPIRawBodyInitial: RestAPIRawBody = {\n  type: \"text\",\n  content: \"\",\n}\n\nexport const RestAPIActionInitial: RestAPIAction<RestAPIBodyContent> = {\n  url: \"\",\n  method: \"GET\",\n  urlParams: [{ key: \"\", value: \"\" } as Params],\n  headers: [{ key: \"\", value: \"\" } as Params],\n  cookies: [{ key: \"\", value: \"\" } as Params],\n  bodyType: \"none\",\n  body: null,\n}\n","import { TransformerAction } from \"@illa-public/public-types\"\n\nexport const TransformerActionInitial: TransformerAction = {\n  transformerString: `{{(function (){// Tip: assign your external references to variables instead of chaining off the curly brackets.\nreturn 5})()}}`,\n}\n","import {\n  ActionContent,\n  ActionType,\n  Agent,\n  BaseAiAgentActionContent,\n} from \"@illa-public/public-types\"\nimport { AirtableActionConfigInitial } from \"./airtableAction\"\nimport { AppwriteActionInitial } from \"./appwriteAction\"\nimport { CouchDBActionInitial } from \"./couchDBAction\"\nimport { DynamoDBActionInitial } from \"./dynamoDBAction\"\nimport { ElasticSearchActionInitial } from \"./elasticSearchAction\"\nimport { FirebaseActionInitial } from \"./firebaseAction\"\nimport { GoogleSheetsActionInitial } from \"./googleSheetsAction\"\nimport { GraphQLActionInitial } from \"./graphqlAction\"\nimport { HuggingFaceActionInitial } from \"./huggingFaceAction\"\nimport { ILLADriveActionInitial } from \"./illaDriveAction\"\nimport { MicrosoftSqlActionInitial } from \"./microsoftSqlAction\"\nimport { MongoDbActionInitial } from \"./mongoDbAction\"\nimport { MysqlLikeActionInitial } from \"./mysqlLikeAction\"\nimport { OracleDBActionInitial } from \"./oracleDBAction\"\nimport { RedisActionInitial } from \"./redisAction\"\nimport { RestAPIActionInitial } from \"./restapiAction\"\nimport { S3ActionInitial } from \"./s3Action\"\nimport { SMTPActionInitial } from \"./smtpAction\"\nimport { TransformerActionInitial } from \"./transformerAction\"\n\nexport function getInitialContent(actionType: ActionType): ActionContent {\n  switch (actionType) {\n    case \"clickhouse\":\n    case \"supabasedb\":\n    case \"mariadb\":\n    case \"tidb\":\n    case \"mysql\":\n    case \"postgresql\":\n    case \"snowflake\":\n    case \"hydra\":\n    case \"neon\":\n      return MysqlLikeActionInitial\n    case \"mssql\":\n      return MicrosoftSqlActionInitial\n    case \"oracle9i\":\n    case \"oracle\":\n      return OracleDBActionInitial\n    case \"restapi\":\n      return RestAPIActionInitial\n    case \"transformer\":\n      return TransformerActionInitial\n    case \"redis\":\n    case \"upstash\":\n      return RedisActionInitial\n    case \"mongodb\":\n      return MongoDbActionInitial\n    case \"elasticsearch\":\n      return ElasticSearchActionInitial\n    case \"dynamodb\":\n      return DynamoDBActionInitial\n    case \"s3\":\n      return S3ActionInitial\n    case \"smtp\":\n      return SMTPActionInitial\n    case \"googlesheets\":\n      return GoogleSheetsActionInitial\n    case \"firebase\":\n      return FirebaseActionInitial\n    case \"graphql\":\n      return GraphQLActionInitial\n    case \"huggingface\":\n    case \"hfendpoint\":\n      return HuggingFaceActionInitial\n    case \"appwrite\":\n      return AppwriteActionInitial\n    case \"couchdb\":\n      return CouchDBActionInitial\n    case \"airtable\":\n      return AirtableActionConfigInitial\n    case \"illadrive\":\n      return ILLADriveActionInitial\n    default:\n      return {} as ActionContent\n  }\n}\n\nexport function getInitialAgentContent(agent: Agent): BaseAiAgentActionContent {\n  return {\n    agentType: agent.agentType,\n    model: agent.model,\n    variables: agent.variables,\n    input: \"\",\n    modelConfig: {\n      stream: false,\n    },\n  }\n}\n","import {\n  INIT_ACTION_ADVANCED_CONFIG,\n  INIT_ACTION_MOCK_CONFIG,\n  actionItemInitial,\n  getInitialAgentContent,\n  getInitialContent,\n} from \"@illa-public/public-configs\"\nimport {\n  ActionContent,\n  ActionItem,\n  ActionType,\n  Agent,\n  AiAgentActionContent,\n} from \"@illa-public/public-types\"\nimport { HandleCreateAgentActionFunc } from \"@illa-public/resource-generator/components/ActionGenerator/AIAgentSelector/interface\"\nimport { HandleDirectCreateActionFunc } from \"@illa-public/resource-generator/components/ActionGenerator/ActionResourceSelector/interface\"\nimport { useCallback } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { v4 } from \"uuid\"\nimport { useMessage } from \"@illa-design/react\"\nimport { aiAgentActions } from \"@/redux/aiAgent/dashboardTeamAIAgentSlice\"\nimport { getIsILLAGuideMode } from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { actionActions } from \"@/redux/currentApp/action/actionSlice\"\nimport { fetchCreateAction } from \"@/services/action\"\nimport { DisplayNameGenerator } from \"@/utils/generators/generateDisplayName\"\n\nexport const useCreateAction = (): [\n  HandleDirectCreateActionFunc,\n  HandleCreateAgentActionFunc,\n] => {\n  const isGuideMode = useSelector(getIsILLAGuideMode)\n  const dispatch = useDispatch()\n  const message = useMessage()\n  const { t } = useTranslation()\n\n  const handleDirectCreateAction = useCallback(\n    async (\n      currentActionType: ActionType,\n      resourceID: string,\n      successCallback?: () => void,\n      loadingCallback?: (loading: boolean) => void,\n    ) => {\n      if (currentActionType == null) {\n        return\n      }\n      const displayName =\n        DisplayNameGenerator.generateDisplayName(currentActionType)\n      const initialContent = getInitialContent(currentActionType)\n      const data: Omit<ActionItem<ActionContent>, \"actionID\"> = {\n        actionType: currentActionType,\n        displayName,\n        resourceID,\n        content: initialContent,\n        isVirtualResource: false,\n        ...actionItemInitial,\n        config: {\n          public: false,\n          advancedConfig: INIT_ACTION_ADVANCED_CONFIG,\n          mockConfig: INIT_ACTION_MOCK_CONFIG,\n        },\n      }\n      if (isGuideMode) {\n        const createActionData: ActionItem<ActionContent> = {\n          ...data,\n          actionID: v4(),\n        }\n        dispatch(actionActions.addActionItemReducer(createActionData))\n        dispatch(configActions.changeSelectedAction(createActionData))\n        successCallback?.()\n        return\n      }\n      loadingCallback?.(true)\n      try {\n        const { data: responseData } = await fetchCreateAction(data)\n        message.success({\n          content: t(\"editor.action.action_list.message.success_created\"),\n        })\n        dispatch(actionActions.addActionItemReducer(responseData))\n        dispatch(configActions.changeSelectedAction(responseData))\n        successCallback?.()\n      } catch (_e) {\n        message.error({\n          content: t(\"editor.action.action_list.message.failed\"),\n        })\n        DisplayNameGenerator.removeDisplayName(displayName)\n      }\n      loadingCallback?.(false)\n    },\n    [dispatch, message, t, isGuideMode],\n  )\n\n  const handleCreateAgentAction = useCallback(\n    async (\n      item: Agent,\n      successCallback?: () => void,\n      loadingCallback?: (loading: boolean) => void,\n    ) => {\n      dispatch(\n        aiAgentActions.addTeamAIAgentReducer({\n          aiAgent: item,\n        }),\n      )\n      const displayName = DisplayNameGenerator.generateDisplayName(\"aiagent\")\n      const initalAgentContent = getInitialAgentContent(item)\n      const data: Omit<ActionItem<AiAgentActionContent>, \"actionID\"> = {\n        actionType: \"aiagent\",\n        displayName,\n        resourceID: item.aiAgentID,\n        content: {\n          ...initalAgentContent,\n          virtualResource: item,\n        },\n        isVirtualResource: true,\n        ...actionItemInitial,\n        config: {\n          public: false,\n          advancedConfig: INIT_ACTION_ADVANCED_CONFIG,\n          mockConfig: INIT_ACTION_MOCK_CONFIG,\n          icon: item.icon,\n        },\n      }\n      if (isGuideMode) {\n        const createActionData: ActionItem<ActionContent> = {\n          ...data,\n          actionID: v4(),\n        }\n        dispatch(actionActions.addActionItemReducer(createActionData))\n        dispatch(configActions.changeSelectedAction(createActionData))\n        successCallback?.()\n        return\n      }\n      loadingCallback?.(true)\n      try {\n        const { data: responseData } = await fetchCreateAction(data)\n        message.success({\n          content: t(\"editor.action.action_list.message.success_created\"),\n        })\n        dispatch(actionActions.addActionItemReducer(responseData))\n        dispatch(configActions.changeSelectedAction(responseData))\n        successCallback?.()\n      } catch (_e) {\n        message.error({\n          content: t(\"editor.action.action_list.message.failed\"),\n        })\n        DisplayNameGenerator.removeDisplayName(displayName)\n      }\n      loadingCallback?.(false)\n    },\n    [dispatch, isGuideMode, message, t],\n  )\n\n  return [handleDirectCreateAction, handleCreateAgentAction]\n}\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const categoryTitleStyle = css`\n  padding: 0;\n  padding-top: 16px;\n  padding-bottom: 8px;\n  color: ${getColor(\"grayBlue\", \"04\")};\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 22px;\n  margin: 0;\n`\n\nexport const headerContainerStyle = css`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 536px;\n`\n\nexport const categoryItemContainerStyle = css`\n  display: grid;\n  gap: 16px;\n  grid-template-columns: repeat(3, 168px);\n`\n\nexport const basicButtonStyle = css`\n  display: flex;\n  width: 100%;\n  padding: 8px 16px;\n  gap: 12px;\n  align-items: center;\n  border: 1px solid ${getColor(\"grayBlue\", \"08\")};\n  border-radius: 8px;\n  background-color: white;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  &:hover {\n    box-shadow: 0 4px 10px 0 ${getColor(\"blackAlpha\", \"07\")};\n    background-color: ${getColor(\"techPurple\", \"08\")};\n    border-color: ${getColor(\"techPurple\", \"03\")};\n  }\n`\n\nexport const categoryItemNameStyle = css`\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 20px;\n  color: ${getColor(\"grayBlue\", \"02\")};\n`\n","import { getIconFromResourceType } from \"@illa-public/icon\"\nimport {\n  ILLA_MIXPANEL_BUILDER_PAGE_NAME,\n  ILLA_MIXPANEL_EVENT_TYPE,\n  MixpanelTrackProvider,\n} from \"@illa-public/mixpanel-utils\"\nimport {\n  INIT_ACTION_ADVANCED_CONFIG,\n  INIT_ACTION_MOCK_CONFIG,\n  actionItemInitial,\n  getInitialContent,\n} from \"@illa-public/public-configs\"\nimport {\n  ActionContent,\n  ActionItem,\n  ActionType,\n  GlobalDataActionContent,\n  Resource,\n} from \"@illa-public/public-types\"\nimport {\n  ActionGenerator,\n  ResourceGeneratorProvider,\n  getResourceNameFromResourceType,\n} from \"@illa-public/resource-generator\"\nimport { FC, Suspense, memo, useCallback, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { v4 } from \"uuid\"\nimport { Button, NextIcon, useMessage } from \"@illa-design/react\"\nimport { useCreateAction } from \"@/page/App/components/Actions/hook\"\nimport { getIsILLAGuideMode } from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { actionActions } from \"@/redux/currentApp/action/actionSlice\"\nimport { componentsActions } from \"@/redux/currentApp/components/componentsSlice\"\nimport { getAllResources } from \"@/redux/resource/resourceSelector\"\nimport { resourceActions } from \"@/redux/resource/resourceSlice\"\nimport { fetchCreateAction } from \"@/services/action\"\nimport { DisplayNameGenerator } from \"@/utils/generators/generateDisplayName\"\nimport { track } from \"@/utils/mixpanelHelper\"\nimport { PanelSectionProps } from \"./interface\"\nimport {\n  basicButtonStyle,\n  categoryItemContainerStyle,\n  categoryItemNameStyle,\n  categoryTitleStyle,\n  headerContainerStyle,\n} from \"./style\"\n\nconst ActionPanelSection: FC<PanelSectionProps> = (props) => {\n  const { actionTypes, title, hasMore, changeLoading, filterFunc } = props\n  const { t } = useTranslation()\n\n  const [generatorVisible, setGeneratorVisible] = useState<boolean>()\n  const [currentActionType, setCurrentActionType] =\n    useState<ActionType | null>()\n\n  const isGuideMode = useSelector(getIsILLAGuideMode)\n  const resourceList = useSelector(getAllResources)\n  const dispatch = useDispatch()\n  const message = useMessage()\n\n  const handleClickActionType = (type: ActionType | null) => {\n    return async () => {\n      switch (type) {\n        case \"transformer\": {\n          const displayName = DisplayNameGenerator.generateDisplayName(type)\n          const initialContent = getInitialContent(type)\n          const data: Omit<ActionItem<ActionContent>, \"actionID\"> = {\n            actionType: type,\n            displayName,\n            content: initialContent,\n            isVirtualResource: false,\n            config: {\n              public: false,\n              advancedConfig: INIT_ACTION_ADVANCED_CONFIG,\n              mockConfig: INIT_ACTION_MOCK_CONFIG,\n            },\n            ...actionItemInitial,\n          }\n          if (isGuideMode) {\n            const createActionData: ActionItem<ActionContent> = {\n              ...data,\n              actionID: v4(),\n            }\n            dispatch(actionActions.addActionItemReducer(createActionData))\n            dispatch(configActions.changeSelectedAction(createActionData))\n            return\n          }\n          changeLoading(true)\n          try {\n            const { data: responseData } = await fetchCreateAction(data)\n            message.success({\n              content: t(\"editor.action.action_list.message.success_created\"),\n            })\n            dispatch(actionActions.addActionItemReducer(responseData))\n            dispatch(configActions.changeSelectedAction(responseData))\n          } catch (_e) {\n            message.error({\n              content: t(\"editor.action.action_list.message.failed\"),\n            })\n            DisplayNameGenerator.removeDisplayName(displayName)\n          } finally {\n            changeLoading(false)\n          }\n          break\n        }\n        case \"globalData\": {\n          const displayName = DisplayNameGenerator.generateDisplayName(\"state\")\n          dispatch(\n            componentsActions.setGlobalStateReducer({\n              key: displayName,\n              value: \"\",\n              oldKey: \"\",\n            }),\n          )\n          const createActionData: ActionItem<GlobalDataActionContent> = {\n            actionID: displayName,\n            displayName: displayName,\n            actionType: \"globalData\",\n            triggerMode: \"manually\",\n            isVirtualResource: true,\n            content: {\n              initialValue: \"\",\n            },\n            transformer: {\n              enable: false,\n              rawData: \"\",\n            },\n            config: {\n              public: false,\n              advancedConfig: INIT_ACTION_ADVANCED_CONFIG,\n              mockConfig: INIT_ACTION_MOCK_CONFIG,\n            },\n          }\n          dispatch(configActions.changeSelectedAction(createActionData))\n\n          break\n        }\n        case \"illadrive\": {\n          const displayName = DisplayNameGenerator.generateDisplayName(type)\n          const initialContent = getInitialContent(type)\n          const data: Omit<ActionItem<ActionContent>, \"actionID\"> = {\n            actionType: type,\n            displayName,\n            content: initialContent,\n            isVirtualResource: true,\n            config: {\n              public: false,\n              advancedConfig: INIT_ACTION_ADVANCED_CONFIG,\n              mockConfig: INIT_ACTION_MOCK_CONFIG,\n            },\n            ...actionItemInitial,\n          }\n          try {\n            const { data: responseData } = await fetchCreateAction(data)\n            message.success({\n              content: t(\"editor.action.action_list.message.success_created\"),\n            })\n            dispatch(actionActions.addActionItemReducer(responseData))\n            dispatch(configActions.changeSelectedAction(responseData))\n          } catch (_e) {\n            message.error({\n              content: t(\"editor.action.action_list.message.failed\"),\n            })\n            DisplayNameGenerator.removeDisplayName(displayName)\n          }\n          break\n        }\n        default: {\n          setGeneratorVisible(true)\n          setCurrentActionType(type)\n        }\n      }\n    }\n  }\n\n  const [handleDirectCreateAction, handleCreateAgentAction] = useCreateAction()\n\n  const handleFinishCreateNewResource = useCallback(\n    (resource: Resource, isUpdate: boolean) => {\n      track(\n        ILLA_MIXPANEL_EVENT_TYPE.CLICK,\n        ILLA_MIXPANEL_BUILDER_PAGE_NAME.EDITOR,\n        {\n          element: \"resource_configure_save\",\n          parameter5: resource.resourceType,\n        },\n      )\n      if (isUpdate) {\n        dispatch(resourceActions.updateResourceItemReducer(resource))\n      } else {\n        dispatch(resourceActions.addResourceItemReducer(resource))\n      }\n      handleDirectCreateAction(resource.resourceType, resource.resourceID)\n    },\n    [dispatch, handleDirectCreateAction],\n  )\n\n  return (\n    <>\n      <div css={headerContainerStyle}>\n        <h6 css={categoryTitleStyle}>{title}</h6>\n        {hasMore && (\n          <Button\n            colorScheme=\"techPurple\"\n            variant=\"text\"\n            rightIcon={<NextIcon />}\n            onClick={handleClickActionType(null)}\n          >\n            {t(\"editor.action.panel.label.option.general.more\")}\n          </Button>\n        )}\n      </div>\n      <section css={categoryItemContainerStyle}>\n        {actionTypes.filter(filterFunc ?? ((type) => type)).map((type) => (\n          <button\n            css={basicButtonStyle}\n            key={type}\n            onClick={handleClickActionType(type)}\n          >\n            <Suspense>{getIconFromResourceType(type, \"16px\")}</Suspense>\n            <span css={categoryItemNameStyle}>\n              {getResourceNameFromResourceType(type)}\n            </span>\n          </button>\n        ))}\n      </section>\n      {generatorVisible && (\n        <MixpanelTrackProvider\n          basicTrack={track}\n          pageName={ILLA_MIXPANEL_BUILDER_PAGE_NAME.EDITOR}\n        >\n          <ResourceGeneratorProvider\n            allResource={resourceList}\n            createOrUpdateResourceCallback={handleFinishCreateNewResource}\n          >\n            <ActionGenerator\n              visible={generatorVisible}\n              onClose={() => setGeneratorVisible(false)}\n              defaultStep={currentActionType ? \"createAction\" : \"select\"}\n              defaultActionType={currentActionType}\n              canBackToSelect={false}\n              handleDirectCreateAction={handleDirectCreateAction}\n              handleCreateAgentAction={handleCreateAgentAction}\n            />\n          </ResourceGeneratorProvider>\n        </MixpanelTrackProvider>\n      )}\n    </>\n  )\n}\n\nexport default memo(ActionPanelSection)\n","import { SerializedStyles, css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport function applyActionEditorStyle(h: number) {\n  return css`\n    position: relative;\n    width: 100%;\n    height: ${h}px;\n  `\n}\n\nexport const contentContainerStyle = css`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  overflow: hidden;\n  height: 100%;\n`\n\nexport const optionLabelStyle = css`\n  height: 38px;\n  display: flex;\n  font-size: 14px;\n  font-weight: 500;\n  padding: 8px 24px;\n  color: ${getColor(\"grayBlue\", \"04\")};\n  align-items: center;\n`\n\nexport const configItem = css`\n  display: flex;\n  height: 48px;\n  align-items: center;\n  flex-direction: row;\n  padding-left: 24px;\n`\n\nexport const configItemTip = css`\n  font-size: 14px;\n  font-weight: 400;\n  margin-left: 192px;\n  padding-bottom: 8px;\n  line-height: 22px;\n  padding-left: 24px;\n  color: ${getColor(\"grayBlue\", \"04\")};\n`\n\nexport const connectType = css`\n  display: flex;\n  height: 38px;\n  align-items: center;\n  padding-left: 24px;\n`\n\nexport const labelContainer = css`\n  display: flex;\n  justify-content: end;\n  min-width: 176px;\n`\n\nexport const connectTypeStyle = css`\n  font-size: 14px;\n  height: 22px;\n  display: flex;\n  align-items: center;\n  color: ${getColor(\"grayBlue\", \"02\")};\n  margin-left: 16px;\n`\n\nexport function applyConfigItemLabelText(\n  color: string,\n  margin?: boolean,\n): SerializedStyles {\n  let marginLeft = css``\n  if (margin) {\n    marginLeft = css`\n      margin-left: 4px;\n    `\n  }\n  return css`\n    font-size: 14px;\n    color: ${color};\n    font-weight: 500;\n    ${marginLeft};\n  `\n}\n\nexport const errorMsgStyle: SerializedStyles = css`\n  position: relative;\n  font-size: 14px;\n  padding-left: 24px;\n  line-height: 22px;\n  color: ${getColor(\"orange\", \"03\")};\n`\n\nexport const errorIconStyle: SerializedStyles = css`\n  position: absolute;\n  font-size: 16px;\n  line-height: 0;\n  top: 3px;\n  left: 0;\n`\n\nexport const privateKeyItem = css`\n  display: flex;\n  width: 100%;\n  padding-top: 8px;\n  padding-left: 24px;\n  align-items: flex-start;\n`\n\nexport const getOAuthStatusContentStyle = (isSuccess: boolean) => {\n  return css`\n    width: 100%;\n    padding: 9px 16px;\n    display: flex;\n    gap: 8px;\n    height: 40px;\n    background: ${isSuccess\n      ? getColor(\"green\", \"08\")\n      : getColor(\"orange\", \"08\")};\n    border-radius: 4px;\n    align-items: center;\n  `\n}\n\nexport const oAuthStatusContainerStyle = css`\n  width: 100%;\n  padding: 8px 24px;\n`\n\nexport const oAuthErrorIconStyle: SerializedStyles = css`\n  font-size: 16px;\n  color: ${getColor(\"orange\", \"03\")};\n`\n\nexport const agentActionStyle = (size: string) => css`\n  width: ${size};\n  height: ${size};\n  flex-shrink: 0;\n  border-radius: 4px;\n`\n","import { Agent } from \"@illa-public/public-types\"\nimport { agentActionStyle } from \"../../Module/ActionEditor/styles\"\n\nexport function getAgentIcon(agent: Agent, size: string) {\n  return <img src={agent?.icon} css={agentActionStyle(size)} />\n}\n","import { ActionType } from \"@illa-public/public-types\"\nimport { isCloudVersion } from \"@illa-public/utils\"\n\nexport const RECOMMEND_RESOURCES_SELF_HOST: ActionType[] = [\n  \"restapi\",\n  \"mysql\",\n  \"postgresql\",\n  \"airtable\",\n  \"supabasedb\",\n]\n\nexport const MORE_DATA_TYPE_SELF_HOST: ActionType[] = [\n  \"transformer\",\n  \"globalData\",\n]\n\nexport const ONLY_CLOUD_MODE_DATA_TYPE: ActionType[] = [\"aiagent\", \"illadrive\"]\n\nexport const RECOMMEND_RESOURCES_CLOUD: ActionType[] = [\n  \"restapi\",\n  \"mysql\",\n  \"huggingface\",\n  \"postgresql\",\n]\n\nexport const getRecommendAgentID = () => {\n  switch (import.meta.env.ILLA_APP_ENV) {\n    case \"beta\":\n      return [\"ILAfx4p1C7c5\", \"ILAfx4p1C7c4\", \"ILAfx4p1C7c3\", \"ILAfx4p1C7dm\"]\n    case \"production\":\n      return [\"ILAfx4p1C7eu\", \"ILAfx4p1C7en\", \"ILAfx4p1C7ee\", \"ILAfx4p1C7eh\"]\n    default:\n      return [\"ILAfx4p1C7dC\", \"ILAfx4p1C7dB\", \"ILAfx4p1C7dA\", \"ILAfx4p1C7dz\"]\n  }\n}\n\nexport function filterSelfHostActionType(actionType: ActionType) {\n  if (!isCloudVersion) return !ONLY_CLOUD_MODE_DATA_TYPE.includes(actionType)\n  return !!actionType\n}\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const categoryTitleStyle = css`\n  padding: 0;\n  padding-top: 16px;\n  padding-bottom: 8px;\n  color: ${getColor(\"grayBlue\", \"04\")};\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 22px;\n  margin: 0;\n`\n\nexport const headerContainerStyle = css`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 536px;\n`\n\nexport const categoryItemContainerStyle = css`\n  display: grid;\n  gap: 16px;\n  padding-bottom: 16px;\n  grid-template-columns: repeat(2, 260px);\n`\n\nexport const basicButtonStyle = css`\n  display: flex;\n  width: 100%;\n  padding: 12px;\n  gap: 8px;\n  border: 1px solid ${getColor(\"grayBlue\", \"08\")};\n  border-radius: 8px;\n  background-color: white;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  &:hover {\n    box-shadow: 0 4px 10px 0 ${getColor(\"blackAlpha\", \"07\")};\n    background-color: ${getColor(\"techPurple\", \"08\")};\n    border-color: ${getColor(\"techPurple\", \"03\")};\n  }\n`\n\nexport const titleAndContentContainerStyle = css`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nexport const titleStyle = css`\n  display: inline-block;\n  line-height: 16px;\n  color: ${getColor(\"grayBlue\", \"02\")};\n  font-size: 12px;\n  font-weight: 500;\n  text-align: left;\n`\n\nexport const descStyle = css`\n  width: 196px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  line-height: 14px;\n  font-size: 12px;\n  color: ${getColor(\"grayBlue\", \"03\")};\n  font-weight: 400;\n  text-align: left;\n  word-break: break-all;\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 2;\n`\n","import { getAIAgentMarketplaceInfo } from \"@illa-public/market-agent\"\nimport {\n  ILLA_MIXPANEL_BUILDER_PAGE_NAME,\n  ILLA_MIXPANEL_EVENT_TYPE,\n  MixpanelTrackProvider,\n} from \"@illa-public/mixpanel-utils\"\nimport {\n  INIT_ACTION_ADVANCED_CONFIG,\n  actionItemInitial,\n  getInitialAgentContent,\n} from \"@illa-public/public-configs\"\nimport {\n  ActionContent,\n  ActionItem,\n  Agent,\n  AiAgentActionContent,\n  Resource,\n} from \"@illa-public/public-types\"\nimport {\n  ActionGenerator,\n  ResourceGeneratorProvider,\n} from \"@illa-public/resource-generator\"\nimport { FC, memo, useCallback, useEffect, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { v4 } from \"uuid\"\nimport { Button, NextIcon, Skeleton, useMessage } from \"@illa-design/react\"\nimport { getAgentIcon } from \"@/page/App/components/Actions/getIcon\"\nimport { useCreateAction } from \"@/page/App/components/Actions/hook\"\nimport { aiAgentActions } from \"@/redux/aiAgent/dashboardTeamAIAgentSlice\"\nimport { getIsILLAGuideMode } from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { actionActions } from \"@/redux/currentApp/action/actionSlice\"\nimport { getAllResources } from \"@/redux/resource/resourceSelector\"\nimport { resourceActions } from \"@/redux/resource/resourceSlice\"\nimport { fetchCreateAction } from \"@/services/action\"\nimport { forkAIAgentToTeam } from \"@/services/agent\"\nimport { DisplayNameGenerator } from \"@/utils/generators/generateDisplayName\"\nimport { track } from \"@/utils/mixpanelHelper\"\nimport { getRecommendAgentID } from \"../../constans\"\nimport { AgentPanelSectionProps } from \"./interface\"\nimport {\n  basicButtonStyle,\n  categoryItemContainerStyle,\n  categoryTitleStyle,\n  descStyle,\n  headerContainerStyle,\n  titleAndContentContainerStyle,\n  titleStyle,\n} from \"./style\"\n\nconst AgentPanelSection: FC<AgentPanelSectionProps> = (props) => {\n  const { agents, title, hasMore, changeLoading } = props\n  const { t } = useTranslation()\n  const [generatorVisible, setGeneratorVisible] = useState<boolean>()\n  const [recommendAgents, setRecommendAgents] = useState<Agent[]>([])\n  const [isLoadingRecommendAgents, setIsLoadingRecommendAgents] =\n    useState(false)\n\n  const isGuideMode = useSelector(getIsILLAGuideMode)\n  const resourceList = useSelector(getAllResources)\n  const dispatch = useDispatch()\n  const message = useMessage()\n  const filterAgents = agents.slice(0, 4)\n\n  const [handleDirectCreateAction, handleCreateAgentAction] = useCreateAction()\n\n  const handleFinishCreateNewResource = useCallback(\n    (resource: Resource, isUpdate: boolean) => {\n      track(\n        ILLA_MIXPANEL_EVENT_TYPE.CLICK,\n        ILLA_MIXPANEL_BUILDER_PAGE_NAME.EDITOR,\n        {\n          element: \"resource_configure_save\",\n          parameter5: resource.resourceType,\n        },\n      )\n      if (isUpdate) {\n        dispatch(resourceActions.updateResourceItemReducer(resource))\n      } else {\n        dispatch(resourceActions.addResourceItemReducer(resource))\n      }\n      handleDirectCreateAction(resource.resourceType, resource.resourceID)\n    },\n    [dispatch, handleDirectCreateAction],\n  )\n\n  const handleClickAction = useCallback(\n    (item: Agent, fromRecommend?: boolean) => {\n      return async () => {\n        if (fromRecommend) {\n          const response = await forkAIAgentToTeam(item.aiAgentID)\n          dispatch(\n            aiAgentActions.addTeamAIAgentReducer({\n              aiAgent: response.data,\n            }),\n          )\n          item = response.data\n        }\n        const displayName = DisplayNameGenerator.generateDisplayName(\"aiagent\")\n        const initalAgentContent = getInitialAgentContent(item)\n        const data: Omit<ActionItem<AiAgentActionContent>, \"actionID\"> = {\n          actionType: \"aiagent\",\n          displayName,\n          resourceID: item.aiAgentID,\n          content: {\n            ...initalAgentContent,\n            virtualResource: item,\n          },\n          isVirtualResource: true,\n          ...actionItemInitial,\n          config: {\n            public: false,\n            advancedConfig: INIT_ACTION_ADVANCED_CONFIG,\n            icon: item.icon,\n          },\n        }\n        if (isGuideMode) {\n          const createActionData: ActionItem<ActionContent> = {\n            ...data,\n            actionID: v4(),\n          }\n          dispatch(actionActions.addActionItemReducer(createActionData))\n          dispatch(configActions.changeSelectedAction(createActionData))\n          return\n        }\n        changeLoading(true)\n        try {\n          const { data: responseData } = await fetchCreateAction(data)\n          message.success({\n            content: t(\"editor.action.action_list.message.success_created\"),\n          })\n          dispatch(actionActions.addActionItemReducer(responseData))\n          dispatch(configActions.changeSelectedAction(responseData))\n        } catch (_e) {\n          message.error({\n            content: t(\"editor.action.action_list.message.failed\"),\n          })\n          DisplayNameGenerator.removeDisplayName(displayName)\n        } finally {\n          changeLoading(false)\n        }\n      }\n    },\n    [changeLoading, dispatch, isGuideMode, message, t],\n  )\n\n  useEffect(() => {\n    const abortController = new AbortController()\n    if (filterAgents.length < 4) {\n      const fetchMarketAgentList = async () => {\n        setIsLoadingRecommendAgents(true)\n        const needFetchAgentID = getRecommendAgentID().slice(\n          filterAgents.length,\n        )\n        const needFetches = needFetchAgentID.map((id) =>\n          getAIAgentMarketplaceInfo(id, abortController.signal),\n        )\n        Promise.all(needFetches)\n          .then((res) => {\n            const result = res.map((item) => item.data.aiAgent)\n            setRecommendAgents(result)\n          })\n          .finally(() => setIsLoadingRecommendAgents(false))\n      }\n      fetchMarketAgentList()\n    }\n\n    return () => {\n      abortController.abort()\n      setIsLoadingRecommendAgents(false)\n    }\n  }, [filterAgents.length])\n\n  return (\n    <>\n      <div css={headerContainerStyle}>\n        <h6 css={categoryTitleStyle}>{title}</h6>\n        {hasMore && (\n          <Button\n            colorScheme=\"techPurple\"\n            variant=\"text\"\n            rightIcon={<NextIcon />}\n            onClick={() => setGeneratorVisible(true)}\n          >\n            {t(\"editor.action.panel.label.option.general.more\")}\n          </Button>\n        )}\n      </div>\n      <section css={categoryItemContainerStyle}>\n        {filterAgents.map((agent) => (\n          <button\n            css={basicButtonStyle}\n            key={agent.aiAgentID}\n            onClick={handleClickAction(agent)}\n          >\n            {getAgentIcon(agent, \"32px\")}\n            <div css={titleAndContentContainerStyle}>\n              <span css={titleStyle}>{agent.name}</span>\n              <span css={descStyle}>{agent.description}</span>\n            </div>\n          </button>\n        ))}\n        {filterAgents.length < 4 &&\n          (isLoadingRecommendAgents\n            ? getRecommendAgentID()\n                .slice(4 - filterAgents.length)\n                .map((v) => (\n                  <button css={basicButtonStyle} key={v}>\n                    <Skeleton\n                      text={false}\n                      animation\n                      image={{\n                        shape: \"square\",\n                        w: \"100%\",\n                        h: \"32px\",\n                        mr: \"0 !important\",\n                      }}\n                      h=\"32px\"\n                      w=\"100%\"\n                    />\n                  </button>\n                ))\n            : recommendAgents.map((agent) => (\n                <button\n                  css={basicButtonStyle}\n                  key={agent.aiAgentID}\n                  onClick={handleClickAction(agent, true)}\n                >\n                  {getAgentIcon(agent, \"32px\")}\n                  <div css={titleAndContentContainerStyle}>\n                    <span css={titleStyle}>{agent.name}</span>\n                    <span css={descStyle}>{agent.description}</span>\n                  </div>\n                </button>\n              )))}\n      </section>\n      {generatorVisible && (\n        <MixpanelTrackProvider\n          basicTrack={track}\n          pageName={ILLA_MIXPANEL_BUILDER_PAGE_NAME.EDITOR}\n        >\n          <ResourceGeneratorProvider\n            allResource={resourceList}\n            createOrUpdateResourceCallback={handleFinishCreateNewResource}\n          >\n            <ActionGenerator\n              visible={generatorVisible}\n              onClose={() => setGeneratorVisible(false)}\n              defaultStep=\"createAction\"\n              defaultActionType=\"aiagent\"\n              canBackToSelect={false}\n              handleDirectCreateAction={handleDirectCreateAction}\n              handleCreateAgentAction={handleCreateAgentAction}\n            />\n          </ResourceGeneratorProvider>\n        </MixpanelTrackProvider>\n      )}\n    </>\n  )\n}\n\nexport default memo(AgentPanelSection)\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const guidePanelOutContainerStyle = css`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  padding: 24px 16px;\n  overflow-x: auto;\n`\n\nexport const guidePanelContainerStyle = css`\n  width: 584px;\n  height: 100%;\n  position: relative;\n  margin: 0 auto;\n`\n\nexport const loadingContainerStyle = css`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${getColor(\"white\", \"03\")};\n`\n","import { isCloudVersion } from \"@illa-public/utils\"\nimport { FC, memo, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useSelector } from \"react-redux\"\nimport { Loading } from \"@illa-design/react\"\nimport { getDashboardTeamAIAgentList } from \"@/redux/aiAgent/dashboardTeamAIAgentSelector\"\nimport ActionPanelSection from \"./components/ActionSection\"\nimport AgentPanelSection from \"./components/AgentSection\"\nimport {\n  MORE_DATA_TYPE_SELF_HOST,\n  RECOMMEND_RESOURCES_CLOUD,\n  RECOMMEND_RESOURCES_SELF_HOST,\n} from \"./constans\"\nimport {\n  guidePanelContainerStyle,\n  guidePanelOutContainerStyle,\n  loadingContainerStyle,\n} from \"./style\"\n\nconst ActionGuidePanel: FC = () => {\n  const { t } = useTranslation()\n  const [isLoading, setIsLoading] = useState(false)\n  const agentList = useSelector(getDashboardTeamAIAgentList)\n\n  return (\n    <>\n      <div css={guidePanelOutContainerStyle}>\n        <div css={guidePanelContainerStyle}>\n          {!isCloudVersion ? (\n            <>\n              <ActionPanelSection\n                title={t(\n                  \"editor.action.panel.label.general.connect-data-source\",\n                )}\n                actionTypes={RECOMMEND_RESOURCES_SELF_HOST}\n                changeLoading={setIsLoading}\n                hasMore\n              />\n              <ActionPanelSection\n                title={t(\"editor.action.panel.label.general.more-type\")}\n                actionTypes={MORE_DATA_TYPE_SELF_HOST}\n                changeLoading={setIsLoading}\n                hasMore={false}\n              />\n            </>\n          ) : (\n            <>\n              <ActionPanelSection\n                title={t(\n                  \"editor.action.panel.label.general.connect-data-source\",\n                )}\n                actionTypes={RECOMMEND_RESOURCES_CLOUD}\n                changeLoading={setIsLoading}\n                hasMore\n              />\n              <AgentPanelSection\n                title={t(\"editor.action.panel.label.general.ai_agent_title\")}\n                agents={agentList}\n                hasMore\n                changeLoading={setIsLoading}\n              />\n            </>\n          )}\n          {isLoading && (\n            <div css={loadingContainerStyle}>\n              <Loading colorScheme=\"techPurple\" />\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default memo(ActionGuidePanel)\n","import { GoogleSheetAuthStatus } from \"@illa-public/public-types\"\nimport { useEffect } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useSelector } from \"react-redux\"\nimport { useSearchParams } from \"react-router-dom\"\nimport { useMessage } from \"@illa-design/react\"\nimport { getActionList } from \"@/redux/currentApp/action/actionSelector\"\n\nexport const useGoogleAuthStatus = (\n  finished?: (resourceID: string) => void,\n) => {\n  const message = useMessage()\n  const actions = useSelector(getActionList)\n  const { t } = useTranslation()\n  const [urlParams, setUrlParams] = useSearchParams()\n\n  const status = urlParams.get(\"status\")\n  const resourceID = urlParams.get(\"resourceID\")\n\n  useEffect(() => {\n    if (resourceID == undefined || status == undefined) {\n      return\n    }\n    // redirect url: 1 success, 2 failed, reverse with resource\n    if (status === String(GoogleSheetAuthStatus.NotAuthenticated)) {\n      message.success({\n        content: t(\"editor.action.form.tips.gs.successfully_authent\"),\n      })\n    } else {\n      message.error({\n        content: t(\"editor.action.form.tips.gs.failed_to_authentica\"),\n      })\n    }\n    urlParams.delete(\"status\")\n    urlParams.delete(\"resourceID\")\n    setUrlParams(urlParams)\n    finished?.(resourceID)\n  }, [\n    actions,\n    finished,\n    message,\n    resourceID,\n    setUrlParams,\n    status,\n    t,\n    urlParams,\n  ])\n}\n","import { css } from \"@emotion/react\"\nimport chroma from \"chroma-js\"\nimport { getColor, globalColor, illaPrefix } from \"@illa-design/react\"\n\nexport const searchHeaderStyle = css`\n  width: 100%;\n  height: 48px;\n  display: flex;\n  flex-direction: row;\n  padding: 0 16px;\n  align-items: center;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-04`)};\n`\n\nexport const searchInputContainerStyle = css`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n`\n\nexport const searchHeaderTitleTextStyle = css`\n  white-space: nowrap;\n  font-size: 14px;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-04`)};\n  flex: 1;\n`\n\nexport const searchInputStyle = css`\n  margin-right: 8px;\n\n  & > span {\n    border-radius: 8px !important;\n    border-color: ${globalColor(`--${illaPrefix}-techPurple-03`)} !important;\n    box-shadow: 0 0 8px 0\n      ${chroma(globalColor(`--${illaPrefix}-techPurple-03`))\n        .alpha(0.2)\n        .hex()};\n  }\n`\n\nexport const searchInputIconStyle = css`\n  color: ${globalColor(`--${illaPrefix}-grayBlue-05`)};\n`\n\nexport const actionListHeaderContainerStyle = css`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 12px 16px;\n`\n\nexport const actionTitleStyle = css`\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 22px;\n  color: ${getColor(\"grayBlue\", \"04\")};\n  margin: 0;\n`\n","import { css } from \"@emotion/react\"\nimport IconHotSpot from \"@illa-public/icon-hot-spot\"\nimport { AnimatePresence, motion } from \"framer-motion\"\nimport { Dispatch, FC, SetStateAction, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { Button, Input, SearchIcon } from \"@illa-design/react\"\nimport { SearchHeaderProps } from \"./interface\"\nimport {\n  actionListHeaderContainerStyle,\n  actionTitleStyle,\n  searchHeaderStyle,\n  searchInputContainerStyle,\n  searchInputIconStyle,\n  searchInputStyle,\n} from \"./style\"\n\ninterface SearchInputProps {\n  onSearch: (value: string) => void\n  setInSearchState: Dispatch<SetStateAction<boolean>>\n}\n\nconst SearchInput: FC<SearchInputProps> = (props) => {\n  const { t } = useTranslation()\n  const { onSearch, setInSearchState } = props\n\n  return (\n    <div css={css(searchHeaderStyle, searchInputContainerStyle)}>\n      <motion.div\n        initial={{ width: 0, opacity: 0 }}\n        animate={{ width: \"100%\", opacity: 1 }}\n        exit={{ width: 0, opacity: 0 }}\n        transition={{ duration: 0.2 }}\n      >\n        <Input\n          colorScheme=\"techPurple\"\n          prefix={<SearchIcon size={\"12px\"} css={searchInputIconStyle} />}\n          placeholder={t(\"editor.action.action_list.placeholder.search\")}\n          onChange={onSearch}\n          onClear={() => onSearch(\"\")}\n          css={searchInputStyle}\n          allowClear\n        />\n      </motion.div>\n\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        transition={{ duration: 0.2 }}\n      >\n        <Button\n          onClick={() => {\n            setInSearchState(false)\n            onSearch(\"\")\n          }}\n          variant=\"text\"\n          colorScheme={\"white\"}\n          size=\"small\"\n        >\n          {t(\"editor.action.action_list.btn.close\")}\n        </Button>\n      </motion.div>\n    </div>\n  )\n}\n\nexport const SearchHeader: FC<SearchHeaderProps> = (props) => {\n  const { onSearch } = props\n  const [inSearchState, setInSearchState] = useState(false)\n\n  const { t } = useTranslation()\n  return (\n    <AnimatePresence>\n      {inSearchState ? (\n        <SearchInput setInSearchState={setInSearchState} onSearch={onSearch} />\n      ) : (\n        <div css={actionListHeaderContainerStyle}>\n          <h3 css={actionTitleStyle}>{t(\"editor.action.action_list.title\")}</h3>\n          <IconHotSpot iconSize={12} onClick={() => setInSearchState(true)}>\n            <SearchIcon />\n          </IconHotSpot>\n        </div>\n      )}\n    </AnimatePresence>\n  )\n}\n\nSearchHeader.displayName = \"SearchHeader\"\n","import * as React from \"react\";\nconst SvgActionListEmptyState = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 49, height: 48, viewBox: \"0 0 49 48\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"m15.5 17 4 4M28.5 17l4 4M19.5 17l-4 4M32.5 17l-4 4\", stroke: \"#BBC0C9\", strokeWidth: 1.5, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M17.924 29.52a.75.75 0 0 0 1.152.96l-1.152-.96zm12 .96a.75.75 0 0 0 1.152-.96l-1.152.96zM18.5 30l.576.48v.001l.002-.003.016-.019.073-.081a9.657 9.657 0 0 1 1.453-1.265c.994-.702 2.343-1.363 3.88-1.363v-1.5c-1.963 0-3.614.84-4.745 1.637a11.144 11.144 0 0 0-1.694 1.477 6.225 6.225 0 0 0-.097.11c-.012.012-.02.023-.028.03l-.008.01a.052.052 0 0 0-.002.004h-.001v.001L18.5 30zm6-2.25c1.537 0 2.886.66 3.88 1.363a9.657 9.657 0 0 1 1.453 1.265l.073.081.016.019a.128.128 0 0 1 .003.003L30.5 30l.576-.48v-.001l-.002-.001-.002-.003-.008-.01-.028-.032a9.142 9.142 0 0 0-.459-.48c-.31-.302-.762-.704-1.332-1.106-1.13-.798-2.782-1.637-4.745-1.637v1.5z\", fill: \"#BBC0C9\" }), /* @__PURE__ */ React.createElement(\"path\", { clipRule: \"evenodd\", d: \"M24.5 44c11.046 0 20-8.954 20-20s-8.954-20-20-20-20 8.954-20 20 8.954 20 20 20z\", stroke: \"#BBC0C9\", strokeWidth: 1.5, strokeLinejoin: \"round\" }));\nexport default SvgActionListEmptyState;\n","import { createIcon } from \"@illa-design/react\"\n\nconst DatabaseIcon = createIcon({\n  title: \"AIAgentIcon\",\n  viewBox: \"0 0 16 16\",\n  path: (\n    <>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M8 12.0005C9.80208 12.0005 11.4825 11.5765 12.7465 10.8391C13.1768 10.5882 13.5799 10.2862 13.9228 9.9375C13.9736 10.1208 14 10.3088 14 10.5005C14 12.4335 11.3137 14.0005 8 14.0005C4.68629 14.0005 2 12.4335 2 10.5005C2 10.3088 2.02641 10.1208 2.07721 9.9375C2.42015 10.2862 2.82323 10.5882 3.25349 10.8391C4.51754 11.5765 6.19792 12.0005 8 12.0005Z\"\n        fill=\"#1D2129\"\n      />\n      <path\n        d=\"M14 5C14 6.65685 11.3137 8 8 8C4.68629 8 2 6.65685 2 5C2 3.34315 4.68629 2 8 2C11.3137 2 14 3.34315 14 5Z\"\n        fill=\"#1D2129\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M8 9C9.80208 9 11.4825 8.57602 12.7465 7.83865C13.1768 7.58767 13.5799 7.28575 13.9228 6.93702C13.9736 7.1203 14 7.30835 14 7.5C14 9.433 11.3137 11 8 11C4.68629 11 2 9.433 2 7.5C2 7.30835 2.02641 7.1203 2.07721 6.93702C2.42015 7.28575 2.82323 7.58767 3.25349 7.83865C4.51754 8.57602 6.19792 9 8 9ZM2.5774 6C3.54037 7.18247 5.60652 8 8 8C10.3935 8 12.4596 7.18248 13.4226 6C12.4596 4.81753 10.3935 4 8 4C5.60652 4 3.54037 4.81753 2.5774 6Z\"\n        fill=\"#1D2129\"\n      />\n    </>\n  ),\n})\n\nDatabaseIcon.displayName = \"DatabaseIcon\"\nexport default DatabaseIcon\n","import { SerializedStyles, css } from \"@emotion/react\"\nimport { getColor, globalColor, illaPrefix } from \"@illa-design/react\"\n\nexport const actionIconContainer = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  flex-shrink: 0;\n  width: 16px;\n  height: 16px;\n`\n\nexport const actionItemDotStyle = css`\n  flex-shrink: 0;\n  width: 8px;\n  margin-left: 9px;\n  height: 8px;\n  margin-right: 9px;\n  box-sizing: border-box;\n  border-radius: 50%;\n  background: ${globalColor(`--${illaPrefix}-blue-03`)};\n`\n\nexport function applyActionItemTitleStyle(error: boolean): SerializedStyles {\n  return css`\n    flex-shrink: 1;\n    font-weight: 500;\n    margin-left: 8px;\n    overflow: hidden;\n    color: ${error\n      ? globalColor(`--${illaPrefix}-red-03`)\n      : globalColor(`--${illaPrefix}-grayBlue-02`)};\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  `\n}\n\nexport const timeStyle = css`\n  color: ${globalColor(`--${illaPrefix}-grayBlue-04`)};\n`\n\nexport const warningCircleStyle = css`\n  position: absolute;\n  color: ${globalColor(`--${illaPrefix}-red-03`)};\n  font-size: 8px;\n  bottom: 0;\n  right: 0;\n`\n\nexport function applyActionItemContainerStyle(\n  selected: boolean,\n): SerializedStyles {\n  return css`\n    background: ${selected\n      ? globalColor(`--${illaPrefix}-techPurple-08`)\n      : \"transparent\"};\n    width: 100%;\n    align-items: center;\n    display: flex;\n    flex-direction: row;\n    padding-left: 16px;\n    padding-right: 16px;\n    height: 40px;\n    font-size: 14px;\n\n    &:hover {\n      background: ${selected\n        ? globalColor(`--${illaPrefix}-techPurple-08`)\n        : globalColor(`--${illaPrefix}-grayBlue-09`)};\n    }\n  `\n}\n\nexport const actionItemLeftStyle = css`\n  color: ${globalColor(`--${illaPrefix}-grayBlue-02`)};\n  display: flex;\n  overflow: hidden;\n  flex-direction: row;\n  align-items: center;\n  flex-grow: 1;\n`\n\nexport const runningTimeStyle = css`\n  font-size: 12px;\n  font-weight: 400;\n  color: ${getColor(\"grayBlue\", \"04\")};\n`\n","import { getIconFromResourceType } from \"@illa-public/icon\"\nimport { ILLA_MIXPANEL_EVENT_TYPE } from \"@illa-public/mixpanel-utils\"\nimport { Agent, GlobalDataActionContent } from \"@illa-public/public-types\"\nimport { isEqual } from \"lodash-es\"\nimport {\n  Suspense,\n  forwardRef,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport {\n  DropList,\n  DropListItem,\n  Dropdown,\n  Input,\n  LoadingIcon,\n  WarningCircleIcon,\n  getColor,\n  useMessage,\n} from \"@illa-design/react\"\nimport { ActionListItemProps } from \"@/page/App/components/Actions/ActionListItem/interface\"\nimport { getAgentIcon } from \"@/page/App/components/Actions/getIcon\"\nimport {\n  getCachedAction,\n  getIsILLAGuideMode,\n  getSelectedAction,\n} from \"@/redux/config/configSelector\"\nimport { actionActions } from \"@/redux/currentApp/action/actionSlice\"\nimport { componentsActions } from \"@/redux/currentApp/components/componentsSlice\"\nimport { getExecutionResult } from \"@/redux/currentApp/executionTree/executionSelector\"\nimport { fetchUpdateAction } from \"@/services/action\"\nimport { RootState } from \"@/store\"\nimport { DisplayNameGenerator } from \"@/utils/generators/generateDisplayName\"\nimport { trackInEditor } from \"@/utils/mixpanelHelper\"\nimport { isObject, isValidDisplayName } from \"@/utils/typeHelper\"\nimport {\n  actionIconContainer,\n  actionItemDotStyle,\n  actionItemLeftStyle,\n  applyActionItemContainerStyle,\n  applyActionItemTitleStyle,\n  runningTimeStyle,\n  warningCircleStyle,\n} from \"./style\"\n\nconst Item = DropListItem\n\nexport const ActionListItem = forwardRef<HTMLDivElement, ActionListItemProps>(\n  (props, ref) => {\n    const { action, onItemClick, onCopyItem, onDeleteItem } = props\n\n    const { t } = useTranslation()\n    const selectedAction = useSelector(getSelectedAction)!!\n    const cachedAction = useSelector(getCachedAction)\n    const message = useMessage()\n\n    const error = useSelector((state: RootState) => {\n      const targetActionErrors =\n        state.currentApp.execution.error[action.displayName]\n      if (isObject(targetActionErrors)) {\n        return Object.keys(targetActionErrors).length > 0\n      }\n      return false\n    })\n\n    const isGuideMode = useSelector(getIsILLAGuideMode)\n    const executionResult = useSelector(getExecutionResult)\n\n    const startRunningTime: number =\n      executionResult[action.displayName]?.startTime\n\n    const endRunningTime: number = executionResult[action.displayName]?.endTime\n\n    const isRunning: boolean = executionResult[action.displayName]?.isRunning\n\n    const isMocking: boolean =\n      executionResult[action.displayName]?.config?.mockConfig?.enabled\n\n    const [currentRunningTime, setCurrentRunningTime] = useState(0)\n\n    const dealData = useCallback(() => {\n      return window.setInterval(() => {\n        const currentTime = new Date().getTime() - startRunningTime\n        setCurrentRunningTime(currentTime)\n      }, 10)\n    }, [startRunningTime])\n\n    useEffect((): any => {\n      let time = -1\n      if (isRunning) {\n        time = dealData()\n      }\n      return () => {\n        if (time !== -1) {\n          window.clearInterval(time)\n        }\n      }\n    }, [isRunning, dealData])\n\n    const isChanged = useMemo(() => {\n      return (\n        selectedAction?.actionID === action.actionID &&\n        !isEqual(selectedAction, cachedAction)\n      )\n    }, [action.actionID, cachedAction, selectedAction])\n\n    const [editName, setEditName] = useState(false)\n    const [changing, setChanging] = useState(false)\n    const dispatch = useDispatch()\n\n    const changeDisplayName = useCallback(\n      async (newName: string) => {\n        if (newName === action.displayName) {\n          setEditName(false)\n          return\n        }\n        if (!isValidDisplayName(newName)) {\n          message.error({\n            content: t(\"editor.display_name.validate_error\", {\n              displayName: newName,\n            }),\n          })\n          setEditName(false)\n          return\n        }\n        if (DisplayNameGenerator.isAlreadyGenerate(newName)) {\n          message.error({\n            content: t(\"editor.display_name.duplicate_error\", {\n              displayName: newName,\n            }),\n          })\n          setEditName(false)\n          return\n        }\n        const newAction = {\n          ...action,\n          displayName: newName,\n        }\n\n        if (action.actionType === \"globalData\") {\n          DisplayNameGenerator.addDisplayNames([newName])\n          DisplayNameGenerator.removeDisplayName(action.displayName)\n          dispatch(\n            componentsActions.setGlobalStateReducer({\n              key: newName,\n              value: (action.content as GlobalDataActionContent).initialValue,\n              oldKey: action.displayName,\n            }),\n          )\n          setEditName(false)\n          return\n        }\n\n        if (isGuideMode) {\n          dispatch(\n            actionActions.updateActionDisplayNameReducer({\n              newDisplayName: newName,\n              oldDisplayName: action.displayName,\n              actionID: newAction.actionID,\n            }),\n          )\n          setEditName(false)\n          return\n        }\n        setChanging(true)\n        try {\n          await fetchUpdateAction(newAction)\n          dispatch(\n            actionActions.updateActionDisplayNameReducer({\n              newDisplayName: newName,\n              oldDisplayName: action.displayName,\n              actionID: newAction.actionID,\n            }),\n          )\n          setEditName(false)\n        } catch (_e) {\n          message.error({\n            content: t(\"change_fail\"),\n          })\n          setEditName(false)\n        }\n\n        setChanging(false)\n      },\n      [action, isGuideMode, dispatch, message, t],\n    )\n\n    const calcTimeString = useCallback(\n      (startTime?: number, endTime?: number) => {\n        if (startTime && endTime) {\n          const time = endTime - startTime\n          if (time > 1000) {\n            return `${(time / 1000).toFixed(2)}s`\n          }\n          return `${time}ms`\n        } else {\n          return \"\"\n        }\n      },\n      [],\n    )\n\n    const calcLoadingTimeString = useCallback((currentRunningTime: number) => {\n      return currentRunningTime > 1000\n        ? `${(currentRunningTime / 1000).toFixed(2)}s`\n        : `${currentRunningTime}ms`\n    }, [])\n\n    return (\n      <Dropdown\n        trigger=\"contextmenu\"\n        position=\"right-start\"\n        dropList={\n          <DropList w=\"184px\">\n            <Item\n              key={\"rename\"}\n              value={\"rename\"}\n              title={t(\"editor.action.action_list.contextMenu.rename\")}\n              onClick={() => {\n                trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.RENAME, {\n                  element: \"action_rename\",\n                  parameter1: action.actionType,\n                  parameter2: \"manage\",\n                })\n                setEditName(true)\n              }}\n            />\n            <Item\n              key={\"duplicate\"}\n              value={\"duplicate\"}\n              title={t(\"editor.action.action_list.contextMenu.duplicate\")}\n              onClick={() => {\n                trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.DUPLICATE, {\n                  element: \"action_duplicate\",\n                  parameter1: action.actionType,\n                })\n                onCopyItem(action)\n              }}\n            />\n            <Item\n              key={\"delete\"}\n              value={\"delete\"}\n              title={t(\"editor.action.action_list.contextMenu.delete\")}\n              deleted\n              onClick={() => {\n                trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.DELETE, {\n                  element: \"action_delete\",\n                  parameter1: action.actionType,\n                })\n                onDeleteItem(action)\n              }}\n            />\n          </DropList>\n        }\n      >\n        <div\n          css={applyActionItemContainerStyle(\n            selectedAction?.displayName === action.displayName,\n          )}\n          ref={ref}\n          onClick={() => {\n            onItemClick(action)\n          }}\n          onDoubleClick={() => {\n            onItemClick(action)\n            setEditName(true)\n          }}\n        >\n          <div css={actionItemLeftStyle}>\n            <div css={actionIconContainer}>\n              <Suspense>\n                {action.actionType === \"aiagent\" &&\n                \"virtualResource\" in action.content\n                  ? getAgentIcon(\n                      action.content.virtualResource as Agent,\n                      \"16px\",\n                    )\n                  : getIconFromResourceType(action.actionType, \"16px\")}\n              </Suspense>\n              {error && <WarningCircleIcon css={warningCircleStyle} />}\n            </div>\n            {!editName ? (\n              <div css={applyActionItemTitleStyle(error)}>\n                {action.displayName}\n              </div>\n            ) : (\n              <Input\n                ml=\"8px\"\n                colorScheme=\"techPurple\"\n                size=\"small\"\n                onPressEnter={(e) => {\n                  changeDisplayName(e.currentTarget.value)\n                }}\n                defaultValue={action.displayName}\n                autoFocus\n                disabled={changing}\n                suffix={\n                  changing && (\n                    <LoadingIcon c={getColor(\"grayBlue\", \"05\")} spin={true} />\n                  )\n                }\n                onBlur={(event) => {\n                  changeDisplayName(event.target.value)\n                }}\n              />\n            )}\n            {isChanged && <div css={actionItemDotStyle} />}\n          </div>\n          <div css={runningTimeStyle}>\n            {isMocking\n              ? t(\"editor.action.panel.option.mock.label\")\n              : isRunning\n                ? calcLoadingTimeString(currentRunningTime)\n                : calcTimeString(startRunningTime, endRunningTime)}\n          </div>\n        </div>\n      </Dropdown>\n    )\n  },\n)\n\nActionListItem.displayName = \"ActionListItem\"\n","import { css } from \"@emotion/react\"\nimport { getColor, globalColor, illaPrefix } from \"@illa-design/react\"\n\nexport const searchHeaderContainerStyle = css`\n  width: 255px;\n  min-width: 255px;\n  display: flex;\n  flex-direction: column;\n  border-right: 1px solid ${getColor(\"grayBlue\", \"08\")};\n`\n\nexport const addNewActionButtonStyle = css`\n  flex-shrink: 1;\n`\n\nexport const listContainerStyle = css`\n  flex-grow: 1;\n  width: 100%;\n  height: 0;\n  flex-shrink: 0;\n  overflow-y: auto;\n`\n\nexport const listStyle = css`\n  width: 100%;\n`\n\nexport const actionListEmptyStyle = css`\n  margin: 8px 16px;\n  padding: 8px 12px;\n  font-size: 12px;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-04`)};\n  border-radius: 4px;\n  border: dashed 1px ${globalColor(`--${illaPrefix}-grayBlue-08`)};\n`\n\nexport const createDropListItemContainerStyle = css`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`\n\nexport const prefixIconContainerStyle = css`\n  font-size: 16px;\n  width: 16px;\n  height: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nexport const dropListWithUpgradeIconStyle = css`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nexport const upgradeContainerStyle = css`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  color: ${getColor(\"techPurple\", \"03\")};\n  font-size: 12px;\n  font-style: normal;\n  line-height: 20px;\n`\n","import { UpgradeIcon, getIconFromResourceType } from \"@illa-public/icon\"\nimport {\n  ILLA_MIXPANEL_BUILDER_PAGE_NAME,\n  ILLA_MIXPANEL_EVENT_TYPE,\n  MixpanelTrackProvider,\n} from \"@illa-public/mixpanel-utils\"\nimport {\n  INIT_ACTION_ADVANCED_CONFIG,\n  INIT_ACTION_MOCK_CONFIG,\n  actionItemInitial,\n  generateBaseActionItem,\n  getInitialContent,\n} from \"@illa-public/public-configs\"\nimport {\n  ActionContent,\n  ActionItem,\n  ActionType,\n  GlobalDataActionContent,\n  Resource,\n} from \"@illa-public/public-types\"\nimport {\n  ActionGenerator,\n  ResourceGeneratorProvider,\n} from \"@illa-public/resource-generator\"\nimport { useUpgradeModal } from \"@illa-public/upgrade-modal\"\nimport { isSubscribeForUseDrive } from \"@illa-public/upgrade-modal/utils\"\nimport { getCurrentTeamInfo } from \"@illa-public/user-data\"\nimport { isCloudVersion } from \"@illa-public/utils\"\nimport { isEqual } from \"lodash-es\"\nimport { FC, useCallback, useContext, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { v4 } from \"uuid\"\nimport {\n  AddIcon,\n  Button,\n  DropList,\n  DropListItem,\n  Dropdown,\n  Empty,\n  List,\n  Space,\n  useMessage,\n  useModal,\n} from \"@illa-design/react\"\nimport ActionListEmptyState from \"@/assets/action-list-empty-state.svg?react\"\nimport {\n  getCachedAction,\n  getIsILLAGuideMode,\n  getSelectedAction,\n} from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { getActionMixedList } from \"@/redux/currentApp/action/actionSelector\"\nimport { actionActions } from \"@/redux/currentApp/action/actionSlice\"\nimport { componentsActions } from \"@/redux/currentApp/components/componentsSlice\"\nimport { getAllResources } from \"@/redux/resource/resourceSelector\"\nimport { resourceActions } from \"@/redux/resource/resourceSlice\"\nimport { fetchCreateAction } from \"@/services/action\"\nimport { DisplayNameGenerator } from \"@/utils/generators/generateDisplayName\"\nimport { track } from \"@/utils/mixpanelHelper\"\nimport { ShortCutContext } from \"@/utils/shortcut/shortcutProvider\"\nimport DatabaseIcon from \"../../Icons/database\"\nimport { ActionListItem } from \"../ActionListItem\"\nimport { onCopyActionItem } from \"../api\"\nimport { useCreateAction } from \"../hook\"\nimport { ListWithNewButtonProps } from \"./interface\"\nimport {\n  actionListEmptyStyle,\n  addNewActionButtonStyle,\n  createDropListItemContainerStyle,\n  dropListWithUpgradeIconStyle,\n  listContainerStyle,\n  listStyle,\n  prefixIconContainerStyle,\n  upgradeContainerStyle,\n} from \"./style\"\n\nexport const ActionListWithNewButton: FC<ListWithNewButtonProps> = (props) => {\n  const { searchActionValue } = props\n  const selectedAction = useSelector(getSelectedAction)\n  const cachedAction = useSelector(getCachedAction)\n  const isGuideMode = useSelector(getIsILLAGuideMode)\n  const resourceList = useSelector(getAllResources)\n  const shortcut = useContext(ShortCutContext)\n  const [generatorVisible, setGeneratorVisible] = useState<boolean>()\n  const [currentActionType, setCurrentActionType] =\n    useState<ActionType | null>()\n  const actionList = useSelector(getActionMixedList)\n  const teamInfo = useSelector(getCurrentTeamInfo)!\n  const upgradeModal = useUpgradeModal()\n\n  const searchList = actionList.filter((value) => {\n    return value.displayName\n      .toLowerCase()\n      .includes(searchActionValue.toLowerCase())\n  })\n\n  const { t } = useTranslation()\n  const dispatch = useDispatch()\n  const modal = useModal()\n  const message = useMessage()\n\n  const handleClickActionType = (type: ActionType | null) => {\n    return async () => {\n      switch (type) {\n        case \"transformer\": {\n          const displayName = DisplayNameGenerator.generateDisplayName(type)\n          const initialContent = getInitialContent(type)\n          const data: Omit<ActionItem<ActionContent>, \"actionID\"> = {\n            actionType: type,\n            displayName,\n            content: initialContent,\n            isVirtualResource: false,\n            config: {\n              public: false,\n              advancedConfig: INIT_ACTION_ADVANCED_CONFIG,\n              mockConfig: INIT_ACTION_MOCK_CONFIG,\n            },\n            ...actionItemInitial,\n          }\n          if (isGuideMode) {\n            const createActionData: ActionItem<ActionContent> = {\n              ...data,\n              actionID: v4(),\n            }\n            dispatch(actionActions.addActionItemReducer(createActionData))\n            dispatch(configActions.changeSelectedAction(createActionData))\n            return\n          }\n          try {\n            const { data: responseData } = await fetchCreateAction(data)\n            message.success({\n              content: t(\"editor.action.action_list.message.success_created\"),\n            })\n            dispatch(actionActions.addActionItemReducer(responseData))\n            dispatch(configActions.changeSelectedAction(responseData))\n          } catch (_e) {\n            message.error({\n              content: t(\"editor.action.action_list.message.failed\"),\n            })\n            DisplayNameGenerator.removeDisplayName(displayName)\n          }\n          break\n        }\n        case \"globalData\": {\n          const displayName = DisplayNameGenerator.generateDisplayName(\"state\")\n          dispatch(\n            componentsActions.setGlobalStateReducer({\n              key: displayName,\n              value: \"\",\n              oldKey: \"\",\n            }),\n          )\n          const createActionData: ActionItem<GlobalDataActionContent> = {\n            actionID: displayName,\n            displayName: displayName,\n            actionType: \"globalData\",\n            triggerMode: \"manually\",\n            isVirtualResource: true,\n            content: {\n              initialValue: \"\",\n            },\n            transformer: {\n              enable: false,\n              rawData: \"\",\n            },\n            config: {\n              public: false,\n              advancedConfig: INIT_ACTION_ADVANCED_CONFIG,\n              mockConfig: INIT_ACTION_MOCK_CONFIG,\n            },\n          }\n          dispatch(configActions.changeSelectedAction(createActionData))\n          break\n        }\n        case \"illadrive\": {\n          if (!isSubscribeForUseDrive(teamInfo)) {\n            upgradeModal({\n              modalType: \"upgrade\",\n              from: \"drive_action\",\n            })\n            return\n          }\n          const displayName = DisplayNameGenerator.generateDisplayName(type)\n          const initialContent = getInitialContent(type)\n          const baseData = generateBaseActionItem(displayName, \"\")\n          const data = {\n            ...baseData,\n            actionType: type,\n            content: initialContent,\n            isVirtualResource: true,\n          }\n\n          if (isGuideMode) {\n            const createActionData: ActionItem<ActionContent> = {\n              ...data,\n              actionID: v4(),\n            }\n            dispatch(actionActions.addActionItemReducer(createActionData))\n            dispatch(configActions.changeSelectedAction(createActionData))\n            return\n          }\n          try {\n            const { data: responseData } = await fetchCreateAction(data)\n            message.success({\n              content: t(\"editor.action.action_list.message.success_created\"),\n            })\n            dispatch(actionActions.addActionItemReducer(responseData))\n            dispatch(configActions.changeSelectedAction(responseData))\n          } catch (_e) {\n            message.error({\n              content: t(\"editor.action.action_list.message.failed\"),\n            })\n            DisplayNameGenerator.removeDisplayName(displayName)\n          }\n          break\n        }\n        default: {\n          setGeneratorVisible(true)\n          setCurrentActionType(type)\n        }\n      }\n    }\n  }\n\n  const [handleDirectCreateAction, handleCreateAgentAction] = useCreateAction()\n\n  const handleFinishCreateNewResource = useCallback(\n    (resource: Resource, isUpdate: boolean) => {\n      track(\n        ILLA_MIXPANEL_EVENT_TYPE.CLICK,\n        ILLA_MIXPANEL_BUILDER_PAGE_NAME.EDITOR,\n        {\n          element: \"resource_configure_save\",\n          parameter5: resource.resourceType,\n        },\n      )\n      if (isUpdate) {\n        dispatch(resourceActions.updateResourceItemReducer(resource))\n      } else {\n        dispatch(resourceActions.addResourceItemReducer(resource))\n      }\n      handleDirectCreateAction(\n        resource.resourceType,\n        resource.resourceID,\n        () => {\n          setGeneratorVisible(false)\n        },\n      )\n    },\n    [dispatch, handleDirectCreateAction],\n  )\n\n  return (\n    <>\n      <Dropdown\n        dropList={\n          <DropList w=\"222px\">\n            <DropListItem\n              value=\"database\"\n              key=\"database\"\n              title={\n                <div css={createDropListItemContainerStyle}>\n                  <span css={prefixIconContainerStyle}>\n                    <DatabaseIcon />\n                  </span>\n                  {t(\n                    \"editor.action.panel.label.option.general.create-resource\",\n                  )}\n                </div>\n              }\n              onClick={handleClickActionType(null)}\n            />\n            <DropListItem\n              key=\"transformer\"\n              value=\"transformer\"\n              title={\n                <div css={createDropListItemContainerStyle}>\n                  <span css={prefixIconContainerStyle}>\n                    {getIconFromResourceType(\"transformer\", \"16px\")}\n                  </span>\n                  {t(\"editor.action.panel.label.option.general.js\")}\n                </div>\n              }\n              onClick={handleClickActionType(\"transformer\")}\n            />\n            <DropListItem\n              key=\"globalData\"\n              value=\"globalData\"\n              title={\n                <div css={createDropListItemContainerStyle}>\n                  <span css={prefixIconContainerStyle}>\n                    {getIconFromResourceType(\"globalData\", \"16px\")}\n                  </span>\n                  {t(\"editor.action.panel.label.option.general.global-data\")}\n                </div>\n              }\n              onClick={handleClickActionType(\"globalData\")}\n            />\n            {isCloudVersion && (\n              <>\n                <DropListItem\n                  key=\"aiagent\"\n                  value=\"aiagent\"\n                  title={\n                    <div css={createDropListItemContainerStyle}>\n                      <span css={prefixIconContainerStyle}>\n                        {getIconFromResourceType(\"aiagent\", \"16px\")}\n                      </span>\n                      {t(\"editor.action.panel.label.option.general.ai-agent\")}\n                    </div>\n                  }\n                  onClick={handleClickActionType(\"aiagent\")}\n                />\n                <DropListItem\n                  key=\"illaDrive\"\n                  value=\"illaDrive\"\n                  title={\n                    <div css={dropListWithUpgradeIconStyle}>\n                      <div css={createDropListItemContainerStyle}>\n                        <span css={prefixIconContainerStyle}>\n                          {getIconFromResourceType(\"illadrive\", \"16px\")}\n                        </span>\n                        ILLA Drive\n                      </div>\n                      {!isSubscribeForUseDrive(teamInfo) && (\n                        <div css={upgradeContainerStyle}>\n                          <UpgradeIcon />\n                          <span>{t(\"Upgrade\")}</span>\n                        </div>\n                      )}\n                    </div>\n                  }\n                  onClick={handleClickActionType(\"illadrive\")}\n                />\n              </>\n            )}\n          </DropList>\n        }\n      >\n        <Button\n          colorScheme=\"techPurple\"\n          variant=\"light\"\n          ml=\"16px\"\n          mr=\"16px\"\n          mb=\"8px\"\n          _css={addNewActionButtonStyle}\n        >\n          <Space size=\"4px\" direction=\"horizontal\" alignItems=\"center\">\n            <AddIcon size=\"14px\" />\n            {t(\"editor.action.action_list.btn.new\")}\n          </Space>\n        </Button>\n      </Dropdown>\n      <div css={listContainerStyle}>\n        {searchList.length != 0 && (\n          <List\n            _css={listStyle}\n            bordered={false}\n            split={false}\n            data={searchList}\n            render={(data) => {\n              return (\n                <ActionListItem\n                  action={data}\n                  onCopyItem={onCopyActionItem}\n                  onDeleteItem={(action) => {\n                    if (action.actionType === \"globalData\") {\n                      shortcut.showDeleteDialog(\n                        [action.displayName],\n                        \"globalData\",\n                      )\n                    } else {\n                      shortcut.showDeleteDialog([action.displayName], \"action\")\n                    }\n                  }}\n                  onItemClick={(action) => {\n                    if (selectedAction === null) {\n                      dispatch(configActions.changeSelectedAction(action))\n                      return\n                    }\n                    // is a change action\n                    if (selectedAction?.displayName !== action.displayName) {\n                      if (isEqual(cachedAction, selectedAction)) {\n                        dispatch(configActions.changeSelectedAction(action))\n                      } else {\n                        // show dialog\n                        modal.show({\n                          children: t(\n                            \"editor.action.action_list.message.confirm_switch\",\n                          ),\n                          onOk: () => {\n                            dispatch(configActions.changeSelectedAction(action))\n                          },\n                          okButtonProps: {\n                            colorScheme: \"red\",\n                          },\n                        })\n                      }\n                    }\n                  }}\n                />\n              )\n            }}\n            renderRaw\n            renderKey={(data) => {\n              return data.displayName\n            }}\n          />\n        )}\n        {searchList.length == 0 && searchActionValue !== \"\" && (\n          <Empty\n            paddingVertical=\"23px\"\n            divideSize=\"4px\"\n            icon={<ActionListEmptyState />}\n            description={t(\"editor.action.action_list.tips.not_found\")}\n          />\n        )}\n        {searchList.length == 0 && searchActionValue == \"\" && (\n          <div css={actionListEmptyStyle}>\n            {t(\"editor.action.action_list.tips.empty\")}\n          </div>\n        )}\n        {generatorVisible && (\n          <MixpanelTrackProvider\n            basicTrack={track}\n            pageName={ILLA_MIXPANEL_BUILDER_PAGE_NAME.EDITOR}\n          >\n            <ResourceGeneratorProvider\n              allResource={resourceList}\n              createOrUpdateResourceCallback={handleFinishCreateNewResource}\n            >\n              <ActionGenerator\n                visible={generatorVisible}\n                onClose={() => setGeneratorVisible(false)}\n                defaultStep={currentActionType ? \"createAction\" : \"select\"}\n                defaultActionType={currentActionType}\n                canBackToSelect={!currentActionType}\n                handleDirectCreateAction={handleDirectCreateAction}\n                handleCreateAgentAction={handleCreateAgentAction}\n              />\n            </ResourceGeneratorProvider>\n          </MixpanelTrackProvider>\n        )}\n      </div>\n    </>\n  )\n}\n","import { FC, HTMLAttributes, useCallback, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useGoogleAuthStatus } from \"@/hooks/useGoogleAuthStatus\"\nimport { SearchHeader } from \"@/page/App/components/Actions/SearchHeader\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { getActionList } from \"@/redux/currentApp/action/actionSelector\"\nimport { ActionListWithNewButton } from \"./listWithNewButton\"\nimport { searchHeaderContainerStyle } from \"./style\"\n\nexport const ActionList: FC<HTMLAttributes<HTMLDivElement>> = (props) => {\n  const { className } = props\n\n  const [searchActionValue, setSearchActionValue] = useState(\"\")\n\n  const handleOnSearch = useCallback((value: string) => {\n    setSearchActionValue(value)\n  }, [])\n\n  const actionList = useSelector(getActionList)\n\n  const dispatch = useDispatch()\n\n  useGoogleAuthStatus((resourceID: string) => {\n    const resourceAction = actionList.find((r) => r.resourceID === resourceID)\n    if (resourceAction) {\n      dispatch(configActions.changeSelectedAction(resourceAction))\n    }\n  })\n\n  return (\n    <div className={className} css={searchHeaderContainerStyle}>\n      <SearchHeader onSearch={handleOnSearch} />\n      <ActionListWithNewButton searchActionValue={searchActionValue} />\n    </div>\n  )\n}\n\nActionList.displayName = \"ActionList\"\n","import { SerializedStyles, css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const actionResultContainerStyle = css`\n  padding-top: 120px;\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  pointer-events: none;\n  justify-content: end;\n  height: 100%;\n`\n\nexport function applyActionContentContainerStyle(\n  renderResult: boolean,\n): SerializedStyles {\n  return css`\n    visibility: ${renderResult ? \"visible\" : \"hidden\"};\n    position: relative;\n    pointer-events: auto;\n    z-index: 10;\n  `\n}\n\nexport const alertBarStyle = css`\n  width: 100%;\n  background: ${getColor(\"grayBlue\", \"09\")};\n  height: 40px;\n  display: flex;\n  flex-direction: row;\n  padding: 0 16px;\n  align-items: center;\n`\n\nexport const restApiAlertBarStyle = css`\n  width: 100%;\n  background: ${getColor(\"grayBlue\", \"09\")};\n  height: 48px;\n  padding: 8px 16px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  position: relative;\n`\n\nexport const alertTabsContainerStyle = css`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  gap: 8px;\n  height: 32px;\n`\n\nexport const alertTabsItemStyle = css`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 0 8px;\n  gap: 10px;\n  cursor: pointer;\n  width: 82px;\n  height: 32px;\n  font-size: 14px;\n`\n\nexport const tabsContentStyle = css`\n  line-height: 22px;\n`\n\nexport const getActiveStyle = (active: boolean): SerializedStyles => {\n  if (active) {\n    return css`\n      box-shadow: inset 0px -2px 0px ${getColor(\"grayBlue\", \"02\")};\n    `\n  }\n  return css``\n}\n\nexport const alertInfoContainerStyle = css`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0;\n  gap: 24px;\n  height: 24px;\n  position: absolute;\n  right: 40px;\n`\n\nexport const alertInfoStyle = css`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 4px;\n  color: ${getColor(\"grayBlue\", \"04\")};\n  font-size: 14px;\n  line-height: 22px;\n`\n\nexport const applyStatusCodeStyle = (statusCode: number) => css`\n  font-weight: 500;\n  font-size: 14px;\n\n  color: ${statusCode >= 400 ? getColor(\"red\", \"03\") : getColor(\"green\", \"03\")};\n`\n\nexport const timestampStyle = css`\n  font-weight: 500;\n  font-size: 14px;\n\n  color: ${getColor(\"grayBlue\", \"02\")};\n`\n\nexport const alertTextStyle = css`\n  font-weight: 500;\n  flex-grow: 1;\n  font-size: 14px;\n  margin-left: 8px;\n`\n\nexport const customerCodeStyle = css`\n  border: none;\n  border-radius: 0;\n  background-color: ${getColor(\"white\", \"01\")};\n\n  .cm-editor.ͼ1 {\n    border: none;\n    border-radius: 0;\n\n    & > .cm-scroller > .cm-gutters {\n      border-radius: 0;\n    }\n  }\n`\n","import { css } from \"@emotion/react\"\nimport { globalColor, illaPrefix } from \"@illa-design/react\"\n\nexport const actionEditorDragBarStyle = css`\n  top: -5px;\n  cursor: row-resize;\n  width: 100%;\n  position: absolute;\n  transition: all 0.2s;\n  height: 5px;\n  z-index: 10;\n\n  &:hover {\n    background: ${globalColor(`--${illaPrefix}-grayBlue-08`)};\n  }\n`\n","import React, { FC, RefObject, useEffect, useState } from \"react\"\nimport { isNumber } from \"@illa-design/react\"\nimport { DragBarProps } from \"./interface\"\nimport { actionEditorDragBarStyle } from \"./style\"\n\nconst handleResize = (\n  resizeRef: RefObject<HTMLDivElement>,\n  movementY: number,\n  minHeight: number,\n  getMaxHeight?: () => number | undefined,\n  placeholderRef?: RefObject<HTMLDivElement>,\n  callback?: () => void,\n) => {\n  const resize = resizeRef?.current\n  const placeholder = placeholderRef?.current\n  if (!resize) return\n\n  const { height } = resize.getBoundingClientRect()\n  const updatedHeight = height - movementY\n\n  if (getMaxHeight) {\n    const maxHeight = getMaxHeight()\n    if (isNumber(maxHeight) && updatedHeight > maxHeight) return\n  }\n\n  if (updatedHeight < window.innerHeight && updatedHeight > minHeight) {\n    resize.style.height = `${updatedHeight}px`\n    if (placeholder) {\n      placeholder.style.paddingBottom = `${updatedHeight + 48}px`\n    }\n    callback?.()\n  }\n}\n\nexport const DragBar: FC<DragBarProps> = (props) => {\n  const {\n    resizeRef,\n    placeholderRef,\n    minHeight = 300,\n    getMaxHeight,\n    onChange,\n  } = props\n  const [mouseDown, setMouseDown] = useState(false)\n\n  useEffect(() => {\n    const handleMouseMove = (e: MouseEvent) => {\n      e.preventDefault()\n      handleResize(\n        resizeRef,\n        e.movementY,\n        minHeight,\n        getMaxHeight,\n        placeholderRef,\n        () => {\n          onChange?.()\n        },\n      )\n    }\n    if (mouseDown) {\n      window.addEventListener(\"mousemove\", handleMouseMove)\n    }\n\n    return () => {\n      window.removeEventListener(\"mousemove\", handleMouseMove)\n    }\n  }, [getMaxHeight, minHeight, mouseDown, onChange, placeholderRef, resizeRef])\n\n  useEffect(() => {\n    const handleMouseUp = () => setMouseDown(false)\n    window.addEventListener(\"mouseup\", handleMouseUp)\n\n    return () => {\n      window.removeEventListener(\"mouseup\", handleMouseUp)\n    }\n  }, [getMaxHeight, minHeight])\n\n  return (\n    <div\n      css={actionEditorDragBarStyle}\n      onMouseDown={() => {\n        setMouseDown(true)\n      }}\n    />\n  )\n}\n\nDragBar.displayName = \"DragBar\"\n","import { MouseEventHandler, forwardRef } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport {\n  CloseIcon,\n  SuccessCircleIcon,\n  WarningCircleIcon,\n  getColor,\n} from \"@illa-design/react\"\nimport {\n  alertInfoContainerStyle,\n  alertInfoStyle,\n  alertTabsContainerStyle,\n  alertTabsItemStyle,\n  alertTextStyle,\n  applyStatusCodeStyle,\n  getActiveStyle,\n  restApiAlertBarStyle,\n  tabsContentStyle,\n  timestampStyle,\n} from \"@/page/App/components/Actions/ActionPanel/ActionResult/style\"\n\nexport enum RESULT_SHOW_TYPE {\n  \"RESPONSE\" = \"response\",\n  \"HEADERS\" = \"headers\",\n  \"RAW_DATA\" = \"rawData\",\n}\n\ninterface TabsConfig {\n  title: string\n  name: RESULT_SHOW_TYPE\n  shown: boolean\n}\n\ninterface AdvancedResultHeaderProps {\n  showType: RESULT_SHOW_TYPE\n  handleResultTabsClick: (\n    activeType: RESULT_SHOW_TYPE,\n  ) => MouseEventHandler<HTMLDivElement>\n  statusCode?: number\n  statusText?: string\n  runningTimes: number\n  onClose: MouseEventHandler<SVGElement>\n  tabsConfig: TabsConfig[]\n  isError: boolean\n}\n\nexport const AdvancedResultHeader = forwardRef<\n  HTMLDivElement,\n  AdvancedResultHeaderProps\n>((props, ref) => {\n  const {\n    handleResultTabsClick,\n    showType,\n    statusCode,\n    runningTimes,\n    tabsConfig,\n    onClose,\n    isError,\n  } = props\n\n  const canShownTabs = tabsConfig.filter((info) => info.shown)\n\n  const { t } = useTranslation()\n  return (\n    <div ref={ref} css={restApiAlertBarStyle}>\n      {canShownTabs.length > 1 ? (\n        <>\n          <div css={alertTabsContainerStyle}>\n            {canShownTabs.map((info) => (\n              <div\n                key={info.name}\n                css={[\n                  alertTabsItemStyle,\n                  getActiveStyle(showType === info.name),\n                ]}\n                data-key={info.name}\n                onClick={handleResultTabsClick(info.name)}\n              >\n                <div css={tabsContentStyle}>{info.title}</div>\n              </div>\n            ))}\n          </div>\n          <div css={alertInfoContainerStyle}>\n            {statusCode && (\n              <div css={alertInfoStyle}>\n                {t(\"editor.action.panel.result.restapi.status\")}\n                <span css={applyStatusCodeStyle(statusCode)}>{statusCode}</span>\n              </div>\n            )}\n            <div css={alertInfoStyle}>\n              Times\n              <span css={timestampStyle}>{`${runningTimes}ms`}</span>\n            </div>\n          </div>\n        </>\n      ) : (\n        <>\n          {isError ? (\n            <WarningCircleIcon c={getColor(\"red\", \"03\")} />\n          ) : (\n            <SuccessCircleIcon c={getColor(\"green\", \"03\")} />\n          )}\n          <span css={alertTextStyle}>\n            {isError\n              ? t(\"editor.action.panel.status.ran_failed\")\n              : t(\"editor.action.panel.status.ran_successfully\")}\n          </span>\n        </>\n      )}\n      <CloseIcon\n        cur=\"pointer\"\n        c={getColor(\"grayBlue\", \"05\")}\n        onClick={onClose}\n      />\n    </div>\n  )\n})\n\nAdvancedResultHeader.displayName = \"RestAPIHeader\"\n","import { RESULT_SHOW_TYPE } from \"./restApiHeader\"\n\nexport interface IShowResult {\n  result?: unknown\n  rawResult?: unknown\n  responseHeader?: unknown\n}\n\nexport const getDisplayResult = (\n  showType: RESULT_SHOW_TYPE,\n  result: IShowResult,\n) => {\n  switch (showType) {\n    case RESULT_SHOW_TYPE.HEADERS: {\n      return result.responseHeader\n    }\n    case RESULT_SHOW_TYPE.RAW_DATA: {\n      return result.rawResult\n    }\n    case RESULT_SHOW_TYPE.RESPONSE:\n    default: {\n      return result.result\n    }\n  }\n}\n","import { FC, useCallback, useRef, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useSelector } from \"react-redux\"\nimport { CodeEditor } from \"@/components/CodeEditor\"\nimport { CODE_LANG } from \"@/components/CodeEditor/CodeMirror/extensions/interface\"\nimport { ActionResultProps } from \"@/page/App/components/Actions/ActionPanel/ActionResult/interface\"\nimport {\n  actionResultContainerStyle,\n  applyActionContentContainerStyle,\n  customerCodeStyle,\n} from \"@/page/App/components/Actions/ActionPanel/ActionResult/style\"\nimport { DragBar } from \"@/page/App/components/Actions/DragBar\"\nimport { getSelectedAction } from \"@/redux/config/configSelector\"\nimport { getExecutionResult } from \"@/redux/currentApp/executionTree/executionSelector\"\nimport { RootState } from \"@/store\"\nimport { AdvancedResultHeader, RESULT_SHOW_TYPE } from \"./restApiHeader\"\nimport { getDisplayResult } from \"./utils\"\n\nexport const ActionResult: FC<ActionResultProps> = (props) => {\n  const { onClose, visible } = props\n\n  const resizeRef = useRef<HTMLDivElement>(null)\n\n  const alertRef = useRef<HTMLDivElement>(null)\n\n  const [showType, setShowType] = useState<RESULT_SHOW_TYPE>(\n    RESULT_SHOW_TYPE.RESPONSE,\n  )\n\n  const selectedAction = useSelector(getSelectedAction)! ?? {}\n\n  const currentActionExecutionResult = useSelector<\n    RootState,\n    Record<string, any> | undefined\n  >((rootState) => {\n    const executionResult = getExecutionResult(rootState)\n    if (selectedAction.displayName) {\n      return executionResult[selectedAction.displayName]\n    }\n  })\n\n  const { t } = useTranslation()\n\n  const renderResult =\n    visible &&\n    (currentActionExecutionResult?.data !== undefined ||\n      currentActionExecutionResult?.runResult !== undefined)\n\n  const isError = currentActionExecutionResult?.runResult?.error\n  const result = currentActionExecutionResult?.data\n  const rawResult = currentActionExecutionResult?.rawData\n  const responseHeader = currentActionExecutionResult?.responseHeaders\n\n  const runningTimes =\n    (currentActionExecutionResult?.endTime ?? 0) -\n    (currentActionExecutionResult?.startTime ?? 0)\n\n  const [codeMirrorHeight, setCodeMirrorHeight] = useState(260)\n\n  const handleResultTabsClick = useCallback((activeKey: RESULT_SHOW_TYPE) => {\n    return () => {\n      setShowType(activeKey)\n    }\n  }, [])\n\n  const finalResult = {\n    result,\n    rawResult,\n    responseHeader,\n  }\n\n  const advancedApiResultTabs = [\n    {\n      title: t(\"editor.action.panel.result.restapi.response\"),\n      name: RESULT_SHOW_TYPE.RESPONSE,\n      shown: !!result,\n    },\n    {\n      title: t(\"editor.action.panel.result.restapi.rawdata\"),\n      name: RESULT_SHOW_TYPE.RAW_DATA,\n      shown: !!rawResult,\n    },\n    {\n      title: t(\"editor.action.panel.result.restapi.headers\"),\n      name: RESULT_SHOW_TYPE.HEADERS,\n      shown: !!responseHeader,\n    },\n  ]\n\n  const displayData = getDisplayResult(showType, finalResult)\n\n  return (\n    <div css={actionResultContainerStyle}>\n      <div css={applyActionContentContainerStyle(renderResult)} ref={resizeRef}>\n        <DragBar\n          minHeight={300}\n          resizeRef={resizeRef}\n          onChange={() => {\n            setCodeMirrorHeight(\n              resizeRef.current!.offsetHeight - alertRef.current!.offsetHeight,\n            )\n          }}\n        />\n\n        <AdvancedResultHeader\n          showType={showType}\n          runningTimes={runningTimes}\n          onClose={onClose}\n          handleResultTabsClick={handleResultTabsClick}\n          ref={alertRef}\n          statusCode={responseHeader?.statusCode}\n          statusText={responseHeader?.statusText}\n          tabsConfig={advancedApiResultTabs}\n          isError={isError}\n        />\n\n        <CodeEditor\n          height={codeMirrorHeight + \"px\"}\n          wrapperCss={customerCodeStyle}\n          showLineNumbers\n          editable={false}\n          value={\n            isError\n              ? currentActionExecutionResult?.runResult?.message\n              : JSON.stringify(displayData, undefined, 2)\n          }\n          lang={CODE_LANG.JSON}\n        />\n      </div>\n    </div>\n  )\n}\n\nActionResult.displayName = \"ActionResult\"\n","import { css } from \"@emotion/react\"\nimport { globalColor, illaPrefix } from \"@illa-design/react\"\n\nexport const editableTextWrapperStyle = css`\n  width: 100%;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  &:hover {\n    background-color: ${globalColor(`--${illaPrefix}-grayBlue-09`)};\n    cursor: pointer;\n\n    svg {\n      opacity: 1;\n    }\n    .text-container {\n      padding-left: 16px;\n    }\n  }\n  transition: all 200ms;\n`\n\nexport const textStyle = css`\n  height: 100%;\n  display: inline-flex;\n  min-height: 32px;\n  font-size: 14px;\n  align-items: center;\n  box-sizing: border-box;\n  max-lines: 1;\n  white-space: nowrap;\n  border-radius: 8px;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-02`)};\n  font-weight: 500;\n  position: relative;\n  svg {\n    width: 14px;\n    height: 14px;\n    margin-left: 8px;\n    opacity: 0;\n    color: ${globalColor(`--${illaPrefix}-grayBlue-05`)};\n    transition: all 200ms;\n  }\n  transition: all 200ms;\n`\n\nexport const innerTextStyle = css`\n  position: relative;\n  display: flex;\n  align-items: center;\n  svg {\n    position: absolute;\n    right: -22px;\n  }\n`\n","import { FC, useCallback, useRef, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { Input, PenIcon, useMessage } from \"@illa-design/react\"\nimport { DisplayNameGenerator } from \"@/utils/generators/generateDisplayName\"\nimport { isValidDisplayName } from \"@/utils/typeHelper\"\nimport { EditableTextProps } from \"./interface\"\nimport { editableTextWrapperStyle, innerTextStyle, textStyle } from \"./style\"\n\nexport const EditableText: FC<EditableTextProps> = (props) => {\n  const {\n    displayName,\n    updateDisplayNameByBlur,\n    onMouseEnter,\n    onClick,\n    onBlur,\n    onValidate,\n  } = props\n  const [inputValue, setInputValue] = useState(displayName)\n  const [isFocusInput, setIsFocusInput] = useState(false)\n  const { t } = useTranslation()\n\n  const inputRef = useRef<HTMLInputElement>(null)\n\n  const handleChangeInputValue = (value: string) => {\n    setInputValue(value)\n  }\n\n  const handleClickOnSpan = () => {\n    if (isFocusInput) return\n    setIsFocusInput(true)\n    onClick?.()\n    setTimeout(() => {\n      inputRef.current?.focus()\n    }, 100)\n  }\n\n  const message = useMessage()\n\n  const handleBlurInput = useCallback(() => {\n    setIsFocusInput(false)\n    if (displayName === inputValue) {\n      return\n    }\n    onBlur?.(inputValue)\n    if (!isValidDisplayName(inputValue)) {\n      message.error({\n        content: t(\"editor.display_name.validate_error\", {\n          displayName: inputValue,\n        }),\n      })\n      onValidate?.(\"failed\")\n      setInputValue(displayName)\n      return\n    }\n    if (DisplayNameGenerator.isAlreadyGenerate(inputValue)) {\n      message.error({\n        content: t(\"editor.display_name.duplicate_error\", {\n          displayName: inputValue,\n        }),\n      })\n      onValidate?.(\"failed\")\n      setInputValue(displayName)\n      return\n    }\n    onValidate?.(\"suc\")\n    updateDisplayNameByBlur(inputValue)\n  }, [\n    displayName,\n    inputValue,\n    message,\n    onBlur,\n    onValidate,\n    t,\n    updateDisplayNameByBlur,\n  ])\n  return (\n    <div\n      css={editableTextWrapperStyle}\n      onMouseEnter={onMouseEnter}\n      className=\"editable-text-container\"\n      onClick={handleClickOnSpan}\n    >\n      {isFocusInput ? (\n        <Input\n          colorScheme=\"techPurple\"\n          value={inputValue}\n          onChange={handleChangeInputValue}\n          onBlur={handleBlurInput}\n          onPressEnter={handleBlurInput}\n          inputRef={inputRef}\n          className=\"input-container\"\n        />\n      ) : (\n        <span css={textStyle} className=\"text-container\">\n          <span css={innerTextStyle}>\n            {inputValue}\n            <PenIcon />\n          </span>\n        </span>\n      )}\n    </div>\n  )\n}\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const tabsHeaderContainerStyle = css`\n  display: flex;\n  width: 100%;\n  padding: 12px 16px;\n  gap: 8px;\n`\n\nexport const applyTabsHeaderItemStyle = (isActive: boolean) => css`\n  padding: 1px 4px;\n  height: 24px;\n  line-height: 24px;\n  border-radius: 4px;\n  font-size: 14px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  font-weight: ${isActive ? 500 : 400};\n  color: ${isActive ? getColor(\"grayBlue\", \"02\") : getColor(\"grayBlue\", \"03\")};\n  :hover {\n    background-color: ${getColor(\"grayBlue\", \"09\")};\n  }\n`\n","import { FC, useCallback, useEffect, useState } from \"react\"\nimport { SimpleTabsItem, SimpleTabsProps } from \"./interface\"\nimport { applyTabsHeaderItemStyle, tabsHeaderContainerStyle } from \"./style\"\n\nexport const getRenderBody = (activeKey: string, items: SimpleTabsItem[]) => {\n  const item = items.find((item) => item.key === activeKey)\n  if (item) {\n    return item.element\n  }\n  return null\n}\n\nexport const SimpleTabs: FC<SimpleTabsProps> = (props) => {\n  const { items, activeKey, containerStyle, handleClickChangeTab } = props\n  const [innerActiveKey, setInnerActiveKey] = useState(activeKey)\n  const handleChangeTab = useCallback(\n    (e: React.MouseEvent<HTMLDivElement>) => {\n      const target = e.target as HTMLSpanElement\n      const key = target.dataset.key\n      if (key) {\n        handleClickChangeTab(key)\n        setInnerActiveKey(key)\n      }\n    },\n    [handleClickChangeTab],\n  )\n\n  useEffect(() => {\n    if (activeKey !== innerActiveKey) {\n      setInnerActiveKey(activeKey)\n    }\n  }, [activeKey, innerActiveKey])\n  return (\n    <>\n      <div\n        css={[tabsHeaderContainerStyle, containerStyle]}\n        onClick={handleChangeTab}\n      >\n        {items.map((item) => (\n          <span\n            key={item.key}\n            css={applyTabsHeaderItemStyle(innerActiveKey === item.key)}\n            data-key={item.key}\n          >\n            {item.title}\n          </span>\n        ))}\n      </div>\n    </>\n  )\n}\n","import { css } from \"@emotion/react\"\nimport { getColor, globalColor, illaPrefix } from \"@illa-design/react\"\n\nexport const componentContainerStyle = css`\n  border-top: 1px solid ${globalColor(`--${illaPrefix}-grayBlue-08`)};\n  width: 100%;\n  height: 100%;\n  padding-bottom: 40px;\n  overflow-y: hidden;\n  display: flex;\n  flex-direction: column;\n`\nexport const searchWrapperStyle = css`\n  padding: 16px 16px 8px 16px;\n`\n\nexport const sessionListContainerStyle = css`\n  ${searchWrapperStyle};\n  padding-top: 0;\n  padding-bottom: 0;\n  height: 100%;\n  overflow-y: auto;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`\n\nexport const sessionContainerStyle = css`\n  width: 100%;\n  display: inline-flex;\n  flex-direction: column;\n\n  &:not(:nth-of-type(1)) {\n    margin-top: 8px;\n  }\n`\n\nexport const sessionTitleStyle = css`\n  height: 38px;\n  width: 100%;\n  font-size: 14px;\n  font-weight: 500;\n  display: inline-flex;\n  align-items: center;\n`\n\nexport const componentListContainerStyle = css`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(3, 88px);\n  gap: 16px 8px;\n`\n\nexport const itemContainerStyle = css`\n  display: flex;\n  flex: 1 1 auto;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n  width: 88px;\n`\n\nexport const iconStyle = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${globalColor(`--${illaPrefix}-grayBlue-09`)};\n  cursor: grab;\n  border-radius: 4px;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-04`)};\n  transition: background-color 200ms ease-in-out;\n  padding: 8px;\n  position: relative;\n  overflow: hidden;\n  &:hover {\n    background-color: ${globalColor(`--${illaPrefix}-grayBlue-08`)};\n  }\n`\n\nexport const nameStyle = css`\n  font-size: 12px;\n  width: 100%;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-03`)};\n  text-overflow: ellipsis;\n  box-sizing: border-box;\n  padding: 4px 4px 0 4px;\n  overflow: hidden;\n  text-align: center;\n  line-height: 14px;\n`\n\nexport const emptyContainerStyle = css`\n  width: 100%;\n  height: 319px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nexport const upgradeIconStyle = css`\n  position: absolute;\n  padding: 2px 8px;\n  top: 0;\n  left: 0;\n  color: ${getColor(\"techPurple\", \"03\")};\n  background-color: ${getColor(\"techPurple\", \"08\")};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n","import { UpgradeIcon } from \"@illa-public/icon\"\nimport { isSubscribeForUseDrive } from \"@illa-public/upgrade-modal/utils\"\nimport { getCurrentTeamInfo } from \"@illa-public/user-data\"\nimport { isCloudVersion } from \"@illa-public/utils\"\nimport { FC, memo } from \"react\"\nimport { useDrag } from \"react-dnd\"\nimport { useSelector } from \"react-redux\"\nimport { ComponentItemProps } from \"@/page/App/components/ComponentPanel/interface\"\nimport { getIsILLAEditMode } from \"@/redux/config/configSelector\"\nimport { getClientWidgetLayoutInfo } from \"@/redux/currentApp/layoutInfo/layoutInfoSelector\"\nimport { getGuideStatus } from \"@/redux/guide/guideSelector\"\nimport store from \"@/store\"\nimport { endDragMultiNodes, startDragMultiNodes } from \"@/utils/drag/drag\"\nimport { generateWidgetLayoutInfo } from \"@/utils/generators/generateComponentNode\"\nimport { DropResultInfo } from \"../DotPanel/components/Canvas/interface\"\nimport { DEFAULT_BODY_COLUMNS_NUMBER } from \"../DotPanel/constant/canvas\"\nimport { illaSnapshot } from \"../DotPanel/constant/snapshotNew\"\nimport { sendShadowMessageHandler } from \"../DotPanel/utils/sendBinaryMessage\"\nimport {\n  DRAG_EFFECT,\n  DragInfo,\n} from \"../ScaleSquare/components/DragContainer/interface\"\nimport {\n  iconStyle,\n  itemContainerStyle,\n  nameStyle,\n  upgradeIconStyle,\n} from \"./style\"\n\nexport const ComponentItem: FC<ComponentItemProps> = memo(\n  (props: ComponentItemProps) => {\n    const { widgetName, widgetType, icon, displayName, isPremiumWidget } = props\n\n    const isEditMode = useSelector(getIsILLAEditMode)\n    const isGuideOpen = useSelector(getGuideStatus)\n    const teamInfo = useSelector(getCurrentTeamInfo)!\n\n    const [, dragRef] = useDrag<DragInfo, DropResultInfo>(\n      () => ({\n        type: \"components\",\n        canDrag: () => {\n          return isEditMode\n        },\n        end: (draggedItem, monitor) => {\n          const dropResultInfo = monitor.getDropResult()\n          const { draggedComponents } = draggedItem\n          sendShadowMessageHandler(-1, \"\", [], 0, 0, 0, 0, 0, 0, 0, 0)\n          endDragMultiNodes(\n            draggedComponents,\n            !!dropResultInfo?.isDropOnCanvas,\n            true,\n          )\n        },\n        item: () => {\n          const widgetLayoutInfo = generateWidgetLayoutInfo(\n            widgetType,\n            displayName,\n          )\n          if (!widgetLayoutInfo) {\n            return {\n              draggedComponents: [],\n              dragEffect: DRAG_EFFECT.ADD,\n              draggedDisplayName: \"\",\n              unitWWhenDragged: 0,\n              columnNumberWhenDragged: DEFAULT_BODY_COLUMNS_NUMBER,\n            }\n          }\n          const rootState = store.getState()\n          let allWidgetLayoutInfo = getClientWidgetLayoutInfo(rootState)\n          illaSnapshot.setSnapshot(allWidgetLayoutInfo)\n          startDragMultiNodes([widgetLayoutInfo])\n          return {\n            draggedComponents: [widgetLayoutInfo],\n            dragEffect: DRAG_EFFECT.ADD,\n            draggedDisplayName: widgetLayoutInfo.displayName,\n            unitWWhenDragged: 0,\n            columnNumberWhenDragged: DEFAULT_BODY_COLUMNS_NUMBER,\n          }\n        },\n      }),\n      [isEditMode],\n    )\n\n    return (\n      <div\n        css={itemContainerStyle}\n        ref={dragRef}\n        {...(isGuideOpen ? { \"data-onboarding-element\": widgetType } : {})}\n      >\n        <span\n          css={iconStyle}\n          {...(isGuideOpen ? { \"data-onboarding-icon\": widgetType } : {})}\n        >\n          {isPremiumWidget &&\n            isCloudVersion &&\n            !isSubscribeForUseDrive(teamInfo) && (\n              <span css={upgradeIconStyle}>\n                <UpgradeIcon />\n              </span>\n            )}\n          {icon}\n        </span>\n        <span css={nameStyle}>{widgetName}</span>\n      </div>\n    )\n  },\n)\n\nComponentItem.displayName = \"ComponentItem\"\n","import { memo } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { getGuideStatus } from \"@/redux/guide/guideSelector\"\nimport { ComponentItem } from \"./ComponentItem\"\nimport { ComponentSessionProps } from \"./interface\"\nimport {\n  componentListContainerStyle,\n  sessionContainerStyle,\n  sessionTitleStyle,\n} from \"./style\"\n\nexport const ComponentSession = memo((props: ComponentSessionProps) => {\n  const { sessionTitle, widgetCardInfos, sessionType } = props\n  const isGuideOpen = useSelector(getGuideStatus)\n\n  return widgetCardInfos.length > 0 ? (\n    <div\n      css={sessionContainerStyle}\n      {...(isGuideOpen ? { \"data-onboarding-session\": sessionType } : {})}\n    >\n      <span css={sessionTitleStyle}>{sessionTitle}</span>\n      <div css={componentListContainerStyle}>\n        {widgetCardInfos.map((item) => (\n          <ComponentItem\n            key={item.id}\n            icon={item.icon}\n            widgetType={item.widgetType}\n            widgetName={item.widgetName}\n            displayName={item.displayName}\n            isPremiumWidget={item.isPremiumWidget}\n          />\n        ))}\n      </div>\n    </div>\n  ) : null\n})\n\nComponentSession.displayName = \"ComponentSession\"\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const rowSuggestComponentContainerStyle = css`\n  width: 100%;\n  padding: 16px 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport const columnSuggestComponentContainerStyle = css`\n  width: 100%;\n  padding: 16px 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n`\n\nexport const sessionTitleStyle = css`\n  line-height: 22px;\n  width: 100%;\n  font-size: 14px;\n  font-weight: 500;\n  align-items: center;\n  margin: 0;\n  padding: 0;\n  color: ${getColor(\"grayBlue\", \"02\")};\n`\n\nexport const columnSessionTitleStyle = css`\n  ${sessionTitleStyle};\n  text-align: center;\n`\n","import { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { Button, CommentIcon } from \"@illa-design/react\"\nimport {\n  columnSessionTitleStyle,\n  columnSuggestComponentContainerStyle,\n  rowSuggestComponentContainerStyle,\n  sessionTitleStyle,\n} from \"./style\"\n\nconst clickSuggest = () => {\n  window.open(\n    \"https://builder.illacloud.com/illacloud/deploy/app/ILAbx4p1C7QZ\",\n    \"_blank\",\n  )\n}\n\nexport const RowSuggestComponent: FC = () => {\n  const { t } = useTranslation()\n  return (\n    <div css={rowSuggestComponentContainerStyle}>\n      <h6 css={sessionTitleStyle}>{t(\"editor.action.form.title.feedback\")}</h6>\n      <Button\n        leftIcon={<CommentIcon />}\n        colorScheme=\"grayBlue\"\n        variant=\"outline\"\n        onClick={clickSuggest}\n      >\n        {t(\"editor.action.form.option.tell_us\")}\n      </Button>\n    </div>\n  )\n}\n\nexport const ColumnSuggestComponent: FC = () => {\n  const { t } = useTranslation()\n  return (\n    <div css={columnSuggestComponentContainerStyle}>\n      <h6 css={columnSessionTitleStyle}>\n        {t(\"editor.action.form.title.feedback\")}\n      </h6>\n      <Button\n        leftIcon={<CommentIcon />}\n        colorScheme=\"grayBlue\"\n        variant=\"outline\"\n        onClick={clickSuggest}\n      >\n        {t(\"editor.action.form.option.tell_us\")}\n      </Button>\n    </div>\n  )\n}\n","import { sessionTypeMapSessionNameKey } from \"@/page/App/components/ComponentPanel/componentListBuilder\"\nimport { ComponentSessionProps } from \"./interface\"\n\nexport function getMatchComponent(\n  value?: string,\n  options?: ComponentSessionProps[],\n) {\n  if (!value || value.length === 0) return options\n  const valueArr = value.split(\"\")\n  let regKey = \".*\"\n  valueArr.forEach((s) => {\n    regKey += s.toLocaleLowerCase() + \".*\"\n  })\n  const reg = RegExp(regKey)\n\n  const newSessionList: ComponentSessionProps[] = []\n  const removeCommonlyOptions = options?.filter((option) => {\n    return option.sessionTitle !== sessionTypeMapSessionNameKey.COMMON\n  })\n  removeCommonlyOptions?.forEach((session) => {\n    const res = session.widgetCardInfos.filter((widgetCardInfo) => {\n      const keyword = widgetCardInfo?.keywords\n      return keyword\n        ? keyword.some((key) => key.toLocaleLowerCase().match(reg))\n        : widgetCardInfo.widgetName.toLocaleLowerCase().match(reg)\n    })\n    if (res.length > 0) {\n      newSessionList.push({ ...session, widgetCardInfos: res })\n    }\n  })\n  return newSessionList\n}\n","import { FC, useCallback, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { Search } from \"@illa-design/react\"\nimport { buildComponentList } from \"@/page/App/components/ComponentPanel/componentListBuilder\"\nimport { FocusManager } from \"@/utils/focusManager\"\nimport { ComponentSession } from \"./ComponentSession\"\nimport {\n  ColumnSuggestComponent,\n  RowSuggestComponent,\n} from \"./components/SuggestComponent\"\nimport { ComponentPanelProps, ComponentSessionProps } from \"./interface\"\nimport {\n  componentContainerStyle,\n  emptyContainerStyle,\n  searchWrapperStyle,\n  sessionListContainerStyle,\n} from \"./style\"\nimport { getMatchComponent } from \"./utils\"\n\nconst ComponentPanel: FC<ComponentPanelProps> = (props) => {\n  const { t } = useTranslation()\n\n  const defaultList: ComponentSessionProps[] = buildComponentList()\n  const { className, componentList = defaultList } = props\n  const [searchInput, setSearchInput] = useState(\"\")\n\n  const [searchRes, setSearchRes] = useState<\n    ComponentSessionProps[] | undefined\n  >(componentList)\n\n  const handleOnChange = useCallback(\n    (value: string) => {\n      setSearchInput(value)\n      const res = getMatchComponent(value, componentList)\n      setSearchRes(res)\n    },\n    [componentList],\n  )\n\n  return (\n    <div\n      className={className}\n      css={componentContainerStyle}\n      onClick={() => {\n        FocusManager.switchFocus(\"widget_picker\")\n      }}\n    >\n      <div css={searchWrapperStyle}>\n        <Search\n          value={searchInput}\n          colorScheme=\"purple\"\n          variant=\"fill\"\n          placeholder={t(\"editor.widget_picker.search_placeholder\")}\n          onChange={handleOnChange}\n        />\n      </div>\n      <div css={sessionListContainerStyle}>\n        {searchRes && searchRes.length ? (\n          searchRes\n            .map((session) => (\n              <ComponentSession\n                key={\"session-\" + session.sessionTitle}\n                {...session}\n              />\n            ))\n            .concat(<RowSuggestComponent key=\"suggest\" />)\n        ) : (\n          <div css={emptyContainerStyle}>\n            <ColumnSuggestComponent />\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nComponentPanel.displayName = \"ComponentPanel\"\nexport default ComponentPanel\n","import { lazy } from \"react\"\nimport i18n from \"@/i18n/config\"\nimport ComponentPanel from \"@/page/App/components/ComponentPanel\"\nimport { SimpleTabsItem } from \"./interface\"\n\nconst ConfigPanel = lazy(() => import(\"@/page/App/components/ConfigPanel\"))\nconst PagePanel = lazy(() => import(\"@/page/App/components/PagePanel\"))\n\nexport const ACTION_PANEL_TABS: SimpleTabsItem[] = [\n  {\n    key: \"general\",\n    title: i18n.t(\"editor.action.resource.db.title.general_option\"),\n  },\n  {\n    key: \"advanced\",\n    title: i18n.t(\"editor.action.panel.label.advanced.advanced\"),\n  },\n]\n\nexport const COMPONENT_MANAGER_TABS: SimpleTabsItem[] = [\n  {\n    key: \"Page\",\n    title: i18n.t(\"editor.page.tab_title\"),\n    element: <PagePanel />,\n  },\n  {\n    key: \"Inspect\",\n    title: i18n.t(\"editor.inspect.tab_title\"),\n    element: <ConfigPanel />,\n  },\n  {\n    key: \"Insert\",\n    title: i18n.t(\"editor.widget_picker.tab_title\"),\n    element: <ComponentPanel />,\n  },\n]\n","import { FC, ReactNode, createContext, useCallback, useState } from \"react\"\n\ntype ActionShowSQLMode = Record<string, boolean>\n\ninterface Injected {\n  showSQLModeTip: ActionShowSQLMode\n  setShowSQLModeTip: (actionID: string, show: boolean) => void\n}\n\nexport const SQLModeTipContext = createContext<Injected>({} as Injected)\nexport const SQLModeTipProvider: FC<{ children: ReactNode }> = ({\n  children,\n}) => {\n  const [showSQLModeTip, setShowSQLModeTip] = useState({})\n\n  const handleSetSQModeTip = useCallback((actionID: string, show: boolean) => {\n    setShowSQLModeTip((prev) => {\n      return {\n        ...prev,\n        [actionID]: show,\n      }\n    })\n  }, [])\n  return (\n    <SQLModeTipContext.Provider\n      value={{ showSQLModeTip, setShowSQLModeTip: handleSetSQModeTip }}\n    >\n      {children}\n    </SQLModeTipContext.Provider>\n  )\n}\n","const SAFE_MODE_ACTION_TYPE = [\n  \"clickhouse\",\n  \"supabasedb\",\n  \"mysql\",\n  \"tidb\",\n  \"mariadb\",\n  \"postgresql\",\n  \"snowflake\",\n  \"neon\",\n  \"hydra\",\n  \"mssql\",\n  \"oracle\",\n  \"oracle9i\",\n]\n\nexport const isSafeModeAction = (actionType: string) => {\n  return SAFE_MODE_ACTION_TYPE.includes(actionType)\n}\n","import { SerializedStyles, css } from \"@emotion/react\"\nimport { getColor, globalColor, illaPrefix } from \"@illa-design/react\"\n\nexport const actionTitleBarStyle = css`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0 16px;\n  border-bottom: 1px solid ${globalColor(`--${illaPrefix}-grayBlue-08`)};\n  min-height: 48px;\n  justify-content: space-between;\n  position: relative;\n`\n\nexport const editableTitleBarWrapperStyle = css`\n  width: 280px;\n  position: absolute;\n  left: calc(50% - 140px);\n  .editable-text-container {\n    justify-content: center;\n    :hover {\n      .text-container {\n        padding-left: 0;\n      }\n    }\n  }\n  .input-container {\n    text-align: center;\n  }\n`\n\nexport const actionSuccessBlockStyle = css`\n  padding: 0 8px;\n  display: inline-flex;\n  flex-direction: row;\n  align-items: center;\n  height: 32px;\n  margin-right: 8px;\n  cursor: pointer;\n  background: ${getColor(\"green\", \"08\")};\n  color: ${getColor(\"green\", \"03\")};\n  border-radius: 8px;\n`\n\nexport const actionFailBlockStyle = css`\n  padding: 0 8px;\n  display: inline-flex;\n  flex-direction: row;\n  margin-right: 8px;\n  cursor: pointer;\n  align-items: center;\n  height: 32px;\n  background: ${getColor(\"orange\", \"08\")};\n  color: ${getColor(\"orange\", \"03\")};\n  border-radius: 8px;\n`\n\nexport const actionTextStyle = css`\n  font-weight: 500;\n  margin-left: 8px;\n  margin-right: 20px;\n  font-size: 14px;\n  color: ${getColor(\"grayBlue\", \"02\")};\n`\n\nexport function applyOpenStateStyle(openState: boolean): SerializedStyles {\n  const transform = openState\n    ? css`\n        transform: rotate(180deg);\n      `\n    : css`\n        transform: rotate(0deg);\n      `\n\n  return css`\n    font-size: 12px;\n    transition: transform 0.2s ease;\n    ${transform};\n  `\n}\n\nexport const tabsContainerStyle = css`\n  width: auto;\n  padding-left: 0;\n  padding-right: 0;\n`\n\nexport const runResultAndRunContainerStyle = css`\n  display: flex;\n  gap: 8px;\n`\n","import { ILLA_MIXPANEL_EVENT_TYPE } from \"@illa-public/mixpanel-utils\"\nimport {\n  ElasticSearchBodyContentType,\n  ElasticSearchIDEditorType,\n  ElasticSearchQueryContentType,\n  getDocLink,\n} from \"@illa-public/public-configs\"\nimport {\n  ActionContent,\n  ActionItem,\n  ElasticSearchAction,\n  GlobalDataActionContent,\n  SMPTAction,\n} from \"@illa-public/public-types\"\nimport { isEqual } from \"lodash-es\"\nimport {\n  FC,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { Link } from \"react-router-dom\"\nimport {\n  Button,\n  DocsIcon,\n  DropList,\n  DropListItem,\n  Dropdown,\n  MoreIcon,\n  PlayFillIcon,\n  SuccessCircleIcon,\n  UpIcon,\n  WarningCircleIcon,\n  useMessage,\n} from \"@illa-design/react\"\nimport { EditableText } from \"@/components/EditableText\"\nimport { SimpleTabs } from \"@/components/Tabs\"\nimport { ACTION_PANEL_TABS } from \"@/components/Tabs/constant\"\nimport i18n from \"@/i18n/config\"\nimport { isFileOversize } from \"@/page/App/components/Actions/ActionPanel/utils/calculateFileSize\"\nimport { onCopyActionItem } from \"@/page/App/components/Actions/api\"\nimport {\n  getCachedAction,\n  getIsILLAGuideMode,\n  getSelectedAction,\n} from \"@/redux/config/configSelector\"\nimport { actionActions } from \"@/redux/currentApp/action/actionSlice\"\nimport { componentsActions } from \"@/redux/currentApp/components/componentsSlice\"\nimport { getExecutionResult } from \"@/redux/currentApp/executionTree/executionSelector\"\nimport { fetchUpdateAction } from \"@/services/action\"\nimport { RootState } from \"@/store\"\nimport { runOriginAction } from \"@/utils/action/runAction\"\nimport { DisplayNameGenerator } from \"@/utils/generators/generateDisplayName\"\nimport { trackInEditor } from \"@/utils/mixpanelHelper\"\nimport { ShortCutContext } from \"@/utils/shortcut/shortcutProvider\"\nimport { SQLModeTipContext } from \"../../Context/SqlModeTipContext\"\nimport { isSafeModeAction } from \"../utils/safeModeTip\"\nimport { ActionTitleBarProps } from \"./interface\"\nimport {\n  actionFailBlockStyle,\n  actionSuccessBlockStyle,\n  actionTextStyle,\n  actionTitleBarStyle,\n  applyOpenStateStyle,\n  editableTitleBarWrapperStyle,\n  runResultAndRunContainerStyle,\n  tabsContainerStyle,\n} from \"./style\"\n\nconst Item = DropListItem\nexport type RunMode = \"save\" | \"run\" | \"test_run\" | \"save_and_run\"\nconst FILE_SIZE_LIMIT_TYPE = [\"s3\", \"smtp\"]\n\nconst getCanRunAction = (cachedAction: ActionItem<ActionContent> | null) => {\n  if (\n    !cachedAction ||\n    !FILE_SIZE_LIMIT_TYPE.includes(cachedAction.actionType)\n  ) {\n    return [true, \"\"]\n  }\n  switch (cachedAction.actionType) {\n    case \"smtp\":\n      const smtpContent = cachedAction.content as SMPTAction\n      return [\n        !isFileOversize(smtpContent?.attachment || \"\", \"smtp\"),\n        i18n.t(\"editor.action.panel.error.max_file\"),\n      ]\n  }\n  return [true, \"\"]\n}\n\nconst getActionFilteredContent = (cachedAction: ActionItem<ActionContent>) => {\n  let cachedActionValue: ActionItem<ActionContent> | null = cachedAction\n  if (!cachedActionValue) {\n    return cachedActionValue\n  }\n  switch (cachedAction?.actionType) {\n    case \"elasticsearch\":\n      let content = cachedAction.content as ElasticSearchAction\n      if (!ElasticSearchIDEditorType.includes(content.operation)) {\n        const { id: _id = \"\", ...otherContent } = content\n        cachedActionValue = {\n          ...cachedAction,\n          content: { ...otherContent },\n        }\n        content = otherContent\n      }\n      if (!ElasticSearchBodyContentType.includes(content.operation)) {\n        const { body: _body = \"\", ...otherContent } = content\n        cachedActionValue = {\n          ...cachedActionValue,\n          content: { ...otherContent },\n        }\n        content = otherContent\n      }\n      if (!ElasticSearchQueryContentType.includes(content.operation)) {\n        const { query: _query = \"\", ...otherContent } = content\n        cachedActionValue = {\n          ...cachedActionValue,\n          content: { ...otherContent },\n        }\n      }\n      break\n    case \"smtp\":\n      const smtpContent = cachedAction.content as SMPTAction\n      const { to, cc, bcc, attachment, ...otherContent } = smtpContent\n      cachedActionValue = {\n        ...cachedAction,\n        content: {\n          ...otherContent,\n          // if to, cc, bcc or attachment is empty, remove it from the content\n          ...(to && { to }),\n          ...(cc && { cc }),\n          ...(bcc && { bcc }),\n          ...(attachment && { attachment }),\n        },\n      }\n      break\n  }\n  return cachedActionValue\n}\n\nexport const ActionTitleBar: FC<ActionTitleBarProps> = (props) => {\n  const { onResultVisibleChange, openState, activeTab, handleChangeTab } = props\n\n  const message = useMessage()\n  const [saveLoading, setSaveLoading] = useState(false)\n  const shortcut = useContext(ShortCutContext)\n  const { setShowSQLModeTip } = useContext(SQLModeTipContext)\n\n  const selectedAction = useSelector(getSelectedAction)! ?? {}\n  const cachedAction = useSelector(getCachedAction)!\n  const docLink = getDocLink(\"action\", cachedAction.actionType)\n  const selectedActionExecutionResult = useSelector<\n    RootState,\n    Record<string, any>\n  >((rootState) => {\n    const executionResult = getExecutionResult(rootState)\n    return executionResult[selectedAction.displayName] || {}\n  })\n  const isRunning = !!selectedActionExecutionResult.isRunning\n\n  const isChanged = !isEqual(selectedAction, cachedAction)\n\n  const dispatch = useDispatch()\n  const { t } = useTranslation()\n  const [canRunAction, canNotRunMessage] = getCanRunAction(cachedAction)\n\n  const executionResult = useSelector(getExecutionResult)\n  const isGuideOpen = useSelector(getIsILLAGuideMode)\n\n  const renderResult =\n    executionResult[selectedAction.displayName]?.data !== undefined ||\n    executionResult[selectedAction.displayName]?.runResult !== undefined\n\n  const runError = executionResult[selectedAction.displayName]?.runResult?.error\n\n  const getRunMode = () => {\n    if (isGuideOpen) {\n      if (isChanged) {\n        return \"save\"\n      }\n      return \"test_run\"\n    }\n    if (cachedAction != undefined && isChanged) {\n      if (cachedAction.triggerMode === \"manually\") {\n        return \"save\"\n      } else if (cachedAction.triggerMode === \"automate\") {\n        return \"save_and_run\"\n      } else {\n        return \"save\"\n      }\n    } else {\n      return \"run\"\n    }\n  }\n\n  const runMode = getRunMode()\n\n  const innerTabItems = useMemo(() => {\n    if (\n      selectedAction.actionType === \"transformer\" ||\n      selectedAction.actionType === \"globalData\"\n    ) {\n      return [ACTION_PANEL_TABS[0]]\n    }\n    return ACTION_PANEL_TABS\n  }, [selectedAction.actionType])\n\n  useEffect(() => {\n    if (\n      selectedAction.actionType === \"transformer\" ||\n      selectedAction.actionType === \"globalData\"\n    ) {\n      handleChangeTab(\"general\")\n    }\n  }, [handleChangeTab, selectedAction.actionType])\n\n  useEffect(() => {\n    switch (runMode) {\n      case \"save\": {\n        trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.SHOW, {\n          element: \"action_edit_save\",\n          parameter1: cachedAction.actionType,\n        })\n        break\n      }\n      case \"run\": {\n        trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.SHOW, {\n          element: \"action_edit_run\",\n          parameter1: cachedAction.actionType,\n        })\n        break\n      }\n      case \"save_and_run\": {\n        trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.SHOW, {\n          element: \"action_edit_save_run\",\n          parameter1: cachedAction.actionType,\n        })\n        break\n      }\n    }\n  }, [cachedAction.actionType, runMode])\n\n  const runCachedAction = useCallback(\n    async (cachedActionValue: ActionItem<ActionContent>) => {\n      if (cachedActionValue) {\n        try {\n          await runOriginAction(cachedActionValue)\n        } catch (e) {\n          isSafeModeAction(cachedActionValue.actionType) &&\n            setShowSQLModeTip(cachedActionValue.actionID, true)\n        } finally {\n          onResultVisibleChange(true)\n        }\n      }\n    },\n    [onResultVisibleChange, setShowSQLModeTip],\n  )\n\n  const updateAndRunCachedAction = useCallback(\n    (cachedActionValue: ActionItem<ActionContent>) => {\n      if (cachedActionValue) {\n        dispatch(actionActions.updateActionItemReducer(cachedActionValue))\n        runCachedAction(cachedActionValue)\n      }\n    },\n    [dispatch, runCachedAction],\n  )\n\n  const handleActionOperation = useCallback(async () => {\n    let cachedActionValue: ActionItem<ActionContent> =\n      getActionFilteredContent(cachedAction)\n\n    switch (runMode) {\n      case \"test_run\":\n        if (!canRunAction) {\n          message.error({\n            content: canNotRunMessage,\n          })\n          return\n        }\n        updateAndRunCachedAction(cachedActionValue)\n        break\n      case \"run\":\n        trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n          element: \"action_edit_run\",\n          parameter1: cachedAction.actionType,\n          parameter2: cachedAction,\n        })\n        if (!canRunAction) {\n          message.error({\n            content: canNotRunMessage,\n          })\n          return\n        }\n        runCachedAction(cachedActionValue)\n        break\n      case \"save\":\n        if (cachedAction.actionType === \"globalData\") {\n          dispatch(\n            componentsActions.setGlobalStateReducer({\n              key: cachedAction.displayName,\n              value: (cachedAction.content as GlobalDataActionContent)\n                .initialValue,\n              oldKey: cachedAction.displayName,\n            }),\n          )\n          return\n        }\n        if (isGuideOpen) {\n          cachedActionValue &&\n            dispatch(actionActions.updateActionItemReducer(cachedActionValue))\n          return\n        }\n        trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n          element: \"action_edit_save\",\n          parameter1: cachedAction.actionType,\n          parameter2: cachedAction,\n        })\n        setSaveLoading(true)\n        try {\n          await fetchUpdateAction(cachedActionValue)\n          if (cachedActionValue) {\n            dispatch(actionActions.updateActionItemReducer(cachedActionValue))\n          }\n        } catch (e) {\n          message.error({\n            content: t(\"create_fail\"),\n          })\n        }\n        setSaveLoading(false)\n\n        break\n      case \"save_and_run\":\n        trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n          element: \"action_edit_save_run\",\n          parameter1: cachedAction.actionType,\n          parameter2: cachedAction,\n        })\n        if (!canRunAction) {\n          message.error({\n            content: canNotRunMessage,\n          })\n          return\n        }\n        setSaveLoading(true)\n        try {\n          await fetchUpdateAction(cachedActionValue)\n          updateAndRunCachedAction(cachedActionValue)\n        } catch (e) {\n          message.error({\n            content: t(\"editor.action.panel.btn.save_fail\"),\n          })\n        }\n        setSaveLoading(false)\n        break\n    }\n  }, [\n    cachedAction,\n    canNotRunMessage,\n    canRunAction,\n    dispatch,\n    isGuideOpen,\n    message,\n    runCachedAction,\n    runMode,\n    t,\n    updateAndRunCachedAction,\n  ])\n\n  const renderButton = useMemo(() => {\n    return runMode === \"run\" || runMode === \"test_run\"\n      ? cachedAction?.actionType !== \"transformer\" &&\n          cachedAction?.actionType !== \"globalData\"\n      : true\n  }, [cachedAction?.actionType, runMode])\n\n  if (cachedAction === undefined) {\n    return <></>\n  }\n\n  const successBlock = (\n    <div\n      css={actionSuccessBlockStyle}\n      onClick={() => {\n        onResultVisibleChange(!openState)\n      }}\n    >\n      <SuccessCircleIcon fs=\"16px\" size=\"16px\" />\n      <span css={actionTextStyle}>\n        {t(\"editor.action.panel.status.ran_successfully\")}\n      </span>\n      <UpIcon css={applyOpenStateStyle(openState)} />\n    </div>\n  )\n\n  const failBlock = (\n    <div\n      css={actionFailBlockStyle}\n      onClick={() => {\n        onResultVisibleChange(!openState)\n      }}\n    >\n      <WarningCircleIcon fs=\"16px\" size=\"16px\" />\n      <span css={actionTextStyle}>\n        {t(\"editor.action.panel.status.ran_failed\")}\n      </span>\n      <UpIcon css={applyOpenStateStyle(openState)} />\n    </div>\n  )\n\n  return (\n    <>\n      <div css={actionTitleBarStyle}>\n        <SimpleTabs\n          items={innerTabItems}\n          activeKey={activeTab}\n          handleClickChangeTab={handleChangeTab}\n          containerStyle={tabsContainerStyle}\n        />\n        <div css={editableTitleBarWrapperStyle}>\n          <EditableText\n            key={selectedAction.displayName}\n            displayName={selectedAction.displayName}\n            updateDisplayNameByBlur={async (value) => {\n              const newAction = {\n                ...selectedAction,\n                displayName: value,\n              }\n              if (selectedAction.actionType === \"globalData\") {\n                if (DisplayNameGenerator.isAlreadyGenerate(value)) {\n                  message.error({\n                    content: t(\"editor.action.panel.error.duplicated\"),\n                  })\n                  return\n                }\n                DisplayNameGenerator.addDisplayNames([value])\n                DisplayNameGenerator.removeDisplayName(\n                  selectedAction.displayName,\n                )\n                dispatch(\n                  componentsActions.setGlobalStateReducer({\n                    key: value,\n                    value: (selectedAction.content as GlobalDataActionContent)\n                      .initialValue,\n                    oldKey: selectedAction.displayName,\n                  }),\n                )\n                return\n              }\n              if (isGuideOpen) {\n                dispatch(\n                  actionActions.updateActionDisplayNameReducer({\n                    newDisplayName: value,\n                    oldDisplayName: selectedAction.displayName,\n                    actionID: newAction.actionID,\n                  }),\n                )\n\n                return\n              }\n              setSaveLoading(true)\n              try {\n                await fetchUpdateAction(newAction)\n                dispatch(\n                  actionActions.updateActionDisplayNameReducer({\n                    newDisplayName: value,\n                    oldDisplayName: selectedAction.displayName,\n                    actionID: newAction.actionID,\n                  }),\n                )\n              } catch (e) {\n                message.error({\n                  content: t(\"change_fail\"),\n                })\n              }\n              setSaveLoading(false)\n            }}\n            onClick={() => {\n              trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.RENAME, {\n                element: \"action_rename\",\n                parameter1: selectedAction.actionType,\n                parameter2: \"hover\",\n              })\n            }}\n          />\n        </div>\n        <div css={runResultAndRunContainerStyle}>\n          {renderResult && (runError ? failBlock : successBlock)}\n          {docLink && (\n            <Link to={docLink} target=\"_blank\">\n              <Button\n                colorScheme=\"grayBlue\"\n                leftIcon={<DocsIcon size=\"14px\" />}\n              />\n            </Link>\n          )}\n          <Dropdown\n            position=\"bottom-end\"\n            trigger=\"click\"\n            dropList={\n              <DropList w=\"184px\">\n                <Item\n                  value=\"duplicate\"\n                  key=\"duplicate\"\n                  title={t(\"editor.action.action_list.contextMenu.duplicate\")}\n                  onClick={() => {\n                    onCopyActionItem(selectedAction)\n                  }}\n                />\n                <Item\n                  key=\"delete\"\n                  value=\"delete\"\n                  title={t(\"editor.action.action_list.contextMenu.delete\")}\n                  deleted\n                  onClick={() => {\n                    shortcut.showDeleteDialog(\n                      [selectedAction.displayName],\n                      \"action\",\n                    )\n                  }}\n                />\n              </DropList>\n            }\n          >\n            <Button\n              colorScheme=\"grayBlue\"\n              leftIcon={<MoreIcon size=\"14px\" />}\n            />\n          </Dropdown>\n          {renderButton && (\n            <Button\n              pos=\"relative\"\n              className={`${cachedAction.displayName}-run`}\n              colorScheme=\"techPurple\"\n              variant={isChanged ? \"fill\" : \"light\"}\n              size=\"medium\"\n              loading={isRunning || saveLoading}\n              leftIcon={<PlayFillIcon />}\n              onClick={handleActionOperation}\n            >\n              {t(`editor.action.panel.btn.${runMode}`)}\n            </Button>\n          )}\n        </div>\n      </div>\n    </>\n  )\n}\n\nActionTitleBar.displayName = \"ActionTitleBar\"\n","import { css } from \"@emotion/react\"\n\nexport const actionPanelStyle = css`\n  flex-grow: 1;\n  height: 100%;\n  overflow-x: auto;\n  overflow-y: hidden;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`\n\nexport const actionPanelContainerStyle = css`\n  width: 100%;\n  height: 100%;\n  min-width: 877px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  overflow-y: hidden;\n`\n\nexport const actionContentStyle = css`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`\n\nexport const outterActionContainerStyle = css`\n  padding-bottom: 48px;\n  width: 100%;\n  height: calc(100% - 48px);\n  overflow-y: auto;\n  padding-top: 8px;\n`\n\nexport const actionItemContainer = css`\n  padding: 8px 0;\n`\n","import { css } from \"@emotion/react\"\n\nexport const widgetLoadingWrapperStyle = css`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n","import { FC, memo } from \"react\"\nimport { Loading } from \"@illa-design/react\"\nimport { widgetLoadingWrapperStyle } from \"./style\"\n\nconst WidgetLoading: FC = () => {\n  return (\n    <div css={widgetLoadingWrapperStyle}>\n      <Loading colorScheme=\"techPurple\" />\n    </div>\n  )\n}\n\nWidgetLoading.displayName = \"WidgetLoading\"\n\nexport default memo(WidgetLoading)\n","import { css } from \"@emotion/react\"\nimport { globalColor, illaPrefix } from \"@illa-design/react\"\n\nexport const transformTitleStyle = css`\n  min-height: 48px;\n  width: 100%;\n  margin: 0;\n  padding: 0 16px;\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n`\n\nexport const transformRadioStyle = css`\n  width: 184px;\n`\n\nexport const transformSpaceStyle = css`\n  flex-grow: 1;\n`\n\nexport const codeMirrorStyle = css`\n  margin: 8px 16px;\n  width: 100%;\n`\n\nexport const transformTitle = css`\n  min-width: 160px;\n  font-size: 14px;\n  font-weight: 500;\n  text-align: right;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-02`)};\n`\n\nexport const codeMirrorContainer = css`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  min-height: 48px;\n`\n\nexport const codeMirrorPaddingContainer = css`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  min-height: 48px;\n  padding: 0 0 0 16px;\n`\n\nexport const getCodeMirrorContainerStyle = (mysqlLike: boolean) => {\n  if (mysqlLike) {\n    return css`\n      ${codeMirrorContainer}\n    `\n  } else {\n    return css`\n      ${codeMirrorPaddingContainer}\n    `\n  }\n}\n","import {\n  TransformerInitial,\n  TransformerInitialTrue,\n} from \"@illa-public/public-configs\"\nimport { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { RadioGroup } from \"@illa-design/react\"\nimport { CodeEditor } from \"@/components/CodeEditor\"\nimport {\n  CODE_LANG,\n  CODE_TYPE,\n} from \"@/components/CodeEditor/CodeMirror/extensions/interface\"\nimport { TransformComponentProps } from \"@/page/App/components/Actions/ActionPanel/TransformerComponent/interface\"\nimport {\n  codeMirrorStyle,\n  getCodeMirrorContainerStyle,\n  transformRadioStyle,\n  transformSpaceStyle,\n  transformTitle,\n  transformTitleStyle,\n} from \"@/page/App/components/Actions/ActionPanel/TransformerComponent/style\"\nimport { PanelLabel } from \"@/page/App/components/InspectPanel/components/Label\"\nimport {\n  getCachedAction,\n  getSelectedAction,\n} from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { VALIDATION_TYPES } from \"@/utils/validationFactory\"\n\nexport const TransformerComponent: FC<TransformComponentProps> = (props) => {\n  const { t } = useTranslation()\n  const dispatch = useDispatch()\n\n  const { fullWidth } = props\n  const cachedAction = useSelector(getCachedAction)\n  const selectedAction = useSelector(getSelectedAction)\n\n  return (\n    <>\n      {cachedAction && (\n        <div css={transformTitleStyle}>\n          {fullWidth ? (\n            <PanelLabel\n              labelName={t(\"editor.action.panel.label.transformer\")}\n            />\n          ) : (\n            <span css={transformTitle}>\n              {t(\"editor.action.panel.label.transformer\")}\n            </span>\n          )}\n          <div css={transformSpaceStyle} />\n          <RadioGroup\n            css={transformRadioStyle}\n            forceEqualWidth={true}\n            size=\"medium\"\n            colorScheme=\"gray\"\n            value={cachedAction.transformer.enable}\n            type=\"button\"\n            options={[\n              {\n                value: false,\n                label: t(\"editor.action.panel.btn.disable\"),\n              },\n              {\n                value: true,\n                label: t(\"editor.action.panel.btn.enable\"),\n              },\n            ]}\n            onChange={(value) => {\n              let transformer = TransformerInitial\n              if (\n                selectedAction &&\n                selectedAction.transformer.enable === value\n              ) {\n                transformer = selectedAction.transformer || \"\"\n              } else {\n                if (value) {\n                  transformer = TransformerInitialTrue\n                }\n              }\n              dispatch(\n                configActions.updateCachedAction({\n                  ...cachedAction,\n                  transformer: transformer,\n                }),\n              )\n            }}\n          />\n        </div>\n      )}\n      {cachedAction && cachedAction.transformer.enable && (\n        <div css={getCodeMirrorContainerStyle(!!fullWidth)}>\n          {fullWidth ? null : <span css={transformTitle} />}\n          <CodeEditor\n            value={cachedAction.transformer.rawData}\n            wrapperCss={codeMirrorStyle}\n            showLineNumbers\n            canShowCompleteInfo\n            height=\"88px\"\n            expectValueType={VALIDATION_TYPES.STRING}\n            lang={CODE_LANG.JAVASCRIPT}\n            codeType={CODE_TYPE.NO_METHOD_FUNCTION}\n            modalTitle={t(\"editor.action.panel.label.transformer\")}\n            onChange={(value) => {\n              dispatch(\n                configActions.updateCachedAction({\n                  ...cachedAction,\n                  transformer: {\n                    ...cachedAction.transformer,\n                    rawData: value,\n                  },\n                }),\n              )\n            }}\n          />\n        </div>\n      )}\n    </>\n  )\n}\n\nTransformerComponent.displayName = \"TransformerComponent\"\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const mockDataContainerStyle = css`\n  display: flex;\n  padding: 8px 0;\n  flex-direction: column;\n  gap: 10px;\n`\n\nexport const mockDataTitleStyle = css`\n  color: ${getColor(\"grayBlue\", \"02\")};\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 22px;\n`\n\nexport const mockPanelContainerStyle = css`\n  padding: 8px 16px;\n  width: 100%;\n`\n","import { FC, memo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch } from \"react-redux\"\nimport { Checkbox, Space } from \"@illa-design/react\"\nimport { CodeEditor } from \"@/components/CodeEditor\"\nimport {\n  CODE_LANG,\n  CODE_TYPE,\n} from \"@/components/CodeEditor/CodeMirror/extensions/interface\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { TransformerComponent } from \"../TransformerComponent\"\nimport { ActionMockPanelProps } from \"./interface\"\nimport {\n  mockDataContainerStyle,\n  mockDataTitleStyle,\n  mockPanelContainerStyle,\n} from \"./style\"\n\nconst ActionMockPanel: FC<ActionMockPanelProps> = (props) => {\n  const { mockData, enableForReleasedApp } = props\n\n  const dispatch = useDispatch()\n  const { t } = useTranslation()\n\n  const handleOnChangeMockData = (value: string) => {\n    dispatch(\n      configActions.updateCachedActionMockConfigReducer({\n        mockData: value,\n      }),\n    )\n  }\n\n  const handleOnChangeEnableForReleasedApp = (checked: boolean) => {\n    dispatch(\n      configActions.updateCachedActionMockConfigReducer({\n        enableForReleasedApp: checked,\n      }),\n    )\n  }\n\n  return (\n    <>\n      <div css={mockPanelContainerStyle}>\n        <div css={mockDataContainerStyle}>\n          <span css={mockDataTitleStyle}>\n            {t(\"editor.action.panel.option.mock.json\")}\n          </span>\n          <CodeEditor\n            value={mockData}\n            showLineNumbers\n            canShowCompleteInfo\n            height=\"88px\"\n            lang={CODE_LANG.JAVASCRIPT}\n            codeType={CODE_TYPE.NO_METHOD_FUNCTION}\n            onChange={handleOnChangeMockData}\n          />\n        </div>\n        <Checkbox\n          checked={enableForReleasedApp}\n          colorScheme=\"techPurple\"\n          onChange={handleOnChangeEnableForReleasedApp}\n        >\n          {t(\"editor.action.panel.option.mock.on_deploy\")}\n        </Checkbox>\n      </div>\n      <TransformerComponent fullWidth />\n      <Space w=\"100%\" h=\"8px\" disp=\"block\" />\n    </>\n  )\n}\n\nexport default memo(ActionMockPanel)\n","import { css } from \"@emotion/react\"\nimport { globalColor, illaPrefix } from \"@illa-design/react\"\n\nexport const actionEventHandlerStyle = css`\n  border-top: 1px solid ${globalColor(`--${illaPrefix}-grayBlue-08`)};\n  height: 39px;\n  padding-top: 16px;\n  padding-left: 16px;\n  font-size: 14px;\n  font-weight: 500;\n  text-align: left;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-04`)};\n`\n\nexport const actionEventHandlerWrapperStyle = css`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`\n","import { ActionContent } from \"@illa-public/public-types\"\nimport { klona } from \"klona/json\"\nimport { FC, Suspense, useCallback } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { TriggerProvider } from \"@illa-design/react\"\nimport {\n  actionEventHandlerStyle,\n  actionEventHandlerWrapperStyle,\n} from \"@/page/App/components/Actions/ActionPanel/ActionEventHandler/style\"\nimport RenderPanelSetter from \"@/page/App/components/InspectPanel/components/PanelSetter\"\nimport { SelectedProvider } from \"@/page/App/components/InspectPanel/context/selectedContext\"\nimport { getCachedAction } from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { getNewWidgetPropsByUpdateSlice } from \"@/utils/componentNode\"\nimport { isObject } from \"@/utils/typeHelper\"\nimport {\n  actionFailedEventHandlerConfig,\n  actionSuccessEventHandlerConfig,\n} from \"@/widgetLibrary/PublicSector/utils/generatorEventHandlerConfig\"\n\nexport const ActionEventHandler: FC = () => {\n  const { t } = useTranslation()\n  const action = useSelector(getCachedAction)\n  const dispatch = useDispatch()\n\n  const handleUpdateDsl = useCallback(\n    (attrPath: string, value: any) => {\n      if (action != undefined) {\n        const newActionContent = klona(action.content || {})\n\n        const updateSlice: Record<string, unknown> = { [attrPath]: value }\n\n        const result = getNewWidgetPropsByUpdateSlice(\n          updateSlice,\n          newActionContent as unknown as Record<string, unknown>,\n        ) as unknown as ActionContent\n        dispatch(\n          configActions.updateCachedAction({\n            ...action,\n            content: result,\n          }),\n        )\n      }\n    },\n    [action, dispatch],\n  )\n\n  const handleUpdateMultiAttrDSL = useCallback(\n    (updateSlice: Record<string, unknown>) => {\n      if (!isObject(updateSlice) || action == undefined) return\n      const newActionContent = klona(action.content || {})\n      const result = getNewWidgetPropsByUpdateSlice(\n        updateSlice,\n        newActionContent as unknown as Record<string, unknown>,\n      ) as unknown as ActionContent\n      dispatch(\n        configActions.updateCachedAction({\n          ...action,\n          content: result,\n        }),\n      )\n    },\n    [action, dispatch],\n  )\n\n  // keep empty\n  const handleUpdateOtherMultiAttrDSL = useCallback(\n    (_displayName: string, _updateSlice: Record<string, unknown>) => {\n      return\n    },\n    [],\n  )\n\n  return (\n    <Suspense>\n      <TriggerProvider renderInBody zIndex={10}>\n        <div css={actionEventHandlerWrapperStyle}>\n          <div css={actionEventHandlerStyle}>\n            {t(\"editor.action.panel.label.event_handler\")}\n          </div>\n          {action && (\n            <SelectedProvider\n              widgetType={action.actionType}\n              widgetDisplayName={action.displayName}\n              widgetParentDisplayName=\"\"\n              widgetProps={action.content || {}}\n              handleUpdateDsl={handleUpdateDsl}\n              handleUpdateMultiAttrDSL={handleUpdateMultiAttrDSL}\n              handleUpdateOtherMultiAttrDSL={handleUpdateOtherMultiAttrDSL}\n              widgetOrAction=\"ACTION\"\n            >\n              <RenderPanelSetter\n                config={actionSuccessEventHandlerConfig}\n                displayName={action.displayName}\n                parentAttrName=\"\"\n              />\n              <RenderPanelSetter\n                config={actionFailedEventHandlerConfig}\n                displayName={action.displayName}\n                parentAttrName=\"\"\n              />\n            </SelectedProvider>\n          )}\n        </div>\n      </TriggerProvider>\n    </Suspense>\n  )\n}\n\nActionEventHandler.displayName = \"ActionEventHandler\"\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const createNewStyle = css`\n  color: ${getColor(\"techPurple\", \"03\")};\n`\n\nexport const itemContainer = css`\n  width: 100%;\n  display: flex;\n  align-items: center;\n`\n\nexport const itemLogo = css`\n  flex-shrink: 0;\n`\n\nexport const itemText = css`\n  margin-left: 8px;\n  flex-shrink: 1;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  flex-grow: 1;\n`\n","import { getIconFromResourceType } from \"@illa-public/icon\"\nimport { getInitialContent } from \"@illa-public/public-configs\"\nimport { FC, Suspense } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport {\n  AddIcon,\n  PenIcon,\n  Select,\n  Space,\n  globalColor,\n  illaPrefix,\n} from \"@illa-design/react\"\nimport {\n  getCachedAction,\n  getSelectedAction,\n} from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { getAllResources } from \"@/redux/resource/resourceSelector\"\nimport { createNewStyle, itemContainer, itemLogo, itemText } from \"./style\"\n\ninterface ResourceChooseProps {\n  setGeneratorVisible: (v: boolean) => void\n  setEditorVisible: (v: boolean) => void\n}\n\nconst ResourceChoose: FC<ResourceChooseProps> = ({\n  setGeneratorVisible,\n  setEditorVisible,\n}) => {\n  const { t } = useTranslation()\n  const dispatch = useDispatch()\n\n  const resourceList = useSelector(getAllResources)\n  const action = useSelector(getCachedAction)!!\n  const selectedAction = useSelector(getSelectedAction)!!\n\n  //maybe empty\n  const currentSelectResource = resourceList.find(\n    (r) => r.resourceID === action.resourceID,\n  )\n\n  const options = resourceList.map((item) => ({\n    label: (\n      <div css={itemContainer}>\n        <span css={itemLogo}>\n          <Suspense>\n            {getIconFromResourceType(item.resourceType, \"14px\")}\n          </Suspense>\n        </span>\n        <span css={itemText}>{item.resourceName}</span>\n      </div>\n    ),\n    value: item.resourceID,\n  }))\n  options.unshift({\n    label: (\n      <Space\n        size=\"8px\"\n        direction=\"horizontal\"\n        alignItems=\"center\"\n        css={createNewStyle}\n      >\n        <AddIcon size=\"14px\" />\n        {t(\"editor.action.panel.option.resource.new\")}\n      </Space>\n    ),\n    value: \"create\",\n  })\n\n  return (\n    <Select\n      w=\"360px\"\n      colorScheme=\"techPurple\"\n      options={options}\n      value={\n        currentSelectResource\n          ? action.resourceID\n          : t(\"editor.action.resource_choose.deleted\")\n      }\n      onChange={(value) => {\n        if (value === \"create\") {\n          setGeneratorVisible(true)\n          return\n        }\n        const resource = resourceList.find((r) => r.resourceID === value)\n        if (resource != undefined) {\n          dispatch(\n            configActions.updateCachedAction({\n              ...action,\n              // selected resource is same as action type\n              actionType: resource.resourceType,\n              resourceID: value as string,\n              content:\n                selectedAction.actionType === resource.resourceType\n                  ? selectedAction.content\n                  : getInitialContent(resource.resourceType),\n            }),\n          )\n        }\n      }}\n      addAfter={\n        <PenIcon\n          style={\n            currentSelectResource\n              ? { cursor: \"pointer\" }\n              : { cursor: \"not-allowed\" }\n          }\n          color={globalColor(`--${illaPrefix}-grayBlue-04`)}\n          onClick={(e) => {\n            e.stopPropagation()\n            if (currentSelectResource) {\n              setEditorVisible(true)\n            }\n          }}\n        />\n      }\n    />\n  )\n}\n\nexport default ResourceChoose\n","import { ILLA_MIXPANEL_EVENT_TYPE } from \"@illa-public/mixpanel-utils\"\nimport {\n  ACTION_RUN_TIME,\n  ActionTriggerMode,\n  IAdvancedConfig,\n} from \"@illa-public/public-types\"\nimport { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { Select } from \"@illa-design/react\"\nimport { getCachedAction } from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { trackInEditor } from \"@/utils/mixpanelHelper\"\n\nconst TriggerModeChoose: FC = () => {\n  const { t } = useTranslation()\n  const dispatch = useDispatch()\n  const action = useSelector(getCachedAction)!!\n  return (\n    <Select\n      ml=\"8px\"\n      colorScheme=\"techPurple\"\n      value={action.triggerMode}\n      w=\"360px\"\n      onChange={(value) => {\n        dispatch(\n          configActions.updateCachedAction({\n            ...action,\n            triggerMode: value as ActionTriggerMode,\n          }),\n        )\n        let updateSlice: Partial<IAdvancedConfig> = {}\n        if (value === \"manually\") {\n          updateSlice = {\n            runtime: ACTION_RUN_TIME.NONE,\n            pages: [],\n            delayWhenLoaded: \"\",\n            displayLoadingPage: false,\n          }\n        }\n        if (value === \"automate\") {\n          updateSlice = {\n            runtime: ACTION_RUN_TIME.APP_LOADED,\n            pages: [],\n            delayWhenLoaded: \"\",\n            displayLoadingPage: false,\n          }\n        }\n        dispatch(\n          configActions.updateCachedActionAdvancedConfigReducer(updateSlice),\n        )\n      }}\n      onClick={() => {\n        trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n          element: \"action_edit_auto_run\",\n        })\n      }}\n      options={[\n        {\n          label: t(\"editor.action.panel.option.trigger.manually\"),\n          value: \"manually\",\n        },\n        {\n          label: t(\"editor.action.panel.option.trigger.on_change\"),\n          value: \"automate\",\n        },\n      ]}\n    />\n  )\n}\n\nexport default TriggerModeChoose\n","import { css } from \"@emotion/react\"\nimport { globalColor, illaPrefix } from \"@illa-design/react\"\n\nexport const resourceChooseContainerStyle = css`\n  display: flex;\n  align-items: center;\n  padding: 8px 16px;\n  width: 100%;\n  overflow-x: auto;\n  flex-direction: row;\n`\n\nexport const resourceTitleStyle = css`\n  flex-grow: 1;\n  font-size: 14px;\n  font-weight: 500;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-02`)};\n`\n\nexport const resourceEndStyle = css`\n  justify-content: flex-end;\n  flex-grow: 1;\n  margin-left: 16px;\n  display: flex;\n  flex-shrink: 1;\n  flex-direction: row;\n`\n\nexport const spaceStyle = css`\n  border-bottom: 1px solid ${globalColor(`--${illaPrefix}-grayBlue-08`)};\n`\n","import {\n  ILLA_MIXPANEL_BUILDER_PAGE_NAME,\n  MixpanelTrackProvider,\n} from \"@illa-public/mixpanel-utils\"\nimport { getInitialContent } from \"@illa-public/public-configs\"\nimport { Resource } from \"@illa-public/public-types\"\nimport {\n  ACTION_MODAL_WIDTH,\n  ResourceCreator,\n  ResourceGenerator,\n  ResourceGeneratorProvider,\n} from \"@illa-public/resource-generator\"\nimport { FC, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { Modal, Space, TriggerProvider } from \"@illa-design/react\"\nimport {\n  getCachedAction,\n  getSelectedAction,\n} from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { getAllResources } from \"@/redux/resource/resourceSelector\"\nimport { resourceActions } from \"@/redux/resource/resourceSlice\"\nimport { track } from \"@/utils/mixpanelHelper\"\nimport ResourceChoose from \"./ResourceChoose\"\nimport TriggerModeChoose from \"./TriggerModeChoose\"\nimport {\n  resourceChooseContainerStyle,\n  resourceEndStyle,\n  resourceTitleStyle,\n  spaceStyle,\n} from \"./style\"\n\nconst PanelHeader: FC = () => {\n  const { t } = useTranslation()\n  const [editorVisible, setEditorVisible] = useState(false)\n  const [generatorVisible, setGeneratorVisible] = useState(false)\n  const resourceList = useSelector(getAllResources)\n\n  const action = useSelector(getCachedAction)!!\n  const selectedAction = useSelector(getSelectedAction)!!\n\n  const dispatch = useDispatch()\n\n  const createOrUpdateResourceCallback = (\n    resource: Resource,\n    isUpdate: boolean,\n  ) => {\n    setEditorVisible(false)\n    setGeneratorVisible(false)\n    if (isUpdate) {\n      dispatch(resourceActions.updateResourceItemReducer(resource))\n    } else {\n      dispatch(resourceActions.addResourceItemReducer(resource))\n      dispatch(\n        configActions.updateCachedAction({\n          ...action,\n          actionType: resource.resourceType,\n          resourceID: resource.resourceID,\n          content:\n            selectedAction.actionType === resource.resourceType\n              ? selectedAction.content\n              : getInitialContent(resource.resourceType),\n        }),\n      )\n    }\n  }\n\n  return (\n    <MixpanelTrackProvider\n      basicTrack={track}\n      pageName={ILLA_MIXPANEL_BUILDER_PAGE_NAME.EDITOR}\n    >\n      <ResourceGeneratorProvider\n        allResource={resourceList}\n        createOrUpdateResourceCallback={createOrUpdateResourceCallback}\n      >\n        <TriggerProvider renderInBody zIndex={10}>\n          <div css={resourceChooseContainerStyle}>\n            <span css={resourceTitleStyle}>{t(\"resources\")}</span>\n            <div css={resourceEndStyle}>\n              <ResourceChoose\n                setGeneratorVisible={setGeneratorVisible}\n                setEditorVisible={setEditorVisible}\n              />\n              <TriggerModeChoose />\n            </div>\n          </div>\n          <Space w=\"100%\" h=\"8px\" css={spaceStyle} disp=\"block\" />\n          <Modal\n            w={`${ACTION_MODAL_WIDTH}px`}\n            visible={editorVisible}\n            footer={false}\n            closable\n            withoutLine\n            withoutPadding\n            maskClosable={false}\n            onCancel={() => {\n              setEditorVisible(false)\n            }}\n          >\n            <ResourceCreator\n              resourceID={action.resourceID}\n              onBack={() => {\n                setEditorVisible(false)\n              }}\n            />\n          </Modal>\n          <ResourceGenerator\n            visible={generatorVisible}\n            onClose={() => {\n              setGeneratorVisible(false)\n            }}\n          />\n        </TriggerProvider>\n      </ResourceGeneratorProvider>\n    </MixpanelTrackProvider>\n  )\n}\n\nexport default PanelHeader\n","import { css } from \"@emotion/react\"\nimport { globalColor, illaPrefix } from \"@illa-design/react\"\n\nexport const resourceChooseContainerStyle = css`\n  display: flex;\n  align-items: center;\n  padding: 8px 16px;\n  width: 100%;\n  overflow-x: auto;\n  flex-direction: row;\n`\n\nexport const spaceStyle = css`\n  border-bottom: 1px solid ${globalColor(`--${illaPrefix}-grayBlue-08`)};\n`\n\nexport const resourceTitleStyle = css`\n  flex-grow: 1;\n  font-size: 14px;\n  font-weight: 500;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-02`)};\n`\n\nexport const resourceEndStyle = css`\n  justify-content: flex-end;\n  flex-grow: 1;\n  margin-left: 16px;\n  display: flex;\n  flex-shrink: 1;\n  flex-direction: row;\n`\n\nexport const itemContainer = css`\n  width: 100%;\n  display: flex;\n  align-items: center;\n`\n\nexport const itemText = css`\n  margin-left: 8px;\n  flex-shrink: 1;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  flex-grow: 1;\n`\n","import { ILLA_MIXPANEL_EVENT_TYPE } from \"@illa-public/mixpanel-utils\"\nimport {\n  ACTION_RUN_TIME,\n  ActionTriggerMode,\n  AiAgentActionContent,\n  IAdvancedConfig,\n} from \"@illa-public/public-types\"\nimport { ActionItem } from \"@illa-public/public-types\"\nimport { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { Select, Space, TriggerProvider } from \"@illa-design/react\"\nimport { getAgentIcon } from \"@/page/App/components/Actions/getIcon\"\nimport { getDashboardTeamAIAgentList } from \"@/redux/aiAgent/dashboardTeamAIAgentSelector\"\nimport {\n  getCachedAction,\n  getSelectedAction,\n} from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { trackInEditor } from \"@/utils/mixpanelHelper\"\nimport {\n  itemContainer,\n  itemText,\n  resourceChooseContainerStyle,\n  resourceEndStyle,\n  resourceTitleStyle,\n  spaceStyle,\n} from \"./style\"\n\nexport const AIAgentResourceChoose: FC = () => {\n  const { t } = useTranslation()\n  const dispatch = useDispatch()\n\n  const agentList = useSelector(getDashboardTeamAIAgentList)\n  const action = useSelector(getCachedAction)!!\n  const selectedAction = useSelector(getSelectedAction)!!\n\n  //maybe empty\n  const currentSelectResource = agentList.find(\n    (r) => r.aiAgentID === action.resourceID,\n  )\n\n  const options = agentList.map((item) => ({\n    label: (\n      <>\n        <div css={itemContainer}>\n          {getAgentIcon(item, \"14px\")}\n          <span css={itemText}>{item.name}</span>\n        </div>\n      </>\n    ),\n    value: item.aiAgentID,\n  }))\n\n  return (\n    <TriggerProvider renderInBody zIndex={10}>\n      <div css={resourceChooseContainerStyle}>\n        <span css={resourceTitleStyle}>{t(\"resources\")}</span>\n        <div css={resourceEndStyle}>\n          <Select\n            w=\"360px\"\n            colorScheme=\"techPurple\"\n            value={\n              currentSelectResource\n                ? action.resourceID\n                : t(\"editor.action.resource_choose.deleted\")\n            }\n            onChange={(value) => {\n              const resource = agentList.find((r) => r.aiAgentID === value)\n              if (resource != undefined) {\n                dispatch(\n                  configActions.updateCachedAction({\n                    ...action,\n                    // selected resource is same as action type\n                    actionType: \"aiagent\",\n                    resourceID: value as string,\n                    content: {\n                      ...selectedAction.content,\n                      virtualResource: resource,\n                    },\n                  } as ActionItem<AiAgentActionContent>),\n                )\n              }\n            }}\n            options={options}\n          />\n          <Select\n            ml=\"8px\"\n            w=\"360px\"\n            colorScheme=\"techPurple\"\n            value={action.triggerMode}\n            onChange={(value) => {\n              dispatch(\n                configActions.updateCachedAction({\n                  ...action,\n                  triggerMode: value as ActionTriggerMode,\n                }),\n              )\n              let updateSlice: Partial<IAdvancedConfig> = {}\n              if (value === \"manually\") {\n                updateSlice = {\n                  runtime: ACTION_RUN_TIME.NONE,\n                  pages: [],\n                  delayWhenLoaded: \"\",\n                  displayLoadingPage: false,\n                }\n              }\n              if (value === \"automate\") {\n                updateSlice = {\n                  runtime: ACTION_RUN_TIME.APP_LOADED,\n                  pages: [],\n                  delayWhenLoaded: \"\",\n                  displayLoadingPage: false,\n                }\n              }\n              dispatch(\n                configActions.updateCachedActionAdvancedConfigReducer(\n                  updateSlice,\n                ),\n              )\n            }}\n            onClick={() => {\n              trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n                element: \"action_edit_auto_run\",\n              })\n            }}\n            options={[\n              {\n                label: t(\"editor.action.panel.option.trigger.manually\"),\n                value: \"manually\",\n              },\n              {\n                label: t(\"editor.action.panel.option.trigger.on_change\"),\n                value: \"automate\",\n              },\n            ]}\n          />\n        </div>\n      </div>\n      <Space w=\"100%\" h=\"8px\" css={spaceStyle} disp=\"block\" />\n    </TriggerProvider>\n  )\n}\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const mockOperationContainerStyle = css`\n  display: flex;\n  padding: 8px 16px;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport const mockOperationTitleStyle = css`\n  color: ${getColor(\"grayBlue\", \"02\")};\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 22px;\n`\n","import { FC, memo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch } from \"react-redux\"\nimport { RadioGroup } from \"@illa-design/react\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { MockOperationProps } from \"./interface\"\nimport { mockOperationContainerStyle, mockOperationTitleStyle } from \"./style\"\n\nconst MockOperation: FC<MockOperationProps> = (props) => {\n  const dispatch = useDispatch()\n  const { t } = useTranslation()\n\n  const handleChangeDataType = (value: boolean) => {\n    dispatch(\n      configActions.updateCachedActionMockConfigReducer({\n        enabled: value,\n      }),\n    )\n  }\n\n  return (\n    <div css={mockOperationContainerStyle}>\n      <span css={mockOperationTitleStyle}>\n        {t(\"editor.action.panel.option.mock.data_label\")}\n      </span>\n      <RadioGroup\n        type=\"button\"\n        options={[\n          {\n            label: t(\"editor.action.panel.option.mock.data_production\"),\n            value: false,\n          },\n          {\n            label: t(\"editor.action.panel.option.mock.data_mock\"),\n            value: true,\n          },\n        ]}\n        size=\"medium\"\n        onChange={handleChangeDataType}\n        value={props.enableMock}\n        colorScheme=\"techPurple\"\n      />\n    </div>\n  )\n}\n\nexport default memo(MockOperation)\n","export const NO_OPTIONS_HEADER = [\"transformer\", \"globalData\"]\nexport const NO_EVENT_HANDLER = [\"transformer\", \"globalData\"]\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const actionContainerStyle = css`\n  display: flex;\n  flex-direction: column;\n`\n\nexport const spaceStyle = css`\n  border-bottom: 1px solid ${getColor(\"grayBlue\", \"08\")};\n`\n\nexport const headerOptionContainerStyle = css`\n  display: flex;\n  padding: 8px 16px;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport const headerOptionTitleStyle = css`\n  color: ${getColor(\"grayBlue\", \"02\")};\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 22px;\n`\n","import { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { Space } from \"@illa-design/react\"\nimport { ActionEventHandler } from \"@/page/App/components/Actions/ActionPanel/ActionEventHandler\"\nimport PanelHeader from \"@/page/App/components/Actions/ActionPanel/PanelHeader\"\nimport { AIAgentResourceChoose } from \"@/page/App/components/Actions/ActionPanel/PanelHeader/AIAgentResourceChoose\"\nimport MockOperation from \"@/page/App/components/Actions/ActionPanel/PanelHeader/MockOperation\"\nimport TriggerModeChoose from \"@/page/App/components/Actions/ActionPanel/PanelHeader/TriggerModeChoose\"\nimport { NO_EVENT_HANDLER, NO_OPTIONS_HEADER } from \"./constants\"\nimport { GeneralPanelLayoutProps } from \"./interface\"\nimport {\n  actionContainerStyle,\n  headerOptionContainerStyle,\n  headerOptionTitleStyle,\n  spaceStyle,\n} from \"./style\"\n\nconst MockPanelHeader: FC = () => {\n  const { t } = useTranslation()\n  return (\n    <>\n      <div css={headerOptionContainerStyle}>\n        <span css={headerOptionTitleStyle}>\n          {t(\"editor.action.panel.option.trigger.label\")}\n        </span>\n        <TriggerModeChoose />\n      </div>\n      <Space w=\"100%\" h=\"8px\" css={spaceStyle} disp=\"block\" />\n    </>\n  )\n}\n\nconst DataPanelHeader: FC<Pick<GeneralPanelLayoutProps, \"actionType\">> = ({\n  actionType,\n}) => {\n  const { t } = useTranslation()\n  switch (actionType) {\n    case \"aiagent\": {\n      return <AIAgentResourceChoose />\n    }\n    case \"illadrive\": {\n      return (\n        <>\n          <div css={headerOptionContainerStyle}>\n            <span css={headerOptionTitleStyle}>\n              {t(\"editor.action.panel.option.trigger.label\")}\n            </span>\n            <TriggerModeChoose />\n          </div>\n          <Space w=\"100%\" h=\"8px\" css={spaceStyle} disp=\"block\" />\n        </>\n      )\n    }\n    case \"transformer\":\n    case \"globalData\":\n      return null\n    default: {\n      return <PanelHeader />\n    }\n  }\n}\n\nconst GeneralPanelLayout: FC<GeneralPanelLayoutProps> = ({\n  actionType,\n  mockEnabled,\n  children,\n}) => {\n  if (!actionType) return null\n  return (\n    <>\n      {!NO_OPTIONS_HEADER.includes(actionType) && (\n        <MockOperation enableMock={!!mockEnabled} />\n      )}\n      <div css={actionContainerStyle}>\n        {mockEnabled ? (\n          <MockPanelHeader />\n        ) : (\n          <DataPanelHeader actionType={actionType} />\n        )}\n        {children}\n        {!NO_EVENT_HANDLER.includes(actionType) && <ActionEventHandler />}\n      </div>\n    </>\n  )\n}\n\nexport default GeneralPanelLayout\n","import {\n  ILLAProperties,\n  ILLA_MIXPANEL_EVENT_TYPE,\n  ILLA_MIXPANEL_PUBLIC_PAGE_NAME,\n  ILLA_PAGE_NAME,\n  MixpanelTrackProvider,\n} from \"@illa-public/mixpanel-utils\"\nimport { INIT_ACTION_MOCK_CONFIG } from \"@illa-public/public-configs\"\nimport { Suspense, lazy } from \"react\"\nimport { FC, useCallback, useMemo, useState } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { ActionResult } from \"@/page/App/components/Actions/ActionPanel/ActionResult\"\nimport { ActionTitleBar } from \"@/page/App/components/Actions/ActionPanel/ActionTitleBar\"\nimport {\n  actionContentStyle,\n  actionPanelContainerStyle,\n  actionPanelStyle,\n  outterActionContainerStyle,\n} from \"@/page/App/components/Actions/ActionPanel/style\"\nimport {\n  getCachedAction,\n  getSelectedAction,\n} from \"@/redux/config/configSelector\"\nimport { trackInEditor } from \"@/utils/mixpanelHelper\"\nimport WidgetLoading from \"@/widgetLibrary/PublicSector/WidgetLoading\"\nimport { SQLModeTipProvider } from \"../Context/SqlModeTipContext\"\nimport ActionMockPanel from \"./ActionMockPanel\"\nimport GeneralPanelLayout from \"./Layout/GeneralPanelLayout\"\n\nconst AdvancedPanel = lazy(\n  () => import(\"@/page/App/components/Actions/AdvancedPanel\"),\n)\n\nconst AirtablePanel = lazy(\n  () => import(\"@/page/App/components/Actions/ActionPanel/AirtablePanel\"),\n)\nconst AppwritePanel = lazy(\n  () => import(\"@/page/App/components/Actions/ActionPanel/AppwritePanel\"),\n)\nconst CouchDBPanel = lazy(\n  () => import(\"@/page/App/components/Actions/ActionPanel/CouchDBPanel\"),\n)\nconst DynamoDBPanel = lazy(\n  () => import(\"@/page/App/components/Actions/ActionPanel/DynamoDBPanel\"),\n)\nconst ElasticSearchPanel = lazy(\n  () => import(\"@/page/App/components/Actions/ActionPanel/ElasticSearchPanel\"),\n)\nconst FirebasePanel = lazy(\n  () => import(\"@/page/App/components/Actions/ActionPanel/FirebasePanel\"),\n)\nconst GoogleSheetsPanel = lazy(\n  () => import(\"@/page/App/components/Actions/ActionPanel/GoogleSheetsPanel\"),\n)\nconst GraphQLPanel = lazy(\n  () => import(\"@/page/App/components/Actions/ActionPanel/GraphQLPanel\"),\n)\nconst HuggingFaceEndpointPanel = lazy(\n  () =>\n    import(\n      \"@/page/App/components/Actions/ActionPanel/HuggingFaceEndpointPanel\"\n    ),\n)\nconst HuggingFacePanel = lazy(\n  () => import(\"@/page/App/components/Actions/ActionPanel/HuggingFacePanel\"),\n)\nconst MicrosoftSqlPanel = lazy(\n  () => import(\"@/page/App/components/Actions/ActionPanel/MicrosoftSqlPanel\"),\n)\nconst MongoDbPanel = lazy(\n  () => import(\"@/page/App/components/Actions/ActionPanel/MongoDbPanel\"),\n)\nconst MysqlLikePanel = lazy(\n  () => import(\"@/page/App/components/Actions/ActionPanel/MysqlLikePanel\"),\n)\nconst OracleDBPanel = lazy(\n  () => import(\"@/page/App/components/Actions/ActionPanel/OracleDBPanel\"),\n)\nconst RedisPanel = lazy(\n  () => import(\"@/page/App/components/Actions/ActionPanel/RedisPanel\"),\n)\nconst RestApiPanel = lazy(\n  () => import(\"@/page/App/components/Actions/ActionPanel/RestApiPanel\"),\n)\nconst S3Panel = lazy(\n  () => import(\"@/page/App/components/Actions/ActionPanel/S3Panel\"),\n)\nconst SMTPPanel = lazy(\n  () => import(\"@/page/App/components/Actions/ActionPanel/SMTPPanel\"),\n)\nconst TransformerPanel = lazy(\n  () => import(\"@/page/App/components/Actions/ActionPanel/TransformerPanel\"),\n)\nconst AIAgentPanel = lazy(\n  () => import(\"@/page/App/components/Actions/ActionPanel/AIAgentPanel\"),\n)\n\nconst GlobalDataPanel = lazy(\n  () => import(\"@/page/App/components/Actions/ActionPanel/GlobalDataPanel\"),\n)\n\nconst ILLADrivePanel = lazy(\n  () => import(\"@/page/App/components/Actions/ActionPanel/ILLADrivePanel\"),\n)\n\nexport const ActionPanel: FC = () => {\n  const cachedAction = useSelector(getCachedAction)\n  const selectedAction = useSelector(getSelectedAction)!\n\n  const [resultVisible, setResultVisible] = useState(false)\n  const [activeKey, setActiveKey] = useState(\"general\")\n\n  const handleClickChangeTab = useCallback(\n    (activeKey: string) => {\n      setActiveKey(activeKey)\n      if (activeKey === \"advanced\") {\n        trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n          element: \"advanced_tab\",\n          parameter1: cachedAction?.actionType,\n          parameter2: cachedAction,\n        })\n      }\n      if (activeKey === \"general\") {\n        trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n          element: \"general_tab\",\n          parameter1: cachedAction?.actionType,\n        })\n      }\n    },\n    [cachedAction],\n  )\n  const basicTrack = useCallback(() => {\n    return (\n      event: ILLA_MIXPANEL_EVENT_TYPE,\n      pageName: ILLA_PAGE_NAME,\n      properties: Omit<ILLAProperties, \"page\">,\n    ) => {\n      trackInEditor(event, {\n        parameter1: cachedAction?.actionType,\n        parameter2: cachedAction,\n        ...properties,\n      })\n    }\n  }, [cachedAction])\n\n  const mockConfig = cachedAction?.config?.mockConfig ?? INIT_ACTION_MOCK_CONFIG\n\n  const panel = useMemo(() => {\n    switch (cachedAction?.actionType) {\n      case \"clickhouse\":\n      case \"supabasedb\":\n      case \"mysql\":\n      case \"tidb\":\n      case \"mariadb\":\n      case \"postgresql\":\n      case \"snowflake\":\n      case \"neon\":\n      case \"hydra\":\n        return <MysqlLikePanel />\n      case \"mssql\":\n        return <MicrosoftSqlPanel />\n      case \"oracle\":\n      case \"oracle9i\":\n        return <OracleDBPanel />\n      case \"restapi\":\n        return <RestApiPanel />\n      case \"huggingface\":\n        return <HuggingFacePanel />\n      case \"hfendpoint\":\n        return <HuggingFaceEndpointPanel />\n      case \"redis\":\n      case \"upstash\":\n        return <RedisPanel />\n      case \"mongodb\":\n        return <MongoDbPanel />\n      case \"transformer\":\n        return <TransformerPanel />\n      case \"elasticsearch\":\n        return <ElasticSearchPanel />\n      case \"dynamodb\":\n        return <DynamoDBPanel />\n      case \"s3\":\n        return <S3Panel />\n      case \"smtp\":\n        return <SMTPPanel />\n      case \"googlesheets\":\n        return <GoogleSheetsPanel />\n      case \"firebase\":\n        return <FirebasePanel />\n      case \"graphql\":\n        return <GraphQLPanel />\n      case \"appwrite\":\n        return <AppwritePanel />\n      case \"couchdb\":\n        return <CouchDBPanel />\n      case \"airtable\":\n        return <AirtablePanel />\n      case \"aiagent\":\n        return <AIAgentPanel />\n      case \"globalData\":\n        return <GlobalDataPanel />\n      case \"illadrive\":\n        return <ILLADrivePanel />\n      default:\n        return <></>\n    }\n  }, [cachedAction])\n\n  if (!cachedAction) {\n    return <></>\n  }\n\n  return (\n    <div css={actionPanelStyle}>\n      <SQLModeTipProvider>\n        <div css={actionPanelContainerStyle}>\n          <ActionTitleBar\n            onResultVisibleChange={(visible) => {\n              setResultVisible(visible)\n            }}\n            openState={resultVisible}\n            activeTab={activeKey}\n            handleChangeTab={handleClickChangeTab}\n          />\n          <Suspense fallback={<WidgetLoading />}>\n            {activeKey === \"general\" && (\n              <div css={outterActionContainerStyle}>\n                <GeneralPanelLayout\n                  actionType={cachedAction?.actionType}\n                  mockEnabled={mockConfig?.enabled}\n                >\n                  {mockConfig?.enabled ? (\n                    <ActionMockPanel\n                      enableForReleasedApp={mockConfig.enableForReleasedApp}\n                      mockData={mockConfig.mockData}\n                    />\n                  ) : (\n                    <div css={actionContentStyle}>{panel}</div>\n                  )}\n                </GeneralPanelLayout>\n              </div>\n            )}\n            {activeKey === \"advanced\" && (\n              <MixpanelTrackProvider\n                basicTrack={basicTrack}\n                pageName={ILLA_MIXPANEL_PUBLIC_PAGE_NAME.PLACEHOLDER}\n              >\n                <AdvancedPanel />\n              </MixpanelTrackProvider>\n            )}\n          </Suspense>\n          {resultVisible && (\n            <ActionResult\n              key={selectedAction?.actionID}\n              visible={resultVisible}\n              onClose={() => {\n                setResultVisible(false)\n              }}\n            />\n          )}\n        </div>\n      </SQLModeTipProvider>\n    </div>\n  )\n}\n\nActionPanel.displayName = \"ActionPanel\"\n","import {\n  ILLA_MIXPANEL_BUILDER_PAGE_NAME,\n  MixpanelTrackProvider,\n} from \"@illa-public/mixpanel-utils\"\nimport { FC, useRef } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { Divider } from \"@illa-design/react\"\nimport ActionGuidePanel from \"@/page/App/components/Actions/ActionGuidePanel\"\nimport { ActionList } from \"@/page/App/components/Actions/ActionList\"\nimport { ActionPanel } from \"@/page/App/components/Actions/ActionPanel\"\nimport { DragBar } from \"@/page/App/components/Actions/DragBar\"\nimport { getActionMixedList } from \"@/redux/currentApp/action/actionSelector\"\nimport { FocusManager } from \"@/utils/focusManager\"\nimport { resourceContextHelper } from \"@/utils/mixpanelHelper\"\nimport { applyActionEditorStyle, contentContainerStyle } from \"./styles\"\n\nconst ActionEditorDefaultHeight = 320\n\nexport const ActionEditor: FC = () => {\n  const panelRef = useRef<HTMLDivElement | null>(null)\n  const actionLists = useSelector(getActionMixedList)\n\n  return (\n    <div\n      css={applyActionEditorStyle(ActionEditorDefaultHeight)}\n      onClick={() => {\n        FocusManager.switchFocus(\"action\")\n      }}\n      ref={panelRef}\n      data-onboarding-action=\"actionEditor\"\n    >\n      <DragBar resizeRef={panelRef} minHeight={ActionEditorDefaultHeight} />\n      <Divider direction=\"horizontal\" />\n      <div css={contentContainerStyle}>\n        <MixpanelTrackProvider\n          basicTrack={resourceContextHelper(\"editor_new\")}\n          pageName={ILLA_MIXPANEL_BUILDER_PAGE_NAME.EDITOR}\n        >\n          <ActionList />\n        </MixpanelTrackProvider>\n        {actionLists.length > 0 ? (\n          <MixpanelTrackProvider\n            pageName={ILLA_MIXPANEL_BUILDER_PAGE_NAME.EDITOR}\n            basicTrack={resourceContextHelper(\"editor_resource_new\")}\n          >\n            <ActionPanel />\n          </MixpanelTrackProvider>\n        ) : (\n          <ActionGuidePanel />\n        )}\n      </div>\n    </div>\n  )\n}\n\nActionEditor.displayName = \"ActionEditor\"\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\nimport { RIGHT_PANEL_WIDTH } from \"@/style\"\n\nexport const componentPanelCss = css`\n  display: inline-flex;\n  justify-content: center;\n`\n\nexport const menuHeaderWrapperStyle = css`\n  display: flex;\n  width: 100%;\n  padding: 13px 12px;\n  gap: 10px;\n`\n\nexport const applyTabItemStyle = (isActive: boolean) => css`\n  padding: 1px 4px;\n  height: 24px;\n  border-radius: 4px;\n  font-size: 14px;\n  cursor: pointer;\n  font-weight: ${isActive ? 500 : 400};\n  color: ${isActive ? getColor(\"grayBlue\", \"02\") : getColor(\"grayBlue\", \"03\")};\n  :hover {\n    background-color: ${getColor(\"grayBlue\", \"09\")};\n  }\n`\n\nexport const containerStyle = css`\n  box-sizing: border-box;\n  width: ${RIGHT_PANEL_WIDTH}px;\n  flex: none;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  border-left: 1px solid ${getColor(\"grayBlue\", \"08\")};\n  background: ${getColor(\"white\", \"01\")};\n  position: relative;\n`\n","import { ILLA_MIXPANEL_EVENT_TYPE } from \"@illa-public/mixpanel-utils\"\nimport { FC, Suspense, useEffect, useRef, useState } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { SimpleTabs, getRenderBody } from \"@/components/Tabs\"\nimport { COMPONENT_MANAGER_TABS } from \"@/components/Tabs/constant\"\nimport { getSelectedComponentDisplayNames } from \"@/redux/config/configSelector\"\nimport { getCurrentPageDisplayName } from \"@/redux/currentApp/executionTree/executionSelector\"\nimport { FocusManager } from \"@/utils/focusManager\"\nimport { trackInEditor } from \"@/utils/mixpanelHelper\"\nimport WidgetLoading from \"@/widgetLibrary/PublicSector/WidgetLoading\"\nimport { containerStyle } from \"./style\"\n\nexport const ComponentsManager: FC = () => {\n  const [activeKey, setActiveKey] = useState(\"Insert\")\n\n  const selectedDisplayNames = useSelector(getSelectedComponentDisplayNames)\n  const currentPageDisplayName = useSelector(getCurrentPageDisplayName)\n  const prevPageDisplayName = useRef<string>(currentPageDisplayName)\n  const isClickChange = useRef<boolean>(false)\n\n  useEffect(() => {\n    if (!isClickChange.current) {\n      if (selectedDisplayNames.length > 0) {\n        setActiveKey(\"Inspect\")\n      } else {\n        if (activeKey === \"Page\") {\n          setActiveKey(\"Page\")\n        }\n        if (activeKey === \"Inspect\") {\n          setActiveKey(\"Insert\")\n        }\n      }\n    }\n    if (prevPageDisplayName.current !== currentPageDisplayName) {\n      prevPageDisplayName.current = currentPageDisplayName\n    }\n    isClickChange.current = false\n  }, [activeKey, currentPageDisplayName, selectedDisplayNames])\n\n  const handleClickChangeTab = (activeKey: string) => {\n    switch (activeKey) {\n      case \"Page\":\n        FocusManager.switchFocus(\"page_config\")\n        break\n      case \"Inspect\":\n        FocusManager.switchFocus(\"components_config\")\n        break\n      case \"Insert\":\n        FocusManager.switchFocus(\"widget_picker\")\n        break\n    }\n    setActiveKey(activeKey)\n    isClickChange.current = true\n    trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n      element: \"right_tab\",\n      parameter2: activeKey,\n    })\n  }\n\n  return (\n    <div css={containerStyle} data-onboarding-comp=\"componentsManager\">\n      <SimpleTabs\n        items={COMPONENT_MANAGER_TABS}\n        activeKey={activeKey}\n        handleClickChangeTab={handleClickChangeTab}\n      />\n      <Suspense fallback={<WidgetLoading />}>\n        {getRenderBody(activeKey, COMPONENT_MANAGER_TABS)}\n      </Suspense>\n    </div>\n  )\n}\n\nexport default ComponentsManager\n\nComponentsManager.displayName = \"ComponentsManager\"\n","import { css, keyframes } from \"@emotion/react\"\nimport { globalColor, illaPrefix } from \"@illa-design/react\"\nimport { leftPanelStyle, navbarStyle, rightPanelStyle } from \"@/page/App/style\"\nimport { LEFT_PANEL_WIDTH, NAVBAR_HEIGHT, RIGHT_PANEL_WIDTH } from \"@/style\"\n\nconst enlargeNavBar = keyframes`\n  0% {\n    transform: translate3d(0, -${NAVBAR_HEIGHT}px, 0);\n  }\n  100% {\n    transform: translate3d(0, 0, 0);\n  }\n`\n\nconst enlargeLeftPanel = keyframes`\n  0% {\n    transform: translate3d(-${LEFT_PANEL_WIDTH}px, 0, 0);\n  }\n  100% {\n    transform: translate3d(0, 0, 0);\n  }\n`\n\nconst enlargeRightPanel = keyframes`\n  0% {\n    transform: translate3d(${RIGHT_PANEL_WIDTH}px, 0, 0);\n  }\n  100% {\n    transform: translate3d(0, 0, 0);\n  }\n`\n\nexport const leftAnimationStyle = css`\n  ${leftPanelStyle};\n  transform: translate3d(-${LEFT_PANEL_WIDTH}px, 0, 0);\n  animation: ${enlargeLeftPanel} 300ms ease-in-out 200ms forwards;\n`\nexport const rightAnimationStyle = css`\n  ${rightPanelStyle};\n  transform: translate3d(${RIGHT_PANEL_WIDTH}px, 0, 0);\n  animation: ${enlargeRightPanel} 300ms ease-in-out 200ms forwards;\n`\n\nexport const navStyle = css`\n  ${navbarStyle};\n  background: ${globalColor(`--${illaPrefix}-white-01`)};\n  animation: ${enlargeNavBar} 300ms ease-in-out;\n  border-bottom: 1px solid ${globalColor(`--${illaPrefix}-grayBlue-08`)};\n`\n\nexport const containerStyle = css`\n  background: #fafafb;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n`\n","import { FC, HTMLAttributes, useState } from \"react\"\nimport { Loading } from \"@illa-design/react\"\nimport { contentStyle, loadingStyle } from \"@/page/App/style\"\nimport {\n  containerStyle,\n  leftAnimationStyle,\n  navStyle,\n  rightAnimationStyle,\n} from \"./style\"\n\nexport const AppLoading: FC<HTMLAttributes<HTMLDivElement>> = () => {\n  const [showLoading, setShowLoading] = useState<boolean>()\n\n  return (\n    <div css={containerStyle}>\n      <div css={navStyle} />\n      <div css={contentStyle}>\n        <div\n          css={leftAnimationStyle}\n          onAnimationEnd={() => {\n            setShowLoading(true)\n          }}\n        />\n        <div css={loadingStyle}>\n          {showLoading ? <Loading colorScheme=\"techPurple\" /> : null}\n        </div>\n        <div css={rightAnimationStyle} />\n      </div>\n    </div>\n  )\n}\n\nAppLoading.displayName = \"AppLoading\"\n","import { SerializedStyles, css } from \"@emotion/react\"\n\nexport function applyJsonValueColorStyle(\n  type: unknown,\n  canEdit?: boolean,\n): SerializedStyles {\n  let color = \"#999\"\n  switch (type) {\n    case \"number\":\n      color = \"#164\"\n      break\n    case \"boolean\":\n      color = \"#219\"\n      break\n    case \"string\":\n      color = \"#219\"\n      break\n    case \"undefined\":\n      color = \"#708\"\n      break\n    case \"function\":\n      color = \"#05a\"\n      break\n    case \"symbol\":\n      color = \"#00c\"\n      break\n    case \"bigint\":\n      color = \"#170\"\n      break\n    case \"object\":\n      color = \"#a50\"\n      break\n    default:\n      color = \"#999\"\n      break\n  }\n  return css`\n    color: ${color};\n    padding-right: ${canEdit ? \"4px\" : \"0\"};\n  `\n}\n\nexport const innerContainerStyle = css`\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n`\n","import { SerializedStyles, css } from \"@emotion/react\"\nimport { Variants } from \"framer-motion\"\nimport { globalColor, illaPrefix } from \"@illa-design/react\"\n\nexport const errorContainerStyle = css`\n  background-color: ${globalColor(`--${illaPrefix}-techPink-08`)};\n`\n\nexport const errorItemStyle = css`\n  display: flex;\n  justify-content: space-between;\n  align-items: start;\n  padding: 8px 16px;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 22px;\n  min-height: 38px;\n  z-index: 1;\n`\n\nexport const errorItemContentStyle = css`\n  display: flex;\n  align-items: start;\n`\n\nexport const nameStyle = css`\n  cursor: pointer;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-03`)};\n  margin-right: 8px;\n`\n\nexport const errorInfoStyle = css`\n  word-break: break-word;\n`\n\nexport const sourceStyle = css`\n  color: ${globalColor(`--${illaPrefix}-grayBlue-03`)};\n  text-decoration-line: underline;\n  cursor: pointer;\n\n  &:hover {\n    color: ${globalColor(`--${illaPrefix}-grayBlue-02`)};\n  }\n`\n\nexport const errorIconStyle = css`\n  flex-shrink: 0;\n  color: ${globalColor(`--${illaPrefix}-red-03`)};\n  margin-top: 3px;\n`\n\nexport const errorExpandStyle = css`\n  padding: 2px 4px;\n  margin: 5px 4px;\n`\n\nexport function applyExpandIconStyle(expanded?: boolean): SerializedStyles {\n  const rotate = expanded ? 90 : 0\n  return css`\n    display: inline-flex;\n    font-size: 8px;\n    line-height: 0;\n    cursor: pointer;\n    transform-origin: center;\n    transform: rotate(${rotate}deg);\n    transition: transform 200ms;\n  `\n}\n\nexport const jsonStyle = css`\n  padding-left: 56px;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 22px;\n`\n\nexport const errorMessageStyle = css`\n  color: ${globalColor(`--${illaPrefix}-grayBlue-02`)};\n  text-decoration-line: underline;\n  cursor: pointer;\n`\n\nexport const jsonContentAnimation: Variants = {\n  enter: {\n    height: \"unset\",\n    opacity: 1,\n    visibility: \"visible\",\n    display: \"inherit\",\n  },\n  exit: {\n    height: 0,\n    opacity: 0,\n    visibility: \"hidden\",\n    transitionEnd: {\n      display: \"none\",\n    },\n  },\n}\n","import { SerializedStyles, css } from \"@emotion/react\"\nimport { globalColor, illaPrefix } from \"@illa-design/react\"\n\nexport const jsonStyle = css`\n  font-family: \"Fira Code\", monospace;\n  padding-top: 4px;\n  padding-bottom: 6px;\n  font-size: 14px;\n  line-height: 22px;\n`\n\nexport const itemDescStyle: SerializedStyles = css`\n  display: inline-block;\n  vertical-align: bottom;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-04`)};\n  margin-left: 8px;\n`\n\nexport const jsonExpandStyle = css`\n  margin-right: 8px;\n`\n\nexport function applyLevelStyle(level: number): SerializedStyles {\n  return css`\n    margin-left: ${level * 16}px;\n  `\n}\n","import { motion } from \"framer-motion\"\nimport { FC, useState } from \"react\"\nimport { CaretRightIcon, isArray, isObject, isString } from \"@illa-design/react\"\nimport { applyJsonValueColorStyle } from \"@/page/App/Module/DataWorkspace/style\"\nimport {\n  applyExpandIconStyle,\n  jsonContentAnimation,\n} from \"@/page/App/components/Debugger/components/ErrorItem/style\"\nimport { JsonViewProps } from \"./interface\"\nimport {\n  applyLevelStyle,\n  itemDescStyle,\n  jsonExpandStyle,\n  jsonStyle,\n} from \"./style\"\n\nexport const JsonView: FC<JsonViewProps> = (props) => {\n  const { name, value, level = 0 } = props\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const type = typeof value\n  if (isObject(value) || isArray(value)) {\n    const keyArr = Object.keys(value).filter((item) => !item.startsWith(\"$\"))\n    return (\n      <>\n        <div css={jsonStyle}>\n          <span\n            css={[jsonExpandStyle, applyExpandIconStyle(isExpanded)]}\n            onClick={() => {\n              setIsExpanded(!isExpanded)\n            }}\n          >\n            <CaretRightIcon />\n          </span>\n          <span css={applyJsonValueColorStyle(\"string\")}>{`\"${name}\"`}</span>:\n          <label css={itemDescStyle}>\n            {`${isObject(value) ? \"{}\" : \"[]\"}`}&nbsp;{keyArr.length}\n            {keyArr.length > 1 ? \"keys\" : \"key\"}\n          </label>\n        </div>\n        <motion.div\n          variants={jsonContentAnimation}\n          role=\"region\"\n          animate={isExpanded ? \"enter\" : \"exit\"}\n          initial={false}\n          transition={{ duration: 0.2 }}\n        >\n          {keyArr.map((name) => (\n            <JsonView\n              key={name}\n              name={name}\n              value={value[name] as Record<string, unknown>}\n              level={level + 1}\n            />\n          ))}\n        </motion.div>\n      </>\n    )\n  }\n\n  return (\n    <div css={[jsonStyle, applyLevelStyle(level + 1)]}>\n      <span css={applyJsonValueColorStyle(\"string\")}>{`\"${name}\"`}</span>:\n      <span>\n        {isString(value) ? (\n          <span css={applyJsonValueColorStyle(type)}>{`\"${value}\"`}</span>\n        ) : (\n          <span css={applyJsonValueColorStyle(type)}>{`${value}`}</span>\n        )}\n      </span>\n    </div>\n  )\n}\n\nJsonView.displayName = \"JsonView\"\n","import { motion } from \"framer-motion\"\nimport { get } from \"lodash-es\"\nimport { FC, useCallback, useMemo, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { CaretRightIcon, ErrorCircleIcon } from \"@illa-design/react\"\nimport { JsonView } from \"@/page/App/components/Debugger/components/JsonView\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport {\n  getComponentMap,\n  searchComponentFromMap,\n} from \"@/redux/currentApp/components/componentsSelector\"\nimport { getDisplayNameAndPropertyPath } from \"@/utils/executionTreeHelper/utils\"\nimport { ErrorItemProps } from \"./interface\"\nimport {\n  applyExpandIconStyle,\n  errorContainerStyle,\n  errorExpandStyle,\n  errorIconStyle,\n  errorInfoStyle,\n  errorItemContentStyle,\n  errorItemStyle,\n  errorMessageStyle,\n  jsonContentAnimation,\n  jsonStyle,\n  nameStyle,\n  sourceStyle,\n} from \"./style\"\n\nexport const ErrorItem: FC<ErrorItemProps> = (props) => {\n  const { item, pathName } = props\n  const dispatch = useDispatch()\n  const components = useSelector(getComponentMap)\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const { displayName, attrPath } = getDisplayNameAndPropertyPath(pathName)\n\n  const attrValue = useMemo(() => {\n    const node = searchComponentFromMap(components, displayName)\n    if (node) {\n      return get(node?.props, attrPath)\n    }\n    return undefined\n  }, [components, displayName, attrPath])\n\n  const handleComponentSelect = useCallback(() => {\n    const selectedComponent = searchComponentFromMap(components, displayName)\n    if (selectedComponent) {\n      dispatch(\n        configActions.updateSelectedComponent([selectedComponent.displayName]),\n      )\n    }\n  }, [components, displayName, dispatch])\n\n  return (\n    <div css={errorContainerStyle}>\n      <div css={errorItemStyle}>\n        <div css={errorItemContentStyle}>\n          <ErrorCircleIcon size={\"16px\"} css={errorIconStyle} />\n          <span\n            css={[errorExpandStyle, applyExpandIconStyle(isExpanded)]}\n            onClick={() => {\n              setIsExpanded(!isExpanded)\n            }}\n          >\n            <CaretRightIcon />\n          </span>\n          <span css={nameStyle} onClick={handleComponentSelect}>\n            [{displayName}]\n          </span>\n          <span css={errorInfoStyle}>The value at {attrPath} is invalid</span>\n        </div>\n        <div css={sourceStyle} onClick={handleComponentSelect}>\n          {pathName}\n        </div>\n      </div>\n      <motion.div\n        css={jsonStyle}\n        variants={jsonContentAnimation}\n        role=\"region\"\n        animate={isExpanded ? \"enter\" : \"exit\"}\n        initial={false}\n        transition={{ duration: 0.2 }}\n      >\n        <div css={errorMessageStyle}>\n          {item?.errorName}: {item?.errorMessage}\n        </div>\n        <JsonView key={attrPath} name={attrPath} value={attrValue} />\n      </motion.div>\n    </div>\n  )\n}\n","import { css } from \"@emotion/react\"\nimport { globalColor, illaPrefix } from \"@illa-design/react\"\n\nexport function applyDebuggerStyle(h: number) {\n  return css`\n    position: relative;\n    width: 100%;\n    height: ${h}px;\n    display: flex;\n    flex-direction: column;\n  `\n}\n\nexport const containerStyle = css`\n  height: 100%;\n  overflow: auto;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`\n\nexport const titleStyle = css`\n  display: flex;\n  justify-content: space-between;\n  padding: 13px 16px 13px 12px;\n  box-shadow: inset 0px -1px 1px #e5e6eb;\n  font-weight: 500;\n  font-size: 14px;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-02`)};\n`\n\nexport const errorContentStyle = css`\n  width: 100%;\n`\n","import { FC, HTMLAttributes, useCallback, useRef } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { CloseIcon, Divider, isArray } from \"@illa-design/react\"\nimport { DragBar } from \"@/page/App/components/Actions/DragBar\"\nimport { ErrorItem } from \"@/page/App/components/Debugger/components/ErrorItem\"\nimport { isOpenDebugger } from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { getExecutionError } from \"@/redux/currentApp/executionTree/executionSelector\"\nimport {\n  applyDebuggerStyle,\n  containerStyle,\n  errorContentStyle,\n  titleStyle,\n} from \"./style\"\n\nconst DebuggerDefaultHeight = 300\n\nexport const Debugger: FC<HTMLAttributes<HTMLDivElement>> = (props) => {\n  const dispatch = useDispatch()\n  const panelRef = useRef<HTMLDivElement>(null)\n  const debuggerData = useSelector(getExecutionError)\n  const debuggerVisible = useSelector(isOpenDebugger)\n\n  const handleClickDebuggerIcon = useCallback(() => {\n    dispatch(configActions.updateDebuggerVisible(!debuggerVisible))\n  }, [debuggerVisible, dispatch])\n\n  return (\n    <div\n      className={props.className}\n      css={applyDebuggerStyle(DebuggerDefaultHeight)}\n      ref={panelRef}\n    >\n      <DragBar resizeRef={panelRef} minHeight={DebuggerDefaultHeight} />\n      <Divider direction=\"horizontal\" />\n      <div css={titleStyle}>\n        <span>Errors</span>\n        <CloseIcon onClick={handleClickDebuggerIcon} />\n      </div>\n      <div css={containerStyle}>\n        <div css={errorContentStyle}>\n          {Object.keys(debuggerData)?.map((name, index) => {\n            const error = debuggerData[name]\n\n            if (isArray(error) && error.length > 0) {\n              return error?.map((item) => {\n                return <ErrorItem key={index} pathName={name} item={item} />\n              })\n            } else {\n              return null\n            }\n          })}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nDebugger.displayName = \"Debugger\"\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * An enum that includes all non-printable string values one can expect from $event.key.\n * For example, this enum includes values like \"CapsLock\", \"Backspace\", and \"AudioVolumeMute\",\n * but does not include values like \"a\", \"A\", \"#\", \"é\", or \"¿\".\n * Auto generated from MDN: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values#Speech_recognition_keys\n */\nvar Key;\n(function (Key) {\n    /**\n     * The user agent wasn't able to map the event's virtual keycode to a\n     * specific key value.\n     * This can happen due to hardware or software constraints, or because of\n     * constraints around the platform on which the user agent is running.\n     */\n    Key[\"Unidentified\"] = \"Unidentified\";\n    /** The Alt (Alternative) key. */\n    Key[\"Alt\"] = \"Alt\";\n    /**\n     * The AltGr or AltGraph (Alternate Graphics) key.\n     * Enables the ISO Level 3 shift modifier (where Shift is the\n     * level 2 modifier).\n     */\n    Key[\"AltGraph\"] = \"AltGraph\";\n    /**\n     * The Caps Lock key. Toggles the capital character lock on and\n     * off for subsequent input.\n     */\n    Key[\"CapsLock\"] = \"CapsLock\";\n    /**\n     * The Control, Ctrl, or Ctl key. Allows\n     * typing control characters.\n     */\n    Key[\"Control\"] = \"Control\";\n    /**\n     * The Fn (Function modifier) key. Used to allow generating\n     * function key (F1–F15, for instance) characters on\n     * keyboards without a dedicated function key area. Often handled in\n     * hardware so that events aren't generated for this key.\n     */\n    Key[\"Fn\"] = \"Fn\";\n    /**\n     * The FnLock or F-Lock (Function Lock) key.Toggles\n     * the function key mode described by \"Fn\" on and off. Often\n     * handled in hardware so that events aren't generated for this key.\n     */\n    Key[\"FnLock\"] = \"FnLock\";\n    /** The Hyper key. */\n    Key[\"Hyper\"] = \"Hyper\";\n    /**\n     * The Meta key. Allows issuing special command inputs. This is\n     * the Windows logo key, or the Command or\n     * ⌘ key on Mac keyboards.\n     */\n    Key[\"Meta\"] = \"Meta\";\n    /**\n     * The NumLock (Number Lock) key. Toggles the numeric keypad\n     * between number entry some other mode (often directional arrows).\n     */\n    Key[\"NumLock\"] = \"NumLock\";\n    /**\n     * The Scroll Lock key. Toggles between scrolling and cursor\n     * movement modes.\n     */\n    Key[\"ScrollLock\"] = \"ScrollLock\";\n    /**\n     * The Shift key. Modifies keystrokes to allow typing upper (or\n     * other) case letters, and to support typing punctuation and other special\n     * characters.\n     */\n    Key[\"Shift\"] = \"Shift\";\n    /** The Super key. */\n    Key[\"Super\"] = \"Super\";\n    /** The Symbol modifier key (found on certain virtual keyboards). */\n    Key[\"Symbol\"] = \"Symbol\";\n    /** The Symbol Lock key. */\n    Key[\"SymbolLock\"] = \"SymbolLock\";\n    /**\n     * The Enter or ↵ key (sometimes labeled\n     * Return).\n     */\n    Key[\"Enter\"] = \"Enter\";\n    /** The Horizontal Tab key, Tab. */\n    Key[\"Tab\"] = \"Tab\";\n    /** The down arrow key. */\n    Key[\"ArrowDown\"] = \"ArrowDown\";\n    /** The left arrow key. */\n    Key[\"ArrowLeft\"] = \"ArrowLeft\";\n    /** The right arrow key. */\n    Key[\"ArrowRight\"] = \"ArrowRight\";\n    /** The up arrow key. */\n    Key[\"ArrowUp\"] = \"ArrowUp\";\n    /** The End key. Moves to the end of content. */\n    Key[\"End\"] = \"End\";\n    /** The Home key. Moves to the start of content. */\n    Key[\"Home\"] = \"Home\";\n    /**\n     * The Page Down (or PgDn) key. Scrolls down or\n     * displays the next page of content.\n     */\n    Key[\"PageDown\"] = \"PageDown\";\n    /**\n     * The Page Up (or PgUp) key. Scrolls up or displays\n     * the previous page of content.\n     */\n    Key[\"PageUp\"] = \"PageUp\";\n    /**\n     * The Backspace key. This key is labeled Delete on\n     * Mac keyboards.\n     */\n    Key[\"Backspace\"] = \"Backspace\";\n    /** The Clear key. Removes the currently selected input. */\n    Key[\"Clear\"] = \"Clear\";\n    /** The Copy key (on certain extended keyboards). */\n    Key[\"Copy\"] = \"Copy\";\n    /** The Cursor Select key, CrSel. */\n    Key[\"CrSel\"] = \"CrSel\";\n    /** The Cut key (on certain extended keyboards). */\n    Key[\"Cut\"] = \"Cut\";\n    /** The Delete key, Del. */\n    Key[\"Delete\"] = \"Delete\";\n    /**\n     * Erase to End of Field. Deletes all characters from the current cursor\n     * position to the end of the current field.\n     */\n    Key[\"EraseEof\"] = \"EraseEof\";\n    /** The ExSel (Extend Selection) key. */\n    Key[\"ExSel\"] = \"ExSel\";\n    /**\n     * The Insert key, Ins. Toggles between inserting and\n     * overwriting text.\n     */\n    Key[\"Insert\"] = \"Insert\";\n    /** Paste from the clipboard. */\n    Key[\"Paste\"] = \"Paste\";\n    /** Redo the last action. */\n    Key[\"Redo\"] = \"Redo\";\n    /** Undo the last action. */\n    Key[\"Undo\"] = \"Undo\";\n    /**\n     * The Accept, Commit, or OK key or\n     * button. Accepts the currently selected option or input method sequence\n     * conversion.\n     */\n    Key[\"Accept\"] = \"Accept\";\n    /** The Again key. Redoes or repeats a previous action. */\n    Key[\"Again\"] = \"Again\";\n    /** The Attn (Attention) key. */\n    Key[\"Attn\"] = \"Attn\";\n    /** The Cancel key. */\n    Key[\"Cancel\"] = \"Cancel\";\n    /**\n     * Shows the context menu. Typically found between the\n     * Windows (or OS) key and the Control key\n     * on the right side of the keyboard.\n     */\n    Key[\"ContextMenu\"] = \"ContextMenu\";\n    /**\n     * The Esc (Escape) key. Typically used as an exit, cancel, or\n     * \"escape this operation\" button. Historically, the Escape character was\n     * used to signal the start of a special control sequence of characters\n     * called an \"escape sequence.\"\n     */\n    Key[\"Escape\"] = \"Escape\";\n    /** The Execute key. */\n    Key[\"Execute\"] = \"Execute\";\n    /**\n     * The Find key. Opens an interface (typically a dialog box) for\n     * performing a find/search operation.\n     */\n    Key[\"Find\"] = \"Find\";\n    /** The Finish key. */\n    Key[\"Finish\"] = \"Finish\";\n    /**\n     * The Help key. Opens or toggles the display of help\n     * information.\n     */\n    Key[\"Help\"] = \"Help\";\n    /**\n     * The Pause key. Pauses the current application or state, if\n     * applicable.\n     * Note: This shouldn't be confused with the\n     * \"MediaPause\" key value, which is used for media\n     * controllers, rather than to control applications and processes.\n     */\n    Key[\"Pause\"] = \"Pause\";\n    /**\n     * The Play key. Resumes a previously paused application, if\n     * applicable.\n     * Note: This shouldn't be confused with the\n     * \"MediaPlay\" key value, which is used for media\n     * controllers, rather than to control applications and processes.\n     */\n    Key[\"Play\"] = \"Play\";\n    /** The Props (Properties) key. */\n    Key[\"Props\"] = \"Props\";\n    /** The Select key. */\n    Key[\"Select\"] = \"Select\";\n    /** The ZoomIn key. */\n    Key[\"ZoomIn\"] = \"ZoomIn\";\n    /** The ZoomOut key. */\n    Key[\"ZoomOut\"] = \"ZoomOut\";\n    /**\n     * The Brightness Down key. Typically used to reduce the brightness of the\n     * display.\n     */\n    Key[\"BrightnessDown\"] = \"BrightnessDown\";\n    /**\n     * The Brightness Up key. Typically increases the brightness of the\n     * display.\n     */\n    Key[\"BrightnessUp\"] = \"BrightnessUp\";\n    /**\n     * The Eject key. Ejects removable media (or toggles an optical\n     * storage device tray open and closed).\n     */\n    Key[\"Eject\"] = \"Eject\";\n    /** The LogOff key. */\n    Key[\"LogOff\"] = \"LogOff\";\n    /**\n     * The Power button or key, to toggle power on and off.\n     * Note: Not all systems pass this key through to the\n     * user agent.\n     */\n    Key[\"Power\"] = \"Power\";\n    /**\n     * The PowerOff or PowerDown key. Shuts off the\n     * system.\n     */\n    Key[\"PowerOff\"] = \"PowerOff\";\n    /**\n     * The PrintScreen or PrtScr key. Sometimes\n     * SnapShot. Captures the screen and prints it or saves it to\n     * disk.\n     */\n    Key[\"PrintScreen\"] = \"PrintScreen\";\n    /**\n     * The Hibernate key. This saves the state of the computer to\n     * disk and then shuts down; the computer can be returned to its previous\n     * state by restoring the saved state information.\n     */\n    Key[\"Hibernate\"] = \"Hibernate\";\n    /**\n     * The Standby key. (Also known as Suspend or\n     * Sleep.) This turns off the display and puts the computer in a\n     * low power consumption mode, without completely powering off.\n     */\n    Key[\"Standby\"] = \"Standby\";\n    /**\n     * The WakeUp key. Used to wake the computer from the\n     * hibernation or standby modes.\n     */\n    Key[\"WakeUp\"] = \"WakeUp\";\n    /**\n     * The All Candidates key, which starts multi-candidate mode, in\n     * which multiple candidates are displayed for the ongoing input.\n     */\n    Key[\"AllCandidates\"] = \"AllCandidates\";\n    /** The Alphanumeric key. */\n    Key[\"Alphanumeric\"] = \"Alphanumeric\";\n    /**\n     * The Code Input key, which enables code input mode, which lets\n     * the user enter characters by typing their code points (their Unicode\n     * character numbers, typically).\n     */\n    Key[\"CodeInput\"] = \"CodeInput\";\n    /** The Compose key. */\n    Key[\"Compose\"] = \"Compose\";\n    /**\n     * The Convert key, which instructs the IME to convert the\n     * current input method sequence into the resulting character.\n     */\n    Key[\"Convert\"] = \"Convert\";\n    /**\n     * A dead \"combining\" key; that is, a key which is used in tandem with\n     * other keys to generate accented and other modified characters. If\n     * pressed by itself, it doesn't generate a character.\n     * If you wish to identify which specific dead key was pressed (in cases\n     * where more than one exists), you can do so by examining the\n     * KeyboardEvent's associated\n     * compositionupdate event's\n     * data property.\n     */\n    Key[\"Dead\"] = \"Dead\";\n    /**\n     * The Final (Final Mode) key is used on some Asian keyboards to\n     * enter final mode when using IMEs.\n     */\n    Key[\"FinalMode\"] = \"FinalMode\";\n    /**\n     * Switches to the first character group on an\n     * ISO/IEC 9995 keyboard. Each key may have multiple groups of characters, each in its own\n     * column. Pressing this key instructs the device to interpret keypresses\n     * as coming from the first column on subsequent keystrokes.\n     */\n    Key[\"GroupFirst\"] = \"GroupFirst\";\n    /**\n     * Switches to the last character group on an\n     * ISO/IEC 9995 keyboard.\n     */\n    Key[\"GroupLast\"] = \"GroupLast\";\n    /**\n     * Switches to the next character group on an\n     * ISO/IEC 9995 keyboard.\n     */\n    Key[\"GroupNext\"] = \"GroupNext\";\n    /**\n     * Switches to the previous character group on an\n     * ISO/IEC 9995 keyboard.\n     */\n    Key[\"GroupPrevious\"] = \"GroupPrevious\";\n    /** The Mode Change key. Toggles or cycles among input modes of IMEs. */\n    Key[\"ModeChange\"] = \"ModeChange\";\n    /**\n     * The Next Candidate function key. Selects the next possible match for the\n     * ongoing input.\n     */\n    Key[\"NextCandidate\"] = \"NextCandidate\";\n    /**\n     * The NonConvert (\"Don't convert\") key. This accepts the\n     * current input method sequence without running conversion when using an\n     * IME.\n     */\n    Key[\"NonConvert\"] = \"NonConvert\";\n    /**\n     * The Previous Candidate key. Selects the previous possible match for the\n     * ongoing input.\n     */\n    Key[\"PreviousCandidate\"] = \"PreviousCandidate\";\n    /** The Process key. Instructs the IME to process the conversion. */\n    Key[\"Process\"] = \"Process\";\n    /**\n     * The Single Candidate key. Enables single candidate mode (as opposed to\n     * multi-candidate mode); in this mode, only one candidate is displayed at\n     * a time.\n     */\n    Key[\"SingleCandidate\"] = \"SingleCandidate\";\n    /**\n     * The Hangul (Korean character set) mode key, which toggles\n     * between Hangul and English entry modes.\n     */\n    Key[\"HangulMode\"] = \"HangulMode\";\n    /**\n     * Selects the Hanja mode, for converting Hangul characters to the more\n     * specific Hanja characters.\n     */\n    Key[\"HanjaMode\"] = \"HanjaMode\";\n    /**\n     * Selects the Junja mode, in which Korean is represented using single-byte\n     * Latin characters.\n     */\n    Key[\"JunjaMode\"] = \"JunjaMode\";\n    /**\n     * The Eisu key. This key's purpose is defined by the IME, but\n     * may be used to close the IME.\n     */\n    Key[\"Eisu\"] = \"Eisu\";\n    /** The Hankaku (half-width characters) key. */\n    Key[\"Hankaku\"] = \"Hankaku\";\n    /** The Hiragana key; selects Kana characters mode. */\n    Key[\"Hiragana\"] = \"Hiragana\";\n    /** Toggles between the Hiragana and Katakana writing systems. */\n    Key[\"HiraganaKatakana\"] = \"HiraganaKatakana\";\n    /** The Kana Mode (Kana Lock) key. */\n    Key[\"KanaMode\"] = \"KanaMode\";\n    /**\n     * The Kanji Mode key. Enables entering Japanese text using the\n     * ideographic characters of Chinese origin.\n     */\n    Key[\"KanjiMode\"] = \"KanjiMode\";\n    /** The Katakana key. */\n    Key[\"Katakana\"] = \"Katakana\";\n    /** The Romaji key; selects the Roman character set. */\n    Key[\"Romaji\"] = \"Romaji\";\n    /** The Zenkaku (full width) characters key. */\n    Key[\"Zenkaku\"] = \"Zenkaku\";\n    /** The Zenkaku/Hankaku (full width/half width) toggle key. */\n    Key[\"ZenkakuHanaku\"] = \"ZenkakuHanaku\";\n    /** The first general-purpose function key, F1. */\n    Key[\"F1\"] = \"F1\";\n    /** The F2 key. */\n    Key[\"F2\"] = \"F2\";\n    /** The F3 key. */\n    Key[\"F3\"] = \"F3\";\n    /** The F4 key. */\n    Key[\"F4\"] = \"F4\";\n    /** The F5 key. */\n    Key[\"F5\"] = \"F5\";\n    /** The F6 key. */\n    Key[\"F6\"] = \"F6\";\n    /** The F7 key. */\n    Key[\"F7\"] = \"F7\";\n    /** The F8 key. */\n    Key[\"F8\"] = \"F8\";\n    /** The F9 key. */\n    Key[\"F9\"] = \"F9\";\n    /** The F10 key. */\n    Key[\"F10\"] = \"F10\";\n    /** The F11 key. */\n    Key[\"F11\"] = \"F11\";\n    /** The F12 key. */\n    Key[\"F12\"] = \"F12\";\n    /** The F13 key. */\n    Key[\"F13\"] = \"F13\";\n    /** The F14 key. */\n    Key[\"F14\"] = \"F14\";\n    /** The F15 key. */\n    Key[\"F15\"] = \"F15\";\n    /** The F16 key. */\n    Key[\"F16\"] = \"F16\";\n    /** The F17 key. */\n    Key[\"F17\"] = \"F17\";\n    /** The F18 key. */\n    Key[\"F18\"] = \"F18\";\n    /** The F19 key. */\n    Key[\"F19\"] = \"F19\";\n    /** The F20 key. */\n    Key[\"F20\"] = \"F20\";\n    /** The first general-purpose virtual function key. */\n    Key[\"Soft1\"] = \"Soft1\";\n    /** The second general-purpose virtual function key. */\n    Key[\"Soft2\"] = \"Soft2\";\n    /** The third general-purpose virtual function key. */\n    Key[\"Soft3\"] = \"Soft3\";\n    /** The fourth general-purpose virtual function key. */\n    Key[\"Soft4\"] = \"Soft4\";\n    /**\n     * Presents a list of recently-used applications which lets the user change\n     * apps quickly.\n     */\n    Key[\"AppSwitch\"] = \"AppSwitch\";\n    /** The Call key. Dials the number which has been entered. */\n    Key[\"Call\"] = \"Call\";\n    /** The Camera key. Activates the camera. */\n    Key[\"Camera\"] = \"Camera\";\n    /** The Focus key. Focuses the camera. */\n    Key[\"CameraFocus\"] = \"CameraFocus\";\n    /** The End Call or Hang Up button. */\n    Key[\"EndCall\"] = \"EndCall\";\n    /** The Back button. */\n    Key[\"GoBack\"] = \"GoBack\";\n    /**\n     * The Home button. Returns the user to the phone's main screen\n     * (usually an application launcher).\n     */\n    Key[\"GoHome\"] = \"GoHome\";\n    /**\n     * The Headset Hook key. This is typically actually a button on\n     * the headset which is used to hang up calls and play or pause media.\n     */\n    Key[\"HeadsetHook\"] = \"HeadsetHook\";\n    /** The Redial button. Redials the last-called number. */\n    Key[\"LastNumberRedial\"] = \"LastNumberRedial\";\n    /** The Notification key. */\n    Key[\"Notification\"] = \"Notification\";\n    /**\n     * A button which cycles among the notification modes: silent, vibrate,\n     * ring, and so forth.\n     */\n    Key[\"MannerMode\"] = \"MannerMode\";\n    /** The Voice Dial key. Initiates voice dialing. */\n    Key[\"VoiceDial\"] = \"VoiceDial\";\n    /** Switches to the previous channel. */\n    Key[\"ChannelDown\"] = \"ChannelDown\";\n    /** Switches to the next channel. */\n    Key[\"ChannelUp\"] = \"ChannelUp\";\n    /** Starts, continues, or increases the speed of fast forwarding the media. */\n    Key[\"MediaFastForward\"] = \"MediaFastForward\";\n    /**\n     * Pauses the currently playing media.\n     * Note: Some older applications use\n     * \"Pause\", but this is not correct.\n     */\n    Key[\"MediaPause\"] = \"MediaPause\";\n    /**\n     * Starts or continues playing media at normal speed, if not already doing\n     * so. Has no effect otherwise.\n     */\n    Key[\"MediaPlay\"] = \"MediaPlay\";\n    /** Toggles between playing and pausing the current media. */\n    Key[\"MediaPlayPause\"] = \"MediaPlayPause\";\n    /** Starts or resumes recording media. */\n    Key[\"MediaRecord\"] = \"MediaRecord\";\n    /** Starts, continues, or increases the speed of rewinding the media. */\n    Key[\"MediaRewind\"] = \"MediaRewind\";\n    /**\n     * Stops the current media activity (such as playing, recording, pausing,\n     * forwarding, or rewinding). Has no effect if the media is currently\n     * stopped already.\n     */\n    Key[\"MediaStop\"] = \"MediaStop\";\n    /** Seeks to the next media or program track. */\n    Key[\"MediaTrackNext\"] = \"MediaTrackNext\";\n    /** Seeks to the previous media or program track. */\n    Key[\"MediaTrackPrevious\"] = \"MediaTrackPrevious\";\n    /** Adjusts audio balance toward the left. */\n    Key[\"AudioBalanceLeft\"] = \"AudioBalanceLeft\";\n    /** Adjusts audio balance toward the right. */\n    Key[\"AudioBalanceRight\"] = \"AudioBalanceRight\";\n    /** Decreases the amount of bass. */\n    Key[\"AudioBassDown\"] = \"AudioBassDown\";\n    /**\n     * Reduces bass boosting or cycles downward through bass boost modes or\n     * states.\n     */\n    Key[\"AudioBassBoostDown\"] = \"AudioBassBoostDown\";\n    /** Toggles bass boosting on and off. */\n    Key[\"AudioBassBoostToggle\"] = \"AudioBassBoostToggle\";\n    /**\n     * Increases the amount of bass boosting, or cycles upward through a set of\n     * bass boost modes or states.\n     */\n    Key[\"AudioBassBoostUp\"] = \"AudioBassBoostUp\";\n    /** Increases the amount of bass. */\n    Key[\"AudioBassUp\"] = \"AudioBassUp\";\n    /** Adjusts the audio fader toward the front. */\n    Key[\"AudioFaderFront\"] = \"AudioFaderFront\";\n    /** Adjusts the audio fader toward the rear. */\n    Key[\"AudioFaderRear\"] = \"AudioFaderRear\";\n    /** Selects the next available surround sound mode. */\n    Key[\"AudioSurroundModeNext\"] = \"AudioSurroundModeNext\";\n    /** Decreases the amount of treble. */\n    Key[\"AudioTrebleDown\"] = \"AudioTrebleDown\";\n    /** Increases the amount of treble. */\n    Key[\"AudioTrebleUp\"] = \"AudioTrebleUp\";\n    /** Decreases the audio volume. */\n    Key[\"AudioVolumeDown\"] = \"AudioVolumeDown\";\n    /** Mutes the audio. */\n    Key[\"AudioVolumeMute\"] = \"AudioVolumeMute\";\n    /** Increases the audio volume. */\n    Key[\"AudioVolumeUp\"] = \"AudioVolumeUp\";\n    /** Toggles the microphone on and off. */\n    Key[\"MicrophoneToggle\"] = \"MicrophoneToggle\";\n    /** Decreases the microphone's input volume. */\n    Key[\"MicrophoneVolumeDown\"] = \"MicrophoneVolumeDown\";\n    /** Mutes the microphone input. */\n    Key[\"MicrophoneVolumeMute\"] = \"MicrophoneVolumeMute\";\n    /** Increases the microphone's input volume. */\n    Key[\"MicrophoneVolumeUp\"] = \"MicrophoneVolumeUp\";\n    /** Switches into TV viewing mode. */\n    Key[\"TV\"] = \"TV\";\n    /** Toggles 3D TV mode on and off. */\n    Key[\"TV3DMode\"] = \"TV3DMode\";\n    /** Toggles between antenna and cable inputs. */\n    Key[\"TVAntennaCable\"] = \"TVAntennaCable\";\n    /** Toggles audio description mode on and off. */\n    Key[\"TVAudioDescription\"] = \"TVAudioDescription\";\n    /**\n     * Decreases the audio description's mixing volume; reduces the volume of\n     * the audio descriptions relative to the program sound.\n     */\n    Key[\"TVAudioDescriptionMixDown\"] = \"TVAudioDescriptionMixDown\";\n    /**\n     * Increases the audio description's mixing volume; increases the volume of\n     * the audio descriptions relative to the program sound.\n     */\n    Key[\"TVAudioDescriptionMixUp\"] = \"TVAudioDescriptionMixUp\";\n    /**\n     * Displays or hides the media contents available for playback (this may be\n     * a channel guide showing the currently airing programs, or a list of\n     * media files to play).\n     */\n    Key[\"TVContentsMenu\"] = \"TVContentsMenu\";\n    /** Displays or hides the TV's data service menu. */\n    Key[\"TVDataService\"] = \"TVDataService\";\n    /** Cycles the input mode on an external TV. */\n    Key[\"TVInput\"] = \"TVInput\";\n    /** Switches to the input \"Component 1.\" */\n    Key[\"TVInputComponent1\"] = \"TVInputComponent1\";\n    /** Switches to the input \"Component 2.\" */\n    Key[\"TVInputComponent2\"] = \"TVInputComponent2\";\n    /** Switches to the input \"Composite 1.\" */\n    Key[\"TVInputComposite1\"] = \"TVInputComposite1\";\n    /** Switches to the input \"Composite 2.\" */\n    Key[\"TVInputComposite2\"] = \"TVInputComposite2\";\n    /** Switches to the input \"HDMI 1.\" */\n    Key[\"TVInputHDMI1\"] = \"TVInputHDMI1\";\n    /** Switches to the input \"HDMI 2.\" */\n    Key[\"TVInputHDMI2\"] = \"TVInputHDMI2\";\n    /** Switches to the input \"HDMI 3.\" */\n    Key[\"TVInputHDMI3\"] = \"TVInputHDMI3\";\n    /** Switches to the input \"HDMI 4.\" */\n    Key[\"TVInputHDMI4\"] = \"TVInputHDMI4\";\n    /** Switches to the input \"VGA 1.\" */\n    Key[\"TVInputVGA1\"] = \"TVInputVGA1\";\n    /** The Media Context menu key. */\n    Key[\"TVMediaContext\"] = \"TVMediaContext\";\n    /** Toggle the TV's network connection on and off. */\n    Key[\"TVNetwork\"] = \"TVNetwork\";\n    /** Put the TV into number entry mode. */\n    Key[\"TVNumberEntry\"] = \"TVNumberEntry\";\n    /** The device's power button. */\n    Key[\"TVPower\"] = \"TVPower\";\n    /** Radio button. */\n    Key[\"TVRadioService\"] = \"TVRadioService\";\n    /** Satellite button. */\n    Key[\"TVSatellite\"] = \"TVSatellite\";\n    /** Broadcast Satellite button. */\n    Key[\"TVSatelliteBS\"] = \"TVSatelliteBS\";\n    /** Communication Satellite button. */\n    Key[\"TVSatelliteCS\"] = \"TVSatelliteCS\";\n    /** Toggles among available satellites. */\n    Key[\"TVSatelliteToggle\"] = \"TVSatelliteToggle\";\n    /**\n     * Selects analog terrestrial television service (analog cable or antenna\n     * reception).\n     */\n    Key[\"TVTerrestrialAnalog\"] = \"TVTerrestrialAnalog\";\n    /**\n     * Selects digital terrestrial television service (digital cable or antenna\n     * reception).\n     */\n    Key[\"TVTerrestrialDigital\"] = \"TVTerrestrialDigital\";\n    /** Timer programming button. */\n    Key[\"TVTimer\"] = \"TVTimer\";\n    /** Changes the input mode on an external audio/video receiver (AVR) unit. */\n    Key[\"AVRInput\"] = \"AVRInput\";\n    /** Toggles the power on an external AVR unit. */\n    Key[\"AVRPower\"] = \"AVRPower\";\n    /**\n     * General-purpose media function key, color-coded red. This has index\n     * 0 among the colored keys.\n     */\n    Key[\"ColorF0Red\"] = \"ColorF0Red\";\n    /**\n     * General-purpose media function key, color-coded green. This has index\n     * 1 among the colored keys.\n     */\n    Key[\"ColorF1Green\"] = \"ColorF1Green\";\n    /**\n     * General-purpose media function key, color-coded yellow. This has index\n     * 2 among the colored keys.\n     */\n    Key[\"ColorF2Yellow\"] = \"ColorF2Yellow\";\n    /**\n     * General-purpose media function key, color-coded blue. This has index\n     * 3 among the colored keys.\n     */\n    Key[\"ColorF3Blue\"] = \"ColorF3Blue\";\n    /**\n     * General-purpose media function key, color-coded grey. This has index\n     * 4 among the colored keys.\n     */\n    Key[\"ColorF4Grey\"] = \"ColorF4Grey\";\n    /**\n     * General-purpose media function key, color-coded brown. This has index\n     * 5 among the colored keys.\n     */\n    Key[\"ColorF5Brown\"] = \"ColorF5Brown\";\n    /** Toggles closed captioning on and off. */\n    Key[\"ClosedCaptionToggle\"] = \"ClosedCaptionToggle\";\n    /**\n     * Adjusts the brightness of the device by toggling between two brightness\n     * levels or by cycling among multiple brightness levels.\n     */\n    Key[\"Dimmer\"] = \"Dimmer\";\n    /** Cycles among video sources. */\n    Key[\"DisplaySwap\"] = \"DisplaySwap\";\n    /** Switches the input source to the Digital Video Recorder (DVR). */\n    Key[\"DVR\"] = \"DVR\";\n    /** The Exit button, which exits the current application or menu. */\n    Key[\"Exit\"] = \"Exit\";\n    /** Clears the program or content stored in the first favorites list slot. */\n    Key[\"FavoriteClear0\"] = \"FavoriteClear0\";\n    /** Clears the program or content stored in the second favorites list slot. */\n    Key[\"FavoriteClear1\"] = \"FavoriteClear1\";\n    /** Clears the program or content stored in the third favorites list slot. */\n    Key[\"FavoriteClear2\"] = \"FavoriteClear2\";\n    /** Clears the program or content stored in the fourth favorites list slot. */\n    Key[\"FavoriteClear3\"] = \"FavoriteClear3\";\n    /**\n     * Selects (recalls) the program or content stored in the first favorites\n     * list slot.\n     */\n    Key[\"FavoriteRecall0\"] = \"FavoriteRecall0\";\n    /**\n     * Selects (recalls) the program or content stored in the second favorites\n     * list slot.\n     */\n    Key[\"FavoriteRecall1\"] = \"FavoriteRecall1\";\n    /**\n     * Selects (recalls) the program or content stored in the third favorites\n     * list slot.\n     */\n    Key[\"FavoriteRecall2\"] = \"FavoriteRecall2\";\n    /**\n     * Selects (recalls) the program or content stored in the fourth favorites\n     * list slot.\n     */\n    Key[\"FavoriteRecall3\"] = \"FavoriteRecall3\";\n    /**\n     * Stores the current program or content into the first favorites list\n     * slot.\n     */\n    Key[\"FavoriteStore0\"] = \"FavoriteStore0\";\n    /**\n     * Stores the current program or content into the second favorites list\n     * slot.\n     */\n    Key[\"FavoriteStore1\"] = \"FavoriteStore1\";\n    /**\n     * Stores the current program or content into the third favorites list\n     * slot.\n     */\n    Key[\"FavoriteStore2\"] = \"FavoriteStore2\";\n    /**\n     * Stores the current program or content into the fourth favorites list\n     * slot.\n     */\n    Key[\"FavoriteStore3\"] = \"FavoriteStore3\";\n    /** Toggles the display of the program or content guide. */\n    Key[\"Guide\"] = \"Guide\";\n    /**\n     * If the guide is currently displayed, this button tells the guide to\n     * display the next day's content.\n     */\n    Key[\"GuideNextDay\"] = \"GuideNextDay\";\n    /**\n     * If the guide is currently displayed, this button tells the guide to\n     * display the previous day's content.\n     */\n    Key[\"GuidePreviousDay\"] = \"GuidePreviousDay\";\n    /**\n     * Toggles the display of information about the currently selected content,\n     * program, or media.\n     */\n    Key[\"Info\"] = \"Info\";\n    /**\n     * Tells the device to perform an instant replay (typically some form of\n     * jumping back a short amount of time then playing it again, possibly but\n     * not usually in slow motion).\n     */\n    Key[\"InstantReplay\"] = \"InstantReplay\";\n    /** Opens content linked to the current program, if available and possible. */\n    Key[\"Link\"] = \"Link\";\n    /** Lists the current program. */\n    Key[\"ListProgram\"] = \"ListProgram\";\n    /** Toggles a display listing currently available live content or programs. */\n    Key[\"LiveContent\"] = \"LiveContent\";\n    /** Locks or unlocks the currently selected content or pgoram. */\n    Key[\"Lock\"] = \"Lock\";\n    /**\n     * Presents a list of media applications, such as photo viewers, audio and\n     * video players, and games. [1]\n     */\n    Key[\"MediaApps\"] = \"MediaApps\";\n    /** The Audio Track key. */\n    Key[\"MediaAudioTrack\"] = \"MediaAudioTrack\";\n    /** Jumps back to the last-viewed content, program, or other media. */\n    Key[\"MediaLast\"] = \"MediaLast\";\n    /** Skips backward to the previous content or program. */\n    Key[\"MediaSkipBackward\"] = \"MediaSkipBackward\";\n    /** Skips forward to the next content or program. */\n    Key[\"MediaSkipForward\"] = \"MediaSkipForward\";\n    /** Steps backward to the previous content or program. */\n    Key[\"MediaStepBackward\"] = \"MediaStepBackward\";\n    /** Steps forward to the next content or program. */\n    Key[\"MediaStepForward\"] = \"MediaStepForward\";\n    /**\n     * Top Menu button. Opens the media's main menu (e.g., for a DVD or Blu-Ray\n     * disc).\n     */\n    Key[\"MediaTopMenu\"] = \"MediaTopMenu\";\n    /** Navigates into a submenu or option. */\n    Key[\"NavigateIn\"] = \"NavigateIn\";\n    /** Navigates to the next item. */\n    Key[\"NavigateNext\"] = \"NavigateNext\";\n    /** Navigates out of the current screen or menu. */\n    Key[\"NavigateOut\"] = \"NavigateOut\";\n    /** Navigates to the previous item. */\n    Key[\"NavigatePrevious\"] = \"NavigatePrevious\";\n    /** Cycles to the next channel in the favorites list. */\n    Key[\"NextFavoriteChannel\"] = \"NextFavoriteChannel\";\n    /**\n     * Cycles to the next saved user profile, if this feature is supported and\n     * multiple profiles exist.\n     */\n    Key[\"NextUserProfile\"] = \"NextUserProfile\";\n    /**\n     * Opens the user interface for selecting on demand content or programs to\n     * watch.\n     */\n    Key[\"OnDemand\"] = \"OnDemand\";\n    /** Starts the process of pairing the remote with a device to be controlled. */\n    Key[\"Pairing\"] = \"Pairing\";\n    /** A button to move the picture-in-picture view downward. */\n    Key[\"PinPDown\"] = \"PinPDown\";\n    /** A button to control moving the picture-in-picture view. */\n    Key[\"PinPMove\"] = \"PinPMove\";\n    /** Toggles display of the picture-in-picture view on and off. */\n    Key[\"PinPToggle\"] = \"PinPToggle\";\n    /** A button to move the picture-in-picture view upward. */\n    Key[\"PinPUp\"] = \"PinPUp\";\n    /** Decreases the media playback rate. */\n    Key[\"PlaySpeedDown\"] = \"PlaySpeedDown\";\n    /** Returns the media playback rate to normal. */\n    Key[\"PlaySpeedReset\"] = \"PlaySpeedReset\";\n    /** Increases the media playback rate. */\n    Key[\"PlaySpeedUp\"] = \"PlaySpeedUp\";\n    /** Toggles random media (also known as \"shuffle mode\") on and off. */\n    Key[\"RandomToggle\"] = \"RandomToggle\";\n    /**\n     * A code sent when the remote control's battery is low. This doesn't\n     * actually correspond to a physical key at all.\n     */\n    Key[\"RcLowBattery\"] = \"RcLowBattery\";\n    /** Cycles among the available media recording speeds. */\n    Key[\"RecordSpeedNext\"] = \"RecordSpeedNext\";\n    /**\n     * Toggles radio frequency (RF) input bypass mode on and off. RF bypass\n     * mode passes RF input directly to the RF output without any processing or\n     * filtering.\n     */\n    Key[\"RfBypass\"] = \"RfBypass\";\n    /**\n     * Toggles the channel scan mode on and off. This is a mode which flips\n     * through channels automatically until the user stops the scan.\n     */\n    Key[\"ScanChannelsToggle\"] = \"ScanChannelsToggle\";\n    /** Cycles through the available screen display modes. */\n    Key[\"ScreenModeNext\"] = \"ScreenModeNext\";\n    /** Toggles display of the device's settings screen on and off. */\n    Key[\"Settings\"] = \"Settings\";\n    /** Toggles split screen display mode on and off. */\n    Key[\"SplitScreenToggle\"] = \"SplitScreenToggle\";\n    /** Cycles among input modes on an external set-top box (STB). */\n    Key[\"STBInput\"] = \"STBInput\";\n    /** Toggles on and off an external STB. */\n    Key[\"STBPower\"] = \"STBPower\";\n    /** Toggles the display of subtitles on and off if they're available. */\n    Key[\"Subtitle\"] = \"Subtitle\";\n    /**\n     * Toggles display of [teletext](https://en.wikipedia.org/wiki/Teletext),\n     * if available.\n     */\n    Key[\"Teletext\"] = \"Teletext\";\n    /** Cycles through the available video modes. */\n    Key[\"VideoModeNext\"] = \"VideoModeNext\";\n    /**\n     * Causes the device to identify itself in some fashion, such as by\n     * flashing a light, briefly changing the brightness of indicator lights,\n     * or emitting a tone.\n     */\n    Key[\"Wink\"] = \"Wink\";\n    /**\n     * Toggles between fullscreen and scaled content display, or otherwise\n     * change the magnification level.\n     */\n    Key[\"ZoomToggle\"] = \"ZoomToggle\";\n    /**\n     * Presents a list of possible corrections for a word which was incorrectly\n     * identified.\n     */\n    Key[\"SpeechCorrectionList\"] = \"SpeechCorrectionList\";\n    /**\n     * Toggles between dictation mode and command/control mode. This lets the\n     * speech engine know whether to interpret spoken words as input text or as\n     * commands.\n     */\n    Key[\"SpeechInputToggle\"] = \"SpeechInputToggle\";\n    /** Closes the current document or message. Must not exit the application. */\n    Key[\"Close\"] = \"Close\";\n    /** Creates a new document or message. */\n    Key[\"New\"] = \"New\";\n    /** Opens an existing document or message. */\n    Key[\"Open\"] = \"Open\";\n    /** Prints the current document or message. */\n    Key[\"Print\"] = \"Print\";\n    /** Saves the current document or message. */\n    Key[\"Save\"] = \"Save\";\n    /** Starts spell checking the current document. */\n    Key[\"SpellCheck\"] = \"SpellCheck\";\n    /** Opens the user interface to forward a message. */\n    Key[\"MailForward\"] = \"MailForward\";\n    /** Opens the user interface to reply to a message. */\n    Key[\"MailReply\"] = \"MailReply\";\n    /** Sends the current message. */\n    Key[\"MailSend\"] = \"MailSend\";\n    /**\n     * The Calculator key, often labeled with an icon. This is often\n     * used as a generic application launcher key\n     * (APPCOMMAND_LAUNCH_APP2).\n     */\n    Key[\"LaunchCalculator\"] = \"LaunchCalculator\";\n    /** The Calendar key. Often labeled with an icon. */\n    Key[\"LaunchCalendar\"] = \"LaunchCalendar\";\n    /** The Contacts key. */\n    Key[\"LaunchContacts\"] = \"LaunchContacts\";\n    /** The Mail key. Often labeled with an icon. */\n    Key[\"LaunchMail\"] = \"LaunchMail\";\n    /** The Media Player key. */\n    Key[\"LaunchMediaPlayer\"] = \"LaunchMediaPlayer\";\n    /** The Music Player key. Often labeled with an icon. */\n    Key[\"LaunchMusicPlayer\"] = \"LaunchMusicPlayer\";\n    /**\n     * The My Computer key on Windows keyboards. This is often used\n     * as a generic application launcher key\n     * (APPCOMMAND_LAUNCH_APP1).\n     */\n    Key[\"LaunchMyComputer\"] = \"LaunchMyComputer\";\n    /**\n     * The Phone key. Opens the phone dialer application (if one is\n     * present).\n     */\n    Key[\"LaunchPhone\"] = \"LaunchPhone\";\n    /** The Screen Saver key. */\n    Key[\"LaunchScreenSaver\"] = \"LaunchScreenSaver\";\n    /** The Spreadsheet key. This key may be labeled with an icon. */\n    Key[\"LaunchSpreadsheet\"] = \"LaunchSpreadsheet\";\n    /**\n     * The Web Browser key. This key is frequently labeled with an\n     * icon.\n     */\n    Key[\"LaunchWebBrowser\"] = \"LaunchWebBrowser\";\n    /** The WebCam key. Opens the webcam application. */\n    Key[\"LaunchWebCam\"] = \"LaunchWebCam\";\n    /**\n     * The Word Processor key. This may be an icon of a specific\n     * word processor application, or a generic document icon.\n     */\n    Key[\"LaunchWordProcessor\"] = \"LaunchWordProcessor\";\n    /** The first generic application launcher button. */\n    Key[\"LaunchApplication1\"] = \"LaunchApplication1\";\n    /** The second generic application launcher button. */\n    Key[\"LaunchApplication2\"] = \"LaunchApplication2\";\n    /** The third generic application launcher button. */\n    Key[\"LaunchApplication3\"] = \"LaunchApplication3\";\n    /** The fourth generic application launcher button. */\n    Key[\"LaunchApplication4\"] = \"LaunchApplication4\";\n    /** The fifth generic application launcher button. */\n    Key[\"LaunchApplication5\"] = \"LaunchApplication5\";\n    /** The sixth generic application launcher button. */\n    Key[\"LaunchApplication6\"] = \"LaunchApplication6\";\n    /** The seventh generic application launcher button. */\n    Key[\"LaunchApplication7\"] = \"LaunchApplication7\";\n    /** The eighth generic application launcher button. */\n    Key[\"LaunchApplication8\"] = \"LaunchApplication8\";\n    /** The ninth generic application launcher button. */\n    Key[\"LaunchApplication9\"] = \"LaunchApplication9\";\n    /** The 10th generic application launcher button. */\n    Key[\"LaunchApplication10\"] = \"LaunchApplication10\";\n    /** The 11th generic application launcher button. */\n    Key[\"LaunchApplication11\"] = \"LaunchApplication11\";\n    /** The 12th generic application launcher button. */\n    Key[\"LaunchApplication12\"] = \"LaunchApplication12\";\n    /** The 13th generic application launcher button. */\n    Key[\"LaunchApplication13\"] = \"LaunchApplication13\";\n    /** The 14th generic application launcher button. */\n    Key[\"LaunchApplication14\"] = \"LaunchApplication14\";\n    /** The 15th generic application launcher button. */\n    Key[\"LaunchApplication15\"] = \"LaunchApplication15\";\n    /** The 16th generic application launcher button. */\n    Key[\"LaunchApplication16\"] = \"LaunchApplication16\";\n    /**\n     * Navigates to the previous content or page in the current Web view's\n     * history.\n     */\n    Key[\"BrowserBack\"] = \"BrowserBack\";\n    /** Opens the user's list of bookmarks/favorites. */\n    Key[\"BrowserFavorites\"] = \"BrowserFavorites\";\n    /** Navigates to the next content or page in the current Web view's history. */\n    Key[\"BrowserForward\"] = \"BrowserForward\";\n    /** Navigates to the user's preferred home page. */\n    Key[\"BrowserHome\"] = \"BrowserHome\";\n    /** Refreshes the current page or content. */\n    Key[\"BrowserRefresh\"] = \"BrowserRefresh\";\n    /**\n     * Activates the user's preferred search engine or the search interface\n     * within their browser.\n     */\n    Key[\"BrowserSearch\"] = \"BrowserSearch\";\n    /** Stops loading the currently displayed Web view or content. */\n    Key[\"BrowserStop\"] = \"BrowserStop\";\n    /**\n     * The decimal point key (typically . or\n     * , depending on the region).\n     * In newer browsers, this value to be the character generated by the\n     * decimal key (one of those two characters). [1]\n     */\n    Key[\"Decimal\"] = \"Decimal\";\n    /** The 11 key found on certain media numeric keypads. */\n    Key[\"Key11\"] = \"Key11\";\n    /** The 12 key found on certain media numeric keypads. */\n    Key[\"Key12\"] = \"Key12\";\n    /** The numeric keypad's multiplication key, *. */\n    Key[\"Multiply\"] = \"Multiply\";\n    /** The numeric keypad's addition key, +. */\n    Key[\"Add\"] = \"Add\";\n    /** The numeric keypad's division key, /. */\n    Key[\"Divide\"] = \"Divide\";\n    /** The numeric keypad's subtraction key, -. */\n    Key[\"Subtract\"] = \"Subtract\";\n    /**\n     * The numeric keypad's places separator character.\n     * (In the United States this is a comma, but elsewhere it is frequently\n     * a period.)\n     */\n    Key[\"Separator\"] = \"Separator\";\n})(Key = exports.Key || (exports.Key = {}));\n","import { isILLAAPiError } from \"@illa-public/illa-net\"\nimport { ILLA_MIXPANEL_EVENT_TYPE } from \"@illa-public/mixpanel-utils\"\nimport { useUpgradeModal } from \"@illa-public/upgrade-modal\"\nimport { getCurrentTeamInfo, getPlanUtils } from \"@illa-public/user-data\"\nimport { canUseUpgradeFeature } from \"@illa-public/user-role-utils\"\nimport { isCloudVersion } from \"@illa-public/utils\"\nimport { FC, ReactNode, useCallback, useEffect, useState } from \"react\"\nimport { useHotkeys } from \"react-hotkeys-hook\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useParams } from \"react-router-dom\"\nimport { Key } from \"ts-key-enum\"\nimport { createModal, useMessage } from \"@illa-design/react\"\nimport { onDeleteActionItem } from \"@/page/App/components/Actions/api\"\nimport {\n  getIsILLAEditMode,\n  getSelectedAction,\n  getSelectedComponentDisplayNames,\n  isShowDot,\n} from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { getActionItemByDisplayName } from \"@/redux/currentApp/action/actionSelector\"\nimport {\n  getComponentMap,\n  getOriginalGlobalDataNames,\n  searchComponentFromMap,\n} from \"@/redux/currentApp/components/componentsSelector\"\nimport { componentsActions } from \"@/redux/currentApp/components/componentsSlice\"\nimport { getExecutionResult } from \"@/redux/currentApp/executionTree/executionSelector\"\nimport { takeSnapShot } from \"@/services/history\"\nimport store from \"@/store\"\nimport { CopyManager } from \"@/utils/copyManager\"\nimport { FocusManager } from \"@/utils/focusManager\"\nimport { trackInEditor } from \"@/utils/mixpanelHelper\"\nimport { ShortCutContext } from \"@/utils/shortcut/shortcutProvider\"\nimport IllaUndoRedoManager from \"@/utils/undoRedo/undo\"\nimport { isMAC } from \"@/utils/userAgent\"\nimport { DisplayNameGenerator } from \"../generators/generateDisplayName\"\n\nexport const Shortcut: FC<{ children: ReactNode }> = ({ children }) => {\n  const dispatch = useDispatch()\n  const { t } = useTranslation()\n  const message = useMessage()\n\n  const { appId } = useParams()\n\n  const isEditMode = useSelector(getIsILLAEditMode)\n  const currentSelectedComponent = useSelector(getSelectedComponentDisplayNames)\n  const currentSelectedAction = useSelector(getSelectedAction)\n  const componentsMap = useSelector(getComponentMap)\n  const executionResult = useSelector(getExecutionResult)\n  const showShadows = useSelector(isShowDot)\n  const teamInfo = useSelector(getCurrentTeamInfo)\n  const upgradeModal = useUpgradeModal()\n\n  // shortcut\n  const [alreadyShowDeleteDialog, setAlreadyShowDeleteDialog] =\n    useState<boolean>(false)\n  const [saveLoading, setSaveLoading] = useState<boolean>(false)\n\n  const canUseBillingFeature = canUseUpgradeFeature(\n    teamInfo?.myRole,\n    getPlanUtils(teamInfo),\n    teamInfo?.totalTeamLicense?.teamLicensePurchased,\n    teamInfo?.totalTeamLicense?.teamLicenseAllPaid,\n  )\n\n  const showDeleteDialog = (\n    displayName: string[],\n    type?: \"widget\" | \"page\" | \"action\" | \"subpage\" | \"pageView\" | \"globalData\",\n    options?: Record<string, any>,\n  ) => {\n    const modal = createModal()\n    if (!alreadyShowDeleteDialog && displayName.length > 0) {\n      const textList = displayName.join(\", \").toString()\n      setAlreadyShowDeleteDialog(true)\n      const id = modal.show({\n        blockOkHide: true,\n        blockCancelHide: true,\n        title: t(\"editor.component.delete_title\", {\n          displayName: textList,\n        }),\n        children: t(\"editor.component.delete_content\", {\n          displayName: textList,\n        }),\n        cancelText: t(\"editor.component.cancel\"),\n        okText: t(\"editor.component.delete\"),\n        okButtonProps: {\n          colorScheme: \"red\",\n        },\n        closable: false,\n        onCancel: () => {\n          setAlreadyShowDeleteDialog(false)\n          modal.update(id, { visible: false })\n        },\n        onOk: () => {\n          switch (type) {\n            case \"page\": {\n              trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n                element: \"delete_page_modal_delete\",\n              })\n              dispatch(\n                componentsActions.deletePageNodeReducer({\n                  displayName: displayName[0],\n                  originPageSortedKey: options?.originPageSortedKey || [],\n                }),\n              )\n              break\n            }\n            case \"widget\": {\n              trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n                element: \"component_delete_modal_delete\",\n                parameter3: options?.source || \"left_delete\",\n              })\n              dispatch(\n                componentsActions.deleteComponentNodeReducer({\n                  displayNames: displayName,\n                  source: options?.source || \"left_delete\",\n                }),\n              )\n              dispatch(configActions.clearSelectedComponent())\n              break\n            }\n            case \"action\": {\n              setAlreadyShowDeleteDialog(false)\n              modal.update(id, { okLoading: true })\n              for (let i = 0; i < displayName.length; i++) {\n                const action = getActionItemByDisplayName(\n                  store.getState(),\n                  displayName[i],\n                )\n                const globalDataNames = getOriginalGlobalDataNames(\n                  store.getState(),\n                )\n                if (action) {\n                  // fail to await @chenlongbo\n                  onDeleteActionItem(action)\n                }\n                if (globalDataNames.includes(displayName[i])) {\n                  dispatch(\n                    componentsActions.deleteGlobalStateByKeyReducer({\n                      key: displayName[i],\n                    }),\n                  )\n                  DisplayNameGenerator.removeDisplayName(displayName[i])\n                }\n              }\n              trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n                element: \"action_delete_modal_delete\",\n              })\n              modal.update(id, { okLoading: false })\n              modal.update(id, { visible: false })\n              return\n            }\n            case \"subpage\": {\n              dispatch(\n                componentsActions.deleteSubPageViewNodeReducer({\n                  pageName: options!.parentPageName,\n                  subPagePath: displayName[0],\n                }),\n              )\n              break\n            }\n            case \"pageView\": {\n              dispatch(\n                componentsActions.deleteSectionViewReducer({\n                  viewDisplayName: options!.viewDisplayName,\n                  parentNodeName: options!.parentNodeName,\n                  originPageSortedKey: options!.originPageSortedKey,\n                }),\n              )\n              break\n            }\n            case \"globalData\": {\n              dispatch(\n                componentsActions.deleteGlobalStateByKeyReducer({\n                  key: displayName[0],\n                }),\n              )\n              DisplayNameGenerator.removeDisplayName(displayName[0])\n              break\n            }\n          }\n          setAlreadyShowDeleteDialog(false)\n          modal.update(id, { visible: false })\n        },\n        afterOpen: () => {\n          if (type === \"page\") {\n            trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.SHOW, {\n              element: \"delete_page_modal\",\n            })\n          }\n          if (type === \"widget\") {\n            trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.SHOW, {\n              element: \"component_delete_modal\",\n              parameter3: options?.source || \"\",\n            })\n          }\n          if (type === \"action\") {\n            trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.SHOW, {\n              element: \"action_delete_modal\",\n            })\n          }\n        },\n      })\n    }\n  }\n\n  const selectAllBodyComponentsHandler = useCallback(() => {\n    switch (FocusManager.getFocus()) {\n      case \"none\":\n        break\n      case \"data_component\":\n        break\n      case \"data_action\":\n        break\n      case \"data_page\":\n        break\n      case \"data_global_state\":\n        break\n      case \"action\":\n        break\n      case \"widget_picker\":\n        break\n      case \"components_config\":\n        break\n      case \"page_config\":\n        break\n      case \"canvas\": {\n        if (componentsMap) {\n          const rootNode = executionResult.root\n          if (!rootNode) return\n          const currentPageDisplayName =\n            rootNode.pageSortedKey[rootNode.currentPageIndex]\n          const pageNode = searchComponentFromMap(\n            componentsMap,\n            currentPageDisplayName,\n          )\n          if (!pageNode) return\n          let bodySectionDisplayName: string = \"\"\n          pageNode.childrenNode.find((sectionNodeDisplayName) => {\n            const currentSectionProps = executionResult[sectionNodeDisplayName]\n            if (\n              currentSectionProps &&\n              currentSectionProps.viewSortedKey &&\n              currentSectionProps.currentViewIndex >= 0 &&\n              componentsMap[sectionNodeDisplayName].showName === \"bodySection\"\n            ) {\n              const { currentViewIndex, viewSortedKey } = currentSectionProps\n              bodySectionDisplayName = viewSortedKey[currentViewIndex]\n            }\n          })\n          if (!bodySectionDisplayName) return\n          const allChildrenNodeDisplayNames = Array.isArray(\n            componentsMap[bodySectionDisplayName].childrenNode,\n          )\n            ? componentsMap[bodySectionDisplayName].childrenNode\n            : []\n\n          trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.SELECT, {\n            element: \"component\",\n            parameter1: \"keyboard\",\n          })\n          dispatch(\n            configActions.updateSelectedComponent(allChildrenNodeDisplayNames),\n          )\n        }\n      }\n    }\n  }, [componentsMap, dispatch, executionResult])\n\n  const copySomethingHandler = () => {\n    switch (FocusManager.getFocus()) {\n      case \"data_page\":\n        break\n      case \"data_global_state\":\n        break\n      case \"none\":\n        break\n      case \"canvas\":\n      case \"data_component\":\n        if (\n          currentSelectedComponent != null &&\n          currentSelectedComponent.length > 0\n        ) {\n          CopyManager.copyComponentNodeByDisplayName(currentSelectedComponent)\n        }\n        break\n      case \"data_action\":\n      case \"action\":\n        if (currentSelectedAction != null) {\n          CopyManager.copyActionByActionID(currentSelectedAction.actionID)\n        }\n        break\n      case \"widget_picker\":\n        break\n      case \"components_config\":\n        break\n      case \"page_config\":\n        break\n    }\n  }\n\n  const copyAndPasteHandler = () => {\n    switch (FocusManager.getFocus()) {\n      case \"data_page\":\n        break\n      case \"data_global_state\":\n        break\n      case \"none\":\n        break\n      case \"canvas\":\n      case \"data_component\":\n        if (\n          currentSelectedComponent != null &&\n          currentSelectedComponent.length > 0\n        ) {\n          CopyManager.copyComponentNodeByDisplayName(currentSelectedComponent)\n        }\n        break\n      case \"data_action\":\n      case \"action\":\n        if (currentSelectedAction != null) {\n          CopyManager.copyActionByActionID(currentSelectedAction.actionID)\n        }\n        break\n      case \"widget_picker\":\n        break\n      case \"components_config\":\n        break\n      case \"page_config\":\n        break\n    }\n    CopyManager.paste(\"keyboard\")\n  }\n\n  const showDotHandler = useCallback(\n    (keyboardEventType: string) => {\n      if (keyboardEventType === \"keydown\") {\n        dispatch(configActions.updateShowDot(true))\n      } else if (keyboardEventType === \"keyup\") {\n        dispatch(configActions.updateShowDot(false))\n      }\n    },\n    [dispatch],\n  )\n\n  const changeShadowHidden = useCallback(() => {\n    if (showShadows) {\n      dispatch(configActions.updateShowDot(false))\n    }\n  }, [dispatch, showShadows])\n\n  const handleSaveToHistory = useCallback(async () => {\n    if (!canUseBillingFeature) {\n      upgradeModal({\n        modalType: \"upgrade\",\n        from: \"app_edit_keyboard_history\",\n      })\n    } else if (appId) {\n      if (saveLoading) return\n      setSaveLoading(true)\n      try {\n        await takeSnapShot(appId)\n        message.success({ content: t(\"editor.history.message.suc.save\") })\n      } catch (error) {\n        if (isILLAAPiError(error)) {\n          message.error({ content: t(\"editor.history.message.fail.save\") })\n        } else {\n          message.error({ content: t(\"network_error\") })\n        }\n      } finally {\n        setSaveLoading(false)\n      }\n    }\n  }, [appId, canUseBillingFeature, message, saveLoading, t, upgradeModal])\n\n  useHotkeys(\n    `${isMAC() ? Key.Meta : Key.Control}+s`,\n    (keyboardEvent) => {\n      if (keyboardEvent.repeat) return\n      if (isCloudVersion) {\n        handleSaveToHistory()\n      } else {\n        message.success({\n          content: t(\"dont_need_save\"),\n        })\n      }\n    },\n    {\n      enableOnFormTags: true,\n      enableOnContentEditable: true,\n      preventDefault: true,\n      enabled: isEditMode,\n    },\n    [handleSaveToHistory],\n  )\n\n  useHotkeys(\n    Key.Backspace,\n    (keyboardEvent) => {\n      if (keyboardEvent.repeat) return\n      switch (FocusManager.getFocus()) {\n        case \"data_page\":\n          break\n        case \"data_global_state\":\n          break\n        case \"none\":\n          break\n        case \"canvas\":\n        case \"data_component\":\n          showDeleteDialog(\n            currentSelectedComponent.map((displayName) => {\n              return displayName\n            }),\n            \"widget\",\n            { source: \"keyboard\" },\n          )\n          break\n        case \"data_action\":\n        case \"action\":\n          if (currentSelectedAction?.displayName) {\n            showDeleteDialog([currentSelectedAction.displayName], \"action\", {\n              source: \"keyboard\",\n            })\n          }\n          break\n        case \"widget_picker\":\n          break\n        case \"components_config\":\n          break\n        case \"page_config\":\n          break\n      }\n    },\n    {\n      enabled: isEditMode,\n    },\n    [showDeleteDialog, currentSelectedComponent, currentSelectedAction],\n  )\n\n  useHotkeys(\n    `${isMAC() ? Key.Meta : Key.Control}+a`,\n    (keyboardEvent) => {\n      if (keyboardEvent.repeat) return\n      selectAllBodyComponentsHandler()\n    },\n    {\n      preventDefault: true,\n      enabled: isEditMode,\n    },\n    [selectAllBodyComponentsHandler],\n  )\n\n  useHotkeys(\n    `${isMAC() ? Key.Meta : Key.Control}+c`,\n    (keyboardEvent) => {\n      if (keyboardEvent.repeat) return\n      copySomethingHandler()\n    },\n    {\n      preventDefault: false,\n      enabled: isEditMode,\n    },\n    [copySomethingHandler],\n  )\n\n  useHotkeys(\n    `${isMAC() ? Key.Meta : Key.Control}+v`,\n    (keyboardEvent) => {\n      if (keyboardEvent.repeat) return\n      CopyManager.paste(\"keyboard\")\n    },\n    {\n      preventDefault: false,\n      enabled: isEditMode,\n    },\n    [copySomethingHandler],\n  )\n\n  useHotkeys(\n    `${isMAC() ? Key.Meta : Key.Control}+d`,\n    (keyboardEvent) => {\n      if (keyboardEvent.repeat) return\n      copyAndPasteHandler()\n    },\n    {\n      preventDefault: true,\n      enabled: isEditMode,\n    },\n    [copyAndPasteHandler],\n  )\n\n  useHotkeys(\n    `${isMAC() ? Key.Meta : Key.Control}`,\n    (keyboardEvent) => {\n      if (keyboardEvent.repeat) return\n\n      showDotHandler(keyboardEvent.type)\n    },\n    {\n      keydown: true,\n      keyup: true,\n      preventDefault: false,\n      enabled: isEditMode,\n    },\n    [showDotHandler],\n  )\n\n  useHotkeys(\n    `${isMAC() ? Key.Meta : Key.Control}+z`,\n    (keyboardEvent) => {\n      if (keyboardEvent.repeat) return\n\n      IllaUndoRedoManager.popFromUndoStack()\n    },\n    {\n      enabled: isEditMode,\n    },\n    [isEditMode],\n  )\n\n  useHotkeys(\n    `${isMAC() ? Key.Meta : Key.Control}+${Key.Shift}+z`,\n    (keyboardEvent) => {\n      if (keyboardEvent.repeat) return\n      IllaUndoRedoManager.popFromRedoStack()\n    },\n    {\n      enabled: isEditMode,\n    },\n    [isEditMode],\n  )\n\n  // cancel show dot\n  useEffect(() => {\n    if (isEditMode) {\n      window.addEventListener(\"blur\", changeShadowHidden)\n    }\n\n    return () => {\n      if (isEditMode) {\n        window.removeEventListener(\"blur\", changeShadowHidden)\n      }\n    }\n  }, [changeShadowHidden, dispatch, isEditMode])\n\n  return (\n    <ShortCutContext.Provider value={{ showDeleteDialog }}>\n      {children}\n    </ShortCutContext.Provider>\n  )\n}\n","import { SerializedStyles, css } from \"@emotion/react\"\nimport { Variants } from \"framer-motion\"\nimport { getColor, globalColor, illaPrefix } from \"@illa-design/react\"\n\nconst getPanelBarHeaderHeight = (size: \"default\" | \"small\") => {\n  switch (size) {\n    case \"small\": {\n      return css`\n        height: 32px;\n      `\n    }\n    default:\n    case \"default\": {\n      return css`\n        height: 48px;\n      `\n    }\n  }\n}\n\nconst getPanelBarHeaderBorder = (size: \"default\" | \"small\") => {\n  switch (size) {\n    case \"small\": {\n      return null\n    }\n    default:\n    case \"default\": {\n      return css`\n        &:not(:first-of-type) {\n          border-top: 1px solid ${globalColor(`--${illaPrefix}-grayBlue-08`)};\n        }\n      `\n    }\n  }\n}\n\nexport const applyPanelBarHeaderStyle = (\n  size: \"default\" | \"small\",\n): SerializedStyles => {\n  const heightCss = getPanelBarHeaderHeight(size)\n  const borderCss = getPanelBarHeaderBorder(size)\n  return css`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    cursor: pointer;\n    ${heightCss};\n    ${borderCss};\n    padding: 0 16px;\n    padding-right: 16px;\n  `\n}\n\nconst getPanelTitleFontStyle = (size: \"default\" | \"small\") => {\n  switch (size) {\n    case \"small\": {\n      return css`\n        color: ${getColor(\"grayBlue\", \"03\")};\n        font-size: 12px;\n        font-weight: 500;\n        font-family: \"Inter\", serif;\n      `\n    }\n    case \"default\":\n    default: {\n      return css`\n        color: ${getColor(\"grayBlue\", \"02\")};\n        font-weight: 500;\n        font-size: 14px;\n      `\n    }\n  }\n}\n\nexport const applyPanelBarTitleStyle = (\n  size: \"default\" | \"small\",\n): SerializedStyles => {\n  return css`\n    ${getPanelTitleFontStyle(size)};\n    overflow: hidden;\n    text-overflow: ellipsis;\n  `\n}\n\nconst getIconColorStyle = (size: \"default\" | \"small\") => {\n  switch (size) {\n    case \"small\": {\n      return css`\n        color: ${globalColor(`--${illaPrefix}-grayBlue-04`)};\n      `\n    }\n    case \"default\":\n    default: {\n      return css`\n        color: ${globalColor(`--${illaPrefix}-grayBlue-05`)};\n      `\n    }\n  }\n}\n\nexport function applyPanelBarOpenedIconStyle(\n  isOpened: boolean,\n  size: \"default\" | \"small\",\n): SerializedStyles {\n  const fontColorStyle = getIconColorStyle(size)\n  const rotate = isOpened\n    ? \"\"\n    : css`\n        transform: rotate(180deg);\n      `\n  return css`\n    transition: transform 200ms;\n    transform-origin: center;\n    font-size: 16px;\n    ${fontColorStyle};\n    ${rotate}\n  `\n}\n\nexport const panelBarItemContentStyle = css`\n  font-size: 14px;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-02`)};\n  position: relative;\n  height: auto;\n  padding-bottom: 4px;\n`\n\nexport const panelBarItemContainerAnimationVariants: Variants = {\n  enter: {\n    height: \"auto\",\n    overflowY: \"hidden\",\n    transitionEnd: { overflowY: \"visible\" },\n  },\n  exit: {\n    height: 0,\n    overflowY: \"hidden\",\n    transitionEnd: { overflowY: \"hidden\" },\n  },\n}\n\nexport const customIconHotpotStyle = css`\n  font-size: 16px;\n  padding: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-04`)};\n  :hover {\n    color: ${globalColor(`--${illaPrefix}-grayBlue-02`)};\n  }\n  :active {\n    color: ${globalColor(`--${illaPrefix}-grayBlue-02`)};\n  }\n`\n","import { AnimatePresence, motion } from \"framer-motion\"\nimport { FC, MouseEvent, memo, useCallback, useRef, useState } from \"react\"\nimport { UpIcon } from \"@illa-design/react\"\nimport { PanelBarProps } from \"./interface\"\nimport {\n  applyPanelBarHeaderStyle,\n  applyPanelBarOpenedIconStyle,\n  applyPanelBarTitleStyle,\n  customIconHotpotStyle,\n  panelBarItemContainerAnimationVariants,\n  panelBarItemContentStyle,\n} from \"./style\"\n\nexport const PanelBar: FC<PanelBarProps> = memo((props: PanelBarProps) => {\n  const {\n    title,\n    size = \"default\",\n    children,\n    customIcon,\n    destroyChildrenWhenClose = false,\n    isOpened = true,\n    saveToggleState,\n    onIllaFocus,\n  } = props\n  const [isOpenedState, setIsOpenedState] = useState(isOpened)\n  const containerRef = useRef<HTMLDivElement>(null)\n\n  const handleToggle = useCallback(\n    (e: MouseEvent<HTMLDivElement>) => {\n      const target = e.target as HTMLElement\n      if (containerRef.current?.contains(target)) {\n        saveToggleState?.(!isOpenedState)\n        setIsOpenedState(!isOpenedState)\n      }\n    },\n    [isOpenedState, saveToggleState],\n  )\n\n  return (\n    <>\n      <div\n        css={applyPanelBarHeaderStyle(size)}\n        onClick={handleToggle}\n        ref={containerRef}\n      >\n        <span css={applyPanelBarTitleStyle(size)}>{title}</span>\n        {customIcon ? (\n          customIcon\n        ) : (\n          <div css={customIconHotpotStyle}>\n            <UpIcon css={applyPanelBarOpenedIconStyle(isOpenedState, size)} />\n          </div>\n        )}\n      </div>\n\n      {destroyChildrenWhenClose ? (\n        <AnimatePresence initial={false}>\n          {isOpenedState && (\n            <motion.div\n              css={panelBarItemContentStyle}\n              variants={panelBarItemContainerAnimationVariants}\n              animate={isOpenedState ? \"enter\" : \"exit\"}\n              transition={{ duration: 0.2 }}\n              initial=\"exit\"\n              exit=\"exit\"\n              onClick={onIllaFocus}\n            >\n              {children}\n            </motion.div>\n          )}\n        </AnimatePresence>\n      ) : (\n        <AnimatePresence>\n          <motion.div\n            css={panelBarItemContentStyle}\n            variants={panelBarItemContainerAnimationVariants}\n            animate={isOpenedState ? \"enter\" : \"exit\"}\n            transition={{ duration: 0.2 }}\n            exit=\"exit\"\n            onClick={onIllaFocus}\n          >\n            {children}\n          </motion.div>\n        </AnimatePresence>\n      )}\n    </>\n  )\n})\n\nPanelBar.displayName = \"PanelBar\"\n","import * as React from \"react\";\nconst SvgState = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 16, height: 16, viewBox: \"0 0 16 16\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M5 5.5L2.5 8L5 10.5\", stroke: \"#1D2129\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M11 5.5L13.5 8L11 10.5\", stroke: \"#1D2129\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M7 11L9.00001 4.99997\", stroke: \"#1D2129\" }));\nexport default SvgState;\n","import IconHotSpot from \"@illa-public/icon-hot-spot\"\nimport { FC, useContext } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport {\n  DropList,\n  DropListItem,\n  Dropdown,\n  MoreIcon,\n  getColor,\n} from \"@illa-design/react\"\nimport { onCopyActionItem } from \"@/page/App/components/Actions/api\"\nimport { getActionList } from \"@/redux/currentApp/action/actionSelector\"\nimport store from \"@/store\"\nimport { CopyManager } from \"@/utils/copyManager\"\nimport { ShortCutContext } from \"@/utils/shortcut/shortcutProvider\"\nimport { MoreActionProps } from \"./interface\"\n\nexport const MoreAction: FC<MoreActionProps> = (props) => {\n  const { displayName, actionType } = props\n  const { t } = useTranslation()\n  const shortcut = useContext(ShortCutContext)\n\n  const handleClickDelete = () => {\n    shortcut.showDeleteDialog([displayName], actionType)\n  }\n\n  const handleClickCopy = () => {\n    switch (actionType) {\n      case \"action\": {\n        const actionList = getActionList(store.getState())\n        const targetAction = actionList.find(\n          (action) => action.displayName === displayName,\n        )\n        if (targetAction) {\n          onCopyActionItem(targetAction)\n        }\n        break\n      }\n      case \"widget\": {\n        CopyManager.copyComponentNodeByDisplayName([displayName])\n        CopyManager.paste(\"duplicate\")\n        break\n      }\n    }\n  }\n\n  return (\n    <Dropdown\n      dropList={\n        <DropList w=\"200px\">\n          <DropListItem\n            value=\"duplicate\"\n            title={t(\"editor.action.action_list.contextMenu.duplicate\")}\n            onClick={handleClickCopy}\n          />\n          <DropListItem\n            value=\"delete\"\n            title={t(\"editor.action.action_list.contextMenu.delete\")}\n            deleted\n            onClick={handleClickDelete}\n          />\n        </DropList>\n      }\n    >\n      <IconHotSpot inactiveColor={getColor(\"grayBlue\", \"02\")}>\n        <MoreIcon />\n      </IconHotSpot>\n    </Dropdown>\n  )\n}\n","import { SerializedStyles, css } from \"@emotion/react\"\nimport { getColor, globalColor, illaPrefix } from \"@illa-design/react\"\n\nexport const itemNameStyle: SerializedStyles = css`\n  font-weight: 600;\n  cursor: pointer;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-02`)};\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  max-width: 160px;\n  vertical-align: bottom;\n  display: inline-block;\n`\n\nexport const itemNameDescStyle: SerializedStyles = css`\n  display: inline-block;\n  vertical-align: bottom;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-04`)};\n`\n\nexport const jsonContentStyle = css`\n  font-family: \"Fira Code\", monospace;\n  height: 0;\n`\n\nexport const jsonNameStyle: SerializedStyles = css`\n  display: inline-block;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-02`)};\n`\n\nexport function applyJsonValueColorStyle(type: string) {\n  let colorStyle = css``\n  switch (type) {\n    case \"number\": {\n      colorStyle = css`\n        color: #164;\n      `\n      break\n    }\n    case \"boolean\": {\n      colorStyle = css`\n        color: #219;\n      `\n      break\n    }\n    case \"string\": {\n      colorStyle = css`\n        color: #219;\n      `\n      break\n    }\n    case \"undefined\": {\n      colorStyle = css`\n        color: #708;\n      `\n      break\n    }\n    case \"symbol\": {\n      colorStyle = css`\n        color: #00c;\n      `\n      break\n    }\n    case \"bigint\": {\n      colorStyle = css`\n        color: #170;\n      `\n      break\n    }\n  }\n\n  return css`\n    ${colorStyle};\n    word-break: break-all;\n  `\n}\n\nexport const editIconHotSpotStyle = css`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  width: 16px;\n  height: 16px;\n  font-size: 12px;\n  margin-left: 4px;\n  position: relative;\n  color: ${getColor(\"grayBlue\", \"04\")};\n`\n\nexport const globalStateItemContainerStyle = css`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  width: calc(100% - 16px);\n`\n\nexport const objectAndArrayTitleStyle = css`\n  font-size: 12px;\n  font-weight: 500;\n  color: ${getColor(\"grayBlue\", \"02\")};\n  cursor: pointer;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\nexport const objectAndArrayDescStyle = css`\n  font-size: 12px;\n  color: ${getColor(\"grayBlue\", \"04\")};\n`\n\nexport const applyObjectOrArrayContainerStyle = (level: number) => css`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-left: ${level * 16}px;\n  font-family: \"Fira Code\", monospace;\n  :hover {\n    .global-state-edit-icon-hot-spot {\n      visibility: visible;\n    }\n    #copy-icon-hot-spot {\n      visibility: visible;\n    }\n  }\n  #copy-icon-hot-spot {\n    visibility: hidden;\n  }\n`\n\nexport const applySimpleItemContainerStyle = (\n  isSelected: boolean,\n  level: number,\n) => css`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-left: ${level * 16}px;\n  background-color: ${isSelected ? getColor(\"techPurple\", \"08\") : \"\"};\n  font-size: 12px;\n  font-family: \"Fira Code\", monospace;\n  :hover {\n    .global-state-edit-icon-hot-spot {\n      visibility: visible;\n    }\n    #copy-icon-hot-spot {\n      visibility: visible;\n    }\n  }\n  :last-child {\n    padding-bottom: 4px;\n  }\n  #copy-icon-hot-spot {\n    visibility: hidden;\n  }\n`\n\nexport const labelNameAndValueContainerStyle = css`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n`\n\nexport const applyExpandIconStyle = (isExpanded: boolean) => css`\n  font-size: 8px;\n  line-height: 0;\n  cursor: pointer;\n  transform-origin: center;\n  transform: rotate(${isExpanded ? 90 : 0}deg);\n  transition: transform 200ms;\n  width: 16px;\n  height: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: none;\n`\n\nexport const applyTitleAndDescContainerStyle = css`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n","import { convertPathToString } from \"@illa-public/dynamic-string\"\nimport IconHotSpot from \"@illa-public/icon-hot-spot\"\nimport copyToClipboard from \"copy-to-clipboard\"\nimport { AnimatePresence, motion } from \"framer-motion\"\nimport { toPath } from \"lodash-es\"\nimport { FC, memo } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { CaretRightIcon, CopyIcon } from \"@illa-design/react\"\nimport { panelBarItemContainerAnimationVariants } from \"@/components/PanelBar/style\"\nimport { getExpandedKeys } from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { WorkSpaceTreeNode } from \"./WorkSpaceTreeNode\"\nimport { WorkSpaceTreeItemProps } from \"./interface\"\nimport {\n  applyExpandIconStyle,\n  applyObjectOrArrayContainerStyle,\n  applyTitleAndDescContainerStyle,\n  jsonContentStyle,\n  objectAndArrayDescStyle,\n  objectAndArrayTitleStyle,\n} from \"./style\"\n\nexport const WorkSpaceTreeItem: FC<WorkSpaceTreeItemProps> = memo(\n  (props: WorkSpaceTreeItemProps) => {\n    const { title, data, level, parentKey, isChild } = props\n    const expandedKeys = useSelector(getExpandedKeys)\n    const uniqueKey = parentKey === title ? parentKey : `${parentKey}/${title}`\n    const isExpanded = expandedKeys.includes(uniqueKey)\n    const dispatch = useDispatch()\n    const keyArr = Object.keys(data)\n    return (\n      <>\n        <div\n          css={applyObjectOrArrayContainerStyle(level)}\n          onClick={() => {\n            if (isExpanded) {\n              dispatch(configActions.removeExpandedKey(uniqueKey))\n            } else {\n              dispatch(\n                configActions.setExpandedKey(expandedKeys.concat(uniqueKey)),\n              )\n            }\n          }}\n        >\n          <div css={applyTitleAndDescContainerStyle}>\n            <span css={applyExpandIconStyle(isExpanded)}>\n              <CaretRightIcon />\n            </span>\n            <label css={objectAndArrayTitleStyle}>\n              {isChild\n                ? title\n                : `{{${convertPathToString(toPath(`${parentKey}.${title}`))}}}`}\n              &nbsp;\n            </label>\n            <label css={objectAndArrayDescStyle}>\n              {Array.isArray(data)\n                ? `[]${keyArr.length} items`\n                : `{}${keyArr.length} keys`}\n            </label>\n          </div>\n          <IconHotSpot\n            onClick={(e) => {\n              e.stopPropagation()\n              copyToClipboard(\n                `{{${convertPathToString(toPath(`${parentKey}.${title}`))}}}`,\n              )\n            }}\n            id=\"copy-icon-hot-spot\"\n          >\n            <CopyIcon />\n          </IconHotSpot>\n        </div>\n        <AnimatePresence>\n          {isExpanded && (\n            <motion.div\n              css={jsonContentStyle}\n              variants={panelBarItemContainerAnimationVariants}\n              animate={isExpanded ? \"enter\" : \"exit\"}\n              transition={{ duration: 0.2 }}\n              exit=\"exit\"\n            >\n              {keyArr.map((name) => (\n                <WorkSpaceTreeNode\n                  key={name}\n                  name={name}\n                  value={data[name]}\n                  itemKey={title + name}\n                  level={level + 1}\n                  parentKey={convertPathToString(\n                    toPath(`${parentKey}.${title}`),\n                  )}\n                />\n              ))}\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </>\n    )\n  },\n)\n\nWorkSpaceTreeItem.displayName = \"WorkSpaceTreeItem\"\n","import { MAX_LEN_WITH_SNIPPETS } from \"@/components/CodeEditor\"\n\nexport const renderJsonValue = (value: unknown) => {\n  const type = typeof value\n  switch (type) {\n    case \"string\":\n      return `\"${\n        (value as string).length > 1024\n          ? (value as string).slice(0, MAX_LEN_WITH_SNIPPETS) + \"...\"\n          : value\n      }\"`\n    default:\n      return `${value}`\n  }\n}\n","import { convertPathToString } from \"@illa-public/dynamic-string\"\nimport IconHotSpot from \"@illa-public/icon-hot-spot\"\nimport { toPath } from \"lodash-es\"\nimport { FC, memo } from \"react\"\nimport { CopyIcon, isArray, isObject } from \"@illa-design/react\"\nimport { WorkSpaceTreeNodeProps } from \"@/page/App/Module/DataWorkspace/components/WorkSpaceTreeItem/interface\"\nimport {\n  applyJsonValueColorStyle,\n  applySimpleItemContainerStyle,\n  jsonNameStyle,\n  labelNameAndValueContainerStyle,\n} from \"@/page/App/Module/DataWorkspace/components/WorkSpaceTreeItem/style\"\nimport { copyToClipboard } from \"@/utils/copyToClipboard\"\nimport { WorkSpaceTreeItem } from \".\"\nimport { renderJsonValue } from \"./utils\"\n\nexport const WorkSpaceTreeNode: FC<WorkSpaceTreeNodeProps> = memo(\n  (props: WorkSpaceTreeNodeProps) => {\n    const { name, value, level = 0, parentKey } = props\n\n    const handleClickCopy = () => {\n      copyToClipboard(\n        `{{${convertPathToString(toPath(`${parentKey}.${name}`))}}}`,\n      )\n    }\n\n    if (isObject(value) || isArray(value)) {\n      return (\n        <WorkSpaceTreeItem\n          title={name}\n          data={value}\n          level={level}\n          parentKey={parentKey}\n          isChild={level + 1 > 1}\n        />\n      )\n    } else {\n      return (\n        <div css={applySimpleItemContainerStyle(false, level + 1)}>\n          <div css={labelNameAndValueContainerStyle}>\n            <label css={jsonNameStyle}>\n              {level < 1 ? `{{${parentKey}.${name}}}` : name}&nbsp;\n            </label>\n            <label css={applyJsonValueColorStyle(typeof value)}>\n              {renderJsonValue(value)}\n            </label>\n          </div>\n          <IconHotSpot onClick={handleClickCopy} id=\"copy-icon-hot-spot\">\n            <CopyIcon />\n          </IconHotSpot>\n        </div>\n      )\n    }\n  },\n)\n\nWorkSpaceTreeNode.displayName = \"WorkSpaceTreeNode\"\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const outerContainerStyle = (\n  isSelected: boolean,\n  canExpand: boolean,\n) => css`\n  width: 100%;\n  background-color: ${isSelected\n    ? getColor(\"techPurple\", \"08\")\n    : getColor(\"white\", \"01\")};\n  cursor: pointer;\n  font-family: \"Fira Code\", monospace;\n  :hover {\n    background-color: ${getColor(\"techPurple\", \"08\")};\n    #action-bar {\n      visibility: visible;\n    }\n    #expand-icon {\n      visibility: ${canExpand ? \"visible\" : \"hidden\"};\n    }\n  }\n  #action-bar {\n    visibility: ${isSelected ? \"visible\" : \"hidden\"};\n  }\n`\n\nexport const itemContainerStyle = (level: number = 0) => css`\n  padding-left: ${level * 16 + (level - 1 >= 0 ? level - 1 : 0) * 4}px;\n  padding-right: 16px;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nexport const expendContainerStyle = css`\n  display: flex;\n  align-items: center;\n`\n\nexport const rectangleStyle = css`\n  width: 4px;\n  height: 100%;\n  flex: none;\n`\n\nexport const titleAndIconContainerStyle = css`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n`\n\nexport const titleStyle = css`\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 24px;\n  color: ${getColor(\"grayBlue\", \"02\")};\n`\n\nexport const applyExpandIconStyle = (\n  isExpanded: boolean,\n  canExpand: boolean,\n  isSelected: boolean,\n) => css`\n  font-size: 8px;\n  line-height: 0;\n  cursor: pointer;\n  transform-origin: center;\n  transform: rotate(${isExpanded ? 90 : 0}deg);\n  transition: transform 200ms;\n  width: 16px;\n  height: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: none;\n  visibility: ${canExpand ? (isSelected ? \"visible\" : \"hidden\") : \"hidden\"};\n`\n\nexport const iconContainerStyle = css`\n  display: flex;\n  align-items: center;\n  visibility: hidden;\n`\n\nexport const modalBodyContainerStyle = css`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`\n\nexport const itemContentStyle = css`\n  font-family: \"Fira Code\", monospace;\n  height: 0;\n`\n","import { getIconFromWidgetType } from \"@illa-public/icon\"\nimport IconHotSpot from \"@illa-public/icon-hot-spot\"\nimport { getDocLink } from \"@illa-public/public-configs\"\nimport { AnimatePresence, motion } from \"framer-motion\"\nimport { FC, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { CaretRightIcon } from \"@illa-design/react\"\nimport StateIcon from \"@/assets/dataWorkspace/state.svg?react\"\nimport { MovableModal } from \"@/components/Modal/movableModal\"\nimport { panelBarItemContainerAnimationVariants } from \"@/components/PanelBar/style\"\nimport { ViewItemShape } from \"@/page/App/components/InspectPanel/PanelSetters/TabsSetter/TabListSetter/interface\"\nimport { getExpandedWidgets } from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { MoreAction } from \"../MoreAction\"\nimport { WorkSpaceTreeNode } from \"../WorkSpaceTreeItem/WorkSpaceTreeNode\"\nimport { BaseDataItemProps } from \"./interface\"\nimport {\n  applyExpandIconStyle,\n  expendContainerStyle,\n  iconContainerStyle,\n  itemContainerStyle,\n  itemContentStyle,\n  modalBodyContainerStyle,\n  outerContainerStyle,\n  rectangleStyle,\n  titleAndIconContainerStyle,\n  titleStyle,\n} from \"./style\"\n\nconst formatModalTitle = (index: number) => {\n  switch (index) {\n    case 0: {\n      return \"header\"\n    }\n    case 1: {\n      return \"body\"\n    }\n    case 2: {\n      return \"footer\"\n    }\n    default: {\n      return \"container\"\n    }\n  }\n}\n\nexport const BaseDataItem: FC<BaseDataItemProps> = (props) => {\n  const {\n    title,\n    fakeTitle,\n    type,\n    level,\n    canExpand,\n    haveMoreAction,\n    value,\n    onClick,\n    dataType,\n    selectedDisplayNames,\n  } = props\n  const [isOpenCodeModal, setIsOpenCodeModal] = useState(false)\n  const expandedStatus = useSelector(getExpandedWidgets)\n  const isExpanded = (canExpand ?? false) && (expandedStatus?.[title] ?? false)\n\n  const isSelected = selectedDisplayNames?.includes(title) ?? false\n  const dispatch = useDispatch()\n  const handleClickOnContainer = () => {\n    onClick?.(title, type ?? \"\")\n  }\n\n  const handleClickOnExpandIcon = (e: React.MouseEvent) => {\n    e.stopPropagation()\n    if (!isExpanded) {\n      dispatch(configActions.addExpandedWidgetReducer([title]))\n    } else {\n      dispatch(configActions.removeExpandWidgetReducer([title]))\n    }\n  }\n\n  return (\n    <>\n      <div\n        css={outerContainerStyle(isSelected, !!canExpand)}\n        onClick={handleClickOnContainer}\n        id={`${title}-baseDataItemContainer`}\n      >\n        <div css={itemContainerStyle(level)}>\n          <div css={expendContainerStyle}>\n            <span\n              css={applyExpandIconStyle(isExpanded, !!canExpand, isSelected)}\n              onClick={handleClickOnExpandIcon}\n              id=\"expand-icon\"\n            >\n              <CaretRightIcon />\n            </span>\n            {!!type && level >= 1 && <div css={rectangleStyle} />}\n            <div css={titleAndIconContainerStyle}>\n              {!!type && getIconFromWidgetType(type, \"16px\")}\n              <span css={titleStyle}>{fakeTitle ?? title}</span>\n            </div>\n          </div>\n          <div css={iconContainerStyle} id=\"action-bar\">\n            {((dataType === \"widget\" &&\n              (value.$widgetType as string).endsWith(\"_WIDGET\")) ||\n              dataType !== \"widget\") && (\n              <IconHotSpot onClick={() => setIsOpenCodeModal(true)}>\n                <StateIcon />\n              </IconHotSpot>\n            )}\n            {haveMoreAction && (\n              <MoreAction displayName={title} actionType={dataType} />\n            )}\n          </div>\n        </div>\n      </div>\n\n      {dataType === \"widget\" && Array.isArray(value.$childrenNode) && (\n        <AnimatePresence>\n          {isExpanded && (\n            <motion.div\n              css={itemContentStyle}\n              variants={panelBarItemContainerAnimationVariants}\n              animate={isExpanded ? \"enter\" : \"exit\"}\n              transition={{ duration: 0.2 }}\n              exit=\"exit\"\n            >\n              {value.$childrenNode.map((item, index) => {\n                if (value.$widgetType === \"CONTAINER_WIDGET\") {\n                  if (!(value.viewList as ViewItemShape[])[index]) return null\n                  return (\n                    <BaseDataItem\n                      key={item.displayName}\n                      title={item.displayName}\n                      fakeTitle={\n                        (value.viewList as ViewItemShape[])[index].label\n                      }\n                      value={item}\n                      level={level + 1}\n                      dataType=\"widget\"\n                      type={item.$widgetType as string}\n                      canExpand={item.$childrenNode.length > 0}\n                      haveMoreAction={item.$widgetType.endsWith(\"_WIDGET\")}\n                      selectedDisplayNames={selectedDisplayNames}\n                      onClick={onClick}\n                    />\n                  )\n                }\n                if (\n                  value.$widgetType === \"MODAL_WIDGET\" ||\n                  value.$widgetType === \"FORM_WIDGET\"\n                ) {\n                  return (\n                    <BaseDataItem\n                      key={item.displayName}\n                      title={item.displayName}\n                      fakeTitle={formatModalTitle(index)}\n                      value={item}\n                      level={level + 1}\n                      dataType=\"widget\"\n                      type={item.$widgetType as string}\n                      canExpand={item.$childrenNode.length > 0}\n                      haveMoreAction={item.$widgetType.endsWith(\"_WIDGET\")}\n                      selectedDisplayNames={selectedDisplayNames}\n                      onClick={onClick}\n                    />\n                  )\n                }\n                if (\n                  value.$widgetType === \"LIST_WIDGET\" ||\n                  value.$widgetType === \"GRID_LIST_WIDGET\"\n                )\n                  return (\n                    <BaseDataItem\n                      key={item.displayName}\n                      title={item.displayName}\n                      fakeTitle=\"list template\"\n                      value={item}\n                      level={level + 1}\n                      dataType=\"widget\"\n                      type={item.$widgetType as string}\n                      canExpand={item.$childrenNode.length > 0}\n                      haveMoreAction={item.$widgetType.endsWith(\"_WIDGET\")}\n                      selectedDisplayNames={selectedDisplayNames}\n                      onClick={onClick}\n                    />\n                  )\n\n                return (\n                  <BaseDataItem\n                    key={item.displayName}\n                    title={item.displayName}\n                    value={item}\n                    level={level + 1}\n                    dataType=\"widget\"\n                    type={item.$widgetType as string}\n                    canExpand={item.$childrenNode.length > 0}\n                    haveMoreAction={item.$widgetType.endsWith(\"_WIDGET\")}\n                    selectedDisplayNames={selectedDisplayNames}\n                    onClick={onClick}\n                  />\n                )\n              })}\n            </motion.div>\n          )}\n        </AnimatePresence>\n      )}\n      {isOpenCodeModal && (\n        <MovableModal\n          title={title}\n          bodyContent={\n            <div css={modalBodyContainerStyle}>\n              {Object.keys(value)\n                .filter((key) => !key.startsWith(\"$\"))\n                .map((key) => {\n                  return (\n                    <WorkSpaceTreeNode\n                      key={key}\n                      name={key}\n                      value={value[key]}\n                      itemKey={key}\n                      level={0}\n                      parentKey={title}\n                    />\n                  )\n                })}\n            </div>\n          }\n          onClose={() => {\n            setIsOpenCodeModal(false)\n          }}\n          docLink={getDocLink(dataType, type)}\n          defaultPosition={{\n            x:\n              document\n                .querySelector(`#${title}-baseDataItemContainer`)\n                ?.getBoundingClientRect().right ?? 0,\n            y:\n              document\n                .querySelector(`#${title}-baseDataItemContainer`)\n                ?.getBoundingClientRect().top ?? 0,\n            width: 320,\n            height: 214,\n          }}\n        />\n      )}\n    </>\n  )\n}\n","import { FC, useCallback } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { PanelBar } from \"@/components/PanelBar\"\nimport { getSelectedAction } from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { getActionList } from \"@/redux/currentApp/action/actionSelector\"\nimport { getActionExecutionResultWithOutIgnoreKey } from \"@/redux/currentApp/executionTree/executionSelector\"\nimport { FocusManager } from \"@/utils/focusManager\"\nimport { BaseDataItem } from \"../BaseDataItem\"\n\nexport const ActionSpaceTree: FC = () => {\n  const { t } = useTranslation()\n  const dispatch = useDispatch()\n\n  const actionExecution = useSelector(getActionExecutionResultWithOutIgnoreKey)\n  const actionList = useSelector(getActionList)\n  const selectedAction = useSelector(getSelectedAction)\n\n  const handleActionSelect = useCallback(\n    (selectedKey: string) => {\n      const action = actionList.find((item) => item.displayName === selectedKey)\n      action && dispatch(configActions.changeSelectedAction(action))\n    },\n    [actionList, dispatch],\n  )\n\n  return (\n    <PanelBar\n      title={`${t(\"editor.data_work_space.actions_title\")}(${\n        Object.keys(actionExecution).length\n      })`}\n      onIllaFocus={() => {\n        FocusManager.switchFocus(\"data_action\")\n      }}\n      destroyChildrenWhenClose\n    >\n      {Object.keys(actionExecution).map((actionDisplayName) => (\n        <BaseDataItem\n          key={actionDisplayName}\n          title={actionDisplayName}\n          level={0}\n          value={actionExecution[actionDisplayName] as Record<string, unknown>}\n          haveMoreAction\n          selectedDisplayNames={[selectedAction?.displayName ?? \"\"]}\n          onClick={handleActionSelect}\n          dataType=\"action\"\n          type={\n            (actionExecution[actionDisplayName] as Record<string, unknown>)\n              .actionType as string\n          }\n        />\n      ))}\n    </PanelBar>\n  )\n}\n\nActionSpaceTree.displayName = \"ActionSpaceTree\"\n","import { css } from \"@emotion/react\"\n\nexport const treeContainerStyle = css`\n  font-family: \"Fira Code\", monospace;\n`\n","import { FC } from \"react\"\nimport { PanelBar } from \"@/components/PanelBar\"\nimport { WorkSpaceTreeGroupProps } from \"./interface\"\nimport { treeContainerStyle } from \"./style\"\n\nexport const WorkSpaceTreeGroup: FC<WorkSpaceTreeGroupProps> = (props) => {\n  const { title, children } = props\n  return (\n    <PanelBar title={title} size=\"small\" destroyChildrenWhenClose>\n      <div css={treeContainerStyle}>{children}</div>\n    </PanelBar>\n  )\n}\n","import { FC, useCallback } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { PanelBar } from \"@/components/PanelBar\"\nimport { WorkSpaceTreeGroup } from \"@/page/App/Module/DataWorkspace/components/WorkSpaceTreeGroup\"\nimport { getSelectedComponentDisplayNames } from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport {\n  getCurrentPageBodyWidgetTree,\n  getCurrentPageFooterWidgetTree,\n  getCurrentPageHeaderWidgetTree,\n  getCurrentPageLeftWidgetTree,\n  getCurrentPageModalWidgetTree,\n  getCurrentPageRightWidgetTree,\n} from \"@/redux/currentApp/executionTree/executionSelector\"\nimport { executionActions } from \"@/redux/currentApp/executionTree/executionSlice\"\nimport {\n  autoChangeContainersIndexWhenClick,\n  autoChangeWhenClickOnCanvas,\n} from \"@/utils/componentNode/search\"\nimport { ClickPosition, FocusManager } from \"@/utils/focusManager\"\nimport { BaseDataItem } from \"../BaseDataItem\"\n\nexport const ComponentSpaceTree: FC = () => {\n  const { t } = useTranslation()\n  const dispatch = useDispatch()\n\n  const footerSectionTree = useSelector(getCurrentPageFooterWidgetTree)\n  const leftSectionTree = useSelector(getCurrentPageLeftWidgetTree)\n  const rightSectionTree = useSelector(getCurrentPageRightWidgetTree)\n  const headerSectionTree = useSelector(getCurrentPageHeaderWidgetTree)\n  const bodySectionTree = useSelector(getCurrentPageBodyWidgetTree)\n  const modalSectionTree = useSelector(getCurrentPageModalWidgetTree)\n  const selectedComponent = useSelector(getSelectedComponentDisplayNames)\n\n  const handleClick = useCallback(\n    (displayName: string, type: string) => {\n      const clickPosition: ClickPosition = {\n        displayName,\n        type: \"component\",\n        clickPosition: [],\n      }\n      if (type === \"CANVAS\") {\n        displayName = autoChangeWhenClickOnCanvas(displayName)\n        clickPosition.type = \"inner_container\"\n        clickPosition.clickPosition = [0, 0]\n      }\n      FocusManager.switchFocus(\"data_component\", clickPosition)\n      if (type === \"MODAL_WIDGET\") {\n        dispatch(\n          executionActions.updateModalDisplayReducer({\n            displayName,\n            display: true,\n          }),\n        )\n      }\n      if (displayName) {\n        dispatch(configActions.updateSelectedComponent([displayName]))\n        autoChangeContainersIndexWhenClick(displayName)\n        setTimeout(() => {\n          const dom = document.querySelector(\n            `[data-displayname=\"${displayName}\"]`,\n          )\n          dom?.scrollIntoView({ behavior: \"smooth\", block: \"center\" })\n        }, 160)\n      }\n    },\n    [dispatch],\n  )\n\n  return (\n    <PanelBar\n      title={t(\"editor.data_work_space.components_title\")}\n      destroyChildrenWhenClose\n    >\n      {modalSectionTree.length > 0 && (\n        <>\n          <WorkSpaceTreeGroup\n            title={t(\"editor.data_work_space.component_layer.floating\")}\n          >\n            {modalSectionTree.map((tree) => (\n              <BaseDataItem\n                key={tree.displayName}\n                title={tree.displayName}\n                value={tree}\n                level={0}\n                dataType=\"widget\"\n                type={tree.$widgetType as string}\n                canExpand\n                haveMoreAction\n                onClick={handleClick}\n                selectedDisplayNames={selectedComponent}\n              />\n            ))}\n          </WorkSpaceTreeGroup>\n        </>\n      )}\n      <WorkSpaceTreeGroup title={t(\"editor.page.label_name.body\")}>\n        {bodySectionTree.map((tree) => (\n          <BaseDataItem\n            key={tree.displayName}\n            title={tree.displayName}\n            value={tree}\n            level={0}\n            dataType=\"widget\"\n            type={tree.$widgetType as string}\n            canExpand={tree.$childrenNode.length > 0}\n            haveMoreAction\n            onClick={handleClick}\n            selectedDisplayNames={selectedComponent}\n          />\n        ))}\n      </WorkSpaceTreeGroup>\n\n      {headerSectionTree.length > 0 && (\n        <>\n          <WorkSpaceTreeGroup title={t(\"editor.page.label_name.header\")}>\n            {headerSectionTree.map((tree) => (\n              <BaseDataItem\n                key={tree.displayName}\n                title={tree.displayName}\n                value={tree}\n                level={0}\n                dataType=\"widget\"\n                type={tree.$widgetType as string}\n                canExpand={tree.$childrenNode.length > 0}\n                onClick={handleClick}\n                selectedDisplayNames={selectedComponent}\n              />\n            ))}\n          </WorkSpaceTreeGroup>\n        </>\n      )}\n\n      {leftSectionTree.length > 0 && (\n        <>\n          <WorkSpaceTreeGroup title={t(\"editor.page.label_name.left_panel\")}>\n            {leftSectionTree.map((tree) => (\n              <BaseDataItem\n                key={tree.displayName}\n                title={tree.displayName}\n                value={tree}\n                level={0}\n                dataType=\"widget\"\n                type={tree.$widgetType as string}\n                canExpand={tree.$childrenNode.length > 0}\n                haveMoreAction\n                onClick={handleClick}\n                selectedDisplayNames={selectedComponent}\n              />\n            ))}\n          </WorkSpaceTreeGroup>\n        </>\n      )}\n\n      {rightSectionTree.length > 0 && (\n        <>\n          <WorkSpaceTreeGroup title={t(\"editor.page.label_name.right_panel\")}>\n            {rightSectionTree.map((tree) => (\n              <BaseDataItem\n                key={tree.displayName}\n                title={tree.displayName}\n                value={tree}\n                level={0}\n                dataType=\"widget\"\n                type={tree.$widgetType as string}\n                canExpand={tree.$childrenNode.length > 0}\n                haveMoreAction\n                onClick={handleClick}\n                selectedDisplayNames={selectedComponent}\n              />\n            ))}\n          </WorkSpaceTreeGroup>\n        </>\n      )}\n\n      {footerSectionTree.length > 0 && (\n        <>\n          <WorkSpaceTreeGroup title={t(\"editor.page.label_name.footer\")}>\n            {footerSectionTree.map((tree) => (\n              <BaseDataItem\n                key={tree.displayName}\n                title={tree.displayName}\n                value={tree}\n                level={0}\n                dataType=\"widget\"\n                type={tree.$widgetType as string}\n                canExpand={tree.$childrenNode.length > 0}\n                haveMoreAction\n                onClick={handleClick}\n                selectedDisplayNames={selectedComponent}\n              />\n            ))}\n          </WorkSpaceTreeGroup>\n        </>\n      )}\n    </PanelBar>\n  )\n}\n\nComponentSpaceTree.displayName = \"ComponentSpaceTree\"\n","import { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useSelector } from \"react-redux\"\nimport { PanelBar } from \"@/components/PanelBar\"\nimport { getGlobalInfoExecutionResult } from \"@/redux/currentApp/executionTree/executionSelector\"\nimport { FocusManager } from \"@/utils/focusManager\"\nimport { BaseDataItem } from \"../BaseDataItem\"\n\nexport const GlobalsSpaceTree: FC = () => {\n  const { t } = useTranslation()\n\n  const globalInfoList = useSelector(getGlobalInfoExecutionResult)\n\n  return (\n    <PanelBar\n      title={`${t(\"editor.data_work_space.globals_title\")}(${\n        Object.keys(globalInfoList).length\n      })`}\n      onIllaFocus={() => {\n        FocusManager.switchFocus(\"data_global_state\")\n      }}\n      destroyChildrenWhenClose\n    >\n      {Object.keys(globalInfoList).map((key) => (\n        <BaseDataItem\n          key={key}\n          title={key}\n          level={0}\n          value={globalInfoList[key] as Record<string, unknown>}\n          dataType=\"globalData\"\n        />\n      ))}\n    </PanelBar>\n  )\n}\n\nGlobalsSpaceTree.displayName = \"GlobalsSpaceTree\"\n","export const LIBRARIES = [\n  {\n    title: \"lodash@4.17.21\",\n    alias: \"_\",\n    docLink: \"https://lodash.com/docs/4.17.15\",\n  },\n  {\n    title: \"uuid@8.3.2\",\n    alias: \"uuid\",\n    docLink: \"https://www.npmjs.com/package/uuid\",\n  },\n  {\n    title: \"dayjs@1.11.7\",\n    alias: \"dayjs\",\n    docLink: \"https://day.js.org/docs/en/parse/parse\",\n  },\n  {\n    title: \"numbro@2.4.0\",\n    alias: \"numbro\",\n    docLink: \"https://numbrojs.com/\",\n  },\n  {\n    title: \"papaparse@5.4.1\",\n    alias: \"papa\",\n    docLink: \"https://www.papaparse.com/docs\",\n  },\n]\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const itemContainerStyle = css`\n  display: flex;\n  flex-direction: column;\n  padding: 0 16px;\n`\n\nexport const titleContainerStyle = css`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport const titleStyle = css`\n  color: ${getColor(\"grayBlue\", \"02\")};\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 24px;\n`\n\nexport const actionGroupContainerStyle = css`\n  display: flex;\n  align-items: center;\n`\n\nexport const aliasContainerStyle = css`\n  color: ${getColor(\"grayBlue\", \"04\")};\n  font-size: 12px;\n  font-weight: 450;\n  line-height: 16px;\n  padding: 0;\n  margin: 0;\n`\n\nexport const libraryContainerStyle = css`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  font-family: \"Fira Code\", monospace;\n`\n","import IconHotSpot from \"@illa-public/icon-hot-spot\"\nimport { FC } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { DocsIcon } from \"@illa-design/react\"\nimport { LibrariesItemProps } from \"./interface\"\nimport {\n  actionGroupContainerStyle,\n  aliasContainerStyle,\n  itemContainerStyle,\n  titleContainerStyle,\n  titleStyle,\n} from \"./style\"\n\nexport const LibrariesItem: FC<LibrariesItemProps> = (props) => {\n  const { title, alias, docLink } = props\n  return (\n    <div css={itemContainerStyle}>\n      <div css={titleContainerStyle}>\n        <span css={titleStyle}>{title}</span>\n        <div css={actionGroupContainerStyle}>\n          <Link to={docLink} target=\"_blank\">\n            <IconHotSpot>\n              <DocsIcon />\n            </IconHotSpot>\n          </Link>\n        </div>\n      </div>\n      <p css={aliasContainerStyle}>{alias ?? title}</p>\n    </div>\n  )\n}\n","import { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { PanelBar } from \"@/components/PanelBar\"\nimport { LIBRARIES } from \"./constants\"\nimport { LibrariesItem } from \"./item\"\nimport { libraryContainerStyle } from \"./style\"\n\nexport const LibrarySpaceTree: FC = () => {\n  const { t } = useTranslation()\n  return (\n    <>\n      <PanelBar\n        title={`${t(\"editor.data_work_space.library\")}`}\n        destroyChildrenWhenClose\n      >\n        <div css={libraryContainerStyle}>\n          {LIBRARIES.map((library) => (\n            <LibrariesItem\n              key={library.title}\n              title={library.title}\n              docLink={library.docLink}\n              alias={library.alias}\n            />\n          ))}\n        </div>\n      </PanelBar>\n    </>\n  )\n}\n","import * as React from \"react\";\nconst SvgHomepage = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 14, height: 14, viewBox: \"0 0 14 14\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M7.17002 2.54684C7.06715 2.47827 6.93314 2.47827 6.83027 2.54684L2.45527 5.46351C2.37007 5.52031 2.3189 5.61593 2.3189 5.71833V11.375C2.3189 11.5442 2.45601 11.6813 2.62515 11.6813H11.3751C11.5443 11.6813 11.6814 11.5442 11.6814 11.375V5.71833C11.6814 5.61593 11.6302 5.52031 11.545 5.46351L7.17002 2.54684ZM6.1993 1.60039C6.68425 1.27708 7.31604 1.27708 7.80099 1.60039L12.176 4.51705C12.5776 4.78482 12.8189 5.23561 12.8189 5.71833V11.375C12.8189 12.1724 12.1725 12.8188 11.3751 12.8188H2.62515C1.82778 12.8188 1.1814 12.1724 1.1814 11.375V5.71833C1.1814 5.23561 1.42265 4.78482 1.8243 4.51705L6.1993 1.60039ZM4.37515 9.93129C4.37515 9.61718 4.62978 9.36254 4.9439 9.36254H9.0564C9.37051 9.36254 9.62515 9.61718 9.62515 9.93129C9.62515 10.2454 9.37051 10.5 9.0564 10.5H4.9439C4.62978 10.5 4.37515 10.2454 4.37515 9.93129Z\", fill: \"black\" }));\nexport default SvgHomepage;\n","import * as React from \"react\";\nconst SvgWebsite = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 16, height: 16, viewBox: \"0 0 16 16\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"mask\", { id: \"path-1-inside-1_12757_47884\", fill: \"white\" }, /* @__PURE__ */ React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M2.54404 5.5C2.46929 5.66287 2.40161 5.82967 2.34141 6C2.12031 6.62556 2 7.29873 2 8C2 8.70127 2.12031 9.37444 2.34141 10C2.40161 10.1703 2.46929 10.3371 2.54404 10.5C3.49205 12.5655 5.57851 14 8 14C10.4215 14 12.5079 12.5655 13.456 10.5C13.5307 10.3371 13.5984 10.1703 13.6586 10C13.8797 9.37444 14 8.70127 14 8C14 7.29873 13.8797 6.62556 13.6586 6C13.5984 5.82967 13.5307 5.66287 13.456 5.5C12.5079 3.43447 10.4215 2 8 2C5.57851 2 3.49205 3.43447 2.54404 5.5ZM7.32292 12.9545C5.76057 12.743 4.42623 11.8097 3.66861 10.5H5.97365C6.15025 10.9766 6.3577 11.407 6.56237 11.7774C6.82511 12.2528 7.08782 12.6376 7.28578 12.9048C7.29843 12.9218 7.31081 12.9384 7.32292 12.9545ZM8.67708 12.9545C10.2394 12.743 11.5738 11.8097 12.3314 10.5H10.0264C9.84975 10.9766 9.6423 11.407 9.43763 11.7774C9.17489 12.2528 8.91218 12.6376 8.71422 12.9048C8.70157 12.9218 8.68919 12.9384 8.67708 12.9545ZM10.326 9.5H12.7714C12.9197 9.02758 13 8.52403 13 8C13 7.47597 12.9197 6.97242 12.7714 6.5H10.326C10.4341 6.97376 10.5 7.47701 10.5 8C10.5 8.52299 10.4341 9.02624 10.326 9.5ZM9.29621 6.5C9.42173 6.97365 9.5 7.47834 9.5 8C9.5 8.52166 9.42173 9.02635 9.29621 9.5H6.70379C6.57827 9.02635 6.5 8.52166 6.5 8C6.5 7.47834 6.57827 6.97365 6.70379 6.5H9.29621ZM10.0264 5.5H12.3314C11.5738 4.19032 10.2394 3.25701 8.67708 3.04547C8.68919 3.06158 8.70157 3.07817 8.71422 3.09523C8.91218 3.36235 9.17489 3.74718 9.43763 4.22264C9.6423 4.59301 9.84975 5.02339 10.0264 5.5ZM7.32292 3.04547C5.76057 3.25701 4.42623 4.19032 3.66861 5.5H5.97365C6.15025 5.02339 6.3577 4.59301 6.56237 4.22264C6.82511 3.74718 7.08782 3.36235 7.28578 3.09523C7.29843 3.07817 7.31081 3.06158 7.32292 3.04547ZM7.04968 5.5C7.17108 5.2148 7.30364 4.94876 7.43763 4.7063C7.63699 4.34552 7.83636 4.04261 8 3.81332C8.16364 4.04261 8.36301 4.34552 8.56237 4.7063C8.69636 4.94876 8.82892 5.2148 8.95032 5.5H7.04968ZM5.67398 6.5H3.22862C3.08028 6.97242 3 7.47597 3 8C3 8.52403 3.08028 9.02758 3.22862 9.5H5.67398C5.56593 9.02624 5.5 8.52299 5.5 8C5.5 7.47701 5.56593 6.97376 5.67398 6.5ZM7.04968 10.5H8.95032C8.82892 10.7852 8.69636 11.0512 8.56237 11.2937C8.36301 11.6545 8.16364 11.9574 8 12.1867C7.83636 11.9574 7.63699 11.6545 7.43763 11.2937C7.30364 11.0512 7.17108 10.7852 7.04968 10.5Z\" })), /* @__PURE__ */ React.createElement(\"path\", { d: \"M2.34141 6L1.39857 5.66675L2.34141 6ZM2.54404 5.5L1.6352 5.08287L1.6352 5.08287L2.54404 5.5ZM2.34141 10L3.28425 9.66675L3.28425 9.66675L2.34141 10ZM2.54404 10.5L1.6352 10.9171H1.6352L2.54404 10.5ZM13.456 10.5L12.5471 10.0829L13.456 10.5ZM13.6586 10L14.6014 10.3332V10.3332L13.6586 10ZM13.6586 6L14.6014 5.66675V5.66675L13.6586 6ZM13.456 5.5L12.5471 5.91713V5.91713L13.456 5.5ZM3.66861 10.5V9.5H1.93487L2.80301 11.0007L3.66861 10.5ZM7.32292 12.9545L7.18875 13.9455L9.56031 14.2666L8.12225 12.3536L7.32292 12.9545ZM5.97365 10.5L6.91134 10.1525L6.66955 9.5H5.97365V10.5ZM6.56237 11.7774L5.68712 12.261H5.68712L6.56237 11.7774ZM7.28578 12.9048L6.48235 13.5002L6.48236 13.5002L7.28578 12.9048ZM8.67708 12.9545L7.87775 12.3536L6.43969 14.2666L8.81125 13.9455L8.67708 12.9545ZM12.3314 10.5L13.197 11.0007L14.0651 9.5H12.3314V10.5ZM10.0264 10.5V9.5H9.33045L9.08866 10.1525L10.0264 10.5ZM9.43763 11.7774L10.3129 12.261H10.3129L9.43763 11.7774ZM8.71422 12.9048L9.51764 13.5002L9.51765 13.5002L8.71422 12.9048ZM12.7714 9.5V10.5H13.5055L13.7255 9.79958L12.7714 9.5ZM10.326 9.5L9.35106 9.27764L9.07227 10.5H10.326V9.5ZM12.7714 6.5L13.7255 6.20042L13.5055 5.5H12.7714V6.5ZM10.326 6.5V5.5H9.07227L9.35106 6.72236L10.326 6.5ZM9.29621 6.5L10.2628 6.24384L10.0657 5.5H9.29621V6.5ZM9.29621 9.5V10.5H10.0657L10.2628 9.75616L9.29621 9.5ZM6.70379 9.5L5.73715 9.75616L5.93427 10.5H6.70379V9.5ZM6.70379 6.5V5.5H5.93427L5.73715 6.24384L6.70379 6.5ZM10.0264 5.5L9.08866 5.84746L9.33045 6.5H10.0264V5.5ZM12.3314 5.5V6.5H14.0651L13.197 4.99927L12.3314 5.5ZM8.67708 3.04547L8.81125 2.05451L6.43972 1.7334L7.87774 3.64635L8.67708 3.04547ZM8.71422 3.09523L7.91078 3.69062L7.91078 3.69062L8.71422 3.09523ZM9.43763 4.22264L10.3129 3.73897L10.3129 3.73897L9.43763 4.22264ZM7.32292 3.04547L8.12226 3.64635L9.56028 1.7334L7.18875 2.05451L7.32292 3.04547ZM3.66861 5.5L2.80301 4.99927L1.93487 6.5H3.66861V5.5ZM5.97365 5.5V6.5H6.66955L6.91134 5.84746L5.97365 5.5ZM6.56237 4.22264L5.68712 3.73897L5.68712 3.73897L6.56237 4.22264ZM7.28578 3.09523L8.08922 3.69062L8.08922 3.69062L7.28578 3.09523ZM7.43763 4.7063L8.31288 5.18996L8.31288 5.18996L7.43763 4.7063ZM7.04968 5.5L6.12957 5.10833L5.53716 6.5H7.04968V5.5ZM8 3.81332L8.81398 3.23242L8 2.09185L7.18602 3.23242L8 3.81332ZM8.56237 4.7063L7.68712 5.18996L7.68712 5.18996L8.56237 4.7063ZM8.95032 5.5V6.5H10.4628L9.87043 5.10833L8.95032 5.5ZM3.22862 6.5V5.5H2.49448L2.27455 6.20042L3.22862 6.5ZM5.67398 6.5L6.64894 6.72236L6.92773 5.5H5.67398V6.5ZM3.22862 9.5L2.27455 9.79958L2.49448 10.5H3.22862V9.5ZM5.67398 9.5V10.5H6.92773L6.64894 9.27764L5.67398 9.5ZM8.95032 10.5L9.87043 10.8917L10.4628 9.5H8.95032V10.5ZM7.04968 10.5V9.5H5.53716L6.12957 10.8917L7.04968 10.5ZM8.56237 11.2937L9.43763 11.7774L8.56237 11.2937ZM8 12.1867L7.18602 12.7676L8 13.9082L8.81398 12.7676L8 12.1867ZM7.43763 11.2937L6.56237 11.7774L7.43763 11.2937ZM3.28425 6.33325C3.33434 6.19153 3.39066 6.05272 3.45289 5.91713L1.6352 5.08287C1.54792 5.27303 1.46889 5.46781 1.39857 5.66675L3.28425 6.33325ZM3 8C3 7.41382 3.10045 6.85326 3.28425 6.33325L1.39857 5.66675C1.14016 6.39785 1 7.18364 1 8H3ZM3.28425 9.66675C3.10045 9.14674 3 8.58618 3 8H1C1 8.81636 1.14016 9.60215 1.39857 10.3332L3.28425 9.66675ZM3.45289 10.0829C3.39066 9.94728 3.33434 9.80847 3.28425 9.66675L1.39857 10.3332C1.46889 10.5322 1.54792 10.727 1.6352 10.9171L3.45289 10.0829ZM8 13C5.98362 13 4.24392 11.8064 3.45289 10.0829L1.6352 10.9171C2.74018 13.3247 5.17339 15 8 15V13ZM12.5471 10.0829C11.7561 11.8064 10.0164 13 8 13V15C10.8266 15 13.2598 13.3247 14.3648 10.9171L12.5471 10.0829ZM12.7157 9.66675C12.6657 9.80847 12.6093 9.94728 12.5471 10.0829L14.3648 10.9171C14.4521 10.727 14.5311 10.5322 14.6014 10.3332L12.7157 9.66675ZM13 8C13 8.58618 12.8995 9.14674 12.7157 9.66675L14.6014 10.3332C14.8598 9.60215 15 8.81636 15 8H13ZM12.7157 6.33325C12.8995 6.85326 13 7.41382 13 8H15C15 7.18364 14.8598 6.39785 14.6014 5.66675L12.7157 6.33325ZM12.5471 5.91713C12.6093 6.05272 12.6657 6.19153 12.7157 6.33325L14.6014 5.66675C14.5311 5.46782 14.4521 5.27303 14.3648 5.08287L12.5471 5.91713ZM8 3C10.0164 3 11.7561 4.19362 12.5471 5.91713L14.3648 5.08287C13.2598 2.67532 10.8266 1 8 1V3ZM3.45289 5.91713C4.24392 4.19362 5.98362 3 8 3V1C5.17339 1 2.74018 2.67532 1.6352 5.08287L3.45289 5.91713ZM2.80301 11.0007C3.71094 12.5702 5.31097 13.6912 7.18875 13.9455L7.4571 11.9636C6.21017 11.7947 5.14152 11.0491 4.53421 9.99927L2.80301 11.0007ZM5.97365 9.5H3.66861V11.5H5.97365V9.5ZM7.43763 11.2937C7.25283 10.9593 7.06772 10.5746 6.91134 10.1525L5.03595 10.8475C5.23279 11.3787 5.46258 11.8547 5.68712 12.261L7.43763 11.2937ZM8.08922 12.3094C7.91218 12.0705 7.67489 11.7231 7.43763 11.2937L5.68712 12.261C5.97532 12.7826 6.26347 13.2048 6.48235 13.5002L8.08922 12.3094ZM8.12225 12.3536C8.11149 12.3393 8.10046 12.3246 8.08921 12.3094L6.48236 13.5002C6.49639 13.5191 6.51014 13.5375 6.52359 13.5554L8.12225 12.3536ZM8.81125 13.9455C10.689 13.6912 12.2891 12.5702 13.197 11.0007L11.4658 9.99927C10.8585 11.0491 9.78983 11.7947 8.5429 11.9636L8.81125 13.9455ZM12.3314 9.5H10.0264V11.5H12.3314V9.5ZM9.08866 10.1525C8.93228 10.5746 8.74717 10.9593 8.56237 11.2937L10.3129 12.261C10.5374 11.8547 10.7672 11.3787 10.964 10.8475L9.08866 10.1525ZM8.56237 11.2937C8.32511 11.7231 8.08782 12.0705 7.91078 12.3094L9.51765 13.5002C9.73653 13.2048 10.0247 12.7826 10.3129 12.261L8.56237 11.2937ZM7.91079 12.3094C7.89954 12.3246 7.88851 12.3393 7.87775 12.3536L9.47641 13.5554C9.48986 13.5375 9.50361 13.5191 9.51764 13.5002L7.91079 12.3094ZM12.7714 8.5H10.326V10.5H12.7714V8.5ZM12 8C12 8.42128 11.9355 8.82386 11.8173 9.20042L13.7255 9.79958C13.9039 9.23131 14 8.62678 14 8H12ZM11.8173 6.79958C11.9355 7.17614 12 7.57872 12 8H14C14 7.37322 13.9039 6.76869 13.7255 6.20042L11.8173 6.79958ZM10.326 7.5H12.7714V5.5H10.326V7.5ZM9.35106 6.72236C9.44465 7.13272 9.5 7.56103 9.5 8H11.5C11.5 7.393 11.4235 6.81481 11.301 6.27764L9.35106 6.72236ZM9.5 8C9.5 8.43897 9.44465 8.86728 9.35106 9.27764L11.301 9.72236C11.4235 9.18519 11.5 8.607 11.5 8H9.5ZM10.5 8C10.5 7.37862 10.4068 6.78722 10.2628 6.24384L8.32958 6.75616C8.43662 7.16008 8.5 7.57806 8.5 8H10.5ZM10.2628 9.75616C10.4068 9.21278 10.5 8.62138 10.5 8H8.5C8.5 8.42194 8.43662 8.83992 8.32958 9.24384L10.2628 9.75616ZM9.29621 8.5H6.70379V10.5H9.29621V8.5ZM5.5 8C5.5 8.62138 5.59316 9.21278 5.73715 9.75616L7.67042 9.24384C7.56338 8.83992 7.5 8.42194 7.5 8H5.5ZM5.73715 6.24384C5.59316 6.78722 5.5 7.37862 5.5 8H7.5C7.5 7.57806 7.56338 7.16008 7.67042 6.75616L5.73715 6.24384ZM6.70379 7.5H9.29621V5.5H6.70379V7.5ZM10.0264 6.5H12.3314V4.5H10.0264V6.5ZM13.197 4.99927C12.2891 3.42975 10.689 2.30876 8.81125 2.05451L8.5429 4.03642C9.78983 4.20526 10.8585 4.95089 11.4658 6.00073L13.197 4.99927ZM7.87774 3.64635C7.8885 3.66067 7.89952 3.67542 7.91078 3.69062L9.51765 2.49983C9.50363 2.48091 9.48987 2.46249 9.47641 2.44458L7.87774 3.64635ZM7.91078 3.69062C8.08782 3.92952 8.32511 4.27693 8.56237 4.7063L10.3129 3.73897C10.0247 3.21744 9.73653 2.79519 9.51765 2.49983L7.91078 3.69062ZM8.56237 4.7063C8.74717 5.04072 8.93228 5.42544 9.08866 5.84746L10.964 5.15254C10.7672 4.62134 10.5374 4.1453 10.3129 3.73897L8.56237 4.7063ZM7.18875 2.05451C5.31097 2.30876 3.71094 3.42975 2.80301 4.99927L4.53421 6.00073C5.14152 4.95089 6.21017 4.20526 7.4571 4.03642L7.18875 2.05451ZM3.66861 6.5H5.97365V4.5H3.66861V6.5ZM6.91134 5.84746C7.06772 5.42544 7.25283 5.04072 7.43763 4.7063L5.68712 3.73897C5.46258 4.1453 5.23279 4.62134 5.03595 5.15254L6.91134 5.84746ZM7.43763 4.7063C7.67489 4.27693 7.91218 3.92952 8.08922 3.69062L6.48235 2.49983C6.26347 2.79519 5.97532 3.21744 5.68712 3.73897L7.43763 4.7063ZM8.08922 3.69062C8.10048 3.67542 8.1115 3.66067 8.12226 3.64635L6.52359 2.44458C6.51013 2.46249 6.49637 2.48091 6.48235 2.49983L8.08922 3.69062ZM6.56237 4.22263C6.41381 4.49147 6.26583 4.78824 6.12957 5.10833L7.96978 5.89167C8.07633 5.64137 8.19347 5.40606 8.31288 5.18996L6.56237 4.22263ZM7.18602 3.23242C7.00402 3.48746 6.78327 3.82289 6.56237 4.22264L8.31288 5.18996C8.49071 4.86815 8.66871 4.59777 8.81398 4.39422L7.18602 3.23242ZM9.43763 4.22264C9.21673 3.82289 8.99598 3.48746 8.81398 3.23242L7.18602 4.39422C7.33129 4.59777 7.50929 4.86815 7.68712 5.18996L9.43763 4.22264ZM9.87043 5.10833C9.73417 4.78824 9.58619 4.49147 9.43763 4.22263L7.68712 5.18996C7.80653 5.40606 7.92367 5.64137 8.03022 5.89167L9.87043 5.10833ZM7.04968 6.5H8.95032V4.5H7.04968V6.5ZM3.22862 7.5H5.67398V5.5H3.22862V7.5ZM4 8C4 7.57872 4.06445 7.17614 4.18269 6.79958L2.27455 6.20042C2.09611 6.76869 2 7.37322 2 8H4ZM4.18269 9.20042C4.06445 8.82386 4 8.42128 4 8H2C2 8.62678 2.09611 9.23131 2.27455 9.79958L4.18269 9.20042ZM5.67398 8.5H3.22862V10.5H5.67398V8.5ZM6.64894 9.27764C6.55535 8.86728 6.5 8.43897 6.5 8H4.5C4.5 8.607 4.5765 9.18519 4.69901 9.72236L6.64894 9.27764ZM6.5 8C6.5 7.56103 6.55535 7.13272 6.64894 6.72236L4.69901 6.27764C4.5765 6.81481 4.5 7.393 4.5 8H6.5ZM8.95032 9.5H7.04968V11.5H8.95032V9.5ZM9.43763 11.7774C9.58619 11.5085 9.73417 11.2118 9.87043 10.8917L8.03022 10.1083C7.92367 10.3586 7.80653 10.5939 7.68712 10.81L9.43763 11.7774ZM8.81398 12.7676C8.99598 12.5125 9.21673 12.1771 9.43763 11.7774L7.68712 10.81C7.50929 11.1318 7.33129 11.4022 7.18602 11.6058L8.81398 12.7676ZM6.56237 11.7774C6.78327 12.1771 7.00401 12.5125 7.18602 12.7676L8.81398 11.6058C8.66871 11.4022 8.49071 11.1318 8.31288 10.81L6.56237 11.7774ZM6.12957 10.8917C6.26583 11.2118 6.41381 11.5085 6.56237 11.7774L8.31288 10.81C8.19347 10.5939 8.07633 10.3586 7.96978 10.1083L6.12957 10.8917Z\", fill: \"#1D2129\", mask: \"url(#path-1-inside-1_12757_47884)\" }));\nexport default SvgWebsite;\n","import { ILLA_MIXPANEL_EVENT_TYPE } from \"@illa-public/mixpanel-utils\"\nimport { FC, useCallback, useContext, useEffect } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { DropList, DropListItem } from \"@illa-design/react\"\nimport { getCurrentPageSortedKeys } from \"@/redux/currentApp/components/componentsSelector\"\nimport { componentsActions } from \"@/redux/currentApp/components/componentsSlice\"\nimport { trackInEditor } from \"@/utils/mixpanelHelper\"\nimport { ShortCutContext } from \"@/utils/shortcut/shortcutProvider\"\nimport { ActionMenuProps } from \"./interface\"\n\nexport const ActionMenu: FC<ActionMenuProps> = (props) => {\n  const { pageDisplayName, isParentPage, parentPageName, openRenameModal } =\n    props\n  const { t } = useTranslation()\n\n  const pageDisplayNames = useSelector(getCurrentPageSortedKeys)\n\n  const dispatch = useDispatch()\n\n  const shortcut = useContext(ShortCutContext)\n\n  useEffect(() => {\n    trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.SHOW, {\n      element: \"manage_page\",\n    })\n  }, [])\n\n  const handleClickSetHomePage = useCallback(() => {\n    if (!pageDisplayName) return\n    trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n      element: \"set_home_page\",\n    })\n    if (isParentPage) {\n      dispatch(\n        componentsActions.updateRootNodePropsReducer({\n          homepageDisplayName: pageDisplayName,\n        }),\n      )\n    }\n    if (!isParentPage && parentPageName) {\n      dispatch(\n        componentsActions.updateDefaultSubPagePathReducer({\n          pageName: parentPageName,\n          subPagePath: pageDisplayName,\n        }),\n      )\n    }\n  }, [dispatch, isParentPage, pageDisplayName, parentPageName])\n\n  const handleDeletePage = useCallback(() => {\n    if (isParentPage && pageDisplayNames.length > 1) {\n      trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n        element: \"delete_page\",\n      })\n      shortcut.showDeleteDialog([pageDisplayName], \"page\", {\n        originPageSortedKey: pageDisplayNames,\n      })\n    }\n    if (!isParentPage && parentPageName) {\n      shortcut.showDeleteDialog([pageDisplayName], \"subpage\", {\n        parentPageName: parentPageName,\n      })\n    }\n  }, [\n    isParentPage,\n    pageDisplayName,\n    pageDisplayNames,\n    parentPageName,\n    shortcut,\n  ])\n\n  const handleClickRename = useCallback(() => {\n    openRenameModal()\n  }, [openRenameModal])\n\n  return (\n    <DropList minW=\"184px\">\n      <DropListItem\n        value=\"setHomePage\"\n        title={\n          isParentPage\n            ? t(\"editor.page.label_name.set_as_homepage\")\n            : t(\"editor.page.label_name.set_as_default_subpage\")\n        }\n        onClick={handleClickSetHomePage}\n      />\n      <DropListItem\n        value=\"RenameURL\"\n        title={\n          isParentPage\n            ? t(\"widget.page.label.rename_page_url\")\n            : t(\"widget.page.label.rename_url\")\n        }\n        onClick={handleClickRename}\n      />\n      <DropListItem\n        value=\"delete\"\n        title={t(\"editor.inspect.header.action_menu.delete\")}\n        deleted\n        onClick={handleDeletePage}\n      />\n    </DropList>\n  )\n}\n\nActionMenu.displayName = \"ActionMenu\"\n","import { css } from \"@emotion/react\"\nimport { globalColor, illaPrefix } from \"@illa-design/react\"\n\nconst getLabelSizeFontStyle = (size: \"big\" | \"small\") => {\n  switch (size) {\n    case \"big\": {\n      return css`\n        font-size: 14px;\n        color: ${globalColor(`--${illaPrefix}-grayBlue-02`)};\n      `\n    }\n    case \"small\": {\n      return css`\n        font-size: 12px;\n        color: ${globalColor(`--${illaPrefix}-grayBlue-03`)};\n      `\n    }\n  }\n}\n\nexport function labelStyle(size: \"big\" | \"small\", disabledTooltip: boolean) {\n  const borderStyle = disabledTooltip\n    ? null\n    : css`\n        border-bottom: 1px dashed ${globalColor(`--${illaPrefix}-grayBlue-03`)};\n      `\n  return css`\n    font-weight: 500;\n    height: 22px;\n    line-height: 22px;\n    ${borderStyle};\n    ${getLabelSizeFontStyle(size)};\n  `\n}\n","import { FC } from \"react\"\nimport { Trigger } from \"@illa-design/react\"\nimport { PageLabelProps } from \"./interface\"\nimport { labelStyle } from \"./style\"\n\nexport const PageLabel: FC<PageLabelProps> = (props) => {\n  const { tooltip, labelName, size } = props\n  return (\n    <Trigger\n      trigger=\"hover\"\n      position=\"left\"\n      content={tooltip}\n      disabled={!tooltip}\n    >\n      <span css={labelStyle(size, !tooltip)}>{labelName}</span>\n    </Trigger>\n  )\n}\n\nPageLabel.displayName = \"PageLabel\"\n","import { css } from \"@emotion/react\"\n\nexport const leftAndRightCss = css`\n  min-height: 40px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 16px;\n  width: 100%;\n`\n","import { FC } from \"react\"\nimport { LeftAndRightLayoutProps } from \"./interface\"\nimport { leftAndRightCss } from \"./style\"\n\nexport const LeftAndRightLayout: FC<LeftAndRightLayoutProps> = (props) => {\n  const { children } = props\n  return <div css={leftAndRightCss}>{children}</div>\n}\n","import { css } from \"@emotion/react\"\n\nexport const setterPaddingStyle = css`\n  padding: 8px 0px;\n`\n","import { FC } from \"react\"\nimport { SetterPaddingLayout } from \"./interface\"\nimport { setterPaddingStyle } from \"./style\"\n\nexport const SetterPadding: FC<SetterPaddingLayout> = (props) => {\n  const { children } = props\n  return <div css={setterPaddingStyle}>{children}</div>\n}\n","import { css } from \"@emotion/react\"\nimport { globalColor, illaPrefix } from \"@illa-design/react\"\n\nexport const modalWrapperStyle = css`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: ${globalColor(`--${illaPrefix}-white-01`)};\n  box-shadow: 0px 2px 16px rgba(0, 0, 0, 0.16);\n  border-radius: 8px;\n  overflow: hidden;\n  position: relative;\n  padding-bottom: 8px;\n`\n\nexport const modalHeaderWrapper = css`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px 16px;\n  width: 240px;\n`\n\nexport const modalHeaderCloseIconHotSpot = css`\n  width: 24px;\n  height: 24px;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-02`)};\n  cursor: pointer;\n`\n\nexport const titleStyle = css`\n  font-weight: 500;\n  font-size: 16px;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-04`)};\n  max-width: 200px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n","import { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { CloseIcon, Input } from \"@illa-design/react\"\nimport { PageLabel } from \"@/page/App/components/PagePanel/Components/Label\"\nimport { LeftAndRightLayout } from \"@/page/App/components/PagePanel/Layout/leftAndRight\"\nimport { SetterPadding } from \"@/page/App/components/PagePanel/Layout/setterPadding\"\nimport { ModalProps } from \"./interface\"\nimport {\n  modalHeaderCloseIconHotSpot,\n  modalHeaderWrapper,\n  modalWrapperStyle,\n  titleStyle,\n} from \"./style\"\n\nexport const Modal: FC<ModalProps> = (props) => {\n  const { onCloseModal, path, handleUpdateItem, isParentPage } = props\n  const { t } = useTranslation()\n\n  return (\n    <div css={modalWrapperStyle}>\n      <div css={modalHeaderWrapper}>\n        <span css={titleStyle}>\n          {isParentPage\n            ? t(\"widget.page.label.rename_page_url\")\n            : t(\"editor.page.label_name.edit_view\")}\n        </span>\n        <div css={modalHeaderCloseIconHotSpot} onClick={onCloseModal}>\n          <CloseIcon />\n        </div>\n      </div>\n      <LeftAndRightLayout>\n        <PageLabel\n          labelName={t(\"editor.page.label_name.view_path\")}\n          size=\"big\"\n          tooltip={t(\"editor.page.tooltips.view_path\")}\n        />\n        <SetterPadding>\n          <Input\n            w=\"160px\"\n            value={path}\n            colorScheme=\"techPurple\"\n            onChange={handleUpdateItem}\n          />\n        </SetterPadding>\n      </LeftAndRightLayout>\n    </div>\n  )\n}\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const pageItemContainerStyle = (\n  isSelected: boolean,\n  level: number,\n) => css`\n  padding-left: ${level > 1 ? level * 16 + 8 : 16}px;\n  padding-right: 16px;\n  background-color: ${isSelected\n    ? getColor(\"techPurple\", \"08\")\n    : \"transparent\"};\n  cursor: pointer;\n  :hover {\n    .icon-area {\n      transform: translateX(0);\n    }\n  }\n`\n\nexport const pageNameStyle = css`\n  font-size: 12px;\n  color: ${getColor(\"grayBlue\", \"02\")};\n  font-weight: 500;\n`\n\nexport const parentPageNameStyle = css`\n  font-size: 12px;\n  color: ${getColor(\"grayBlue\", \"04\")};\n  font-weight: 500;\n`\n\nexport const pageNameContainerStyle = css`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  flex: none;\n`\n\nexport const baseIconStyle = css`\n  font-size: 12px;\n  width: 12px;\n  height: 12px;\n  flex: none;\n`\n\nexport const actionAreaContainerStyle = css`\n  flex: none;\n  display: flex;\n  align-items: center;\n  transition: all 0.2s ease-in-out;\n  transform: translateX(48px);\n`\n\nexport const iconHotSpotContainerStyle = css`\n  flex: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 6px;\n`\n\nexport const plusIconStyle = css`\n  ${baseIconStyle};\n  color: ${getColor(\"grayBlue\", \"04\")};\n`\n\nexport const pageItemInnerContainerStyle = css`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 24px;\n  overflow: hidden;\n`\n","import { ILLA_MIXPANEL_EVENT_TYPE } from \"@illa-public/mixpanel-utils\"\nimport { FC, memo, useCallback, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch } from \"react-redux\"\nimport {\n  Dropdown,\n  PlusIcon,\n  SettingIcon,\n  Trigger,\n  useMessage,\n} from \"@illa-design/react\"\nimport HomepageIcon from \"@/assets/dataWorkspace/homepage.svg?react\"\nimport WebsiteIcon from \"@/assets/dataWorkspace/website.svg?react\"\nimport { componentsActions } from \"@/redux/currentApp/components/componentsSlice\"\nimport { executionActions } from \"@/redux/currentApp/executionTree/executionSlice\"\nimport { trackInEditor } from \"@/utils/mixpanelHelper\"\nimport { isValidDisplayName } from \"@/utils/typeHelper\"\nimport { ActionMenu } from \"../ActionMenu\"\nimport { Modal } from \"../ChangePathModal/modal\"\nimport { PageItemProps } from \"./interface\"\nimport {\n  actionAreaContainerStyle,\n  baseIconStyle,\n  iconHotSpotContainerStyle,\n  pageItemContainerStyle,\n  pageItemInnerContainerStyle,\n  pageNameContainerStyle,\n  pageNameStyle,\n  parentPageNameStyle,\n  plusIconStyle,\n} from \"./style\"\n\nconst PageItem: FC<PageItemProps> = (props) => {\n  const {\n    isHomePage,\n    pageName,\n    level = 1,\n    parentPageName,\n    subPagePaths,\n    currentPagePath,\n    currentSubPagePath,\n  } = props\n\n  const isSelected = !currentSubPagePath && currentPagePath === pageName\n  const subPageIsSelected =\n    currentPagePath === parentPageName && pageName === currentSubPagePath\n\n  const dispatch = useDispatch()\n  const [modalVisible, setModalVisible] = useState(false)\n  const [actionMenuVisible, setActionMenuVisible] = useState(false)\n  const [currentPageName, setCurrentPageName] = useState(pageName)\n  const message = useMessage()\n  const { t } = useTranslation()\n\n  const handleClickChangePage = useCallback(() => {\n    if (!parentPageName) {\n      dispatch(\n        executionActions.updateCurrentPagePathReducer({\n          pageDisplayName: pageName,\n        }),\n      )\n    } else {\n      dispatch(\n        executionActions.updateCurrentPagePathReducer({\n          pageDisplayName: parentPageName,\n          subPagePath: pageName,\n        }),\n      )\n    }\n  }, [dispatch, pageName, parentPageName])\n\n  const handlerAfterClose = useCallback(() => {\n    if (!parentPageName) {\n      if (!isValidDisplayName(currentPageName)) {\n        message.error({\n          content: t(\"editor.display_name.validate_error\", {\n            displayName: currentPageName,\n          }),\n        })\n        setCurrentPageName(pageName)\n        return\n      }\n      dispatch(\n        componentsActions.updateComponentDisplayNameReducer({\n          displayName: pageName,\n          newDisplayName: currentPageName,\n        }),\n      )\n    } else {\n      dispatch(\n        componentsActions.updateSubPagePathReducer({\n          pageName: parentPageName,\n          subPagePath: currentPageName,\n          oldSubPagePath: pageName,\n        }),\n      )\n    }\n  }, [currentPageName, dispatch, message, pageName, parentPageName, t])\n  const handleOpenModal = useCallback(() => {\n    setModalVisible(true)\n  }, [])\n\n  const addSubPage = useCallback(() => {\n    if (!parentPageName) {\n      dispatch(\n        componentsActions.addSubPageReducer({\n          pageName: pageName,\n        }),\n      )\n    }\n  }, [dispatch, pageName, parentPageName])\n\n  return (\n    <>\n      <Trigger\n        withoutPadding\n        colorScheme=\"white\"\n        popupVisible={modalVisible}\n        content={\n          <Modal\n            path={currentPageName}\n            onCloseModal={() => {\n              setModalVisible(false)\n            }}\n            handleUpdateItem={setCurrentPageName}\n            isParentPage={level === 1}\n          />\n        }\n        trigger=\"focus\"\n        showArrow={false}\n        position=\"right\"\n        clickOutsideToClose\n        onVisibleChange={(visible) => {\n          if (visible) {\n            trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.SHOW, {\n              element: \"edit_view_show\",\n            })\n          }\n          if (!visible) {\n            setModalVisible(false)\n            handlerAfterClose()\n          }\n        }}\n      >\n        <span>\n          <Dropdown\n            position=\"bottom-end\"\n            trigger=\"contextmenu\"\n            popupVisible={actionMenuVisible}\n            dropList={\n              <ActionMenu\n                pageDisplayName={pageName}\n                isParentPage={level === 1}\n                parentPageName={parentPageName}\n                openRenameModal={handleOpenModal}\n              />\n            }\n            onVisibleChange={setActionMenuVisible}\n          >\n            <div\n              css={pageItemContainerStyle(\n                isSelected || subPageIsSelected,\n                level,\n              )}\n              onClick={handleClickChangePage}\n            >\n              <div css={pageItemInnerContainerStyle}>\n                <div css={pageNameContainerStyle}>\n                  {!parentPageName && <WebsiteIcon />}\n                  {parentPageName && (\n                    <span css={parentPageNameStyle}>/{parentPageName}</span>\n                  )}\n                  <span css={pageNameStyle}>/{pageName}</span>\n                </div>\n                <div css={actionAreaContainerStyle} className=\"icon-area\">\n                  {isHomePage && (\n                    <div css={iconHotSpotContainerStyle}>\n                      <HomepageIcon css={baseIconStyle} />\n                    </div>\n                  )}\n                  <div\n                    css={iconHotSpotContainerStyle}\n                    onClick={() => {\n                      setActionMenuVisible(true)\n                    }}\n                  >\n                    <SettingIcon css={plusIconStyle} />\n                  </div>\n                  {level === 1 && (\n                    <div css={iconHotSpotContainerStyle} onClick={addSubPage}>\n                      <PlusIcon css={plusIconStyle} />\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </Dropdown>\n        </span>\n      </Trigger>\n      {subPagePaths &&\n        Array.from(subPagePaths).map((subPagePath) => {\n          return (\n            <PageItem\n              key={subPagePath}\n              level={level + 1}\n              parentPageName={pageName}\n              isHomePage={false}\n              pageName={subPagePath}\n              currentPagePath={currentPagePath}\n              currentSubPagePath={currentSubPagePath}\n            />\n          )\n        })}\n    </>\n  )\n}\n\nPageItem.displayName = \"DataWorkspace-PageItem\"\nexport default memo(PageItem)\n","import { css } from \"@emotion/react\"\n\nexport const pageSpaceTreeStyle = css`\n  padding-bottom: 8px;\n`\n","import IconHotSpot from \"@illa-public/icon-hot-spot\"\nimport { ILLA_MIXPANEL_EVENT_TYPE } from \"@illa-public/mixpanel-utils\"\nimport { FC, MouseEvent, useCallback } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { PlusIcon } from \"@illa-design/react\"\nimport { PanelBar } from \"@/components/PanelBar\"\nimport { getPageDisplayNameMapViewDisplayName } from \"@/redux/currentApp/components/componentsSelector\"\nimport { componentsActions } from \"@/redux/currentApp/components/componentsSlice\"\nimport { RootComponentNodeProps } from \"@/redux/currentApp/components/componentsState\"\nimport { getRootNodeExecutionResult } from \"@/redux/currentApp/executionTree/executionSelector\"\nimport { FocusManager } from \"@/utils/focusManager\"\nimport { generatePageConfig } from \"@/utils/generators/generatePageOrSectionConfig\"\nimport { trackInEditor } from \"@/utils/mixpanelHelper\"\nimport PageItem from \"./components/PageItem\"\nimport { pageSpaceTreeStyle } from \"./style\"\n\nexport const PageSpaceTree: FC = () => {\n  const { t } = useTranslation()\n  const rootNodeProps = useSelector(\n    getRootNodeExecutionResult,\n  ) as RootComponentNodeProps\n  const {\n    currentPageIndex,\n    homepageDisplayName,\n    pageSortedKey = [],\n    currentSubPagePath,\n  } = rootNodeProps\n\n  const currentPageDisplayName = pageSortedKey[currentPageIndex]\n  const dispatch = useDispatch()\n\n  const handleClickAddButton = useCallback(\n    (e: MouseEvent<HTMLButtonElement>) => {\n      e.stopPropagation()\n      trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n        element: \"add_page\",\n      })\n      const newPageConfig = generatePageConfig()\n      dispatch(componentsActions.addPageNodeWithSortOrderReducer(newPageConfig))\n    },\n    [dispatch],\n  )\n\n  const pageDisplayNameMapSubPageDisplayName = useSelector(\n    getPageDisplayNameMapViewDisplayName,\n  )\n\n  return (\n    <PanelBar\n      title={t(\"editor.data_work_space.pages_title\")}\n      destroyChildrenWhenClose\n      customIcon={\n        <IconHotSpot onClick={handleClickAddButton}>\n          <PlusIcon />\n        </IconHotSpot>\n      }\n      onIllaFocus={() => {\n        FocusManager.switchFocus(\"data_page\")\n      }}\n    >\n      <div css={pageSpaceTreeStyle}>\n        {Object.keys(pageDisplayNameMapSubPageDisplayName).map((key, index) => {\n          const isHomePage = homepageDisplayName\n            ? homepageDisplayName === key\n            : index === 0\n          return (\n            <PageItem\n              isHomePage={isHomePage}\n              pageName={key}\n              key={key}\n              level={1}\n              subPagePaths={pageDisplayNameMapSubPageDisplayName[key]}\n              currentPagePath={currentPageDisplayName}\n              currentSubPagePath={currentSubPagePath}\n            />\n          )\n        })}\n      </div>\n    </PanelBar>\n  )\n}\n","import { FC } from \"react\"\nimport { leftPanelStyle } from \"../../style\"\nimport { ActionSpaceTree } from \"./components/ActionSpaceTree\"\nimport { ComponentSpaceTree } from \"./components/ComponentSpaceTree\"\nimport { GlobalsSpaceTree } from \"./components/GlobalsSpaceTree\"\nimport { LibrarySpaceTree } from \"./components/LibrariesTree\"\nimport { PageSpaceTree } from \"./components/PageSpaceTree\"\nimport { innerContainerStyle } from \"./style\"\n\nexport const DataWorkspace: FC = () => {\n  return (\n    <div css={leftPanelStyle}>\n      <div css={innerContainerStyle}>\n        <PageSpaceTree />\n        <ComponentSpaceTree />\n        <ActionSpaceTree />\n        <GlobalsSpaceTree />\n        <LibrarySpaceTree />\n      </div>\n    </div>\n  )\n}\n\nDataWorkspace.displayName = \"DataWorkspace\"\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const headerContainerStyle = css`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px 24px 16px 20px;\n  border-bottom: 1px solid ${getColor(\"grayBlue\", \"08\")};\n`\n\nexport const headerStyle = css`\n  margin: 0;\n  padding: 0;\n  color: ${getColor(\"grayBlue\", \"02\")};\n  font-weight: 500;\n  line-height: 22px;\n  font-size: 14px;\n`\n","import IconHotSpot from \"@illa-public/icon-hot-spot\"\nimport { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { CloseIcon } from \"@illa-design/react\"\nimport { headerContainerStyle, headerStyle } from \"./style\"\n\nexport const MissingResourceHeader: FC<{ handleCloseModal: () => void }> = ({\n  handleCloseModal,\n}) => {\n  const { t } = useTranslation()\n  return (\n    <div css={headerContainerStyle}>\n      <h3 css={headerStyle}>\n        {t(\"editor.action.panel.titlemissing_resource.missing_resources\")}\n      </h3>\n      <IconHotSpot onClick={handleCloseModal}>\n        <CloseIcon />\n      </IconHotSpot>\n    </div>\n  )\n}\n","import { FC, createContext } from \"react\"\nimport {\n  IMissingResourcesContext,\n  IMissingResourcesProviderProps,\n} from \"./interface\"\n\nexport const MissingResourceContext = createContext<IMissingResourcesContext>(\n  {} as IMissingResourcesContext,\n)\n\nexport const MissingResourcesProvider: FC<IMissingResourcesProviderProps> = (\n  props,\n) => {\n  const { children, ...others } = props\n  return (\n    <MissingResourceContext.Provider value={others}>\n      {children}\n    </MissingResourceContext.Provider>\n  )\n}\n","import { css } from \"@emotion/react\"\n\nexport const missingResourceFooterContainerStyle = css`\n  padding: 24px;\n  display: flex;\n  justify-content: space-between;\n  gap: 8px;\n`\n","import { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { Button } from \"@illa-design/react\"\nimport { MissingResourceFooterProps } from \"./interface\"\nimport { missingResourceFooterContainerStyle } from \"./style\"\n\nexport const MissingResourceFooter: FC<MissingResourceFooterProps> = ({\n  handleCancelModal,\n  handleConfirmModal,\n  isSaving,\n  canSave,\n}) => {\n  const { t } = useTranslation()\n  return (\n    <div css={missingResourceFooterContainerStyle}>\n      <Button colorScheme=\"grayBlue\" fullWidth onClick={handleCancelModal}>\n        {t(\"editor.action.panel.button.missing_resource.cancel\")}\n      </Button>\n      <Button\n        colorScheme=\"black\"\n        fullWidth\n        onClick={handleConfirmModal}\n        loading={isSaving}\n        disabled={!canSave}\n      >\n        {t(\"editor.action.panel.button.missing_resource.save\")}\n      </Button>\n    </div>\n  )\n}\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const createNewStyle = css`\n  color: ${getColor(\"techPurple\", \"03\")};\n`\n\nexport const itemContainer = css`\n  width: 100%;\n  display: flex;\n  align-items: center;\n`\n\nexport const itemLogo = css`\n  flex-shrink: 0;\n`\n\nexport const itemText = css`\n  margin-left: 8px;\n  flex-shrink: 1;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  flex-grow: 1;\n`\n\nexport const agentActionStyle = (size: string) => css`\n  width: ${size};\n  height: ${size};\n  flex-shrink: 0;\n  border-radius: 4px;\n`\n","import { Resource, ResourceContent } from \"@illa-public/public-types\"\n\nexport const LIKE_MYSQL_TYPES = [\n  \"clickhouse\",\n  \"supabasedb\",\n  \"mysql\",\n  \"tidb\",\n  \"mariadb\",\n  \"postgresql\",\n  \"snowflake\",\n  \"neon\",\n  \"hydra\",\n]\n\nexport const getSameTypeResourceList = (\n  resourceList: Resource<ResourceContent>[],\n  actionType: string,\n) => {\n  const isLikeMysql = LIKE_MYSQL_TYPES.includes(actionType)\n  return resourceList.filter((resource) => {\n    if (isLikeMysql) {\n      return LIKE_MYSQL_TYPES.includes(resource.resourceType)\n    }\n    return resource.resourceType === actionType\n  })\n}\n","import { getIconFromResourceType } from \"@illa-public/icon\"\nimport {\n  ILLA_MIXPANEL_EVENT_TYPE,\n  MixpanelTrackContext,\n} from \"@illa-public/mixpanel-utils\"\nimport { Resource, ResourceType } from \"@illa-public/public-types\"\nimport {\n  ResourceGenerator,\n  ResourceGeneratorProvider,\n} from \"@illa-public/resource-generator\"\nimport { FC, Suspense, useContext, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { AddIcon, Select, SelectOptionObject, Space } from \"@illa-design/react\"\nimport { MissingResourceContext } from \"../../context\"\nimport {\n  agentActionStyle,\n  createNewStyle,\n  itemContainer,\n  itemLogo,\n  itemText,\n} from \"./style\"\nimport { LIKE_MYSQL_TYPES, getSameTypeResourceList } from \"./utils\"\n\ninterface ResourceChooseProps {\n  changeResourceID: (resourceID: string) => void\n  resourceID?: string\n  resourceType: string\n}\n\nconst ResourceChoose: FC<ResourceChooseProps> = ({\n  resourceID,\n  resourceType: origanResourceType,\n  changeResourceID,\n}) => {\n  const { t } = useTranslation()\n\n  const { resourceList, aiAgentList, addResourceCallback } = useContext(\n    MissingResourceContext,\n  )\n  const { track } = useContext(MixpanelTrackContext)\n\n  const finalResourceList = getSameTypeResourceList(\n    resourceList,\n    origanResourceType,\n  )\n  const [generatorVisible, setGeneratorVisible] = useState(false)\n  const isMysqlLike = LIKE_MYSQL_TYPES.includes(origanResourceType)\n  const isAIAgent = origanResourceType === \"aiagent\"\n\n  const createOrUpdateResourceCallback = (\n    resource: Resource,\n    isUpdate: boolean,\n  ) => {\n    setGeneratorVisible(false)\n    if (!isUpdate) {\n      addResourceCallback(resource)\n      changeResourceID(resource.resourceID)\n    }\n  }\n\n  const options: SelectOptionObject[] = isAIAgent\n    ? aiAgentList.map((item) => ({\n        label: (\n          <div css={itemContainer}>\n            <span css={itemLogo}>\n              <img src={item?.icon} css={agentActionStyle(\"14px\")} />\n            </span>\n            <span css={itemText}>{item.name}</span>\n          </div>\n        ),\n        value: item.aiAgentID,\n      }))\n    : finalResourceList.map((item) => ({\n        label: (\n          <div css={itemContainer}>\n            <span css={itemLogo}>\n              <Suspense>\n                {getIconFromResourceType(item.resourceType, \"14px\")}\n              </Suspense>\n            </span>\n            <span css={itemText}>{item.resourceName}</span>\n          </div>\n        ),\n        value: item.resourceID,\n      }))\n  if (!isAIAgent) {\n    options.unshift({\n      label: (\n        <Space\n          size=\"8px\"\n          direction=\"horizontal\"\n          alignItems=\"center\"\n          css={createNewStyle}\n        >\n          <AddIcon size=\"16px\" />\n          {t(\"editor.action.panel.option.resource.new\")}\n        </Space>\n      ),\n      value: \"create\",\n    })\n  }\n\n  return (\n    <>\n      <Select\n        w=\"100%\"\n        colorScheme=\"techPurple\"\n        options={options}\n        value={\n          resourceID ||\n          t(\n            \"editor.action.panel.label.placeholder.missing_resource.choose_a_resource\",\n          )\n        }\n        onChange={(value) => {\n          if (value === \"create\" && !isAIAgent) {\n            track(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n              element: \"replacement_dropdown_create_new\",\n            })\n            setGeneratorVisible(true)\n            return\n          }\n          changeResourceID(value as string)\n        }}\n        onClick={() => {\n          track(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n            element: \"replacement_dropdown\",\n          })\n        }}\n      />\n\n      {generatorVisible && (\n        <ResourceGeneratorProvider\n          allResource={resourceList}\n          createOrUpdateResourceCallback={createOrUpdateResourceCallback}\n        >\n          <ResourceGenerator\n            visible={generatorVisible}\n            onClose={() => {\n              setGeneratorVisible(false)\n            }}\n            defaultConfig={{\n              defaultResourceType: origanResourceType as ResourceType,\n              defaultStep: isMysqlLike ? \"select\" : \"createResource\",\n              canBack: false,\n            }}\n            filterResourceType={(resourceType) => {\n              if (isMysqlLike) {\n                return LIKE_MYSQL_TYPES.includes(resourceType)\n              }\n              return true\n            }}\n          />\n        </ResourceGeneratorProvider>\n      )}\n    </>\n  )\n}\n\nexport default ResourceChoose\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const missingListContainerStyle = css`\n  display: flex;\n  flex-direction: column;\n  padding: 16px 24px;\n`\n\nexport const columnContainerStyle = css`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nexport const cellStyle = (width: string) => css`\n  padding: 9px 0%;\n  width: ${width};\n  overflow: hidden;\n  white-space: nowrap;\n  margin: 0;\n  text-overflow: ellipsis;\n`\n\nexport const cellFontStyle = css`\n  text-overflow: ellipsis;\n  font-size: 14px;\n  font-weight: 500;\n  color: ${getColor(\"grayBlue\", \"02\")};\n`\n\nexport const statusContainerStyle = (status: \"completed\" | \"missing\") => css`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  color: ${status === \"missing\"\n    ? getColor(\"orange\", \"03\")\n    : getColor(\"green\", \"03\")};\n`\n\nexport const statusTextStyle = css`\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 22px;\n`\n","import {\n  ILLA_MIXPANEL_EVENT_TYPE,\n  MixpanelTrackContext,\n} from \"@illa-public/mixpanel-utils\"\nimport { FC, useContext } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport {\n  Button,\n  PlayOutlineIcon,\n  QuestionCircleIcon,\n  SuccessCircleIcon,\n} from \"@illa-design/react\"\nimport { MissingResourceContext } from \"../../context\"\nimport ResourceChoose from \"../ResourceChoose\"\nimport { ItemProps } from \"./itemInterface\"\nimport {\n  cellFontStyle,\n  cellStyle,\n  columnContainerStyle,\n  statusContainerStyle,\n  statusTextStyle,\n} from \"./style\"\n\nconst getStatusIcon = (status: \"missing\" | \"completed\") => {\n  switch (status) {\n    case \"missing\": {\n      return <QuestionCircleIcon />\n    }\n    case \"completed\": {\n      return <SuccessCircleIcon />\n    }\n  }\n}\n\nexport const ListItem: FC<ItemProps> = (props) => {\n  const {\n    actionIDs,\n    resourceType,\n    replacementResourceID,\n    status,\n    tutorialHref,\n    index,\n    handleChangePlaceInfo,\n  } = props\n\n  const { actionIDMapAction } = useContext(MissingResourceContext)\n\n  const { t } = useTranslation()\n  const { track } = useContext(MixpanelTrackContext)\n\n  const shownNames = actionIDs\n    .map((id) => actionIDMapAction[id].displayName)\n    .join(\" \")\n\n  const getStatusText = (status: \"missing\" | \"completed\") => {\n    switch (status) {\n      case \"missing\": {\n        return t(\"editor.action.panel.label.option.missing_resource.missing\")\n      }\n      case \"completed\": {\n        return t(\"editor.action.panel.label.option.missing_resource.completed\")\n      }\n    }\n  }\n\n  const openTutorial = () => {\n    track(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n      element: \"watch_tutorial\",\n    })\n    window.open(tutorialHref, \"_blank\", \"width=800px,height=500px\")\n  }\n\n  const changeResourceID = (resourceID: string) => {\n    handleChangePlaceInfo(index, resourceID, actionIDs)\n  }\n\n  return (\n    <div css={columnContainerStyle}>\n      <div css={cellStyle(\"128px\")}>\n        <span css={cellFontStyle}>{shownNames}</span>\n      </div>\n      <div css={cellStyle(\"104px\")}>\n        <span css={cellFontStyle}>{resourceType}</span>\n      </div>\n      <div css={cellStyle(\"224px\")}>\n        <ResourceChoose\n          resourceID={replacementResourceID}\n          changeResourceID={changeResourceID}\n          resourceType={resourceType}\n        />\n      </div>\n      <div css={cellStyle(\"96px\")}>\n        <div css={statusContainerStyle(status)}>\n          {getStatusIcon(status)}\n          <span css={statusTextStyle}>{getStatusText(status)}</span>\n        </div>\n      </div>\n      <div css={cellStyle(\"96px\")}>\n        <Button\n          leftIcon={<PlayOutlineIcon />}\n          onClick={openTutorial}\n          variant=\"outline\"\n          colorScheme=\"grayBlue\"\n        >\n          {t(\"editor.action.panel.label.option.missing_resource.watch\")}\n        </Button>\n      </div>\n    </div>\n  )\n}\n","import {\n  ILLA_MIXPANEL_EVENT_TYPE,\n  MixpanelTrackContext,\n} from \"@illa-public/mixpanel-utils\"\nimport { FC, useContext, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { MissingResourceContext } from \"../../context\"\nimport { MissingResourceFooter } from \"../Footer\"\nimport { MissingListProps } from \"./interface\"\nimport { ListItem } from \"./listItem\"\nimport {\n  cellStyle,\n  columnContainerStyle,\n  missingListContainerStyle,\n} from \"./style\"\n\nconst MissingList: FC<MissingListProps> = (props) => {\n  const { handleCancelModal } = props\n  const {\n    actionIDMapAction,\n    missingActionsMap,\n    resourceIDMapResource,\n    agentIDMapAgent,\n    updateActions,\n  } = useContext(MissingResourceContext)\n\n  const { track } = useContext(MixpanelTrackContext)\n\n  const [isSaving, setIsSaving] = useState(false)\n  const [replaceInfo, setReplaceInfo] = useState(\n    new Map<\n      string,\n      {\n        resourceID: string\n        actionIDs: string[]\n      }\n    >(),\n  )\n  const { t } = useTranslation()\n  const handleChangePlaceInfo = (\n    index: string,\n    resourceID: string,\n    actionIDs: string[],\n  ) => {\n    setReplaceInfo((prevInfo) => {\n      const newReplaceInfo = new Map(prevInfo)\n      newReplaceInfo.set(index, {\n        resourceID,\n        actionIDs,\n      })\n      return newReplaceInfo\n    })\n  }\n  const replaceInfoList = Array.from(replaceInfo.values())\n\n  const handleConfirmModal = async () => {\n    if (replaceInfoList.length === 0) return\n    setIsSaving(true)\n\n    const payload: Record<string, { actionID: string; resourceID: string }> = {}\n    replaceInfoList.forEach(({ actionIDs, resourceID }) => {\n      actionIDs.forEach((actionID) => {\n        payload[actionID] = { actionID, resourceID }\n      })\n    })\n    const updateActionList = Object.values(payload)\n      .map((item) => {\n        return actionIDMapAction[item.actionID]\n      })\n      .map((action) => {\n        if (action.actionType === \"aiagent\") {\n          const newResourceID = payload[action.actionID].resourceID\n          return {\n            ...action,\n            resourceID: newResourceID,\n            content: {\n              ...action.content,\n              virtualResource: agentIDMapAgent[newResourceID],\n            },\n          }\n        }\n\n        const newResourceID = payload[action.actionID].resourceID\n        const actionType = resourceIDMapResource[newResourceID].resourceType\n        return {\n          ...action,\n          actionType: actionType,\n          resourceID: newResourceID,\n        }\n      })\n\n    const missingActionIDs = Object.values(missingActionsMap)\n      .map((item) => item.actionIDs)\n      .flat()\n    track(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n      element: \"missing_resource_configure_modal_save\",\n      parameter1: missingActionIDs.length === updateActionList.length,\n    })\n\n    await updateActions(updateActionList)\n    setReplaceInfo(new Map())\n    handleCancelModal()\n    setIsSaving(false)\n  }\n\n  return (\n    <>\n      <div css={missingListContainerStyle}>\n        <header css={columnContainerStyle}>\n          <p css={cellStyle(\"128px\")}>\n            {t(\"editor.action.panel.label.missing_resource.affected_actions\")}\n          </p>\n          <p css={cellStyle(\"104px\")}>\n            {t(\"editor.action.panel.label.missing_resource.type\")}\n          </p>\n          <p css={cellStyle(\"224px\")}>\n            {t(\"editor.action.panel.label.missing_resource.replacement\")}\n          </p>\n          <p css={cellStyle(\"96px\")}>\n            {t(\"editor.action.panel.label.missing_resource.status\")}\n          </p>\n          <p css={cellStyle(\"96px\")}>\n            {t(\"editor.action.panel.label.missing_resource.tutorial\")}\n          </p>\n        </header>\n        {Object.keys(missingActionsMap).map((key) => {\n          const item = missingActionsMap[key]\n          return (\n            <ListItem\n              key={key}\n              index={key}\n              actionIDs={item.actionIDs}\n              tutorialHref={item.tutorialHref}\n              resourceType={item.resourceType}\n              replacementResourceID={replaceInfo.get(key)?.resourceID}\n              status={!!replaceInfo.get(key) ? \"completed\" : \"missing\"}\n              handleChangePlaceInfo={handleChangePlaceInfo}\n            />\n          )\n        })}\n      </div>\n      <MissingResourceFooter\n        handleCancelModal={handleCancelModal}\n        handleConfirmModal={handleConfirmModal}\n        isSaving={isSaving}\n        canSave={replaceInfoList.length > 0}\n      />\n    </>\n  )\n}\n\nexport default MissingList\n","import {\n  ILLA_MIXPANEL_EVENT_TYPE,\n  MixpanelTrackContext,\n} from \"@illa-public/mixpanel-utils\"\nimport { FC, useContext } from \"react\"\nimport { createPortal } from \"react-dom\"\nimport { Modal } from \"@illa-design/react\"\nimport { MissingResourceHeader } from \"./Components/Header\"\nimport MissingList from \"./Components/MissingList\"\n\nconst MissingResources: FC<{\n  shown: boolean\n  changeShown: (shown: boolean) => void\n}> = ({ shown, changeShown }) => {\n  const { track } = useContext(MixpanelTrackContext)\n  const handleCloseModal = () => {\n    changeShown(false)\n    track(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n      element: \"missing_resource_configure_modal_cancel\",\n    })\n  }\n\n  return createPortal(\n    <Modal\n      visible={shown}\n      w=\"800px\"\n      autoFocus={false}\n      footer={false}\n      onCancel={handleCloseModal}\n      withoutPadding\n      maskClosable={false}\n      afterOpen={() => {\n        track(ILLA_MIXPANEL_EVENT_TYPE.SHOW, {\n          element: \"missing_resource_configure_modal\",\n        })\n      }}\n    >\n      <MissingResourceHeader handleCloseModal={handleCloseModal} />\n      <MissingList handleCancelModal={handleCloseModal} />\n    </Modal>,\n    document.body,\n  )\n}\n\nexport default MissingResources\n\nexport * from \"./context\"\n","import MissingResources, {\n  MissingResourcesProvider,\n} from \"@illa-public/missing-resource-module\"\nimport {\n  ILLA_MIXPANEL_BUILDER_PAGE_NAME,\n  MixpanelTrackProvider,\n} from \"@illa-public/mixpanel-utils\"\nimport { ActionContent, ActionItem, Resource } from \"@illa-public/public-types\"\nimport { FC, memo } from \"react\"\nimport { createPortal } from \"react-dom\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport {\n  getAIAgentIDMapAgent,\n  getDashboardTeamAIAgentList,\n} from \"@/redux/aiAgent/dashboardTeamAIAgentSelector\"\nimport {\n  getActionIDMapAction,\n  getMissingResourceActionGroupByTutorialOrResourceID,\n} from \"@/redux/currentApp/action/actionSelector\"\nimport { actionActions } from \"@/redux/currentApp/action/actionSlice\"\nimport {\n  getAllResources,\n  getResourceIDMapResource,\n} from \"@/redux/resource/resourceSelector\"\nimport { resourceActions } from \"@/redux/resource/resourceSlice\"\nimport { fetchBatchUpdateAction } from \"@/services/action\"\nimport { track } from \"@/utils/mixpanelHelper\"\nimport { IMissingResourceModalProps } from \"./interface\"\n\nconst MissingResourceModal: FC<IMissingResourceModalProps> = (props) => {\n  const { shown, changeShown } = props\n  const resourceIDMapResource = useSelector(getResourceIDMapResource)\n  const missingActionsMap = useSelector(\n    getMissingResourceActionGroupByTutorialOrResourceID,\n  )\n  const resourceList = useSelector(getAllResources)\n  const aiAgentList = useSelector(getDashboardTeamAIAgentList)\n  const actionIDMapAction = useSelector(getActionIDMapAction)\n  const agentIDMapAgent = useSelector(getAIAgentIDMapAgent)\n  const dispatch = useDispatch()\n\n  const updateActions = async (actionList: ActionItem<ActionContent>[]) => {\n    await fetchBatchUpdateAction(actionList)\n    dispatch(actionActions.batchUpdateActionItemReducer(actionList))\n  }\n\n  const addResourceCallback = (resource: Resource) => {\n    dispatch(resourceActions.addResourceItemReducer(resource))\n  }\n\n  return (\n    shown &&\n    createPortal(\n      <MixpanelTrackProvider\n        basicTrack={track}\n        pageName={ILLA_MIXPANEL_BUILDER_PAGE_NAME.EDITOR}\n      >\n        <MissingResourcesProvider\n          resourceIDMapResource={resourceIDMapResource}\n          actionIDMapAction={actionIDMapAction}\n          missingActionsMap={missingActionsMap}\n          resourceList={resourceList}\n          aiAgentList={aiAgentList}\n          agentIDMapAgent={agentIDMapAgent}\n          updateActions={updateActions}\n          addResourceCallback={addResourceCallback}\n        >\n          <MissingResources shown={shown} changeShown={changeShown} />\n        </MissingResourcesProvider>\n      </MixpanelTrackProvider>,\n      document.body,\n    )\n  )\n}\n\nexport default memo(MissingResourceModal)\n","import { css } from \"@emotion/react\"\n\nexport const upgradeTagContainerStyle = css`\n  padding: 1px 8px;\n  box-sizing: content-box;\n`\nexport const upgradeTagContentStyle = css`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  text-align: right;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 22px;\n  text-transform: capitalize;\n`\n\nexport const upgradeTagIconStyle = css`\n  width: 12px;\n  height: 12px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n","import * as React from \"react\";\nconst SvgSnowIcon = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 8, height: 8, viewBox: \"0 0 8 8\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M4.41817 1.09961C4.52862 1.09961 4.61812 1.18922 4.61812 1.29968L4.61726 3.3446L6.45369 2.74829C6.55874 2.71416 6.6715 2.77154 6.70564 2.87659L6.95296 3.63745C6.98709 3.7425 6.92959 3.8554 6.82454 3.88953L4.9742 4.48962L6.19942 6.17627C6.26434 6.26563 6.24459 6.39065 6.15523 6.45557L5.50801 6.92578C5.41865 6.9907 5.29351 6.97095 5.22859 6.88159L3.96223 5.13757L2.68904 6.89075C2.62412 6.98011 2.49898 6.99999 2.40962 6.93506L1.7624 6.46484C1.67304 6.39992 1.65329 6.27479 1.71821 6.18542L2.97322 4.45569L1.16853 3.86963C1.06348 3.8355 1.00598 3.72273 1.04011 3.61768L1.28731 2.85681C1.32144 2.75176 1.43421 2.69426 1.53926 2.72839L3.41719 3.33765L3.41817 1.29968C3.41817 1.18922 3.50766 1.09961 3.61812 1.09961H4.41817Z\", fill: \"#787E85\" }));\nexport default SvgSnowIcon;\n","import { SerializedStyles, css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport function applyConfigItemContainer(hasTextarea: boolean) {\n  if (hasTextarea) {\n    return css`\n      display: flex;\n      width: 100%;\n      flex-direction: row;\n      padding-left: 24px;\n    `\n  } else {\n    return css`\n      display: flex;\n      min-height: 48px;\n      align-items: center;\n      flex-direction: row;\n      padding-left: 24px;\n    `\n  }\n}\n\nexport const sslStyle = css`\n  font-size: 14px;\n  color: ${getColor(\"grayBlue\", \"02\")};\n  margin-left: 8px;\n`\n\nexport const configItemTip = css`\n  font-size: 14px;\n  color: ${getColor(\"grayBlue\", \"04\")};\n  font-weight: 400;\n  margin-left: 192px;\n  padding: 0 24px 8px 24px;\n  line-height: 22px;\n  min-height: 30px;\n  white-space: normal;\n`\n\nexport const labelContainer = css`\n  display: flex;\n  flex-direction: row;\n  justify-content: end;\n  min-width: 176px;\n  width: 176px;\n`\n\nexport function applyConfigItemLabelText(\n  color: string,\n  margin?: boolean,\n): SerializedStyles {\n  let marginLeft = css``\n  if (margin) {\n    marginLeft = css`\n      margin-left: 4px;\n    `\n  }\n  return css`\n    font-size: 14px;\n    color: ${color};\n    font-weight: 500;\n    ${marginLeft};\n  `\n}\n\nexport const hostInputContainer = css`\n  display: flex;\n  margin-left: 16px;\n  margin-right: 24px;\n  flex-direction: row;\n  width: 100%;\n  align-items: center;\n  gap: 8px;\n`\n","import { SerializedStyles, css } from \"@emotion/react\"\nimport { getColor, globalColor, illaPrefix, zIndex } from \"@illa-design/react\"\n\nexport const modalWrapperStyle = css`\n  padding: 24px 24px 0;\n  width: 100%;\n`\n\nexport const modalWithMaskWrapperStyle = css`\n  width: 100vw;\n  height: 100vh;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: ${zIndex.modal};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nexport const maskStyle = css`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: ${getColor(\"white\", \"05\")};\n  backdrop-filter: blur(5px);\n  z-index: -1;\n`\n\nexport const modalHeaderWrapperStyle = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0 16px 16px;\n  width: 486px;\n  position: relative;\n`\n\nexport const modalTitleStyle = css`\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 24px;\n  color: ${getColor(\"grayBlue\", \"02\")};\n  margin: 0;\n  text-align: center;\n`\n\nexport const closeIconHotSpotStyle = css`\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  font-size: 12px;\n`\n\nexport const gridFormStyle: SerializedStyles = css`\n  display: grid;\n  gap: 32px;\n  padding-bottom: 24px;\n`\n\nexport const gridFormFieldStyle: SerializedStyles = css`\n  display: grid;\n  gap: 24px;\n`\n\nexport const gridItemStyle: SerializedStyles = css`\n  display: grid;\n  gap: 8px;\n`\n\nexport const gridValidStyle: SerializedStyles = css``\n\nexport const inputDisabledStyle = css`\n  &:disabled {\n    -webkit-text-fill-color: ${getColor(\"grayBlue\", \"05\")};\n  }\n`\n\nexport const formLabelStyle: SerializedStyles = css`\n  font-size: 14px;\n  line-height: 22px;\n  font-weight: 500;\n  color: ${globalColor(`--${illaPrefix}-grayBlue-02`)};\n`\n\nexport const descriptionStyle: SerializedStyles = css`\n  color: ${globalColor(`--${illaPrefix}-grayBlue-04`)};\n`\n\nexport const errorMsgStyle: SerializedStyles = css`\n  position: relative;\n  font-size: 14px;\n  padding-left: 24px;\n  line-height: 22px;\n  color: ${globalColor(`--${illaPrefix}-orange-03`)};\n`\n\nexport const errorIconStyle: SerializedStyles = css`\n  position: absolute;\n  font-size: 16px;\n  line-height: 0;\n  top: 3px;\n  left: 0;\n`\n","import { FC, useCallback } from \"react\"\nimport { Controller, useForm, useFormState } from \"react-hook-form\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch } from \"react-redux\"\nimport { useParams } from \"react-router-dom\"\nimport {\n  Button,\n  CloseIcon,\n  Input,\n  Modal,\n  TextArea,\n  getColor,\n  useMessage,\n} from \"@illa-design/react\"\nimport { AppSettingModalProps } from \"@/page/App/Module/PageNavBar/AppSettingModal/interface\"\nimport { applyConfigItemLabelText } from \"@/page/App/components/Actions/ControlledElement/style\"\nimport { appInfoActions } from \"@/redux/currentApp/appInfo/appInfoSlice\"\nimport { updateAppConfig } from \"@/services/apps\"\nimport {\n  closeIconHotSpotStyle,\n  formLabelStyle,\n  gridFormFieldStyle,\n  gridFormStyle,\n  gridItemStyle,\n  gridValidStyle,\n  modalHeaderWrapperStyle,\n  modalTitleStyle,\n  modalWrapperStyle,\n} from \"./style\"\n\nexport interface AppSettingFields {\n  appName: string\n  description?: string\n}\n\nexport const AppSettingModal: FC<AppSettingModalProps> = (props) => {\n  const { appInfo, visible, onVisibleChange, onSaveEvent, onCloseEvent } = props\n\n  const { control, formState, handleSubmit, reset } = useForm<AppSettingFields>(\n    {\n      mode: \"onSubmit\",\n      criteriaMode: \"firstError\",\n      defaultValues: {\n        appName: appInfo?.appName ?? \"\",\n        description: appInfo?.config?.description ?? \"\",\n      },\n    },\n  )\n\n  const { isSubmitting, isDirty } = useFormState({\n    control,\n  })\n\n  const { t } = useTranslation()\n  const { appId } = useParams()\n  const dispatch = useDispatch()\n\n  const message = useMessage()\n\n  const onSubmit = useCallback(\n    async (data: AppSettingFields) => {\n      try {\n        onSaveEvent()\n        const res = await updateAppConfig(appInfo.appId, {\n          description: data.description,\n          appName: data.appName,\n        })\n        if (res.data.appId === appId) {\n          dispatch(appInfoActions.updateAppInfoReducer(res.data))\n        }\n        reset({\n          appName: data.appName,\n          description: data.description,\n        })\n        message.success({\n          content: t(\"dashboard.app.rename_success\"),\n        })\n      } catch (error) {\n        message.error({\n          content: t(\"dashboard.app.rename_fail\"),\n        })\n      }\n      onVisibleChange(false)\n    },\n    [\n      onVisibleChange,\n      onSaveEvent,\n      appInfo.appId,\n      dispatch,\n      appId,\n      reset,\n      message,\n      t,\n    ],\n  )\n\n  return (\n    <Modal\n      maskClosable\n      withoutPadding\n      w=\"528px\"\n      visible={visible}\n      footer={false}\n      onCancel={() => {\n        onCloseEvent()\n        onVisibleChange(false)\n      }}\n    >\n      <div css={modalWrapperStyle}>\n        <header css={modalHeaderWrapperStyle}>\n          <h3 css={modalTitleStyle}>\n            {t(\"new_dashboard.app_setting.app_setting\")}\n          </h3>\n          <span\n            css={closeIconHotSpotStyle}\n            onClick={() => {\n              onCloseEvent()\n              onVisibleChange(false)\n            }}\n          >\n            <CloseIcon />\n          </span>\n        </header>\n        <form\n          css={gridFormStyle}\n          autoComplete=\"off\"\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <section css={gridFormFieldStyle}>\n            <section css={gridItemStyle}>\n              <label css={formLabelStyle}>\n                {t(\"new_dashboard.app_setting.app_name\")}\n                <span css={applyConfigItemLabelText(getColor(\"red\", \"03\"))}>\n                  *\n                </span>\n              </label>\n              <div css={gridValidStyle}>\n                <Controller\n                  name=\"appName\"\n                  control={control}\n                  render={({ field }) => (\n                    <Input\n                      {...field}\n                      colorScheme=\"techPurple\"\n                      error={!!formState?.errors.appName}\n                      placeholder={t(\n                        \"new_dashboard.app_setting.placeholder.app_name\",\n                      )}\n                    />\n                  )}\n                  rules={{\n                    required: t(\n                      \"page.user.sign_up.error_message.username.require\",\n                    ),\n                    maxLength: {\n                      value: 280,\n                      message: t(\n                        \"page.user.sign_up.error_message.username.length\",\n                      ),\n                    },\n                  }}\n                />\n              </div>\n            </section>\n            <section css={gridItemStyle}>\n              <label css={formLabelStyle}>\n                {t(\"new_dashboard.app_setting.description\")}\n              </label>\n              <div css={gridValidStyle}>\n                <Controller\n                  name=\"description\"\n                  control={control}\n                  render={({ field }) => (\n                    <TextArea\n                      {...field}\n                      showWordLimit\n                      maxLength={180}\n                      autoSize={{ minRows: 6 }}\n                      colorScheme=\"techPurple\"\n                      error={!!formState?.errors.description}\n                      placeholder={t(\n                        \"new_dashboard.app_setting.placeholder.description\",\n                      )}\n                    />\n                  )}\n                />\n              </div>\n            </section>\n          </section>\n          <Button\n            colorScheme=\"techPurple\"\n            loading={isSubmitting}\n            disabled={!isDirty}\n            fullWidth\n          >\n            {t(\"save\")}\n          </Button>\n        </form>\n      </div>\n    </Modal>\n  )\n}\n\nAppSettingModal.displayName = \"AppSettingModal\"\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const triggerStyle = css`\n  margin-top: 20px;\n`\n\nexport const nameStyle = css`\n  font-weight: 500;\n  line-height: 18px;\n  color: ${getColor(\"grayBlue\", \"02\")};\n`\n\nexport const nameContainerStyle = css`\n  display: inline-flex;\n  gap: 8px;\n  cursor: pointer;\n  height: 18px;\n  align-items: center;\n  color: ${getColor(\"grayBlue\", \"02\")};\n  & > svg {\n    display: none;\n  }\n  &:hover > svg {\n    display: block;\n    align-self: flex-start;\n  }\n`\n","import { ILLA_MIXPANEL_EVENT_TYPE } from \"@illa-public/mixpanel-utils\"\nimport { FC, useState } from \"react\"\nimport { PenIcon } from \"@illa-design/react\"\nimport { AppSettingModal } from \"@/page/App/Module/PageNavBar/AppSettingModal\"\nimport { trackInEditor } from \"@/utils/mixpanelHelper\"\nimport { AppNameProps } from \"./interface\"\nimport { nameContainerStyle, nameStyle } from \"./style\"\n\nexport const AppName: FC<AppNameProps> = (props) => {\n  const { appInfo } = props\n\n  const [appSettingVisible, setAppSettingVisible] = useState(false)\n\n  const trackHoverOnAppName = () => {\n    trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.HOVER, {\n      element: \"app_rename\",\n    })\n  }\n\n  const handleOpenAppSettingModal = () => {\n    setAppSettingVisible(true)\n    trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.SHOW, {\n      element: \"app_setting_modal\",\n      parameter5: appInfo.appId,\n    })\n  }\n\n  return (\n    <>\n      <div\n        css={nameContainerStyle}\n        onMouseEnter={trackHoverOnAppName}\n        onClick={handleOpenAppSettingModal}\n      >\n        <span css={nameStyle}>{appInfo.appName}</span>\n        <PenIcon size=\"16px\" />\n      </div>\n      <AppSettingModal\n        appInfo={appInfo}\n        visible={appSettingVisible}\n        onVisibleChange={(visible) => {\n          setAppSettingVisible(visible)\n        }}\n        onSaveEvent={() => {\n          trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n            element: \"app_setting_modal_save\",\n            parameter5: appInfo.appId,\n          })\n        }}\n        onCloseEvent={() => {\n          trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n            element: \"app_setting_modal_close\",\n            parameter5: appInfo.appId,\n          })\n        }}\n      />\n    </>\n  )\n}\n","import * as React from \"react\";\nconst SvgDesktop = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 16, height: 16, viewBox: \"0 0 16 16\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M7.9998 10.5L2.66667 10.4997C2.48986 10.4997 2.32029 10.4339 2.19526 10.3167C2.07024 10.1995 2 10.0405 2 9.87473V6.50309V3.62787C2 3.46211 2.07024 3.30314 2.19526 3.18593C2.32029 3.06872 2.48986 3.00287 2.66667 3.00287L13.3293 3C13.5061 3 13.6757 3.06585 13.8007 3.18306C13.9257 3.30027 13.996 3.45924 13.996 3.625V9.87186C13.996 10.0376 13.9257 10.1966 13.8007 10.3138C13.6757 10.431 13.5061 10.4969 13.3293 10.4969L7.9998 10.5ZM7.9998 10.5L7.9998 13M7.9998 13H9.9998M7.9998 13H5.9998\", stroke: \"#1D2129\", strokeLinecap: \"round\" }));\nexport default SvgDesktop;\n","import * as React from \"react\";\nconst SvgFilter = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 16, height: 16, viewBox: \"0 0 16 16\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"line\", { x1: 2.5, y1: 5.5, x2: 13.5, y2: 5.5, stroke: \"#1D2129\", strokeLinecap: \"round\" }), /* @__PURE__ */ React.createElement(\"line\", { x1: 2.5, y1: 10.5, x2: 13.5, y2: 10.5, stroke: \"#1D2129\", strokeLinecap: \"round\" }), /* @__PURE__ */ React.createElement(\"circle\", { cx: 9.5, cy: 5.5, r: 1, fill: \"white\", stroke: \"#1D2129\" }), /* @__PURE__ */ React.createElement(\"circle\", { cx: 6.5, cy: 10.5, r: 1, fill: \"white\", stroke: \"#1D2129\" }));\nexport default SvgFilter;\n","import * as React from \"react\";\nconst SvgFluid = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 16, height: 16, viewBox: \"0 0 16 16\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M5 13V3M11 13V3M14 3.625C14 3.45924 13.9298 3.30027 13.8047 3.18306C13.6797 3.06585 13.5101 3 13.3333 3H2.66667C2.48986 3 2.32029 3.06585 2.19526 3.18306C2.07024 3.30027 2 3.45924 2 3.625V12.375C2 12.5408 2.07024 12.6997 2.19526 12.8169C2.32029 12.9342 2.48986 13 2.66667 13H13.3333C13.5101 13 13.6797 12.9342 13.8047 12.8169C13.9298 12.6997 14 12.5408 14 12.375V3.625Z\", stroke: \"#1D2129\" }));\nexport default SvgFluid;\n","import * as React from \"react\";\nconst SvgTablet = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 16, height: 16, viewBox: \"0 0 16 16\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"circle\", { cx: 8, cy: 10, r: 1, fill: \"#1D2129\" }), /* @__PURE__ */ React.createElement(\"rect\", { x: 4, y: 3, width: 8, height: 10, rx: 1, stroke: \"#1D2129\" }));\nexport default SvgTablet;\n","import { ILLA_MIXPANEL_EVENT_TYPE } from \"@illa-public/mixpanel-utils\"\nimport { useCallback, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { CloseIcon, InputNumber, useMessage } from \"@illa-design/react\"\nimport {\n  closeIconStyle,\n  inputAreaLabelWrapperStyle,\n  inputAreaWrapperStyle,\n} from \"@/page/App/Module/PageNavBar/style\"\nimport {\n  BODY_MIN_HEIGHT,\n  BODY_MIN_WIDTH,\n  FOOTER_MIN_HEIGHT,\n  HEADER_MIN_HEIGHT,\n  LEFT_MIN_WIDTH,\n  RIGHT_MIN_WIDTH,\n} from \"@/page/App/components/DotPanel/constant/canvas\"\nimport { getViewportSizeSelector } from \"@/redux/currentApp/components/componentsSelector\"\nimport { componentsActions } from \"@/redux/currentApp/components/componentsSlice\"\nimport { trackInEditor } from \"@/utils/mixpanelHelper\"\n\nconst validateHeight = (currentHeight: number | undefined) => {\n  return !(\n    currentHeight != undefined &&\n    currentHeight < BODY_MIN_HEIGHT + HEADER_MIN_HEIGHT + FOOTER_MIN_HEIGHT\n  )\n}\n\nconst validateWidth = (currentWidth: number | undefined) => {\n  return !(\n    currentWidth != undefined &&\n    currentWidth < BODY_MIN_WIDTH + LEFT_MIN_WIDTH + RIGHT_MIN_WIDTH\n  )\n}\n\nexport const PreviewPopContent = () => {\n  const { viewportWidth, viewportHeight } = useSelector(getViewportSizeSelector)\n\n  const [inputWidth, setInputWidth] = useState(viewportWidth)\n  const [inputHeight, setInputHeight] = useState(viewportHeight)\n  const dispatch = useDispatch()\n  const { t } = useTranslation()\n  const message = useMessage()\n\n  const width = validateWidth(inputWidth) ? inputWidth : viewportWidth\n  const height = validateHeight(inputHeight) ? inputHeight : viewportHeight\n\n  const saveNewViewportSize = useCallback(() => {\n    dispatch(\n      componentsActions.updateViewportSizeReducer({\n        viewportWidth: width,\n        viewportHeight: height,\n        viewportSizeType: \"custom\",\n      }),\n    )\n  }, [dispatch, height, width])\n\n  const handleUpdateInputWidth = useCallback((value?: number) => {\n    setInputWidth(value)\n  }, [])\n\n  const handleUpdateInputHeight = useCallback((value?: number) => {\n    setInputHeight(value)\n  }, [])\n\n  const handleOnBlurInputHeight = useCallback(() => {\n    const isValidate = validateHeight(inputHeight)\n    trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.BLUR, {\n      element: \"custom_size_input\",\n      parameter2: \"h\",\n      parameter3: inputHeight,\n    })\n    if (!isValidate) {\n      message.error({\n        content: t(\"frame_size.invalid_tips\", {\n          size: BODY_MIN_HEIGHT + HEADER_MIN_HEIGHT + FOOTER_MIN_HEIGHT,\n        }),\n      })\n      return\n    }\n    saveNewViewportSize()\n  }, [inputHeight, message, saveNewViewportSize, t])\n\n  const handleOnBlurInputWidth = useCallback(() => {\n    const isValidate = validateWidth(inputWidth)\n    trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.BLUR, {\n      element: \"custom_size_input\",\n      parameter2: \"w\",\n      parameter3: inputWidth,\n    })\n    if (!isValidate) {\n      message.error({\n        content: t(\"frame_size.invalid_tips\", {\n          size: BODY_MIN_WIDTH + LEFT_MIN_WIDTH + RIGHT_MIN_WIDTH,\n        }),\n      })\n      return\n    }\n    saveNewViewportSize()\n  }, [inputWidth, message, saveNewViewportSize, t])\n\n  const handleOnFocusOnWidth = useCallback(() => {\n    trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.FOCUS, {\n      element: \"custom_size_input\",\n      parameter2: \"w\",\n    })\n  }, [])\n\n  const handleOnFocusOnHeight = useCallback(() => {\n    trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.FOCUS, {\n      element: \"custom_size_input\",\n      parameter2: \"h\",\n    })\n  }, [])\n\n  return (\n    <div css={inputAreaWrapperStyle}>\n      <div css={inputAreaLabelWrapperStyle}>\n        <span>W</span>\n        <CloseIcon css={closeIconStyle} />\n        <span>H:</span>\n      </div>\n      <div css={inputAreaLabelWrapperStyle}>\n        <InputNumber\n          w=\"100px\"\n          colorScheme=\"techPurple\"\n          value={inputWidth}\n          placeholder=\"--\"\n          onChange={handleUpdateInputWidth}\n          onBlur={handleOnBlurInputWidth}\n          onFocus={handleOnFocusOnWidth}\n          min={BODY_MIN_WIDTH + LEFT_MIN_WIDTH + RIGHT_MIN_WIDTH}\n          suffix=\"px\"\n          hideControl\n        />\n        <CloseIcon css={closeIconStyle} />\n        <InputNumber\n          w=\"100px\"\n          colorScheme=\"techPurple\"\n          value={inputHeight}\n          placeholder=\"--\"\n          suffix=\"px\"\n          hideControl\n          onChange={handleUpdateInputHeight}\n          onBlur={handleOnBlurInputHeight}\n          onFocus={handleOnFocusOnHeight}\n          min={BODY_MIN_HEIGHT + HEADER_MIN_HEIGHT + FOOTER_MIN_HEIGHT}\n        />\n      </div>\n    </div>\n  )\n}\n","import { SerializedStyles, css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const previewButtonGroupWrapperStyle = css`\n  display: flex;\n  pointer-events: auto;\n  position: relative;\n  align-items: center;\n  height: 32px;\n`\n\nexport const appSizeContainerStyle = css`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nexport const appSizeIconContainerStyle = css`\n  width: 32px;\n  height: 32px;\n  display: flex;\n  cursor: pointer;\n`\n\nexport const appSizeIconStyle = css`\n  margin: auto;\n  height: 100%;\n  display: flex;\n  & > svg {\n    width: 16px;\n    height: 16px;\n    margin: auto;\n  }\n`\n\nexport const getAppSizeIconSelectedStyle = (\n  active: boolean,\n): SerializedStyles => {\n  if (active) {\n    return css`\n      box-shadow: inset 0px -2px 0px ${getColor(\"grayBlue\", \"02\")};\n    `\n  }\n  return css``\n}\n","import { ILLA_MIXPANEL_EVENT_TYPE } from \"@illa-public/mixpanel-utils\"\nimport { Variants, motion } from \"framer-motion\"\nimport { FC, MouseEvent, useCallback, useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport DesktopIcon from \"@/assets/appSize/desktop.svg?react\"\nimport CustomIcon from \"@/assets/appSize/filter.svg?react\"\nimport FluidIcon from \"@/assets/appSize/fluid.svg?react\"\nimport TabletIcon from \"@/assets/appSize/tablet.svg?react\"\nimport { PreviewPopContent } from \"@/page/App/Module/PageNavBar/PreviewPopContent\"\nimport { getViewportSizeSelector } from \"@/redux/currentApp/components/componentsSelector\"\nimport { componentsActions } from \"@/redux/currentApp/components/componentsSlice\"\nimport { ViewportSizeType } from \"@/redux/currentApp/components/componentsState\"\nimport { trackInEditor } from \"@/utils/mixpanelHelper\"\nimport {\n  appSizeContainerStyle,\n  appSizeIconContainerStyle,\n  appSizeIconStyle,\n  getAppSizeIconSelectedStyle,\n  previewButtonGroupWrapperStyle,\n} from \"./style\"\n\nconst AppSizeIcons = [\n  {\n    type: \"fluid\",\n    Icon: FluidIcon,\n  },\n  {\n    type: \"desktop\",\n    Icon: DesktopIcon,\n  },\n  {\n    type: \"tablet\",\n    Icon: TabletIcon,\n  },\n  {\n    type: \"custom\",\n    Icon: CustomIcon,\n  },\n]\n\nconst defaultAppSize = {\n  fluid: {\n    viewportWidth: undefined,\n    viewportHeight: undefined,\n  },\n  desktop: {\n    viewportWidth: 1280,\n    viewportHeight: undefined,\n  },\n  tablet: {\n    viewportWidth: 1080,\n    viewportHeight: undefined,\n  },\n}\n\nconst variants: Variants = {\n  hidden: {\n    height: 0,\n    opacity: 0,\n    visibility: \"hidden\",\n    transitionEnd: {\n      display: \"none\",\n    },\n  },\n  shown: {\n    height: \"unset\",\n    opacity: 1,\n    visibility: \"visible\",\n    display: \"inherit\",\n  },\n}\n\nexport const AppSizeButtonGroup: FC = () => {\n  const { viewportSizeType, viewportWidth, viewportHeight } = useSelector(\n    getViewportSizeSelector,\n  )\n  const dispatch = useDispatch()\n\n  const showCustomInputs = viewportSizeType === \"custom\"\n  const currentSizeType = viewportSizeType ?? \"fluid\"\n\n  useEffect(() => {\n    trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.SELECT, {\n      element: \"preview_size\",\n      parameter2: currentSizeType,\n    })\n  }, [currentSizeType])\n\n  const updateAppSize = useCallback(\n    ({\n      viewportWidth,\n      viewportHeight,\n      viewportSizeType,\n    }: {\n      viewportWidth?: number\n      viewportHeight?: number\n      viewportSizeType?: ViewportSizeType\n    }) => {\n      dispatch(\n        componentsActions.updateViewportSizeReducer({\n          viewportWidth,\n          viewportHeight,\n          viewportSizeType,\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const handleAppSizeTypeChange = useCallback(\n    (e: MouseEvent<HTMLSpanElement>) => {\n      const newType = e.currentTarget.dataset.key as ViewportSizeType\n      const sizeObj =\n        newType !== \"custom\"\n          ? defaultAppSize[newType]\n          : {\n              viewportHeight,\n              viewportWidth,\n            }\n      trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n        element: \"preview_size\",\n        parameter2: newType,\n      })\n      updateAppSize({\n        ...sizeObj,\n        viewportSizeType: newType,\n      })\n    },\n    [updateAppSize, viewportHeight, viewportWidth],\n  )\n\n  return (\n    <div css={previewButtonGroupWrapperStyle}>\n      <div css={appSizeContainerStyle}>\n        {AppSizeIcons.map((info) => {\n          const { Icon, type } = info\n          return (\n            <span\n              key={type}\n              data-key={type}\n              css={appSizeIconContainerStyle}\n              onClick={handleAppSizeTypeChange}\n            >\n              <span\n                css={[\n                  appSizeIconStyle,\n                  getAppSizeIconSelectedStyle(currentSizeType === type),\n                ]}\n              >\n                <Icon />\n              </span>\n            </span>\n          )\n        })}\n      </div>\n      <motion.div\n        initial=\"hidden\"\n        animate={showCustomInputs ? \"shown\" : \"hidden\"}\n        variants={variants}\n        transition={{ duration: 0.5, ease: \"easeInOut\" }}\n      >\n        <PreviewPopContent />\n      </motion.div>\n    </div>\n  )\n}\n\nAppSizeButtonGroup.displayName = \"AppSizeButtonGroup\"\n","import { css } from \"@emotion/react\"\n\nexport const avatarStyle = css`\n  width: 32px;\n  height: 32px;\n  line-height: 32px;\n  text-align: center;\n  border-radius: 50%;\n  display: inline-block;\n  flex-shrink: 0;\n`\n\nexport const getListItemContainerStyle = (type: string = \"\") => {\n  if (type === \"list\") {\n    return css`\n      display: flex;\n      gap: 8px;\n      font-weight: 500;\n      font-size: 14px;\n      height: 32px;\n      &:not(:last-child) {\n        margin-bottom: 12px;\n      }\n    `\n  }\n  return css`\n    display: inline-flex;\n  `\n}\n\nexport const nicknameStyle = css`\n  line-height: 22px;\n  height: 22px;\n  align-self: center;\n  font-family: \"Inter\";\n  font-size: 14px;\n  text-align: left;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`\n","import { css } from \"@emotion/react\"\nimport { globalColor, illaPrefix } from \"@illa-design/react\"\n\nexport const avatarContainerStyle = css`\n  display: flex;\n  position: relative;\n  gap: 8px;\n`\n\nexport const moreIconStyle = css`\n  width: 32px;\n  height: 32px;\n  line-height: 32px;\n  text-align: center;\n  border-radius: 50%;\n  background-color: ${globalColor(`--${illaPrefix}-grayBlue-05`)};\n  color: ${globalColor(`--${illaPrefix}-white-01`)};\n  border: 1px solid ${globalColor(`--${illaPrefix}-white-01`)};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  & span {\n    margin: 8px;\n    font-size: 12px;\n    line-height: 16px;\n    vertical-align: middle;\n  }\n`\n\nexport const userInfoListContainerStyle = css`\n  position: absolute;\n  top: 3px;\n  right: 0;\n  width: 172px;\n  max-height: 240px;\n  overflow: auto;\n  background-color: ${globalColor(`--${illaPrefix}-white-01`)};\n  border-radius: 8px;\n  border: 1px solid ${globalColor(`--${illaPrefix}-grayBlue-08`)};\n  box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.08);\n  padding: 16px;\n  z-index: 10;\n`\n","import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const deployConfigButtonStyle = css`\n  position: relative;\n\n  &:before {\n    border-radius: 1px;\n    background: ${getColor(\"white\", \"06\")};\n    width: 1px;\n    height: 12px;\n    content: \"\";\n    position: absolute;\n    left: 0;\n  }\n`\nexport const deployMenuStyle = css`\n  padding: 8px 0;\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n`\n\nexport const deployMenuWithTagStyle = css`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`\n\nexport const deployButtonStyle = css`\n  display: flex;\n`\n\nexport const deployLabelStyle = css`\n  font-weight: 500;\n  line-height: 22px;\n`\nexport const deployConfigDescStyle = css`\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 20px;\n  color: ${getColor(\"grayBlue\", \"04\")};\n`\n","import { isCloudVersion } from \"@illa-public/utils\"\nimport { FC } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport {\n  Button,\n  DownIcon,\n  DropList,\n  DropListItem,\n  Dropdown,\n  PlayFillIcon,\n} from \"@illa-design/react\"\nimport { UpgradeTag } from \"@/components/UpgradeTag\"\nimport {\n  deployButtonStyle,\n  deployConfigButtonStyle,\n  deployConfigDescStyle,\n  deployLabelStyle,\n  deployMenuStyle,\n  deployMenuWithTagStyle,\n} from \"@/page/App/Module/PageNavBar/DeloyButtonGroup/style\"\n\nexport interface DeployButtonGroupProps {\n  onClickDeploy: () => void\n  onClickDeployMenu: (value: string | number) => void\n  loading: boolean\n  isGuideMode: boolean\n  canUseBillingFeature: boolean\n  disPrivate: boolean\n  isPublic?: boolean\n}\n\nexport const DeployButtonGroup: FC<DeployButtonGroupProps> = (props) => {\n  const { t } = useTranslation()\n  const {\n    loading,\n    isPublic,\n    isGuideMode,\n    canUseBillingFeature,\n    onClickDeploy,\n    disPrivate,\n    onClickDeployMenu,\n  } = props\n\n  if (!isCloudVersion || isGuideMode) {\n    return (\n      <Button\n        loading={loading}\n        colorScheme=\"techPurple\"\n        size=\"medium\"\n        leftIcon={<PlayFillIcon />}\n        onClick={onClickDeploy}\n      >\n        {isGuideMode\n          ? t(\"editor.tutorial.panel.tutorial.modal.fork\")\n          : t(\"deploy\")}\n      </Button>\n    )\n  }\n\n  return (\n    <div css={deployButtonStyle}>\n      <Button\n        loading={loading}\n        colorScheme=\"techPurple\"\n        size=\"medium\"\n        bdRadius=\"8px 0 0 8px\"\n        leftIcon={<PlayFillIcon />}\n        onClick={onClickDeploy}\n      >\n        {isPublic ? t(\"new_deploy.button.public\") : t(\"deploy\")}\n      </Button>\n      <Dropdown\n        position=\"bottom-end\"\n        trigger=\"click\"\n        triggerProps={{ closeDelay: 0, openDelay: 0 }}\n        dropList={\n          <DropList onClickItem={onClickDeployMenu}>\n            <DropListItem\n              key=\"private\"\n              value=\"private\"\n              disabled={disPrivate}\n              title={\n                <div css={deployMenuStyle}>\n                  <div css={deployLabelStyle}>\n                    {t(\"new_deploy.title.private_app\")}\n                  </div>\n                  <div css={deployConfigDescStyle}>\n                    {t(\"new_deploy.desc.private_app\")}\n                  </div>\n                </div>\n              }\n            />\n            <DropListItem\n              key=\"public\"\n              value=\"public\"\n              title={\n                <div css={deployMenuStyle}>\n                  {canUseBillingFeature ? (\n                    <div css={deployLabelStyle}>\n                      {t(\"new_deploy.title.public_app\")}\n                    </div>\n                  ) : (\n                    <div css={deployMenuWithTagStyle}>\n                      <span css={deployLabelStyle}>\n                        {t(\"new_deploy.title.public_app\")}\n                      </span>\n                      <UpgradeTag />\n                    </div>\n                  )}\n                  <div css={deployConfigDescStyle}>\n                    {t(\"new_deploy.desc.public_app\")}\n                  </div>\n                </div>\n              }\n            />\n          </DropList>\n        }\n      >\n        <Button\n          css={deployConfigButtonStyle}\n          colorScheme=\"techPurple\"\n          bdRadius=\"0 8px 8px 0\"\n          leftIcon={<DownIcon />}\n        />\n      </Dropdown>\n    </div>\n  )\n}\n","import { SerializedStyles, css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const lineStyle = css`\n  display: inline-block;\n  width: 1px;\n  height: 16px;\n  margin: 0 16px;\n  background-color: ${getColor(\"grayBlue\", \"08\")};\n`\n\nexport const windowIconBodyStyle = css`\n  width: 24px;\n  height: 24px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 2px;\n  border-radius: 4px;\n  cursor: pointer;\n\n  &:hover {\n    background: ${getColor(\"grayBlue\", \"09\")};\n  }\n`\n\nexport function windowIconStyle(selected: boolean): SerializedStyles {\n  return css`\n    flex: none;\n    width: 16px;\n    height: 16px;\n    font-size: 16px;\n    color: ${selected\n      ? getColor(\"grayBlue\", \"03\")\n      : getColor(\"grayBlue\", \"05\")};\n  `\n}\n","import { ILLA_MIXPANEL_EVENT_TYPE } from \"@illa-public/mixpanel-utils\"\nimport { useCallback } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport {\n  WindowBottomIcon,\n  WindowLeftIcon,\n  WindowRightIcon,\n} from \"@illa-design/react\"\nimport {\n  isOpenBottomPanel,\n  isOpenLeftPanel,\n  isOpenRightPanel,\n} from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { trackInEditor } from \"@/utils/mixpanelHelper\"\nimport { windowIconBodyStyle, windowIconStyle } from \"./style\"\n\nexport const WindowIcons = () => {\n  const dispatch = useDispatch()\n\n  const leftPanelVisible = useSelector(isOpenLeftPanel)\n  const rightPanelVisible = useSelector(isOpenRightPanel)\n  const bottomPanelVisible = useSelector(isOpenBottomPanel)\n\n  const handleClickLeftWindowIcon = useCallback(() => {\n    trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n      element: \"panel_show\",\n      parameter2: \"left\",\n      parameter3: !leftPanelVisible ? \"show\" : \"hidden\",\n    })\n    dispatch(configActions.updateLeftPanel(!leftPanelVisible))\n  }, [dispatch, leftPanelVisible])\n  const handleClickRightWindowIcon = useCallback(() => {\n    trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n      element: \"panel_show\",\n      parameter2: \"right\",\n      parameter3: !rightPanelVisible ? \"show\" : \"hidden\",\n    })\n    dispatch(configActions.updateRightPanel(!rightPanelVisible))\n  }, [dispatch, rightPanelVisible])\n  const handleClickBottomWindowIcon = useCallback(() => {\n    trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n      element: \"panel_show\",\n      parameter2: \"bottom\",\n      parameter3: !bottomPanelVisible ? \"show\" : \"hidden\",\n    })\n    dispatch(configActions.updateBottomPanel(!bottomPanelVisible))\n  }, [bottomPanelVisible, dispatch])\n\n  return (\n    <div\n      style={{\n        pointerEvents: \"auto\",\n      }}\n    >\n      <span css={windowIconBodyStyle} onClick={handleClickLeftWindowIcon}>\n        <WindowLeftIcon _css={windowIconStyle(leftPanelVisible)} />\n      </span>\n      <span css={windowIconBodyStyle} onClick={handleClickBottomWindowIcon}>\n        <WindowBottomIcon _css={windowIconStyle(bottomPanelVisible)} />\n      </span>\n      <span css={windowIconBodyStyle} onClick={handleClickRightWindowIcon}>\n        <WindowRightIcon _css={windowIconStyle(rightPanelVisible)} />\n      </span>\n    </div>\n  )\n}\n","import { isILLAAPiError } from \"@illa-public/illa-net\"\nimport { ILLA_MIXPANEL_EVENT_TYPE } from \"@illa-public/mixpanel-utils\"\nimport { useUpgradeModal } from \"@illa-public/upgrade-modal\"\nimport { getCurrentTeamInfo, getPlanUtils } from \"@illa-public/user-data\"\nimport {\n  canUseUpgradeFeature,\n  showShareAppModal,\n} from \"@illa-public/user-role-utils\"\nimport {\n  fromNow,\n  getILLABuilderURL,\n  getILLACloudURL,\n  isCloudVersion,\n} from \"@illa-public/utils\"\nimport { FC, useCallback, useEffect, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { Link, useParams } from \"react-router-dom\"\nimport {\n  Button,\n  ExitIcon,\n  FullScreenIcon,\n  QuestionCircleIcon,\n  getColor,\n  useMessage,\n  useModal,\n} from \"@illa-design/react\"\nimport Logo from \"@/assets/illa-logo.svg?react\"\nimport SnowIcon from \"@/assets/snow-icon.svg?react\"\nimport { AppName } from \"@/page/App/Module/PageNavBar/AppName\"\nimport { AppSizeButtonGroup } from \"@/page/App/Module/PageNavBar/AppSizeButtonGroup\"\nimport { CollaboratorsList } from \"@/page/App/Module/PageNavBar/CollaboratorsList\"\nimport { DeployButtonGroup } from \"@/page/App/Module/PageNavBar/DeloyButtonGroup\"\nimport { ShareAppButton } from \"@/page/App/Module/PageNavBar/ShareAppButton\"\nimport { WindowIcons } from \"@/page/App/Module/PageNavBar/WindowIcons\"\nimport { PageNavBarProps } from \"@/page/App/Module/PageNavBar/interface\"\nimport {\n  getIsILLAEditMode,\n  getIsILLAGuideMode,\n  getIsILLAPreviewMode,\n  getIsOnline,\n} from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { getHasMissingResourceAction } from \"@/redux/currentApp/action/actionSelector\"\nimport { getAppInfo } from \"@/redux/currentApp/appInfo/appInfoSelector\"\nimport { appInfoActions } from \"@/redux/currentApp/appInfo/appInfoSlice\"\nimport { fetchDeployApp, forkCurrentApp } from \"@/services/apps\"\nimport { trackInEditor } from \"@/utils/mixpanelHelper\"\nimport MissingResourceModal from \"../../components/MissingRosourceModal\"\nimport {\n  buttonGroupStyle,\n  descriptionStyle,\n  informationStyle,\n  logoCursorStyle,\n  missingContentStyle,\n  missingHeaderContainerStyle,\n  missingResourceHeaderStyle,\n  missingResourceModalContainerStyle,\n  navBarStyle,\n  rightContentStyle,\n  rowCenter,\n  saveFailedTipStyle,\n  viewControlStyle,\n} from \"./style\"\n\nexport const PageNavBar: FC<PageNavBarProps> = (props) => {\n  const { className } = props\n  const { t } = useTranslation()\n  const dispatch = useDispatch()\n  const message = useMessage()\n\n  const { teamIdentifier } = useParams()\n\n  const appInfo = useSelector(getAppInfo)\n  const isOnline = useSelector(getIsOnline)\n  const isEditMode = useSelector(getIsILLAEditMode)\n  const isPreviewMode = useSelector(getIsILLAPreviewMode)\n  const isGuideMode = useSelector(getIsILLAGuideMode)\n  const teamInfo = useSelector(getCurrentTeamInfo)!!\n  const hasMissingResources = useSelector(getHasMissingResourceAction)\n  const modal = useModal()\n\n  const upgradeModal = useUpgradeModal()\n\n  const [deployLoading, setDeployLoading] = useState<boolean>(false)\n  const [shownMissingResource, setShownMissingResource] = useState(false)\n\n  const canUseBillingFeature = canUseUpgradeFeature(\n    teamInfo.myRole,\n    getPlanUtils(teamInfo),\n    teamInfo?.totalTeamLicense?.teamLicensePurchased,\n    teamInfo?.totalTeamLicense?.teamLicenseAllPaid,\n  )\n\n  const deployApp = useCallback(\n    async (\n      appId: string,\n      isPublic: boolean,\n      onSuccess?: () => void,\n      onFailed?: (error: unknown) => void,\n    ) => {\n      setDeployLoading(true)\n      try {\n        await fetchDeployApp(appId, isPublic)\n        dispatch(appInfoActions.updateAppDeployedReducer(true))\n        dispatch(appInfoActions.updateAppPublicReducer(isPublic))\n        window.open(\n          `${getILLABuilderURL(\n            window.customDomain,\n          )}/${teamIdentifier}/deploy/app/${appId}`,\n          \"_blank\",\n        )\n        onSuccess?.()\n      } catch (error) {\n        message.error({\n          content: t(\"editor.deploy.fail\"),\n        })\n        onFailed?.(error)\n      } finally {\n        setDeployLoading(false)\n      }\n    },\n    [dispatch, teamIdentifier, message, t],\n  )\n\n  const forkGuideAppAndDeploy = useCallback(\n    async (appName: string) => {\n      setDeployLoading(true)\n      const appId = await forkCurrentApp(appName)\n      await deployApp(appId, false)\n      setDeployLoading(false)\n    },\n    [deployApp],\n  )\n\n  const handleClickDeploy = async () => {\n    if (isGuideMode) {\n      await forkGuideAppAndDeploy(appInfo.appName)\n    } else {\n      trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n        element: \"deploy\",\n      })\n      if (hasMissingResources) {\n        trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.SHOW, {\n          element: \"missing_resource_confirm_modal\",\n        })\n        modal.show({\n          children: (\n            <div css={missingResourceModalContainerStyle}>\n              <div css={missingHeaderContainerStyle}>\n                <QuestionCircleIcon color={getColor(\"orange\", \"03\")} />\n                <h6 css={missingResourceHeaderStyle}>\n                  {t(\n                    \"editor.action.panel.title.missing_resource.missing_resources\",\n                  )}\n                </h6>\n              </div>\n              <p css={missingContentStyle}>\n                {t(\n                  \"editor.action.panel.desc.missing_resource.some_resources_of_th\",\n                )}\n              </p>\n            </div>\n          ),\n          okText: t(\"editor.action.panel.button.missing_resource.deploy\"),\n          cancelText: t(\n            \"editor.action.panel.button.missing_resource.configure\",\n          ),\n          maskClosable: false,\n          okButtonProps: {\n            colorScheme: \"black\",\n          },\n          w: \"320px\",\n          minW: \"320px\",\n          onOk: async () => {\n            trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n              element: \"missing_resource_confirm_modal_deploy\",\n            })\n            await deployApp(appInfo.appId, appInfo.config.public)\n          },\n          onCancel() {\n            trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n              element: \"missing_resource_confirm_modal_configure\",\n            })\n            setShownMissingResource(true)\n          },\n        })\n        return\n      }\n      await deployApp(appInfo.appId, appInfo.config.public)\n    }\n  }\n\n  const handleClickDeployMenu = useCallback(\n    async (key: string | number) => {\n      if (key === \"public\" && !canUseBillingFeature) {\n        upgradeModal({\n          modalType: \"upgrade\",\n          from: \"app_edit_deploy_public\",\n        })\n      } else {\n        trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.REQUEST, {\n          element: \"invite_modal_public_switch\",\n          parameter1: \"deploy\",\n          parameter2: \"trigger\",\n          parameter4: appInfo.config.public ? \"on\" : \"off\",\n          parameter5: appInfo.appId,\n        })\n        await deployApp(\n          appInfo.appId,\n          key === \"public\",\n          () => {\n            trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.REQUEST, {\n              element: \"invite_modal_public_switch\",\n              parameter1: \"deploy\",\n              parameter2: \"suc\",\n              parameter4: appInfo.config.public ? \"on\" : \"off\",\n              parameter5: appInfo.appId,\n            })\n          },\n          (error) => {\n            trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.REQUEST, {\n              element: \"invite_modal_public_switch\",\n              parameter1: \"deploy\",\n              parameter2: \"failed\",\n              parameter3: isILLAAPiError(error)\n                ? error?.data?.errorFlag\n                : \"unknown\",\n              parameter4: appInfo.config.public ? \"on\" : \"off\",\n              parameter5: appInfo.appId,\n            })\n          },\n        )\n      }\n    },\n    [\n      appInfo.appId,\n      appInfo.config.public,\n      canUseBillingFeature,\n      deployApp,\n      upgradeModal,\n    ],\n  )\n\n  const handlePreviewButtonClick = useCallback(() => {\n    if (isEditMode) {\n      trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n        element: \"preview\",\n      })\n      dispatch(configActions.updateIllaMode(\"preview\"))\n    } else {\n      trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n        element: \"exit_preview\",\n      })\n      dispatch(configActions.updateIllaMode(\"edit\"))\n    }\n  }, [dispatch, isEditMode])\n\n  const PreviewButton = (\n    <Button\n      colorScheme=\"grayBlue\"\n      leftIcon={isEditMode ? <FullScreenIcon /> : <ExitIcon />}\n      variant=\"fill\"\n      bdRadius=\"8px\"\n      onClick={handlePreviewButtonClick}\n    >\n      {isEditMode ? t(\"preview.button_text\") : t(\"exit_preview\")}\n    </Button>\n  )\n\n  const canShowShareAppModal = showShareAppModal(\n    teamInfo,\n    teamInfo.myRole,\n    appInfo.config.public,\n    appInfo.config.publishedToMarketplace,\n    appInfo.deployed,\n  )\n\n  useEffect(() => {\n    !isGuideMode &&\n      canShowShareAppModal &&\n      trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.SHOW, { element: \"invite_entry\" })\n  }, [canShowShareAppModal, isGuideMode])\n\n  return (\n    <div className={className} css={navBarStyle}>\n      <div css={rowCenter}>\n        <Link to={getILLACloudURL(window.customDomain)}>\n          <Logo width=\"34px\" css={logoCursorStyle} />\n        </Link>\n\n        <div css={informationStyle}>\n          <AppName appInfo={appInfo} />\n          {isOnline ? (\n            <div css={descriptionStyle}>\n              {t(\"edit_at\") + \" \" + fromNow(appInfo?.updatedAt)}\n            </div>\n          ) : (\n            <div css={saveFailedTipStyle}>\n              <SnowIcon />\n              <span> {t(\"edit_failed\")}</span>\n            </div>\n          )}\n        </div>\n      </div>\n      <div css={viewControlStyle()}>\n        {isEditMode && <WindowIcons />}\n        {isPreviewMode && <AppSizeButtonGroup />}\n      </div>\n      <div css={rightContentStyle}>\n        {isEditMode ? (\n          <div css={buttonGroupStyle}>\n            {isCloudVersion && (\n              <>\n                <CollaboratorsList />\n                {canShowShareAppModal && <ShareAppButton appInfo={appInfo} />}\n              </>\n            )}\n            {PreviewButton}\n            {/* {hasMissingResources && (\n              <ResourceMissingTipButton ref={missingResourceButtonRef} />\n            )} */}\n            <DeployButtonGroup\n              disPrivate={appInfo.config.publishedToMarketplace}\n              loading={deployLoading}\n              isPublic={appInfo.config.public}\n              isGuideMode={isGuideMode}\n              canUseBillingFeature={canUseBillingFeature}\n              onClickDeploy={handleClickDeploy}\n              onClickDeployMenu={handleClickDeployMenu}\n            />\n          </div>\n        ) : (\n          PreviewButton\n        )}\n      </div>\n      <MissingResourceModal\n        shown={shownMissingResource}\n        changeShown={setShownMissingResource}\n      />\n    </div>\n  )\n}\n\nPageNavBar.displayName = \"PageNavBar\"\n"],"file":"assets/index-cd7c17cc.js"}