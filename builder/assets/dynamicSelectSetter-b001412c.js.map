{"version":3,"file":"dynamicSelectSetter-b001412c.js","sources":["../../src/page/App/components/InspectPanel/PanelSetters/SelectSetter/dynamicSelectSetter.tsx"],"sourcesContent":["import { get } from \"lodash-es\"\nimport { FC, useCallback, useMemo } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport BaseDynamicSelect from \"@/page/App/components/InspectPanel/PanelSetters/SelectSetter/baseDynamicSelect\"\nimport { publicPaddingStyle } from \"@/page/App/components/InspectPanel/style\"\nimport { getExecutionResult } from \"@/redux/currentApp/executionTree/executionSelector\"\nimport { getExecutionError } from \"@/redux/currentApp/executionTree/executionSelector\"\nimport { RootState } from \"@/store\"\nimport { VALIDATION_TYPES } from \"@/utils/validationFactory\"\nimport { BaseSelectSetterProps } from \"./interface\"\n\nconst DynamicSelectSetter: FC<BaseSelectSetterProps> = (props) => {\n  const {\n    widgetDisplayName,\n    attrName,\n    value,\n    labelName,\n    labelDesc,\n    options,\n    defaultValue,\n    handleUpdateMultiAttrDSL,\n  } = props\n\n  const targetComponentProps = useSelector<RootState, Record<string, any>>(\n    (rootState) => {\n      const executionTree = getExecutionResult(rootState)\n      return get(executionTree, widgetDisplayName, {})\n    },\n  )\n\n  const handleUpdateDsl = useCallback(\n    (attrName: string, newValue: any) => {\n      handleUpdateMultiAttrDSL?.({\n        [attrName]: newValue,\n      })\n    },\n    [handleUpdateMultiAttrDSL],\n  )\n\n  const executionErrors = useSelector(getExecutionError)\n  const isError = useMemo(() => {\n    return (\n      (executionErrors[`${widgetDisplayName}.${attrName}JS`] ?? [])?.length > 0\n    )\n  }, [attrName, executionErrors, widgetDisplayName])\n\n  const isDynamic =\n    get(\n      targetComponentProps,\n      `${widgetDisplayName}.${attrName}JS`,\n      \"select\",\n    ) === \"dynamic\"\n\n  const handleClickFxButton = useCallback(() => {\n    if (isDynamic) {\n      handleUpdateDsl(`${widgetDisplayName}.${attrName}JS`, \"select\")\n      handleUpdateDsl(attrName, defaultValue)\n    } else {\n      handleUpdateDsl(`${widgetDisplayName}.${attrName}JS`, \"dynamic\")\n    }\n  }, [attrName, defaultValue, handleUpdateDsl, isDynamic, widgetDisplayName])\n\n  const handleChangeSelect = useCallback(\n    (value: string) => {\n      handleUpdateDsl?.(attrName, value)\n    },\n    [attrName, handleUpdateDsl],\n  )\n\n  const handleChangeInput = useCallback(\n    (value: string) => {\n      handleUpdateDsl(attrName, value)\n    },\n    [attrName, handleUpdateDsl],\n  )\n\n  return (\n    <div css={publicPaddingStyle}>\n      <BaseDynamicSelect\n        {...props}\n        isDynamic={isDynamic}\n        options={options}\n        onClickFxButton={handleClickFxButton}\n        onChangeSelect={handleChangeSelect}\n        value={value}\n        onChangeInput={handleChangeInput}\n        expectedType={VALIDATION_TYPES.STRING}\n        path={`${widgetDisplayName}.${attrName}`}\n        labelName={labelName}\n        labelDesc={labelDesc}\n        isError={isError}\n      />\n    </div>\n  )\n}\n\nDynamicSelectSetter.displayName = \"DynamicSelectSetter\"\n\nexport default DynamicSelectSetter\n"],"names":["DynamicSelectSetter","props","widgetDisplayName","attrName","value","labelName","labelDesc","options","defaultValue","handleUpdateMultiAttrDSL","targetComponentProps","useSelector","rootState","executionTree","getExecutionResult","get","handleUpdateDsl","useCallback","newValue","executionErrors","getExecutionError","isError","useMemo","_a","isDynamic","handleClickFxButton","handleChangeSelect","handleChangeInput","jsx","publicPaddingStyle","BaseDynamicSelect","VALIDATION_TYPES"],"mappings":"8mBAWM,MAAAA,EAAkDC,GAAU,CAC1D,KAAA,CACJ,kBAAAC,EACA,SAAAC,EACA,MAAAC,EACA,UAAAC,EACA,UAAAC,EACA,QAAAC,EACA,aAAAC,EACA,yBAAAC,CACE,EAAAR,EAEES,EAAuBC,EAC1BC,GAAc,CACP,MAAAC,EAAgBC,EAAmBF,CAAS,EAClD,OAAOG,EAAIF,EAAeX,EAAmB,CAAE,CAAA,CACjD,CAAA,EAGIc,EAAkBC,EAAA,YACtB,CAACd,EAAkBe,IAAkB,CACRT,GAAA,MAAAA,EAAA,CACzB,CAACN,CAAQ,EAAGe,CAAA,EAEhB,EACA,CAACT,CAAwB,CAAA,EAGrBU,EAAkBR,EAAYS,CAAiB,EAC/CC,EAAUC,EAAAA,QAAQ,IAAM,OAEzB,QAAAC,EAAAJ,EAAgB,GAAGjB,CAAiB,IAAIC,CAAQ,IAAI,GAAK,KAAzD,YAAAoB,EAA8D,QAAS,CAEzE,EAAA,CAACpB,EAAUgB,EAAiBjB,CAAiB,CAAC,EAE3CsB,EACJT,EACEL,EACA,GAAGR,CAAiB,IAAIC,CAAQ,KAChC,QACI,IAAA,UAEFsB,EAAsBR,EAAAA,YAAY,IAAM,CACxCO,GACFR,EAAgB,GAAGd,CAAiB,IAAIC,CAAQ,KAAM,QAAQ,EAC9Da,EAAgBb,EAAUK,CAAY,GAEtCQ,EAAgB,GAAGd,CAAiB,IAAIC,CAAQ,KAAM,SAAS,CACjE,EACC,CAACA,EAAUK,EAAcQ,EAAiBQ,EAAWtB,CAAiB,CAAC,EAEpEwB,EAAqBT,EAAA,YACxBb,GAAkB,CACjBY,GAAA,MAAAA,EAAkBb,EAAUC,EAC9B,EACA,CAACD,EAAUa,CAAe,CAAA,EAGtBW,EAAoBV,EAAA,YACvBb,GAAkB,CACjBY,EAAgBb,EAAUC,CAAK,CACjC,EACA,CAACD,EAAUa,CAAe,CAAA,EAI1B,OAAAY,EAAC,MAAI,CAAA,IAAKC,EACR,SAAAD,EAACE,EAAA,CACE,GAAG7B,EACJ,UAAAuB,EACA,QAAAjB,EACA,gBAAiBkB,EACjB,eAAgBC,EAChB,MAAAtB,EACA,cAAeuB,EACf,aAAcI,EAAiB,OAC/B,KAAM,GAAG7B,CAAiB,IAAIC,CAAQ,GACtC,UAAAE,EACA,UAAAC,EACA,QAAAe,CAAA,CAEJ,CAAA,CAAA,CAEJ,EAEArB,EAAoB,YAAc"}