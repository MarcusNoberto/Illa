{"version":3,"file":"index-a147abcb.js","sources":["../../src/page/App/components/InspectPanel/PanelSetters/CarouselListSetter/index.tsx"],"sourcesContent":["import { FC } from \"react\"\nimport { v4 } from \"uuid\"\nimport { Column } from \"@/page/App/components/InspectPanel/PanelSetters/DragMoveComponent/Column\"\nimport { ColumnContainer } from \"@/page/App/components/InspectPanel/PanelSetters/DragMoveComponent/ColumnContainer\"\nimport { ColumnEmpty } from \"@/page/App/components/InspectPanel/PanelSetters/DragMoveComponent/Empty\"\nimport { CarouselListSetterProps } from \"./interface\"\n\nconst CarouselListSetter: FC<CarouselListSetterProps> = (props) => {\n  const {\n    value,\n    attrName,\n    widgetDisplayName,\n    childrenSetter,\n    handleUpdateMultiAttrDSL,\n  } = props\n\n  return (\n    <ColumnContainer\n      attrName={attrName}\n      value={value}\n      handleUpdateMultiAttrDSL={handleUpdateMultiAttrDSL}\n      columnNum={value.length}\n      items={value.map((item) => item.id)}\n      onClickNew={() => {\n        const newItem = {\n          id: `views-${v4()}`,\n          key: `views-${v4()}`,\n          label: `Image ${value.length + 1}`,\n        }\n        handleUpdateMultiAttrDSL?.({\n          [attrName]: [...value, newItem],\n        })\n      }}\n    >\n      {value.length > 0 ? (\n        value.map((item, index) => {\n          return (\n            <Column\n              onCopy={() => {\n                const newItem = {\n                  ...value[index],\n                  id: `views-${v4()}`,\n                  key: `views-${v4()}`,\n                }\n                const updatedArray = [...value, newItem]\n                handleUpdateMultiAttrDSL?.({\n                  [attrName]: updatedArray,\n                })\n              }}\n              onDelete={(id) => {\n                const newV = value.filter((item) => item.id !== id)\n                handleUpdateMultiAttrDSL?.({\n                  [attrName]: newV,\n                })\n              }}\n              showCopy\n              showDelete\n              key={item.id}\n              id={item.id}\n              label={item.label}\n              widgetDisplayName={widgetDisplayName}\n              childrenSetter={childrenSetter}\n              attrPath={`${attrName}.${index}`}\n            />\n          )\n        })\n      ) : (\n        <ColumnEmpty />\n      )}\n    </ColumnContainer>\n  )\n}\n\nCarouselListSetter.displayName = \"CarouselListSetter\"\nexport default CarouselListSetter\n"],"names":["CarouselListSetter","props","value","attrName","widgetDisplayName","childrenSetter","handleUpdateMultiAttrDSL","jsx","ColumnContainer","item","newItem","v4","index","Column","updatedArray","id","newV","ColumnEmpty"],"mappings":"4RAOM,MAAAA,EAAmDC,GAAU,CAC3D,KAAA,CACJ,MAAAC,EACA,SAAAC,EACA,kBAAAC,EACA,eAAAC,EACA,yBAAAC,CACE,EAAAL,EAGF,OAAAM,EAACC,EAAA,CACC,SAAAL,EACA,MAAAD,EACA,yBAAAI,EACA,UAAWJ,EAAM,OACjB,MAAOA,EAAM,IAAKO,GAASA,EAAK,EAAE,EAClC,WAAY,IAAM,CAChB,MAAMC,EAAU,CACd,GAAI,SAASC,EAAA,CAAI,GACjB,IAAK,SAASA,EAAA,CAAI,GAClB,MAAO,SAAST,EAAM,OAAS,CAAC,EAAA,EAEPI,GAAA,MAAAA,EAAA,CACzB,CAACH,CAAQ,EAAG,CAAC,GAAGD,EAAOQ,CAAO,CAAA,EAElC,EAEC,WAAM,OAAS,EACdR,EAAM,IAAI,CAACO,EAAMG,IAEbL,EAACM,EAAA,CACC,OAAQ,IAAM,CACZ,MAAMH,EAAU,CACd,GAAGR,EAAMU,CAAK,EACd,GAAI,SAASD,EAAA,CAAI,GACjB,IAAK,SAASA,EAAA,CAAI,EAAA,EAEdG,EAAe,CAAC,GAAGZ,EAAOQ,CAAO,EACZJ,GAAA,MAAAA,EAAA,CACzB,CAACH,CAAQ,EAAGW,CAAA,EAEhB,EACA,SAAWC,GAAO,CAChB,MAAMC,EAAOd,EAAM,OAAQO,GAASA,EAAK,KAAOM,CAAE,EACvBT,GAAA,MAAAA,EAAA,CACzB,CAACH,CAAQ,EAAGa,CAAA,EAEhB,EACA,SAAQ,GACR,WAAU,GAEV,GAAIP,EAAK,GACT,MAAOA,EAAK,MACZ,kBAAAL,EACA,eAAAC,EACA,SAAU,GAAGF,CAAQ,IAAIS,CAAK,EAAA,EALzBH,EAAK,EAAA,CAQf,EAEDF,EAACU,EAAY,EAAA,CAAA,CAAA,CAIrB,EAEAjB,EAAmB,YAAc"}