{"version":3,"file":"index-6fba99b6.js","sources":["../../src/page/App/components/Actions/ActionPanel/MysqlLikePanel/style.ts","../../src/page/App/components/Actions/ActionPanel/MysqlLikePanel/index.tsx"],"sourcesContent":["import { css } from \"@emotion/react\"\nimport { getColor } from \"@illa-design/react\"\n\nexport const mysqlContainerStyle = css`\n  display: flex;\n  flex-direction: column;\n`\n\nexport const sqlInputStyle = css`\n  margin: 8px 16px;\n`\n\nexport const actionItemContainer = css`\n  padding: 8px 0;\n`\n\nexport const sqlTransStyle = css`\n  padding: 8px 16px;\n  display: flex;\n  width: 100%;\n  align-items: center;\n`\n\nexport const labelStyle = css`\n  color: ${getColor(\"grayBlue\", \"02\")};\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 22px;\n  position: relative;\n`\n\nexport const labelTipsStyle = css`\n  position: absolute;\n  bottom: -2px;\n  left: 0;\n  width: 100%;\n  border-bottom: 1px dashed ${getColor(\"grayBlue\", \"06\")};\n`\n\nexport const modeContainerStyle = css`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px 16px;\n`\n","import { isILLAAPiError } from \"@illa-public/illa-net\"\nimport { ILLA_MIXPANEL_EVENT_TYPE } from \"@illa-public/mixpanel-utils\"\nimport { MysqlLikeAction } from \"@illa-public/public-types\"\nimport { isCloudVersion } from \"@illa-public/utils\"\nimport { FC, useCallback, useEffect, useMemo, useRef, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { Button, Input, Select, Trigger, useMessage } from \"@illa-design/react\"\nimport OpenAIIcon from \"@/assets/openai.svg?react\"\nimport { CodeEditor } from \"@/components/CodeEditor\"\nimport { CODE_LANG } from \"@/components/CodeEditor/CodeMirror/extensions/interface\"\nimport { ILLAMarkdown } from \"@/components/ILLAMarkdown\"\nimport {\n  actionItemContainer,\n  labelStyle,\n  labelTipsStyle,\n  modeContainerStyle,\n  sqlInputStyle,\n  sqlTransStyle,\n} from \"@/page/App/components/Actions/ActionPanel/MysqlLikePanel/style\"\nimport { TransformerComponent } from \"@/page/App/components/Actions/ActionPanel/TransformerComponent\"\nimport { getCachedAction } from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { getAppInfo } from \"@/redux/currentApp/appInfo/appInfoSelector\"\nimport { fetchGenerateSQL } from \"@/services/action\"\nimport { fetchResourceMeta } from \"@/services/resource\"\nimport { trackInEditor } from \"@/utils/mixpanelHelper\"\nimport { VALIDATION_TYPES } from \"@/utils/validationFactory\"\nimport { SQLModeSelector } from \"../pulicComponent/SQLModeSelector\"\nimport SQLModeTip from \"../pulicComponent/SQLModeTip\"\n\nconst MysqlLikePanel: FC = () => {\n  const currentAction = useSelector(getCachedAction)!!\n  const [sqlTable, setSqlTable] = useState<Record<string, unknown>>()\n  const dispatch = useDispatch()\n  const appInfo = useSelector(getAppInfo)\n\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    if (currentAction.resourceID == undefined) return\n    fetchResourceMeta(currentAction.resourceID).then(({ data }) => {\n      setSqlTable(data?.Schema ?? {})\n    })\n  }, [currentAction.resourceID])\n\n  const mode = useMemo(() => {\n    switch (currentAction.actionType) {\n      case \"hydra\":\n      case \"postgresql\":\n        return CODE_LANG.PGSQL\n      default:\n        return CODE_LANG.SQL\n    }\n  }, [currentAction.actionType])\n\n  const displayName = currentAction.displayName\n  const mysqlContent = currentAction.content as MysqlLikeAction\n  const value = useMemo(() => {\n    return (currentAction.content as MysqlLikeAction)?.query || \"\"\n  }, [currentAction])\n\n  const inputRef = useRef<HTMLInputElement>(null)\n  const [generateLoading, setGenerateLoading] = useState(false)\n  const [currentSqlAction, setCurrentSqlAction] = useState(1)\n  const message = useMessage()\n\n  const handleQueryChange = useCallback(\n    (value: string) => {\n      dispatch(\n        configActions.updateCachedAction({\n          ...currentAction,\n          content: {\n            ...mysqlContent,\n            query: value,\n          },\n        }),\n      )\n    },\n    [currentAction, dispatch, mysqlContent],\n  )\n\n  useEffect(() => {\n    trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.SHOW, {\n      element: \"sql_generation\",\n      parameter1: currentAction.actionType,\n    })\n  }, [currentAction.actionType])\n\n  const onBlurOnCodeMirror = useCallback((value: string) => {\n    trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.BLUR, {\n      element: \"action_edit_code_mirror\",\n      parameter2: \"content.query\",\n      parameter3: value.length,\n    })\n  }, [])\n  const handleClickGenerate = useCallback(async () => {\n    setGenerateLoading(true)\n    trackInEditor(ILLA_MIXPANEL_EVENT_TYPE.CLICK, {\n      element: \"sql_generation\",\n      parameter1: currentAction.actionType,\n      parameter4: {\n        type: currentSqlAction,\n        content: inputRef.current?.value,\n      },\n    })\n    const data = {\n      description: inputRef.current?.value,\n      resourceID: currentAction.resourceID,\n      action: currentSqlAction,\n    }\n    try {\n      const response = await fetchGenerateSQL(appInfo.appId, data)\n      dispatch(\n        configActions.updateCachedAction({\n          ...currentAction,\n          content: {\n            ...mysqlContent,\n            query: response.data.payload,\n          },\n        }),\n      )\n    } catch (e) {\n      if (isILLAAPiError(e)) {\n        message.error({\n          content: e.data.errorMessage,\n        })\n      }\n    }\n    setGenerateLoading(false)\n  }, [\n    appInfo.appId,\n    currentAction,\n    currentSqlAction,\n    dispatch,\n    message,\n    mysqlContent,\n  ])\n\n  return (\n    <div css={actionItemContainer}>\n      {isCloudVersion ? (\n        <div css={sqlTransStyle}>\n          <Select\n            mr=\"-1px\"\n            autoAlignPopupWidth={true}\n            w=\"120px\"\n            flexGrow=\"0\"\n            flexShrink=\"0\"\n            bdRadius=\"8px 0 0 8px\"\n            value={currentSqlAction}\n            options={[\n              {\n                label: \"SELECT\",\n                value: 1,\n              },\n              {\n                label: \"INSERT\",\n                value: 2,\n              },\n              {\n                label: \"UPDATE\",\n                value: 3,\n              },\n              {\n                label: \"DELETE\",\n                value: 4,\n              },\n            ]}\n            onChange={(v) => {\n              setCurrentSqlAction(v as number)\n            }}\n            size=\"large\"\n            colorScheme=\"techPurple\"\n          />\n          <Input\n            size=\"large\"\n            colorScheme=\"techPurple\"\n            bdRadius=\"0\"\n            flexGrow=\"1\"\n            flexShrink=\"1\"\n            placeholder={t(\"editor.action.panel.sqlgc.placeholder.text\")}\n            inputRef={inputRef}\n          />\n          <Button\n            minW=\"168px\"\n            loading={generateLoading}\n            size=\"large\"\n            flexGrow=\"0\"\n            flexShrink=\"0\"\n            bdRadius=\"0 8px 8px 0\"\n            pd=\"9px 24px\"\n            bg=\"linear-gradient(90deg, #FF53D9 0%, #AE47FF 100%);\"\n            leftIcon={<OpenAIIcon />}\n            onClick={handleClickGenerate}\n          >\n            {t(\"editor.action.panel.sqlgc.button.text\")}\n          </Button>\n        </div>\n      ) : null}\n      <div css={sqlInputStyle}>\n        <CodeEditor\n          className={`${displayName}-query`}\n          placeholder=\"select * from users;\"\n          showLineNumbers\n          height=\"88px\"\n          value={value}\n          lang={mode}\n          canShowCompleteInfo\n          expectValueType={VALIDATION_TYPES.STRING}\n          sqlScheme={sqlTable}\n          onChange={handleQueryChange}\n          onBlur={onBlurOnCodeMirror}\n        />\n        {mysqlContent.mode === \"sql-safe\" && <SQLModeTip value={value} />}\n      </div>\n      {(mysqlContent.mode === \"sql\" || mysqlContent.mode === \"sql-safe\") && (\n        <div css={modeContainerStyle}>\n          <Trigger\n            content={\n              <ILLAMarkdown\n                textString={t(\n                  \"editor.action.panel.label.tips.general.safe_mode\",\n                )}\n              />\n            }\n            trigger=\"hover\"\n            position=\"left\"\n            maxW=\"240px\"\n          >\n            <span css={labelStyle}>\n              {t(\"editor.action.panel.label.general.safe_mode\")}\n              <span css={labelTipsStyle} />\n            </span>\n          </Trigger>\n          <SQLModeSelector />\n        </div>\n      )}\n      <TransformerComponent fullWidth />\n    </div>\n  )\n}\n\nMysqlLikePanel.displayName = \"MysqlPanel\"\nexport default MysqlLikePanel\n"],"names":["css","sqlInputStyle","actionItemContainer","labelStyle","getColor","labelTipsStyle","modeContainerStyle","MysqlLikePanel","currentAction","useSelector","getCachedAction","sqlTable","setSqlTable","useState","dispatch","useDispatch","appInfo","getAppInfo","t","useTranslation","useEffect","fetchResourceMeta","data","mode","useMemo","CODE_LANG","displayName","mysqlContent","value","_a","inputRef","useRef","generateLoading","setGenerateLoading","currentSqlAction","setCurrentSqlAction","message","useMessage","handleQueryChange","useCallback","configActions","trackInEditor","ILLA_MIXPANEL_EVENT_TYPE","onBlurOnCodeMirror","_b","response","fetchGenerateSQL","e","isILLAAPiError","jsxs","jsx","CodeEditor","VALIDATION_TYPES","SQLModeTip","Trigger","ILLAMarkdown","SQLModeSelector","TransformerComponent"],"mappings":"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"}