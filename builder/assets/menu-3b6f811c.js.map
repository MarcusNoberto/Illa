{"version":3,"file":"menu-3b6f811c.js","sources":["../../src/widgetLibrary/MenuWidget/style.ts","../../src/widgetLibrary/MenuWidget/menu.tsx"],"sourcesContent":["import { SerializedStyles, css } from \"@emotion/react\"\nimport { MenuMode, getColor } from \"@illa-design/react\"\n\nexport function applyMenuBrandContainerStyle(mode: MenuMode): SerializedStyles {\n  return css`\n    display: inline-flex;\n    flex-direction: row;\n    align-items: center;\n    padding: ${mode === \"horizontal\" ? \"0px\" : \"16px\"} 16px;\n    padding-bottom: ${mode === \"horizontal\" ? \"0px\" : \"8px\"};\n    margin-right: ${mode === \"horizontal\" ? \"16px\" : \"0px\"};\n  `\n}\n\nexport function applyMenuTitleStyle(mode: MenuMode): SerializedStyles {\n  return css`\n    margin-left: ${mode === \"horizontal\" ? \"8px\" : \"12px\"};\n    color: ${getColor(\"grayBlue\", \"02\")};\n    font-size: 14px;\n    font-style: normal;\n    white-space: nowrap;\n    font-weight: 500;\n  `\n}\n\nexport function applyMenuWidgetContainerStyle(\n  mode: MenuMode,\n): SerializedStyles {\n  return css`\n    display: flex;\n    flex-direction: ${mode === \"horizontal\" ? \"row\" : \"column\"};\n    align-items: ${mode === \"horizontal\" ? \"center\" : \"flex-start\"};\n  `\n}\n","import { convertPathToString } from \"@illa-public/dynamic-string\"\nimport { toPath } from \"lodash-es\"\nimport { FC, useCallback, useMemo } from \"react\"\nimport { Image, Menu, MenuItemProps, SubMenuProps } from \"@illa-design/react\"\nimport {\n  applyMenuBrandContainerStyle,\n  applyMenuTitleStyle,\n  applyMenuWidgetContainerStyle,\n} from \"@/widgetLibrary/MenuWidget/style\"\nimport { AutoHeightContainer } from \"@/widgetLibrary/PublicSector/AutoHeightContainer\"\nimport { MenuWidgetProps, WrappedMenuProps } from \"./interface\"\n\nexport const WrappedMenu: FC<WrappedMenuProps> = (props) => {\n  const {\n    menuTitle,\n    menuLogo,\n    bgColor,\n    colorScheme,\n    hoverColorScheme,\n    mode = \"horizontal\",\n    horizontalAlign,\n    selectedValues,\n    items,\n    onClickSubMenu,\n    onClickMenuItem,\n    onMenuSelect,\n    onClickMenuLogo,\n  } = props\n\n  const menuBrandContainer = useMemo(() => {\n    if (!menuTitle && !menuLogo) {\n      return <></>\n    } else {\n      return (\n        <div css={applyMenuBrandContainerStyle(mode)}>\n          {menuLogo && (\n            <Image\n              src={menuLogo}\n              width=\"unset\"\n              height={mode === \"horizontal\" ? \"24px\" : \"32px\"}\n              objectFit=\"scale-down\"\n              onClick={onClickMenuLogo}\n            />\n          )}\n          {menuTitle && <div css={applyMenuTitleStyle(mode)}>{menuTitle}</div>}\n        </div>\n      )\n    }\n  }, [menuLogo, menuTitle, mode, onClickMenuLogo])\n\n  return (\n    <div css={applyMenuWidgetContainerStyle(mode)}>\n      {menuBrandContainer}\n      <Menu\n        flexGrow=\"1\"\n        w=\"100%\"\n        colorScheme={colorScheme}\n        hoverColorScheme={hoverColorScheme}\n        bgColor={bgColor}\n        mode={mode}\n        selectedValues={selectedValues}\n        onClickSubMenu={onClickSubMenu}\n        horizontalAlign={horizontalAlign}\n        onClickMenuItem={onClickMenuItem}\n        items={items}\n        onMenuSelect={onMenuSelect}\n      />\n    </div>\n  )\n}\n\nexport const StaticMenuWidget: FC<MenuWidgetProps> = (props) => {\n  const {\n    menuTitle,\n    menuLogo,\n    bgColor,\n    colorScheme,\n    mode,\n    selectedValues,\n    hoverColorScheme,\n    horizontalAlign,\n    items,\n    displayName,\n    handleUpdateMultiExecutionResult,\n    updateComponentHeight,\n    triggerEventHandler,\n    onClickMenuLogo,\n  } = props\n  const handleOnClickMenuItem = useCallback(\n    (value: string, valuePath: string[]) => {\n      if (valuePath.length === 1) {\n        const index = items?.findIndex((i) => i.value === value) ?? 0\n        const pathArray = [\"items\", `${index}`, \"events\"]\n        triggerEventHandler(\n          \"clickMenuItem\",\n          convertPathToString(pathArray),\n          undefined,\n          (path) => {\n            return convertPathToString(toPath(path).slice(3))\n          },\n        )\n      } else if (valuePath.length === 2) {\n        const sub = items?.findIndex((i) => i.value === valuePath[0])\n        if (\n          sub != undefined &&\n          sub !== -1 &&\n          items &&\n          \"subItems\" in items[sub]\n        ) {\n          const subIndex = (items[sub] as SubMenuProps).subItems?.findIndex(\n            (i) => i.value === valuePath[1],\n          )\n          const pathArray = [\n            \"items\",\n            `${sub}`,\n            \"subItems\",\n            `${subIndex}`,\n            \"events\",\n          ]\n          triggerEventHandler(\n            \"clickMenuItem\",\n            convertPathToString(pathArray),\n            undefined,\n            (path) => {\n              return convertPathToString(toPath(path).slice(5))\n            },\n          )\n        }\n      }\n    },\n    [items, triggerEventHandler],\n  )\n\n  const handleClickSubMenu = useCallback(\n    (value: string) => {\n      const index = items?.findIndex((i) => i.value === value)\n      if (index != undefined && index !== -1) {\n        const paths = [\"items\", `${index}`, \"events\"]\n        triggerEventHandler(\n          \"clickMenuItem\",\n          convertPathToString(paths),\n          undefined,\n          (path) => {\n            return convertPathToString(toPath(path).slice(3))\n          },\n        )\n      }\n    },\n    [items, triggerEventHandler],\n  )\n\n  return (\n    <AutoHeightContainer updateComponentHeight={updateComponentHeight}>\n      <WrappedMenu\n        menuTitle={menuTitle}\n        menuLogo={menuLogo}\n        selectedValues={\n          Array.isArray(selectedValues)\n            ? selectedValues\n            : [JSON.stringify(selectedValues)]\n        }\n        colorScheme={colorScheme}\n        hoverColorScheme={hoverColorScheme}\n        bgColor={bgColor}\n        mode={mode}\n        horizontalAlign={horizontalAlign}\n        onClickMenuItem={handleOnClickMenuItem}\n        onClickSubMenu={handleClickSubMenu}\n        items={items}\n        onMenuSelect={(value, valuePath, selectedValues) => {\n          handleUpdateMultiExecutionResult([\n            {\n              displayName,\n              value: {\n                selectedValues: selectedValues,\n              },\n            },\n          ])\n          triggerEventHandler(\"onMenuSelect\")\n        }}\n        onClickMenuLogo={onClickMenuLogo}\n      />\n    </AutoHeightContainer>\n  )\n}\n\nexport const DynamicMenuWidget: FC<MenuWidgetProps> = (props) => {\n  const {\n    menuTitle,\n    menuLogo,\n    bgColor,\n    colorScheme,\n    mode,\n    selectedValues,\n    hoverColorScheme,\n    horizontalAlign,\n    updateComponentHeight,\n    mappedOption,\n    triggerEventHandler,\n    displayName,\n    handleUpdateMultiExecutionResult,\n    onClickMenuLogo,\n  } = props\n\n  const total = mappedOption?.values?.length ?? 0\n\n  const items: MenuItemProps[] = []\n\n  if (mappedOption && total !== 0) {\n    for (let i = 0; i < total; i++) {\n      if (mappedOption.groupLabels?.[i]) {\n        let parent = items.find(\n          (v) => v.label === mappedOption.groupLabels?.[i],\n        ) as SubMenuProps\n\n        if (!parent) {\n          parent = {\n            label:\n              typeof mappedOption.groupLabels?.[i] === \"string\"\n                ? mappedOption.groupLabels?.[i]\n                : JSON.stringify(mappedOption.groupLabels?.[i]),\n            value:\n              typeof mappedOption.groupLabels?.[i] === \"string\"\n                ? mappedOption.groupLabels?.[i]\n                : JSON.stringify(mappedOption.groupLabels?.[i]),\n            subItems: [],\n          } as SubMenuProps\n          items.push(parent)\n        }\n        parent.subItems!!.push({\n          disabled: mappedOption.disables?.[i],\n          hidden: mappedOption.hidden?.[i],\n          label: mappedOption.labels?.[i],\n          value: mappedOption.values?.[i],\n        } as MenuItemProps)\n      } else {\n        items.push({\n          disabled: mappedOption.disables?.[i],\n          hidden: mappedOption.hidden?.[i],\n          label: mappedOption.labels?.[i],\n          value: mappedOption.values?.[i],\n        } as SubMenuProps)\n      }\n    }\n  }\n\n  return (\n    <AutoHeightContainer updateComponentHeight={updateComponentHeight}>\n      <WrappedMenu\n        menuTitle={menuTitle}\n        menuLogo={menuLogo}\n        selectedValues={\n          Array.isArray(selectedValues)\n            ? selectedValues\n            : [JSON.stringify(selectedValues)]\n        }\n        colorScheme={colorScheme}\n        hoverColorScheme={hoverColorScheme}\n        bgColor={bgColor}\n        items={items}\n        mode={mode}\n        horizontalAlign={horizontalAlign}\n        onMenuSelect={(value, valuePath, selectedValues) => {\n          handleUpdateMultiExecutionResult([\n            {\n              displayName,\n              value: {\n                selectedValues: selectedValues,\n              },\n            },\n          ])\n          triggerEventHandler(\"onMenuSelect\")\n        }}\n        onClickMenuLogo={onClickMenuLogo}\n      />\n    </AutoHeightContainer>\n  )\n}\n\nexport const MenuWidget: FC<MenuWidgetProps> = (props) => {\n  const { optionConfigureMode, triggerEventHandler } = props\n\n  const handleClickMenuLogo = useCallback(() => {\n    triggerEventHandler(\"onMenuLogoClick\")\n  }, [triggerEventHandler])\n\n  if (optionConfigureMode === \"static\") {\n    return <StaticMenuWidget {...props} onClickMenuLogo={handleClickMenuLogo} />\n  } else {\n    return (\n      <DynamicMenuWidget {...props} onClickMenuLogo={handleClickMenuLogo} />\n    )\n  }\n}\n\nStaticMenuWidget.displayName = \"StaticMenuWidget\"\nDynamicMenuWidget.displayName = \"DynamicMenuWidget\"\nWrappedMenu.displayName = \"WrappedMenu\"\nexport default MenuWidget\n"],"names":["applyMenuBrandContainerStyle","mode","css","applyMenuTitleStyle","getColor","applyMenuWidgetContainerStyle","WrappedMenu","props","menuTitle","menuLogo","bgColor","colorScheme","hoverColorScheme","horizontalAlign","selectedValues","items","onClickSubMenu","onClickMenuItem","onMenuSelect","onClickMenuLogo","menuBrandContainer","useMemo","jsx","Fragment","jsxs","Image","Menu","StaticMenuWidget","displayName","handleUpdateMultiExecutionResult","updateComponentHeight","triggerEventHandler","handleOnClickMenuItem","useCallback","value","valuePath","pathArray","i","convertPathToString","path","toPath","sub","subIndex","_a","handleClickSubMenu","index","paths","AutoHeightContainer","DynamicMenuWidget","mappedOption","total","_b","parent","v","_c","_d","_e","_f","_g","_h","_i","_j","_k","_l","_m","_n","_o","_p","MenuWidget","optionConfigureMode","handleClickMenuLogo"],"mappings":"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"}