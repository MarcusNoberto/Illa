{"version":3,"file":"form-4257bee1.js","sources":["../../src/widgetLibrary/FormWidget/style.ts","../../src/widgetLibrary/FormWidget/form.tsx"],"sourcesContent":["import { css } from \"@emotion/react\"\nimport { globalColor, illaPrefix } from \"@illa-design/react\"\n\nexport const formContainerStyle = css`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  overflow: hidden;\n`\n\nexport const formHeaderStyle = css`\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n`\nexport const formBodyStyle = css`\n  width: 100%;\n  height: 100%;\n  min-height: 100px;\n  flex: 1;\n  overflow-y: auto;\n  position: relative;\n`\nexport const resizeLineStyle = css`\n  width: 100%;\n  height: 100%;\n  cursor: row-resize;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nexport const resizeBarStyle = css`\n  fill: ${globalColor(`--${illaPrefix}-white-01`)};\n  stroke: ${globalColor(`--${illaPrefix}-techPurple-03`)};\n  :hover {\n    fill: ${globalColor(`--${illaPrefix}-techPurple-03`)};\n    stroke: ${globalColor(`--${illaPrefix}-white-01`)};\n  }\n  :active {\n    fill: ${globalColor(`--${illaPrefix}-techPurple-03`)};\n    stroke: ${globalColor(`--${illaPrefix}-white-01`)};\n  }\n`\n","import { ComponentMapNode } from \"@illa-public/public-types\"\nimport { get, isEqual, set } from \"lodash-es\"\nimport { Resizable, ResizeCallback, ResizeStartCallback } from \"re-resizable\"\nimport {\n  FC,\n  MutableRefObject,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\"\nimport { useDrop } from \"react-dnd\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport useMeasure from \"react-use-measure\"\nimport { useMessage } from \"@illa-design/react\"\nimport ResizeBar from \"@/assets/resizeBar.svg?react\"\nimport { DropResultInfo } from \"@/page/App/components/DotPanel/components/Canvas/interface\"\nimport { UNIT_HEIGHT } from \"@/page/App/components/DotPanel/constant/canvas\"\nimport { DragInfo } from \"@/page/App/components/ScaleSquare/components/DragContainer/interface\"\nimport {\n  applyDashedLineStyle,\n  applyXDirectionDashedLineStyle,\n} from \"@/page/App/components/ScaleSquare/style\"\nimport { getIsILLAEditMode } from \"@/redux/config/configSelector\"\nimport { configActions } from \"@/redux/config/configSlice\"\nimport { getComponentMap } from \"@/redux/currentApp/components/componentsSelector\"\nimport { componentsActions } from \"@/redux/currentApp/components/componentsSlice\"\nimport { getExecutionResult } from \"@/redux/currentApp/executionTree/executionSelector\"\nimport { evaluateDynamicString } from \"@/utils/evaluateDynamicString\"\nimport { ILLAEditorRuntimePropsCollectorInstance } from \"@/utils/executionTreeHelper/runtimePropsCollector\"\nimport { isObject } from \"@/utils/typeHelper\"\nimport RenderChildrenCanvas from \"../PublicSector/RenderChildrenCanvas\"\nimport { FormWidgetProps } from \"./interface\"\nimport {\n  formBodyStyle,\n  formContainerStyle,\n  formHeaderStyle,\n  resizeBarStyle,\n  resizeLineStyle,\n} from \"./style\"\nimport {\n  FORM_BODY_MARGIN,\n  FORM_BODY_MIN_HEIGHT,\n  FORM_CAN_BIND_WIDGET_TYPE,\n  FORM_MIN_FOOTER_HEIGHT_ROW_NUMBER,\n  FORM_MIN_HEADER_HEIGHT_ROW_NUMBER,\n} from \"./widgetConfig\"\n\nfunction getLikeInputChildrenNode(\n  componentNodeDisplayName: string,\n  componentNodeResult: ComponentMapNode[],\n  components: Record<string, ComponentMapNode>,\n  hasForm: boolean,\n) {\n  const componentNode = components[componentNodeDisplayName]\n  if (\n    (componentNode.containerType !== \"EDITOR_DOT_PANEL\" &&\n      FORM_CAN_BIND_WIDGET_TYPE.has(componentNode.type)) ||\n    (hasForm && componentNode.type === \"FORM_WIDGET\")\n  ) {\n    componentNodeResult.push(componentNode)\n    if (Array.isArray(componentNode.childrenNode)) {\n      componentNode.childrenNode.forEach((childDisplayName) => {\n        getLikeInputChildrenNode(\n          childDisplayName,\n          componentNodeResult,\n          components,\n          hasForm,\n        )\n      })\n    }\n  } else {\n    if (Array.isArray(componentNode.childrenNode)) {\n      componentNode.childrenNode.forEach((childDisplayName) => {\n        getLikeInputChildrenNode(\n          childDisplayName,\n          componentNodeResult,\n          components,\n          hasForm,\n        )\n      })\n    }\n  }\n}\n\ninterface DragCollection {\n  isDraggingActive: boolean\n}\n\nexport const FormWidget: FC<FormWidgetProps> = (props) => {\n  const {\n    childrenNode: childrenNodeDisplayNames,\n    showFooter,\n    showHeader,\n    headerHeight,\n    footerHeight,\n    disabled,\n    displayName,\n    disabledSubmit,\n    resetAfterSuccessful,\n    validateInputsOnSubmit,\n    columnNumber,\n    formData: propsFormData,\n    dynamicHeight = \"fixed\",\n    padding,\n    handleUpdateOriginalDSLMultiAttr,\n    updateComponentRuntimeProps,\n    deleteComponentRuntimeProps,\n    handleUpdateMultiExecutionResult,\n    triggerEventHandler,\n  } = props\n\n  const message = useMessage()\n  const [containerRef, containerBounds] = useMeasure()\n  const prevDisabled = useRef<boolean>(disabled)\n  const containerNodeRef = useRef<HTMLDivElement>(\n    null,\n  ) as MutableRefObject<HTMLDivElement | null>\n  const [isMouseHover, setIsMouseHover] = useState(false)\n  const isEditMode = useSelector(getIsILLAEditMode)\n  const executionResult = useSelector(getExecutionResult)\n  const components = useSelector(getComponentMap)\n\n  const dispatch = useDispatch()\n\n  const allLikeInputWithFormChildrenNodeDisplayName = useMemo(() => {\n    let componentNodeResult: ComponentMapNode[] = []\n    childrenNodeDisplayNames.forEach((node) => {\n      getLikeInputChildrenNode(node, componentNodeResult, components, true)\n    })\n    return componentNodeResult.map((node) => node.displayName)\n  }, [childrenNodeDisplayNames, components])\n\n  const allLikeInputChildrenNode = useMemo(() => {\n    let componentNodeResult: ComponentMapNode[] = []\n    childrenNodeDisplayNames.forEach((node) => {\n      getLikeInputChildrenNode(node, componentNodeResult, components, false)\n    })\n    return componentNodeResult\n  }, [childrenNodeDisplayNames, components])\n\n  const allLikeInputChildrenNodeDisplayName = useMemo(() => {\n    return allLikeInputChildrenNode.map((node) => node.displayName)\n  }, [allLikeInputChildrenNode])\n\n  const allLikeInputChildrenNodeRealProps = useMemo(() => {\n    return allLikeInputChildrenNodeDisplayName.map((name) => {\n      const widgetProps = get(executionResult, name, {})\n      return {\n        displayName: name,\n        ...widgetProps,\n      }\n    })\n  }, [allLikeInputChildrenNodeDisplayName, executionResult])\n\n  const formDataKeyMapProps = useMemo(() => {\n    const map: Record<string, any> = {}\n    allLikeInputChildrenNodeRealProps.forEach((prop) => {\n      set(map, prop.formDataKey || prop.displayName, prop)\n    })\n    return map\n  }, [allLikeInputChildrenNodeRealProps])\n\n  const formData = useMemo(() => {\n    const data: Record<string, any> = {}\n    allLikeInputChildrenNodeRealProps.forEach((prop) => {\n      set(data, prop.formDataKey || prop.displayName, prop.value)\n    })\n    return data\n  }, [allLikeInputChildrenNodeRealProps])\n\n  useEffect(() => {\n    if (!isEqual(formData, propsFormData)) {\n      handleUpdateMultiExecutionResult?.([\n        {\n          displayName,\n          value: {\n            formData: formData,\n          },\n        },\n      ])\n    }\n  }, [\n    dispatch,\n    displayName,\n    formData,\n    handleUpdateMultiExecutionResult,\n    propsFormData,\n  ])\n\n  useEffect(() => {\n    if (prevDisabled.current !== disabled) {\n      const updateArray = allLikeInputWithFormChildrenNodeDisplayName.map(\n        (displayName) => {\n          return {\n            displayName,\n            updateSlice: {\n              disabled:\n                typeof disabled === \"undefined\" ? \"\" : `{{${disabled}}}`,\n            },\n          }\n        },\n      )\n      dispatch(componentsActions.updateMultiComponentPropsReducer(updateArray))\n    }\n    prevDisabled.current = disabled\n  }, [\n    disabled,\n    childrenNodeDisplayNames,\n    allLikeInputWithFormChildrenNodeDisplayName,\n    dispatch,\n  ])\n\n  const handleOnInvalid = useCallback(() => {\n    triggerEventHandler(\"invalid\")\n  }, [triggerEventHandler])\n\n  const handleOnValidate = useCallback(() => {\n    const finalContext =\n      ILLAEditorRuntimePropsCollectorInstance.getCurrentPageCalcContext()\n    allLikeInputChildrenNode.forEach((node) => {\n      try {\n        return evaluateDynamicString(\n          \"events\",\n          `{{${node.displayName}.validate()}}`,\n          finalContext,\n        )\n      } catch (e) {\n        message.error({\n          content: \"eventHandler run error\",\n        })\n        return false\n      }\n    })\n  }, [allLikeInputChildrenNode, message])\n\n  const handleSetValue = useCallback(\n    (value: Record<string, any>) => {\n      const keys = Object.keys(value)\n      const updateSlice: {\n        displayName: string\n        value: {\n          value: string\n        }\n      }[] = []\n\n      keys.forEach((key) => {\n        const realDisplayName = get(formDataKeyMapProps, key, null)\n        if (realDisplayName) {\n          updateSlice.push({\n            displayName: key,\n            value: {\n              value: value[key],\n            },\n          })\n        }\n      })\n      if (updateSlice.length > 0) {\n        handleUpdateMultiExecutionResult?.(updateSlice)\n      }\n    },\n    [formDataKeyMapProps, handleUpdateMultiExecutionResult],\n  )\n\n  const handleOnReset = useCallback(() => {\n    const allUpdate = allLikeInputChildrenNode.map((node) => {\n      return {\n        displayName: node.displayName,\n        value: {\n          value: node.props!.value,\n          validateMessage: \"\",\n        },\n      }\n    })\n    handleUpdateMultiExecutionResult?.(allUpdate)\n  }, [allLikeInputChildrenNode, handleUpdateMultiExecutionResult])\n\n  const handleOnSubmit = useCallback(() => {\n    if (disabledSubmit || disabled) return\n    if (validateInputsOnSubmit) {\n      const finalContext =\n        ILLAEditorRuntimePropsCollectorInstance.getCurrentPageCalcContext()\n      const validateResult = allLikeInputChildrenNode.every((node) => {\n        try {\n          const validateFunc = get(\n            finalContext,\n            `${node.displayName}.validate`,\n          ) as unknown\n          if (typeof validateFunc === \"function\") {\n            return !validateFunc()\n          }\n          return false\n        } catch (e) {\n          message.error({\n            content: \"eventHandler run error\",\n          })\n          return false\n        }\n      })\n      if (!validateResult) {\n        handleOnInvalid()\n        return\n      }\n    }\n    triggerEventHandler(\"submit\")\n    if (resetAfterSuccessful) {\n      handleOnReset()\n    }\n  }, [\n    allLikeInputChildrenNode,\n    disabled,\n    disabledSubmit,\n    handleOnInvalid,\n    handleOnReset,\n    message,\n    resetAfterSuccessful,\n    triggerEventHandler,\n    validateInputsOnSubmit,\n  ])\n\n  useEffect(() => {\n    updateComponentRuntimeProps({\n      submit: handleOnSubmit,\n      invalid: handleOnInvalid,\n      reset: handleOnReset,\n      setValue: (value: Record<string, any>) => {\n        if (isObject(value)) {\n          handleSetValue(value)\n        }\n      },\n      validate: handleOnValidate,\n    })\n    return () => {\n      deleteComponentRuntimeProps()\n    }\n  }, [\n    deleteComponentRuntimeProps,\n    handleOnInvalid,\n    handleOnReset,\n    handleOnSubmit,\n    handleOnValidate,\n    handleSetValue,\n    updateComponentRuntimeProps,\n  ])\n\n  const headerMinHeight = useMemo(\n    () => FORM_MIN_HEADER_HEIGHT_ROW_NUMBER * UNIT_HEIGHT,\n    [],\n  )\n  const footerMinHeight = useMemo(\n    () => FORM_MIN_FOOTER_HEIGHT_ROW_NUMBER * UNIT_HEIGHT,\n    [],\n  )\n\n  const headerMaxHeight = useMemo(() => {\n    return (\n      Math.floor(\n        (containerBounds.height -\n          (FORM_BODY_MIN_HEIGHT + 2 * FORM_BODY_MARGIN) -\n          footerHeight * UNIT_HEIGHT) /\n          UNIT_HEIGHT,\n      ) * UNIT_HEIGHT\n    )\n  }, [containerBounds.height, footerHeight])\n\n  const footerMaxHeight = useMemo(() => {\n    return (\n      Math.floor(\n        (containerBounds.height -\n          (FORM_BODY_MIN_HEIGHT + 2 * FORM_BODY_MARGIN) -\n          headerHeight * UNIT_HEIGHT) /\n          UNIT_HEIGHT,\n      ) * UNIT_HEIGHT\n    )\n  }, [containerBounds.height, headerHeight])\n\n  const handleUpdateHeight = useCallback((_height: number) => {\n    // TODO: update height\n  }, [])\n\n  const canResizeCanvas = dynamicHeight !== \"fixed\"\n\n  const resizeTopHandler = useMemo(() => {\n    return {\n      bottom: (\n        <div css={resizeLineStyle}>\n          <ResizeBar css={resizeBarStyle} />\n        </div>\n      ),\n    }\n  }, [])\n\n  const resizeBottomHandler = useMemo(() => {\n    return {\n      top: (\n        <div css={resizeLineStyle}>\n          <ResizeBar css={resizeBarStyle} />\n        </div>\n      ),\n    }\n  }, [])\n\n  const handleResizeStart: ResizeStartCallback = (e) => {\n    e.preventDefault()\n    e.stopPropagation()\n    dispatch(\n      configActions.setResizingNodeIDsReducer([\n        `${displayName}-resize-form-header`,\n      ]),\n    )\n  }\n\n  const handleOnResizeTopStop: ResizeCallback = useCallback(\n    (e, dir, elementRef, delta) => {\n      const { height } = delta\n      let finalHeight = Math.floor(\n        (headerHeight * UNIT_HEIGHT + height) / UNIT_HEIGHT,\n      )\n      if (finalHeight * UNIT_HEIGHT >= headerMaxHeight) {\n        finalHeight = Math.floor(headerMaxHeight / UNIT_HEIGHT)\n      }\n      handleUpdateOriginalDSLMultiAttr({\n        headerHeight: finalHeight,\n      })\n      dispatch(configActions.setResizingNodeIDsReducer([]))\n    },\n    [dispatch, handleUpdateOriginalDSLMultiAttr, headerHeight, headerMaxHeight],\n  )\n\n  const handleOnResizeBottomStop: ResizeCallback = useCallback(\n    (e, dir, elementRef, delta) => {\n      const { height } = delta\n      let finalHeight = Math.floor(\n        (footerHeight * UNIT_HEIGHT + height) / UNIT_HEIGHT,\n      )\n      if (finalHeight * UNIT_HEIGHT > footerMaxHeight) {\n        finalHeight = Math.floor(footerMaxHeight / UNIT_HEIGHT)\n      }\n      handleUpdateOriginalDSLMultiAttr({\n        footerHeight: finalHeight,\n      })\n      dispatch(configActions.setResizingNodeIDsReducer([]))\n    },\n    [dispatch, footerHeight, footerMaxHeight, handleUpdateOriginalDSLMultiAttr],\n  )\n\n  const [{ isDraggingActive }, dropRef] = useDrop<\n    DragInfo,\n    DropResultInfo,\n    DragCollection\n  >(\n    () => ({\n      accept: [\"components\"],\n      hover: (dragInfo, monitor) => {\n        if (monitor.isOver({ shallow: true })) {\n        }\n      },\n      drop: (dropInfo) => {\n        const { draggedComponents } = dropInfo\n        const drageedDisplayNames = draggedComponents.map(\n          (component) => component.displayName,\n        )\n        if (disabled) {\n          const updateSlice = {\n            disabled: \"{{true}}\",\n          }\n          const MultiUpdateSlice = drageedDisplayNames.map((displayName) => {\n            return {\n              displayName,\n              updateSlice,\n            }\n          })\n          dispatch(\n            componentsActions.updateMultiComponentPropsReducer(\n              MultiUpdateSlice,\n            ),\n          )\n        }\n        return {\n          isDropOnCanvas: true,\n        }\n      },\n      collect: (monitor) => {\n        return {\n          isDraggingActive: monitor.isOver(),\n        }\n      },\n    }),\n    [disabled],\n  )\n\n  return (\n    <div\n      css={formContainerStyle}\n      ref={(node) => {\n        dropRef(node)\n        containerRef(node)\n        containerNodeRef.current = node\n      }}\n      onMouseEnter={() => {\n        setIsMouseHover(true)\n      }}\n      onMouseLeave={() => {\n        setIsMouseHover(false)\n      }}\n    >\n      {showHeader && (\n        <Resizable\n          size={{\n            width: \"100%\",\n            height: headerHeight * UNIT_HEIGHT,\n          }}\n          minHeight={headerMinHeight}\n          maxHeight={headerMaxHeight}\n          handleComponent={\n            isEditMode && isMouseHover && !isDraggingActive\n              ? resizeTopHandler\n              : undefined\n          }\n          enable={{\n            bottom: true,\n          }}\n          onResizeStart={handleResizeStart}\n          onResizeStop={handleOnResizeTopStop}\n        >\n          <div css={formHeaderStyle}>\n            <RenderChildrenCanvas\n              displayName={childrenNodeDisplayNames[0]}\n              columnNumber={columnNumber}\n              handleUpdateHeight={handleUpdateHeight}\n              canResizeCanvas={canResizeCanvas}\n              containerPadding={padding?.size}\n            />\n          </div>\n          {isMouseHover && !isDraggingActive && isEditMode && (\n            <div css={applyDashedLineStyle(false, true, false)} />\n          )}\n        </Resizable>\n      )}\n      <div css={formBodyStyle}>\n        <RenderChildrenCanvas\n          displayName={childrenNodeDisplayNames[1]}\n          columnNumber={columnNumber}\n          handleUpdateHeight={handleUpdateHeight}\n          canResizeCanvas={canResizeCanvas}\n          containerPadding={padding?.size}\n        />\n        {isMouseHover && !isDraggingActive && isEditMode && (\n          <div css={applyXDirectionDashedLineStyle(false, true, false)} />\n        )}\n      </div>\n      {showFooter && (\n        <Resizable\n          size={{\n            width: \"100%\",\n            height: footerHeight * UNIT_HEIGHT,\n          }}\n          minHeight={footerMinHeight}\n          maxHeight={footerMaxHeight}\n          handleComponent={\n            isEditMode && isMouseHover && !isDraggingActive\n              ? resizeBottomHandler\n              : undefined\n          }\n          enable={{\n            top: true,\n          }}\n          onResizeStart={handleResizeStart}\n          onResizeStop={handleOnResizeBottomStop}\n        >\n          <div css={formHeaderStyle}>\n            <RenderChildrenCanvas\n              displayName={childrenNodeDisplayNames[2]}\n              columnNumber={columnNumber}\n              handleUpdateHeight={handleUpdateHeight}\n              canResizeCanvas={canResizeCanvas}\n              containerPadding={padding?.size}\n            />\n          </div>\n          {isMouseHover && !isDraggingActive && isEditMode && (\n            <div\n              css={applyDashedLineStyle(false, true, false, footerMaxHeight)}\n            />\n          )}\n        </Resizable>\n      )}\n    </div>\n  )\n}\n\nFormWidget.displayName = \"FormWidget\"\nexport default FormWidget\n"],"names":["formContainerStyle","css","formHeaderStyle","formBodyStyle","resizeLineStyle","resizeBarStyle","globalColor","illaPrefix","getLikeInputChildrenNode","componentNodeDisplayName","componentNodeResult","components","hasForm","componentNode","FORM_CAN_BIND_WIDGET_TYPE","childDisplayName","FormWidget","props","childrenNodeDisplayNames","showFooter","showHeader","headerHeight","footerHeight","disabled","displayName","disabledSubmit","resetAfterSuccessful","validateInputsOnSubmit","columnNumber","propsFormData","dynamicHeight","padding","handleUpdateOriginalDSLMultiAttr","updateComponentRuntimeProps","deleteComponentRuntimeProps","handleUpdateMultiExecutionResult","triggerEventHandler","message","useMessage","containerRef","containerBounds","useMeasure","prevDisabled","useRef","containerNodeRef","isMouseHover","setIsMouseHover","useState","isEditMode","useSelector","getIsILLAEditMode","executionResult","getExecutionResult","getComponentMap","dispatch","useDispatch","allLikeInputWithFormChildrenNodeDisplayName","useMemo","node","allLikeInputChildrenNode","allLikeInputChildrenNodeDisplayName","allLikeInputChildrenNodeRealProps","name","widgetProps","get","formDataKeyMapProps","map","prop","set","formData","data","useEffect","isEqual","updateArray","componentsActions","handleOnInvalid","useCallback","handleOnValidate","finalContext","ILLAEditorRuntimePropsCollectorInstance","evaluateDynamicString","handleSetValue","value","keys","updateSlice","key","handleOnReset","allUpdate","handleOnSubmit","validateFunc","isObject","headerMinHeight","FORM_MIN_HEADER_HEIGHT_ROW_NUMBER","UNIT_HEIGHT","footerMinHeight","FORM_MIN_FOOTER_HEIGHT_ROW_NUMBER","headerMaxHeight","FORM_BODY_MIN_HEIGHT","FORM_BODY_MARGIN","footerMaxHeight","handleUpdateHeight","_height","canResizeCanvas","resizeTopHandler","jsx","ResizeBar","resizeBottomHandler","handleResizeStart","configActions","handleOnResizeTopStop","dir","elementRef","delta","height","finalHeight","handleOnResizeBottomStop","isDraggingActive","dropRef","useDrop","dragInfo","monitor","dropInfo","draggedComponents","drageedDisplayNames","component","MultiUpdateSlice","jsxs","Resizable","RenderChildrenCanvas","applyDashedLineStyle","applyXDirectionDashedLineStyle"],"mappings":"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"}