{"version":3,"file":"timeRange-acfd8944.js","sources":["../../src/widgetLibrary/TimeRangeWidget/timeRange.tsx"],"sourcesContent":["import { FC, useCallback, useEffect, useMemo } from \"react\"\nimport { RangePicker } from \"@illa-design/react\"\nimport { AutoHeightContainer } from \"@/widgetLibrary/PublicSector/AutoHeightContainer\"\nimport { InvalidMessage } from \"@/widgetLibrary/PublicSector/InvalidMessage\"\nimport { Label } from \"@/widgetLibrary/PublicSector/Label\"\nimport { TooltipWrapper } from \"@/widgetLibrary/PublicSector/TooltipWrapper\"\nimport {\n  applyLabelAndComponentWrapperStyle,\n  applyValidateMessageWrapperStyle,\n} from \"@/widgetLibrary/PublicSector/TransformWidgetWrapper/style\"\nimport { handleValidateCheck } from \"../PublicSector/InvalidMessage/utils\"\nimport { TimeRangeWidgetProps, WrappedTimeRangeProps } from \"./interface\"\n\nexport const WrappedTimeRange: FC<WrappedTimeRangeProps> = (props) => {\n  const {\n    startTime,\n    endTime,\n    format,\n    startPlaceholder,\n    endPlaceholder,\n    minuteStep,\n    showClear,\n    disabled,\n    colorScheme,\n    handleOnChange,\n    getValidateMessage,\n    handleUpdateMultiExecutionResult,\n    displayName,\n  } = props\n\n  const changeValue = (value?: string[]) => {\n    new Promise((resolve) => {\n      const startMessage = getValidateMessage(value?.[0])\n      const endMessage = getValidateMessage(value?.[1])\n      handleUpdateMultiExecutionResult([\n        {\n          displayName,\n          value: {\n            value: [value?.[0] || \"\", value?.[1] || \"\"],\n            startTime: value?.[0] || \"\",\n            endTime: value?.[1] || \"\",\n            validateMessage: startMessage || endMessage,\n          },\n        },\n      ])\n      resolve(true)\n    }).then(() => {\n      handleOnChange?.()\n    })\n  }\n\n  const clearValue = () => {\n    const startMessage = getValidateMessage(undefined)\n    const endMessage = getValidateMessage(undefined)\n    handleUpdateMultiExecutionResult([\n      {\n        displayName,\n        value: {\n          value: [\"\", \"\"],\n          startTime: \"\",\n          endTime: \"\",\n          validateMessage: startMessage || endMessage,\n        },\n      },\n    ])\n  }\n\n  const _placeholder = [startPlaceholder ?? \"\", endPlaceholder ?? \"\"]\n\n  const timeRangeValue = useMemo(() => {\n    return !startTime && !endTime ? [\"\", \"\"] : [startTime, endTime]\n  }, [startTime, endTime])\n\n  return (\n    <RangePicker\n      w=\"100%\"\n      colorScheme={colorScheme}\n      format={format}\n      value={timeRangeValue}\n      disabled={disabled}\n      placeholder={_placeholder}\n      allowClear={showClear}\n      step={{ minute: minuteStep }}\n      onClear={clearValue}\n      onChange={changeValue}\n    />\n  )\n}\n\nWrappedTimeRange.displayName = \"WrappedTimeRange\"\n\nexport const TimeRangeWidget: FC<TimeRangeWidgetProps> = (props) => {\n  const {\n    startTime,\n    endTime,\n    startPlaceholder,\n    endPlaceholder,\n    showClear,\n    disabled,\n    colorScheme,\n    displayName,\n    labelPosition,\n    labelFull,\n    label,\n    labelAlign,\n    labelWidth = 33,\n    labelCaption,\n    labelWidthUnit,\n    required,\n    labelHidden,\n    tooltipText,\n    validateMessage,\n    customRule,\n    hideValidationMessage,\n    updateComponentHeight,\n    triggerEventHandler,\n    updateComponentRuntimeProps,\n    deleteComponentRuntimeProps,\n    handleUpdateMultiExecutionResult,\n  } = props\n\n  const getValidateMessage = useCallback(\n    (value?: unknown) => {\n      if (!hideValidationMessage) {\n        const message = handleValidateCheck({\n          value,\n          required,\n          customRule,\n        })\n        const showMessage = message && message.length > 0\n        return showMessage ? message : \"\"\n      }\n      return \"\"\n    },\n    [customRule, hideValidationMessage, required],\n  )\n\n  const handleValidate = useCallback(\n    (value?: unknown) => {\n      const message = getValidateMessage(value)\n      handleUpdateMultiExecutionResult([\n        {\n          displayName,\n          value: {\n            validateMessage: message,\n          },\n        },\n      ])\n      return message\n    },\n    [displayName, getValidateMessage, handleUpdateMultiExecutionResult],\n  )\n\n  useEffect(() => {\n    updateComponentRuntimeProps({\n      setStartTime: (startTime: string) => {\n        handleUpdateMultiExecutionResult([\n          {\n            displayName,\n            value: {\n              value: [startTime, endTime],\n              startTime,\n            },\n          },\n        ])\n      },\n      setEndTime: (endTime: string) => {\n        handleUpdateMultiExecutionResult([\n          {\n            displayName,\n            value: {\n              value: [startTime, endTime],\n              endTime,\n            },\n          },\n        ])\n      },\n      clearValue: () => {\n        handleUpdateMultiExecutionResult([\n          {\n            displayName,\n            value: {\n              value: [\"\", \"\"],\n              startTime: \"\",\n              endTime: \"\",\n            },\n          },\n        ])\n      },\n      validate: () => {\n        if (!startTime || !endTime) {\n          return handleValidate(undefined)\n        }\n        const startValueChecked = handleValidate(startTime)\n        if (startValueChecked) {\n          return startValueChecked\n        }\n        const endValueChecked = handleValidate(endTime)\n        if (endValueChecked) {\n          return endValueChecked\n        }\n      },\n      clearValidation: () => {\n        handleUpdateMultiExecutionResult([\n          {\n            displayName,\n            value: {\n              validateMessage: \"\",\n            },\n          },\n        ])\n      },\n    })\n    return () => {\n      deleteComponentRuntimeProps()\n    }\n  }, [\n    displayName,\n    startTime,\n    endTime,\n    startPlaceholder,\n    endPlaceholder,\n    showClear,\n    disabled,\n    colorScheme,\n    updateComponentRuntimeProps,\n    deleteComponentRuntimeProps,\n    handleValidate,\n    handleUpdateMultiExecutionResult,\n  ])\n\n  useEffect(() => {\n    handleUpdateMultiExecutionResult([\n      {\n        displayName,\n        value: {\n          value: [startTime, endTime],\n        },\n      },\n    ])\n  }, [startTime, endTime, handleUpdateMultiExecutionResult, displayName])\n\n  const handleOnChange = useCallback(() => {\n    triggerEventHandler(\"change\")\n  }, [triggerEventHandler])\n\n  return (\n    <AutoHeightContainer updateComponentHeight={updateComponentHeight}>\n      <TooltipWrapper tooltipText={tooltipText} tooltipDisabled={!tooltipText}>\n        <div css={applyLabelAndComponentWrapperStyle(labelPosition)}>\n          <Label\n            labelFull={labelFull}\n            label={label}\n            labelAlign={labelAlign}\n            labelWidth={labelWidth}\n            labelCaption={labelCaption}\n            labelWidthUnit={labelWidthUnit}\n            labelPosition={labelPosition}\n            required={required}\n            labelHidden={labelHidden}\n            hasTooltip={!!tooltipText}\n          />\n          <WrappedTimeRange\n            {...props}\n            getValidateMessage={getValidateMessage}\n            handleOnChange={handleOnChange}\n          />\n        </div>\n      </TooltipWrapper>\n      {!hideValidationMessage && (\n        <div\n          css={applyValidateMessageWrapperStyle(\n            labelWidth,\n            labelPosition,\n            labelHidden || !label,\n          )}\n        >\n          <InvalidMessage validateMessage={validateMessage} />\n        </div>\n      )}\n    </AutoHeightContainer>\n  )\n}\nTimeRangeWidget.displayName = \"TimeRangeWidget\"\nexport default TimeRangeWidget\n"],"names":["WrappedTimeRange","props","startTime","endTime","format","startPlaceholder","endPlaceholder","minuteStep","showClear","disabled","colorScheme","handleOnChange","getValidateMessage","handleUpdateMultiExecutionResult","displayName","changeValue","value","resolve","startMessage","endMessage","clearValue","_placeholder","timeRangeValue","useMemo","jsx","RangePicker","TimeRangeWidget","labelPosition","labelFull","label","labelAlign","labelWidth","labelCaption","labelWidthUnit","required","labelHidden","tooltipText","validateMessage","customRule","hideValidationMessage","updateComponentHeight","triggerEventHandler","updateComponentRuntimeProps","deleteComponentRuntimeProps","useCallback","message","handleValidateCheck","handleValidate","useEffect","startValueChecked","endValueChecked","jsxs","AutoHeightContainer","TooltipWrapper","applyLabelAndComponentWrapperStyle","Label","applyValidateMessageWrapperStyle","InvalidMessage"],"mappings":"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"}